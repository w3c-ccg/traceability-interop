{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "83d3941b-a846-400f-8be7-e2392e1060d8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1497ce83-07d1-4fec-990e-44ae1ca5ee13",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0e7ec6a-4a21-4d90-8ff4-982d4e040387",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "08433856-26e3-4d91-bd63-8edabec62cab"
                }
              }
            ]
          },
          {
            "id": "1e74c302-7046-46de-a8ce-39be40519c04",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b26f76f-823a-499a-8b82-06af593893f7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8507e14c-eca7-4690-beeb-98d2ed94f844"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0104dc22-f1d5-497f-a288-a21552f6fe31",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "feb85b44-8708-419f-bc01-c94b0e3289a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64c26ea8-d052-4e6e-99dd-9d3f393604a4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88a58b0a-a172-4cb1-9754-5e010665daa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38f4da75-618c-4f40-8959-411adcd9b9e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6eed146-2aee-400e-bed1-69e2c06e551b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a27a95e0-f9b6-4497-8edd-e2fd96676fc5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0d3a1ca6-c7e8-4f08-bb0b-5cfb4e0444a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef61a358-c227-4cbc-bf63-55f5263fc59a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cbc5605-a3d5-4023-8ed8-a66557434ba3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "11f7f2c5-73d9-4587-ba59-b831be50f878"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b73bd24c-8d29-4bb7-9ffd-3f0cf5763de0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6483b544-40c3-48f6-bb98-2a1e149f88cd"
            }
          }
        ]
      },
      {
        "id": "8db1b25c-b668-4992-bfa8-cabe97e6716a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "efcf14fd-58d8-4510-b601-f1c6c79a8568",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce3ce397-51ff-4b3e-b1f2-8ee1c153e927",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d56ed69-347a-4859-8f68-c141d7d0b108",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce80cf4-476f-442a-bc5c-9db5eddc7d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0abff161-438e-47d2-989b-5b5e5ea842a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17834f3-8371-4f3a-8bf5-c70fc9a69167",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dee4047-2661-49da-912c-591938ab4d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8aff8dc-eb7e-4795-b6a1-0b71153a325b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1afe10-c004-45e6-bd9d-d44eb6f0ac8a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94d0a61-f3fa-4d1a-97e0-ec583761b483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbc494fc-087f-43d0-8003-e07a63d9961d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddd1cfab-6599-42e6-9069-35cd60f390e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d504443-036b-4edd-a11b-8d1e4e4cc1af",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ef1d48-0f23-4eda-b1ec-77b11ae282bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd443a53-7e83-42b8-a112-df4c34b639f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68df3d4-f5bf-4549-867b-c4bd2a61b126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42024985-532e-4bb3-8c41-905ac859db93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "807f3811-a797-426f-81fc-000f91dacf7e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd90fe5e-deac-43d7-96a1-6f13f3948aad",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3c42aab-64ef-4462-a8fa-3381d9a8b93c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "817cd734-0c23-40ff-a251-2c7c7b13b114"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "add6e469-c53d-407f-b37a-407c5436dc94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "22bff98b-21e3-42e9-a895-0ec51795e2b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e656794-083a-44b0-8bd5-d531666209d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8db2900-9270-4e25-a1cb-315f8bef1756"
            }
          }
        ]
      },
      {
        "id": "96d87cfa-aa0e-48de-b5f5-44e2b5931e43",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "005dd260-cbc1-44fa-bd24-24bc42da4f3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4004cb68-58c1-42ae-9c9f-c939645b91da",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a2eda011-ca24-457e-9e6a-c4c37fe565db",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481fb158-9c42-42c7-9478-f304c8c082e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06f61be-db64-4c9c-acdf-a3ba3f9d7acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0631202-0bc9-4ac7-91fa-9d5f60381943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd265405-a04b-45a6-a0f0-40f0ba9ae45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0903e7da-bac7-4443-af37-c648aba871a1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e87d83-7475-4be3-a70c-3812ecce6a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927f5200-e9e6-46b8-b181-7593a74eba70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53692a58-6122-4356-a3b5-e420c7ce5942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc008cd9-b9a2-4e8a-83ca-eeb1270709ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6bcc7b-c312-4a67-b65f-19635c3a4008",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6024a8bf-e13d-418e-a732-57171abe9dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c59c8e-67a4-499b-b662-420078b59b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4567f3f-3efb-4170-977a-21c5d2b50114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "186a9500-f95a-414f-8b1f-204c1164b369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccf7488-5c63-44c7-a4d7-f7362b209db8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77020dd3-ef2d-4a9a-9d00-14b299416fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4623a12b-0c31-47c4-ae95-900e468be28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c07c6eb-6d50-4f9c-b3ad-e6262cbf23d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ae79d5f-14c0-44b1-82bb-77374c04cc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f3a459-cff2-4340-aae1-519ac7c23c7b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac59694-261c-426e-8857-503849fdf9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d806a286-765e-46ca-b7e6-d1a39021a37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9253ceb1-83b1-4f11-9088-f5f65ec625a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0aa4bfc-f3a8-4b2e-a806-184ccc14c22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8123ad-cd80-4c6b-a869-f563783bdb83",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fc0451-52d6-4946-a084-14ef1cb464f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250547d8-0df9-404d-91a0-295ec1a5c857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e996cca-6418-42b9-a29f-b011067e9a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edddd123-ee17-4856-b509-70b5cd689cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9e64b9-a86d-4ebd-9b0b-ba0794397b24",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c523a33-088c-42f8-8115-aedd360f43ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f86d0a1-8c89-4b8b-9407-c99ba057436c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737d68d0-4876-4660-8a82-205c53b15499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a2bfde8-c8e4-4c46-bc5e-a66646ac1845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61556b3b-6442-47cf-bfa2-6ca7ec846a69",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35025bc-0acf-496c-916b-cebf26f25591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936a458b-fa12-4090-bafe-218e1c94c3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da399a5-c0c9-434b-a622-71b7c7252ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d52bf25-4230-41ad-9cc9-454c8c2ae211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11c11d5-4d9e-473a-9b97-a0ad6ff344a7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf571f16-3d2e-44b3-b249-b158f3e60ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3bce80-674d-444b-90be-aae2fc3fe5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadd120e-f6b3-4f00-a906-f8189fc411d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2871449-0306-40e8-8fa1-a2e244da845f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0848d830-1a3f-498e-a99e-ea02793a421c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e96d22-1d97-4bf4-85f7-a0106ad35b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9667a85d-3aa2-4704-8c45-72324020d18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866860ba-a747-4261-a820-be6e2e78aa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e3735e1-4aed-4410-ae95-f88b727c1cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8505b9-be1c-42f2-9efa-c12315e2c345",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c9d40a-6fdc-48fa-aafe-747006ed3dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d58015f-791b-469f-9afb-7adde22d44a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70a5c3c-6116-46a4-8266-a1b2559107b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ea6298f-6ddf-4782-8876-d07ce92b0b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8283962d-a86a-44e1-bbbd-a7fbe331b586",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9750af2-cbad-437e-93cc-fb5d7870aa8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8e86a7-b88e-4f16-9577-d5e09c6ab828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6157220f-258d-4f75-b1e5-9a042acfbd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e4280cd-562e-4205-9905-003d41d6d60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec4e17e-331a-427d-8b71-b4018be650f2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b9f739-28e7-4557-bc8f-12993c7af18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c0b0aa-8cb4-4592-9179-bf27cc258848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dc5501-11c2-4b1d-ab97-608d59318d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e35a65db-c599-4f3b-8ac0-2a3460220977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ea16bd-e6bc-4820-a1d1-df4638b62b3c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38501874-70f9-40e0-b93b-519b2566da47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f8ca2f-9b65-4c9e-b2dd-3f6fb30d5e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93738b47-f2c2-4d11-b22a-2577ed02e42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf80c4ec-214e-437a-8013-df12f4b9d527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb1a9ae-67f8-45d0-8c2f-ac5da8a81ff5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a1e1a1-4a89-4fa4-a401-765c269e92c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471db200-ae49-42d1-9741-aaab405e31c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa12fabe-b4ab-4e13-8872-a55abe33b988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d36efa4-bfa5-469f-97c2-bdda05803be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb592bd-b5db-4d1f-986c-267417c753ee",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87427e8-cf1f-40ae-8819-c5cacfd15a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeffc586-1fff-4878-ab7d-c3b5c082e37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9a14ac-92e6-4a8e-aa46-667c47bfd0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9d123da-aba7-4923-a1c3-19d1b837550d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a9a8be-7bba-4563-b1ed-8c6aac5fd7d9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62d26ed-58e9-4ac3-81bd-cff5d113e772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790e37b5-4b81-4d96-b84c-8a421874ec31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca91736-d303-4ae6-97ca-8ab0618a1e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e81c5f36-764e-4fa1-919e-6c925817505c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2b0b91-6ae4-4776-8855-70ea41c988c8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a3f219-ac54-4929-be8f-3d59c95295af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7425329-6e23-4b6b-84b7-7780d2f7fdc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3820aef-42d5-4205-a049-e452ab54f354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a338f4-0848-4734-8cbe-8931b3b26326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca69c73-f72d-46f1-8cf1-e202a3884af6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac69a7d3-69dc-4e13-9d97-b071a04c4901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c3f95a-c746-43be-a62f-a8d939b051b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb08f448-ec40-4580-9d86-9777daa20441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7a7f0f-401c-498f-a71b-b1902ee407c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c0b014-f916-4b9c-a4a4-41399a39528f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4941eb96-d65c-4b89-b9cf-ce91ac9d1169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c55217-e599-467c-a5c6-5fe4a46d4094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b7b37a-964e-4b2e-b72b-df103a35dce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a51811e7-8034-4fdb-a9df-c23b1041a14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64cde8a-c67e-47e5-925a-468bc8a8d679",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de044917-3ddb-4a26-a54e-9d5de1db4b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b27023-3ef7-44ce-af51-8e77a5e12647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c66afc-9f9e-47d8-86bc-2f78eaacbb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "151ee083-61f9-41e8-807c-b720a8fe6e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f967a783-2cab-47c3-b170-8d745a90a8f9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f823c1-aa8c-47a4-bba0-e127a7345a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d678bfaf-e032-416a-936c-c8d7ce99aa46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aa6d63-91f2-492a-851a-ef6d10db53d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64e0c818-bbbc-4362-ac8e-7ac631d85668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6832eb5-78bf-44b0-8a7e-a0a7fe106d6b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76cd039-8394-4c2d-add5-3abfe41bab86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefb8b15-451a-48bc-aaae-eac01af6f4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75706ce-7731-477b-a0ad-f4d86f210350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4d9d75-09f5-4ebb-befb-f60882970295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e478cc-80ec-4326-93c5-2f39d5ee9983",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f92411-3505-4e0d-a99d-9d339225a2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61c91da-6424-4f48-bea5-c4a9ce890681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fe03f9-649d-4b3c-9035-a1da67eccaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d012967-d00d-4612-839a-7d82e5097dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65c3d26-40a6-493e-975e-76f32ff1632b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a644fb6-a275-4f31-8a67-d96da6ceac5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6305659-0f85-4e0e-99af-b1206142a83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c615b01d-e5c0-41a3-9c74-711863e5f749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c650c461-7439-409c-908e-913387199ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375f3183-791a-45a7-b09a-54a6772289a0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a77008-fb52-491e-aae6-149e25682bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12deb480-5d35-47bb-ae67-fac21e460f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb60f7f-67d6-450f-9ac8-369d63b6387f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79715845-7af6-4329-8f57-59078d9da716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59be1b88-69ba-479a-bda2-efa7568262f3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be750807-16e2-413d-a19e-48569b6fa06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2e5105-b99d-4dbc-86b5-1e2af33156b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8316b847-3014-4310-a420-ba14029840b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c205fcd-6053-4598-9646-d465ad8ce9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd60b59-2f3d-49d9-a14b-f3a89dd6d506",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43eb056d-77ac-44ea-b2f1-a18f92e336f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d876425d-b8ea-49ab-8a73-a7671dc77921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa9e1c3-63dc-4181-ba56-7e66ad7a1825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a7369e-0569-4853-b90e-7421516dcca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6168e80-7cd8-4154-9925-1b9c0255f37e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4377e17e-8f8d-400f-a97b-b9f84ce891e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd8e823-42ff-463e-84df-c4c8f6f56310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e361dde-3095-4b0a-8a40-87bbd3a957c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2f3f5a-fa87-4d80-91d1-f40832335bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f14899-53b2-482c-a366-ac7812462201",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52900d22-55db-4b95-8a5f-130627c25f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8b85b9-6f1a-47b5-aeec-436f800e054e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82b55d6-e432-437c-b4f6-ad9c86addfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd105b8-390c-46cc-a028-fb8af1c5725f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08f81db-038c-4872-8740-7cc151825e0a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f08ae18-77b9-413d-84b5-4328d4d66b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ee19c1-5d9f-48cc-b609-e3452bda6e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee7105c-fc76-4e85-82ac-272447d6c84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0a5334-2a32-44e0-8dfa-fe63fa963ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d0818e-10ab-4aa4-9736-77844a9c0c5c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31249f6f-dd8d-4066-a5ca-a2aa70dd2aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee502bc-5456-43bd-9181-c354722f9cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7edc5c-e05b-434b-9bba-61bad2331416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a9ec1f-4790-47ae-a1b5-f614b1a9f2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bab05a-dd09-45db-805c-88eee652b882",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b159dc-f163-4a0f-aa61-fb2d04540e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d99e469-7672-4b5d-867a-01d0c1cd692f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed67bb0-bb24-4a33-afe9-1f2edeacd623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79e4f15c-d3a1-45b8-97e0-e506278e44ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a70e50-7851-41e7-a727-6a1aace02778",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58afea9-db49-4c5c-b813-b453b00eadcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76a78bf-347c-492c-8144-d8a156af4df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4257feca-c590-47a7-8c8e-d42faad538c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0755705b-c003-4726-85b1-1053e43f714e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae4cc8b-fd76-4d52-b09f-6fed75f3c001",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0a66c3-7fab-419c-b8d8-c1d34cd72262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94330801-b704-4277-aa21-4c3f813f7bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c4d14f-f5d4-4973-9d93-16b90ef1a6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "011c1bb6-0a43-4132-9621-69134fedc833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ba1287-fa97-4c0f-aedc-34bebc661e90",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df7e1de-42e3-44ed-9cfe-a4eb290cb9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff4d07a3-070c-46bb-a92a-bc22b9c9b123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fe526b-aec4-4cac-9232-66210fc526d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e138f46-70aa-4e52-b422-041ec0e294fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5abc5fa-7fe7-4c57-a029-ca1414fd876d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e0d76c-6655-4496-b6be-492196baa113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f504a8f-accd-44f7-bb62-cac9ea207ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d539d9-cdc6-4ef4-9903-495c0fe09544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be41b57e-9d96-4e2b-a946-c3cbccd1979b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46722a79-2349-402f-ad78-7206bc8bab58",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3c71b5-f003-4806-8ae6-52eb4229bc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df32c6d9-0f42-4813-8f32-7547266d0cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6ae79a-7d04-477c-99f6-27b854bf9bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "317c1c3e-fac9-4365-a28e-e9c18b5df01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39546fde-5d2f-46d5-9f56-201198f70256",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccf93d1-52a2-4747-9d4f-5d5eaaadc3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee6086a-63c8-4aa9-90ec-d3253b7f740d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bede9358-437c-4687-a05d-268ff4f6663d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eed13e01-518d-46e5-8c81-0d4d7dcf61c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa55afe-b1e0-46ed-b9be-f88ac6de6567",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3047562e-e63e-4387-b38b-71773e150bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ec6f92-4afc-4441-ac84-d8799c3d6cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fe93c6-dbbe-4c54-b94b-94f5a08a2fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "abab69ac-dda3-47d3-b8fb-1fafaa2a6e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9845fdad-8f98-4d7c-8aff-d82fdcd8df05",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6db37f-f330-48f8-aa81-4bb1366e193d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f385713c-0e3a-4cc9-a137-a614576a9d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb31493b-a472-463a-8730-a30f223d5c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6399fc-e567-4b1e-8cd5-4787794a9477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8a5721-3544-4057-a68a-6bc964781133",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097aae95-7ab0-40a6-a128-8267449b5929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39795a3-6882-4965-85c1-50f0ba5bd588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abc4c0a-0015-4c41-a1f9-3264547e3b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "16671aae-0535-48b5-b2f3-4682f47335b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f44224-5f83-41b7-a108-529d8696e337",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a83495-ea2b-49e1-baa1-f330fc88f841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389de4f3-63d3-488d-957f-096a4a25acbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad3c34c-af21-411c-a9b7-77e11c66c695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4a83ff-18ce-4032-9bf9-3abeeb782675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b3663a-65f7-4c61-bb8d-7da9ebf807a0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245d999c-ead9-4a2e-9423-778b87a11e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0062abd2-f497-4753-b62c-62830de9baf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a0670e-38a0-4b07-83fc-afae5bc234fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f81737-0bee-4638-a905-e8138fe080cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e39292-2836-4400-9620-c64bcf64bac2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5613a77-58f5-4033-b7aa-1db7200b226d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b641e6-16ed-4553-81c6-1e6bcb8fe9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3841980e-8bf6-4e97-8513-28921d9b08e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "125303a0-4f7e-4c8d-9777-bf2a24f31889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eb3b47-08f2-40e9-a689-62dbea351ad0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a0ea2d-77f6-462d-8eaa-f0ee835b3669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc567c3-c335-4570-bc4f-d7e5f22989c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5e251f-49ba-4d34-b7f0-0f7a9ac3db82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90c27d82-a729-4e9c-873f-c69ff6d80b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d905a0c0-8158-49c0-818a-1f168e117345",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e0e350-b2cc-4651-9e34-abab6e54b8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4f17e1-2c80-4d5d-b219-0b7b33a16219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4154ec-0ce7-44cc-8007-fd2ec2cacd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51d8e24-86b6-4c5d-b970-bb9e2323b737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42517e0-fedc-4661-89b0-56f00564d328",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe2cf1b-1c6a-4a22-903e-e74bb50c6b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25eb56b2-b6b9-4dff-9b42-d4b0b24a4eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3757786-9d1e-4478-92be-e8542b95b36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "691b81c4-50e3-40aa-9817-78a47527cfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64f2c67-c08b-4d57-904a-a0d37dcfe6f4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34b0698-4acd-4766-8455-8e75d9e7896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc3cbe2-faaf-436e-85c4-1467d3b7ff4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077bdfc6-4252-4e87-974a-48cfd2b59f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44d7859c-1e43-4a12-9a94-9917d971b372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fd65d8-44fa-4892-9bf1-0c0abcaa2ea6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef953f74-4ee3-4146-9dc3-30746242df71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa87d45e-df9c-47b2-9a2c-b156b138d219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c728196-8cfd-4707-bbda-c51965b8f401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3756b470-c240-49b1-806b-57fcb119f1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d45c87-677c-469b-97ad-02026122c4cb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dd6af8-870a-42ea-828d-e836a9c189b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d3e957-8ead-4241-a8f2-986b37fc69a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58492891-2187-4a0e-beed-7b8e198b5dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c156c060-5987-497f-9e7c-f1968b75827c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7f297d-96fb-4e07-94e1-7f593f550278",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b81e81-e026-42a7-a5a8-a766830fe2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf64ad5-054c-45ca-8372-b2a89618266c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b23d804-24e9-46b0-a418-66021aba379a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f51e5676-8419-4d7e-bbea-bee922711a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6091b31a-255e-4cbb-87b8-c04860d31d6b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc50e2a-ff63-4ff9-8861-b581a9bb218e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe60e056-8e98-4a96-b5ea-8ffe1a2fa65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e71256-d32a-4202-b76d-79a19fa78681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ceb1a3-3e3f-4b6b-812f-3e5770bfc131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e8dce7-feb6-4a4c-936a-417f58c828ef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c804dc51-cc42-47d7-aa87-e5e537c6e213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af55921b-9d7b-4e26-8dd4-a047ba929efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcf6559-a75d-4b5b-bea6-058c2c7b0612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "077e4415-fd37-47c0-bc16-a3a17e489c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9d92a6-b6ca-4e5d-9b31-b936b6a07d7b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193245d1-40c0-4ef6-a8b9-1f4d00ebbbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb710e9-6932-4ae3-8d8c-acddb7eda155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896f57ad-8668-40d4-99e7-c43f23014d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c05eae-5041-4a8d-b5ab-79aff8db2c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594067c5-7588-4f44-b387-b55d4f1e9b77",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c3d78c-8301-4015-aecc-368595d4a71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09c84bd-aeb2-4d50-b2c5-43b5d8d2d15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd71228-a3d0-4dfe-9676-b8b0ed8ef24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "72a0480b-cfb4-45c4-a16b-34e2fbef86dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3baaa640-1875-4c18-bede-c41f68a7fdd0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621f813d-cce4-45cd-a509-b78fd8362e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77698a7c-c0ff-4714-8aa1-d6d4e6d9d0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db8ba9c-c068-4935-b130-403395602c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8794535b-702b-400b-bd56-3ac121a5d284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6684a509-1789-4eda-8770-1e9e0bdff1b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c254ca-f52f-4245-abde-a6cd4f670548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5d8949-3809-4855-9b9b-f2b1a36ee7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88461d8-920b-4a7a-b932-0f5da6e6157a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5186f67-b6ae-45d9-bc2a-faeb34507531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423bcf93-3fa3-4ed9-87e3-7e7220d79496",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a08ed1c-ca5f-4dd0-92fc-473beac472dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8670a58-eb88-4f8b-91ee-b711862ff592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e68a5e6-8245-46c2-bb64-1c282461b907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede59ab9-ea6c-41d5-8c37-ef3f4b1e0850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a4e1e0-cd1f-4917-8ea7-ff451ef92336",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09853a3-12d9-4773-b133-354b023f6d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12638d92-0f7d-4f82-b8e8-811c87d1dd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdb9259-ce9f-469b-9fdf-85b74c1e030f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d56141b-c6fb-49cd-a3a8-5619f60e2c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b494a6-35a2-4b8a-aa68-65cc5944192e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f408e50b-9124-4e9d-836c-34f3e4f88422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56082d22-4933-4a77-bb6c-ee616bdbbb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4eecf7-37b3-4cdd-839d-79c692bb0657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3af3e2-ed67-4f7b-8c71-30fa5f8028fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fb69c0-a20e-466c-8e67-25cfedf24740",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab54b10-0b19-448b-87a3-a4ed9846c3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b340fede-4d00-48b0-8d67-cbd1740fdbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0b5064-785d-47d2-99d1-cf54a78837a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "eca9feea-0bb7-4f1d-b9f0-f9175dc650ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1507fa-6745-48b3-9dc3-72d881b2166e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14231600-25f5-4c7f-907b-ad4809cf17f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187d627a-250c-4440-bb3c-3db583c50328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47597d0-7d1b-470c-aeba-d31f7d7bf26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f890c3ee-38f6-45f4-bfe3-039a21200c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b88bdc-c176-41c0-bde5-b64f19696786",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0489e5-b10e-4dd3-a628-8c746d541bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0588ee-322b-4655-8dd7-b1baa4989bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7034b7b8-da72-4eb2-a8e7-2c7c8f9ffb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ad91c0-fedd-4cb7-9881-f552fd812fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd25ab40-b4e6-40e7-aeee-2f14a58cc0e1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636051e5-2d78-4e27-8c83-eba60b687a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc277c7-31ad-4edf-b053-1952b9339b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacae1dc-73ac-4f59-8cd2-8e00b75934fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b28c9182-43ff-48bc-a2c8-d9b746b83e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bf6d8e-191d-45b9-af2c-2d1b1c9670d2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359ef1bb-4ddd-48e9-8e79-4123cc3048d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e834c1e-b110-4994-b4e4-50aa5e983d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d471c6-8c1a-4c24-9d05-cc0cfedaae95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec91417-fb36-4cb7-885f-0a3738d04bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85421a98-e36c-4cbd-9f9e-2ec7c33a8c99",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1283a6b2-ce5e-4f88-a6a5-802039b4cb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f365d21-81a8-4878-a1f6-b3f039db9806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c482b6-0dae-4ca0-9839-80c1addcffd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4a1980-92d4-4d4b-a28c-eb1a6ebf5028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488b248d-1d57-4afe-aee7-80f037e95158",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbfebe4-7955-415d-87da-899936f9e2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647fafe8-8bbb-4939-af51-4d5dfcfd5383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc320fdc-e183-4715-b5d1-2034602d9033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "168fd70c-dd8a-45ed-959b-210ed435f51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f2e1ab-461a-4fd3-94ee-c0921030272e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bab3915-370d-43db-b236-6f790d640872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968e640e-425a-4de8-b1fa-cba7daec5d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c9066f-f887-467e-8736-20cd5da8a2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed677c9b-1e36-4123-a1e2-03d22d4490bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e61b90-28fb-46a2-bf3c-e93d85e47993",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8047261-d577-4e75-aac1-90d0756fd03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e4122c-8d56-4ac3-b782-25038d65c263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c848976-3789-46a8-8e1d-3e0575296d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19446ce6-2869-4e9d-9ed0-7432a47165c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf8e0f6-ba60-4295-829f-6aaaac69202f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d253f974-cc2f-470a-a255-46d520c60413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba0f319-9641-40df-b941-17d59df0ca08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422ee3d8-81c9-4b27-98e5-c3e6a49288f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60813cd7-187f-4bc1-92ec-a5134992e955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2873be4e-8808-46b4-9765-9e56dbe065dc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cef138b-b584-4a25-81e4-2b9072a7f047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b629ce-4027-4cec-a53f-dc8fa9dd14ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce69acae-47eb-4480-a8be-381747dfffe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a02e32e-37f3-4454-8e6f-45d160fdce32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d16f28-d17c-4bb7-a2fd-2bdb8bdced3e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf75ddc-cb58-4850-9b19-ab46fad58708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d263f0-f43c-42e5-b08f-4cb49c9a608e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d7f563-5533-4337-ae97-025c49f1a7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba03d1ca-f206-43c2-a821-d06abce3a7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd357d9e-8047-49d8-8fb5-541081da60cd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46786cd-aed2-4a7d-a7da-254a58bd8eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3570f7-b09b-40ac-b443-3071409a501d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edeea21-b7d2-4fcc-be82-e93388c9019e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f55aed39-a312-4aa3-8473-2d41aab60bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766ab8aa-4537-429e-8194-404841958113",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4c5992-f411-480b-bd42-482a946b1335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df415ba-2431-46ce-8f14-f9b21b6ad5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eacc5c1-4aca-4c2c-8f27-c3d6a5a7ca93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93ea628-56e4-4bc9-8c80-971a4cb9f5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2df9d6-e324-47ab-af2f-9f330db8f084",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fa2c18-ef13-4096-b98d-d9946f035adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f58218-a131-41cb-aa56-14026f21f2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f914a3-1856-416d-8af8-fc1df4b4538e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc486c9-1d0d-47ad-883c-ececa1976476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faac7e81-bc57-47f7-93f2-59e1c62b7ac9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67d9633-1746-47a5-b644-f049a1d70e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a39ae07-bde6-4538-920f-ec96c35a9d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8abd38-a6b4-49e3-a9aa-41e4a7d6a90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ae048b-5b58-4653-8977-438216d56227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e825f13-4451-4dd8-aead-910244dff050",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c49f76-ea38-4e4f-ae1b-14904fd9bd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e316bc7b-e18e-4d9c-b5a8-15cb84c1d1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45174f0-bad9-4f43-bc8b-cb3079da69bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81737ceb-a0c8-4ee4-b403-713d527fe7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa20099-e9bd-457f-9f16-0cdb29a7a150",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7e10c2-72ab-4584-94a2-0b35e4443d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24876cde-12e4-45fa-a50b-89b2d52cb149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8116c8-6010-44ac-8a8c-41696d53287c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47414d03-e4fc-4ec8-894c-6b61d5896d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1d2df3-f7c1-4d3e-ac9f-dd19775a8155",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316987f3-663a-4911-8be4-a618299590a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0585935-238c-40eb-905d-b5d50bf7ce36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c252a6e-1298-4a9d-89b0-922a0c8b3717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3557a3-8d53-4e6c-b3cb-c22a734140d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843fb440-9b86-4db9-8b83-a3b1958e2ace",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a9f1d0-b244-47e9-b3ae-3d0b472fdf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc51bf83-be65-4b80-a7df-138da5a9b8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf56ff64-58f6-4374-a8ea-fd55adc157ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "abdf855d-52f7-4312-966a-2ebb906dff3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75904bd2-4f2f-4455-acea-3a9c5fe3dc25",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58759b23-5652-4458-bc31-23c315a38f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdbefc2-4ac7-4dc3-81c7-c199d63a9259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19408afc-8f89-45de-b32d-58c4fadc1754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fc4bf1-01c4-4243-9c80-a4a899a0387a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0bb75f-b947-48ef-bf98-8e30cbcc866a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d92e032-9c03-4399-bf07-de9be958d35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89111c3-fb1b-437c-97ed-334d80a8cae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c266e95-b9b1-4bfb-bc17-5e19ffa5d538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eca49d7b-8b18-4088-80c1-5aec94a351ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f03d543-c65f-4d9b-a0a6-8fe24ab412ae",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da125ae-5534-4be0-b0bd-02884316c88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1c7795-844f-42cb-a661-bcabe15e9021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbede311-6e8d-4c5b-8c7c-8bb35a7fdbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b8708b-9858-44d7-a7d6-ce45e058924a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2e8606-b4c3-47a8-a6ba-c9adbba4577a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0a0a10-c236-4d81-ab28-1e0c358f37f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395aaf54-0f75-4e87-ac82-0ae941f90af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf36b8a-f5be-4f76-93c2-eb79f5fcfc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f17c982a-76dd-4630-87bf-224900b83c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1c9f94-abaa-4a79-8a39-a970fe659b74",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2553768f-19cd-4eab-8a58-17deb48dc54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614a65af-b082-4f6c-8932-87c1e1460dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b03fa6-3688-47e4-8873-413811ebda2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d12cb55-7174-4947-9dff-161a359d9fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a659937-a298-4b6c-9c93-0e3328350791",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fba9994-2e6e-47e9-ab2f-c8c14312439f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083b6b99-f379-4541-adac-dde6ffb9c9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c75e62-b48b-428c-9a31-d467d8c85a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aee45a41-8c7a-480d-88f2-a7be4bd6af9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99b7e95-049f-419a-8705-a3492d591989",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7343d818-e343-4325-a00f-f1b0a54066ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37a319e-1033-4d4f-97ce-a3f6bf9c097c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4588a82f-8a20-4189-ab67-18b2a6b54a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "323eb6e5-150f-457f-bed2-743d1a92e915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bb0521-8566-4441-929d-2d64f2d797ec",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436bdf29-8586-438f-aa5d-4ad283dcc010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e22f1ec-a4ad-4eb1-a104-e08399111cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627db412-ee13-47a7-ac84-5141751708aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9df6182-2f93-4583-8be1-2fc6e25505ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb0bdff-0135-403c-83e9-1f2adba9dbeb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c5f315-7ed3-4ebb-b5da-0b554067ab93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164b8149-5656-47f6-99bd-8a941f6c952c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2633aae5-b0d1-4acd-85cc-4d03caa39fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "47003638-8684-481b-b851-bd5f3db2480f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02b09f9-a763-4316-a0a6-c4be07d5ad00",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9ecfa5-bdc0-47b8-b30d-d24f32728585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8928ca-2d4f-455a-8ec8-1f6db1291cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd7c2a9-ec7a-4a3d-b69c-e83146e4f179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b26237d4-27f6-4ea8-8939-bb1d71041758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac88754d-a3c8-439b-b19b-563f7746813b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a175d1fb-b932-40d9-821c-762c6bd60f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "884e0676-e854-435d-8571-1a08a4bef88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8949974-937d-492a-96c2-5a669a307acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd57f4b7-cf1e-459d-b6ac-7670f3d6a7fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2bc96eec-720f-4efd-9251-265f359a30c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5424787f-a384-4944-ad33-d8625986e937",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375943ed-5ee8-4b61-97ea-cf2c58a0eae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1313a90-b4b6-4480-a96f-796ac40e1016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98738b6f-0684-4f35-9b4e-0d3530e47459",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8347df0d-4dcf-485d-8267-0ee90c4c9268"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04c9e7ed-0ccb-4f36-94ae-e9390c41d434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af8491ad-589f-4acf-894b-ede541df2360"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c26de95a-f945-4095-8ad8-03e1a8bcfc57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7baca92-360e-40e0-96b5-b365850beb4e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89055df2-b06d-4bd1-9b8a-5cef6ae1ddb4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6fe4cd4-f322-41df-922a-7ca44b7a87a9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69202457-6a9c-414b-9da9-50b015cbca80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5002b1bd-4404-49f5-9725-0e6dfb8b5244"
                }
              }
            ]
          },
          {
            "id": "6ea8dffb-6495-4815-84f6-86363373bdd1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d9649e4-6b55-46c1-bea2-1344aaeb90ed",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a50dc15-f412-4002-8b9f-cc65881ec378",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23878c1a-3564-4c1c-b86b-9304f1f977a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02d95c69-82fc-484b-bde6-bdefe6f03c83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "39633db4-5421-4904-9e6a-e23d11bb23dc"
                    }
                  }
                ]
              },
              {
                "id": "2643e10d-6c1e-46d7-a0e8-feef4021476a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73408086-fc2b-4468-8e07-1327007512be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27f9b208-8a60-49f3-9668-e9a00062ea9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "944c6b8e-861c-4366-b43b-033b3e95e300",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "573ed7c4-3b27-4846-88a4-989140891164"
                    }
                  }
                ]
              },
              {
                "id": "ac9048db-d9be-4da1-adcc-72eca82e85d6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f30e8c6-027d-432b-a6d1-65e7dfe249c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "502330cf-3d12-47d0-bd6a-d1bd3ee460e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16ff9411-50a8-427e-a65d-74d39d66e014",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "98c2b622-80a9-4bb7-b3b4-079338a92883"
                    }
                  }
                ]
              },
              {
                "id": "cad8bb31-6c63-474f-897b-4ac2d0350195",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13717b73-8cef-4271-88e2-3c3c89b4e289",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "243a1ae4-d779-4e08-bc6f-67a64a608ad0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d67bea92-bead-41c6-8115-68840cb85d1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "26926110-c68d-4d18-8d11-c15dd4eb744d"
                    }
                  }
                ]
              },
              {
                "id": "82fb6179-7e71-4b76-93e5-914d645a9031",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5adb30e-e831-4ade-ac07-6946e8ef6c1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b496faef-1415-483c-98c8-06f57ee3f64a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb22928d-df73-48f9-9917-36fef661d18f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8824ae4b-5464-4408-8cc4-d9fcd0c142fe"
                    }
                  }
                ]
              },
              {
                "id": "3a3c2e7b-8417-4686-838e-ca57bcc9ddaf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "208faee9-96fc-4647-aed7-66a2d34bd4e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cf67b78-cbe1-4237-9732-f26ea0d1f843"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8705142-9b63-4155-ac01-a347d61645f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eee96de7-3a48-4262-9e4d-2811eb9534dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b12dd247-f67a-46a3-935a-95be43ccb0e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3038d9a5-87b5-4911-baa3-00b8110a4464"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2273a96-a8dd-40da-bfa9-b7e9c1f9a618",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "919c79a2-d905-434d-b8fd-a56b10c66074"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "976645ec-8e72-4d4b-989d-56d709bb8db5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ef51e4a3-fb8d-4ca9-ba2e-eeb18fceb1f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "578717d2-86a7-45a2-aba3-2142f365e1a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0f09e0b-a315-4aee-b991-faec3f1054cc"
            }
          }
        ]
      },
      {
        "id": "6e5bf55a-b83f-4823-b4fa-7270f1c69741",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b8686768-eaf2-430f-bcd9-2811571ffc17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7af6587f-0ce3-4400-912f-eda5d52822e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "827656b9-d5aa-4eae-9001-f294cf2f2371",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431b79f1-c0e4-4ca3-a3ce-348d903338f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c25a07f-64c1-4cc3-bf93-204f40f6f02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b98eec0-b131-44e0-8cee-2a37ed874db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a91b752-b330-4a7c-a474-e20c795fcb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07405184-747b-470a-b04b-5092757d003c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e14d90e-4121-4873-8169-c87c8a600c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7064c6-3039-4c55-992a-9d5c431f6db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b80ecf7-5c8c-4663-a63c-ac10de79c5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfcd1ea-9a9d-429f-97cc-5e7ca0c0b829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5868870-098e-486a-a30e-c971b6df9151",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af84fba-559c-4b9f-8826-8a3a265e8af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7272cd44-2f81-423a-a9e5-5a24d365c206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6c6b0d-4530-420a-a9da-6345842f154b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b578d4dd-4186-4ac6-aec0-e551ed3e0f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee7344a-4d11-40a7-bb5f-28f5bdc10012",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c664613-4806-4069-ab28-c200801fba85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a856e7-00d2-4288-87a8-91c32ad3dc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccbadd3-d966-4d34-851c-55216a9d2454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f02c51-1cf3-434b-b972-d92f48e7ef33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673760d5-c3ec-4af3-b582-712bf74323b5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f89029-e1a1-4241-b3bc-18574a295928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2821a9e9-a8fb-4abc-8286-7d0dd7d86c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07db4a7f-4ba9-4850-bfb9-0d88993e38ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ba5c1a-e5a5-494e-982d-71e2933b4f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fd1770-5779-4560-b74f-6465d97b7abb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934aa803-ddde-48f7-81a9-4221f3034027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434999c4-16b3-4849-a142-0139fc431e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f66f56-b473-4ac0-b6d2-35b6368b9e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80ac246f-a5b2-4a8b-ab62-6d59762ba374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accae378-5565-411a-bea0-ba9d8e9b0135",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bd8837-2bbe-41f8-a26d-d794ce2d67f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552f9c59-bf57-4b74-8098-74b5540d7f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbb2a35-58ca-4f02-8c82-57cd2088838b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce13d37-9679-47fa-8f8e-3af8518fde11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b9a598-cb3f-4355-a7fb-c7ce577eed4d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38385ce-ec4c-44fc-802b-c0a4e27d44f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf8d284-aaa9-4840-a577-e0602642f693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32de5552-2cae-4adb-88a1-514ae10fb1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8fcce1-758b-47af-bb89-9e2b7997076d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3946b680-0815-45c9-ae79-a6ac10782b5d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc13793-028a-44e1-8fbc-c7d462bf2916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f4ff17-1b65-4a0e-ab88-a81bfeb34b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9beaed-6984-48d9-93e0-8af591bd632a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73d4b695-063f-48bf-9a37-7b10de589858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5990f09f-3a93-419e-9eb3-7036eb5bacc2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fd01f7-2fa6-4586-9b70-a3b68d4ab0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a784535-0a2e-4f7c-a07b-b1c189a17fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39069edb-03a2-4174-8d6b-c65a8765fab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85b8d65e-55b0-469b-bc2f-98260fce4548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d17291b-996a-4237-891a-7fe079a0bcf8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8404d977-a5cd-42b0-890f-abae87b74be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca41e16-c7f9-49e4-b134-f15cce4d3a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d88cae3-579a-4b1e-8e04-e8cca27f6128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "896225b4-94ac-4e3b-99b2-bf0d84e7c0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83c6b7f-65d3-4f8b-b244-1a8220aad9e3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dd8189-d2ec-438e-b12a-ecdfc6cf30f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5710ed96-8659-4dc3-8fed-ffe44ed3de0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bf8e37-5508-43a6-9619-aaaed9c9b91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d4d395-8dde-4c0e-8ed6-69e4521f82b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc66644-1244-4921-8256-98e639ed1462",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313a23c4-4201-4864-89d8-a664d699b271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99179896-ff7e-46a1-9145-d3599ab502da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784b6813-b479-4112-976a-99389ca8dd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ede353-45c5-49ee-8a17-6c6669a37867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b94cb8b-dfc9-4193-843f-c1f00c83ee8e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4243783b-49ff-4568-9ee9-e372023a4ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7d9d6b-16c7-4585-8929-ea99b253f5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6579c7-5344-4211-b5e2-6e5b64abd2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce7b076-016b-4887-a92c-e9464326607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b148afe-8b53-4d1b-9b39-24722db1489a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab10638b-79d1-4af4-af99-6d85a46fcb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701221ea-757f-4f57-a891-254992b97d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdd78d7-2685-4c13-8699-1fee307451d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "769deccd-3c8e-4aa1-b088-ec2791d2e5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a92ba2-0169-4bb0-82a5-2f25293c3c44",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20849ff-7d38-490a-9930-1b9eb05519f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bbcd06-59e0-4b20-98b9-e40254340a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be2918c-4fa0-46f7-ab56-a0e0746d69e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf10c8b-d5cf-4a6d-af93-c0777b07a277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57605d17-01f5-4664-b432-c244532a37ae",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52f0fe5-6302-4283-beb8-4a809e75d858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4de208f-38bd-41bf-82bb-3888785af1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2065f19-acf3-493a-860c-bad20093f6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "164fbd07-a112-410f-954e-691941480b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b13d4-c268-40f1-bac6-8512293976e9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dd7925-07b1-4975-9ae1-b78abfc3eb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f774e6-ce29-4818-8093-32c390619e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa099b9-a321-4f1c-87b3-0657bb0e30ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "41c044a8-d8f2-4474-b4d9-482d3840cc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991d087d-57d0-4763-b8f9-59b355bbd59c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34e0e51-7d5d-4214-abe5-47b3453367f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e188fb9-a993-49a6-90ed-9a91c98dad40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a44ebb4-fb94-4701-9ba0-5921820eb5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59667998-788a-49e2-9f42-95df2ad51e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed51f05c-5044-45c3-9374-fe75226c6776",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86ecff9-8ff0-4013-8a2f-d31760962070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36617a93-38ed-44df-b900-a50ac7e135b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4898115-03e8-4899-9e1f-04601eed1950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d43086b-0b78-4a8c-a96c-42321e0ce16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007c69bb-84c6-47ec-af3f-8b23edabaa4e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecf2fb9-f8ac-4fc2-8aee-57567a4177cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365beb45-118c-4f1d-ae84-612272b0de6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c62598-f608-4354-88d6-6d6b6a7c3995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1558b1-390e-41ea-8e26-42f3702bdb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc1fbb0-5afc-469e-a3b9-d59b1ffd0c5f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c91cb57-012f-4f44-bfcb-962ba1eebddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16854573-0bc9-4211-bc43-1c9228000e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e526592-a0af-4dd6-b2d0-d273dd67bfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f879fcbd-9c03-4c4e-a1b7-6971c54ab462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a237d7-aac3-4f44-80e0-e2ed7df9e5fb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedec749-a1c8-4f5c-bbea-9c142ec7265d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70ca0f7-0300-499a-a5f4-0bcf59de7adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8df7682-39de-45ea-85f9-db141c4b7c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7483f35-e7e2-4bab-ae5c-1010c21545ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e3f35d-c041-45dd-9852-60d863bdaa45",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3903782b-56ff-4678-8b61-7227fbd691e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859faa55-2df9-4032-b6eb-aa0f540b60b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e147040b-00cd-4081-9f27-1b122053e18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a8c27c-7f17-435e-be2d-a1110d475f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed90e95-4066-463a-9f63-bd58428f4638",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d39da1-ff0a-4480-83dc-d13e62938f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a6c532-023e-4381-9e7e-fd30339271b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfe72cd-d838-4245-a955-c1eeff175177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d194529d-b219-4d7e-a64c-52112f81fc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d99123e-99fa-49ea-b9b4-4562c6457c4c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f283acc7-8727-429f-a040-849daa7d1f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b1fcb2-53cf-4bcb-9a07-35c131bd22d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a9cea7-843e-4b14-ab86-3468822c5424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60f24c8-c125-45ba-8641-56af904c024c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a304ec0-b5c0-47f7-b933-178d14b219c3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abc272a-e4ea-40cf-a0f5-5a8b124a23ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec525c1-7a5a-4ec9-94be-a5e85b7b62ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f19637-13a5-4457-b631-285ae041d750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fccd235b-4815-4146-aa04-7eda58e6c4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89f9c3b-0ba3-4664-a0b8-0be40faed04c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368e5c38-15f3-4b44-a9dc-c5cdcec7a719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d8a5af-9fca-4428-abab-a55cc51cd562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdab1bd-da7f-461e-a8c3-4c0a1d172555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35655800-158e-40dc-a636-6a5ad8706cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c432ba-1399-47f8-8216-9405cea8716f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6b1eae-fdf8-4d33-82cc-fcc9e5cb0f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195b5b81-191b-4be5-9455-f745d445c80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91870a5-8b99-4c8d-b23a-6a3dbd3bd126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b387b607-9701-42e4-8b15-be44669dfdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bcf6ad-7ae9-4217-88b1-11cf2ec3aa81",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c064bd0f-687e-4066-957f-87a0f9756a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6210156f-6b13-4153-8ac8-a706d8242a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68a1210-88d9-4604-b668-7ec0f981f7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdce0fa-7073-491d-a1c5-42e2a33ac46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0340e71-bdc5-4c53-9e88-89529b31bb01",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b661adcf-516d-4cdd-9972-49bd1ab9ad04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceed2888-f6fd-4755-97fa-bcdca82e6480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee11fc14-5fdd-430d-a9cc-013aed419454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3fdb79-f0e1-4bc4-b65b-df786a6b4ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb3fecb-7cdf-4a50-9493-173947d39b56",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93399be4-60f1-491a-b8fd-5345da8bcec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d53f51-f1d7-49a3-b026-8526f454c990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc1e539-a06c-47c8-a2e3-f518743544db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "664d28e4-2a58-4b7f-86a3-2b16bb15e42a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f769e912-65cd-418d-96e6-c51f917625b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8386ab8-77aa-4f62-b546-32d9b40465af",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45956d71-11c3-4389-97cd-ea87c3b4a125",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b35342-8410-4f05-9a36-6d0afb2ed118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78fc567-b2f9-42b6-aece-3cee47a06dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80f7d61a-645d-4a08-bd41-b7c2a358aec1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "955078db-f301-43a4-b68b-d3b8b8842488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "617c5b39-c1ca-421b-869c-8a1adc40260b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "226c31bf-8289-4a92-b3bc-a86ac1ec5c39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bf0fc00-6cfb-43cd-a751-7a63c9b0a59f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "374ca425-01e2-4439-bd7a-ed45e43172ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "faff607d-bb52-436d-ba3f-a119e5e1effb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12ec774a-38ab-4df1-870b-d25a2ac8a64f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d78004ac-2b56-468c-b050-80201469dd8f"
            }
          }
        ]
      },
      {
        "id": "82716a14-7262-4527-a373-e5cb3c019003",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "be328993-01d4-45ad-88e3-90867cfd247c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a613d9e-da9c-4ba9-8211-62ac3378884a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6bb942dc-92bc-4001-9e63-4b63346799dc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c708ce-83e1-454b-85c0-128fbd987b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a250aec8-0c38-44c6-a640-dc463c449924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70be327a-c311-4901-84d2-9d7972d54916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3405ca2-f360-4f2f-9c73-7d4e54f0f971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff234c9a-adf7-4f63-b378-709126638a15",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f827b07c-841d-40c9-8b73-0356389f5f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5377dbac-e298-44a1-b141-5e2a13b65aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0edef0b-8e45-408e-b877-252e297c8ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b11dc64-2779-49f4-93e5-ea66b1e2c50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32ba0a3-8f4f-4dd5-bcca-e93f8eaff7ce",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c690d6d-d887-4ce7-a49a-d63c6eb2fc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5085d64-3b91-4c87-af7c-e3e047994431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d489b2-11fe-495c-a7f2-c12d6a5ffc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d479a4-b9a3-491d-a211-9d6211beb4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8980da1-206a-48d8-9b60-71a1722a9eb8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f09efb-c8a8-48a6-8be8-709d741c7f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d88e41-20f8-42a1-9e5f-16842762bdff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756055f3-6ee3-4bd0-9738-10de56f05515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af606bff-6d7c-4c89-8776-fa773bcbf784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18058a5-9c02-403f-9213-9174b1bac1da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65482a0a-4541-4ccf-8662-5b26c53e9c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcfdf5d-807e-4c2e-9033-468bb73c8f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47210cf-9ab1-425d-aed4-87f446f701dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c883d738-f078-4d4c-a984-ebc8037579ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5990eef3-8ac2-4277-bba9-a9dcf5d8839f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0a29e8-e74a-4751-80a0-253679228069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a330f5d5-1b09-4f8f-a28f-b6dc5ef37413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00007e0-6ff1-44f0-ab8f-8b34f23f81a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8833a8-4b45-4bce-bce7-72b4d4271884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46bc342-1516-4780-b8f9-156ac5403a54",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385d99d1-df1d-4893-b8ca-018f2f928204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e40d3a-7da2-4fa4-9c21-bb5489c6731e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9602b2-885e-4ea8-ba2d-8d809eec527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4040d1a-6cec-4f45-af76-cd083380a7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcfa677-7a1b-4745-bfd7-bea41aa163d7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be110326-6b5c-4357-9a2d-6ac1fe6787c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e469fff9-eba9-4580-a466-d17cd2fddca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b39e6d7-5f51-4b64-bb37-016dd7603cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c0c5d6-3cb2-4c4a-a09d-93601112243b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fb2e29-3623-41b4-a652-38b0b1bdb52f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00d58ef-ef54-4e3c-9ae7-9b19438b3b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec9772b-f465-4b2e-b242-fd7ad31d4e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0e773f-d21e-49bc-8ae1-6b1ed23b9dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5c96cd-0fcb-4701-90d2-4e5d2da98f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218ebb6d-cb1c-4bec-8be9-6a1c3e7108c8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be41f3b-b914-4bd5-9ed7-90c39f19b3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c81d501-20f3-41bb-9939-fbaa871cccad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def91d79-108a-49bb-8ba5-30557a5858f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fec8a12-3324-4027-8296-0f05f11b5e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f7f556-518f-466e-a044-6ab0806e0441",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af2be17-3e6b-4a00-8820-f1634eaaafe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f33a820-d49c-4f45-a7ef-207cb9475594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8634ea5-4b8d-4bc6-acc5-d35c0cade8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b13add84-ce3e-45f7-bb48-cb788849b0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b72e6e1-1efd-4a76-9022-9d9afeda295e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbdeaae-5c01-4495-b9c1-f2df60039d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bd71c2-2733-4ed1-97d0-7fbcd743b3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f4ed9e-c1a8-403c-b1c4-6644d3459aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1fb96d9-f257-4a27-9811-3c41fafa3a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f5a8aa-5357-4405-8e45-e6f44197bcd8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f8aa59-4b40-49ec-8b7e-c12d91f38668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e389d637-be75-45a6-b8f8-8260d3edaf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c727bd8-ebbd-4570-b331-c7107ef43565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ab054e-6625-4c08-8ea4-bb02a2dfa7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b32cdd0-d898-4487-9c4f-e020465aebe9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3da9e70-0bc7-422a-87bf-ff4adfd2bf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c12e297-3f97-4cd6-ac30-c0f09291e568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4cad7c-c26f-4d42-bdb3-bc2b826bacf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e84d1cc-6f17-4550-8991-8ea73329691d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd7f49e-8393-41f6-88cc-34a30cd41423",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb08073e-68d8-4e34-96f5-7604ff31b452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c2c18c-95d3-4239-8360-333cfd7502dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564bc87f-c15a-47e9-8648-d78f12f79003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d186a7-8cdb-4f92-84a1-57b678d02244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eb0c7b-9463-4564-b82b-e08d8abc4509",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806ce982-9097-40ef-ac40-76e46a248370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a364843-b9ad-426e-88ba-259401e9653f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32017761-339f-47a9-84c9-4b39dfdf68c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba799ad-c835-4245-b948-03c16e3ff978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b6d386-8304-43dd-bdc2-4e8b11fd9b80",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68834ad5-6aa4-452e-aa5e-d2dfbc739464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a41531f-054a-4c1a-b699-3416145c4035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a146ef0-4aad-40cc-b426-4158dc717ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea89306-ca85-48f4-92ee-020d6d145d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2da61b7-9094-4cda-b1bb-670c91b397f0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81dd658-fa04-4285-8f89-069a8d9b6886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadfa3e8-5edb-4069-a30e-d8c21cfe744f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aee802-b06f-4617-a699-a575686a8b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6091678c-d4a5-4d12-941e-e8ad71aa316c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c2055d-2d38-47aa-aa76-04a6a67bb890",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb52f674-7d25-4a5e-a5c1-a173264299f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74881b3-504b-407f-ba63-efbabc3b2023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7cbd17-23c1-49bd-9f91-aa7c74f23498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c309bd35-a24d-433d-b2a0-9ce8902b6f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7fc033-33e9-404f-9584-2adac3a5dc48",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb520a5-1197-49b1-ac5f-5d41d4978e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168eb132-c39f-48c9-a230-aabdeec900a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74db32e-4666-4bf8-9faa-f22f399373cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a39a507-eaf6-423b-8161-f0b7c24ae813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1dcf4b-75df-4eac-baa1-974c4cf07a21",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a1a945-369e-472f-8556-e8fc803bc6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42bec3c-36f7-40b9-9543-c3b07449724e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8246da9a-98fe-4049-a8c5-6d7f223ac1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "007756a1-cea5-4152-8c76-312d4f08a821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84dc9e0-beb8-4fa1-8fc4-fb8a2788f981",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f03a11-4220-445b-b33e-2cd713b063c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bcac5e-1404-48e0-9657-733d939d0c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595c0f47-9341-4fb5-94c3-1347cf6405ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0098fae3-0bf4-475e-95d4-92df6e528e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe73666d-abb9-4145-a617-4f1455bcc8e4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560df34e-253c-431c-b8cb-505a9a9686cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f8c8ff-1338-4c8e-a7cc-b82bc74f15cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f039171f-a7fb-4bdb-980d-8eeac63697e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "397ed432-cca0-4234-8418-eb85e37a8c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e774a8-e926-4917-92e8-fe0ad38bda16",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4838dba-ff76-4120-9033-8dd198d64969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcaf2ce-4786-4bc3-9c29-a58b18de6a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba944792-f1f9-45c9-8e1a-44b9f3ad432d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61fe623f-d595-433c-b103-8f103d04de04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d53f16-76cc-4995-88b8-05d60518d0e8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183a0f37-06c3-46a1-be70-85e2027475a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa437dd0-f66e-4824-b37e-919fbce62cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8d4695-4340-4ffa-b3e8-0a2d5cfa4411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a553366-455a-41b2-b5ae-fc4b97f78d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dc0afa-db67-4bab-ac9b-ab942f863667",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ac9395-82cf-4c49-9d6d-2f269bce9630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa5da0c-45ce-4a57-b786-169577086279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f94297-4c4a-4429-bc79-e98b33a3299a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "951398d3-e0ad-44ca-aac0-9f553d6e2605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bf8fdc-9ae8-47b7-83c1-df16cb184d9a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5e7242-6b3b-4d1c-a03f-2684fe14adc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e135967a-5cd2-4db1-8d86-1b9f5eb87acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f186f0-3937-45f5-982a-fcbd38601be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23627b84-eaee-4c92-ab61-b0430b0ef614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1020ef4d-ca59-4583-83d7-715e6580a65c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f771c0ae-9bc7-4691-a37e-bbeed57c7098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7208239d-16d1-4b22-a4f6-9bc9a9047c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e70d71-cf97-4ac5-bf99-5c7b21a3fb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8eee113-62ce-4723-8699-411c66e8d890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45080e25-9cfd-454c-93ec-fb372fc84b5a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea968eb-c225-49bc-aefe-a944af5ba6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771869c4-1b95-48fc-9d1c-66d1af0f4181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f9daa6-6fc5-4b8e-b5f8-5504fd673890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "388c91bc-0ce7-44ff-8757-adff1c0e7638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129ffd25-a401-48ef-823b-a51f28c793db",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43bb814-f948-493e-b1ef-f84a2a5c1fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfa088a-c5e0-4142-903c-a75ef65d916d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafd24d1-1cb0-4a51-ac54-0d18595f2cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "196a23f9-1173-44e2-b660-834c79784d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b38a655-a01b-4321-933a-d00413a96be1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69871e6a-a39a-42a1-a5c7-3f65864f504f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34b584a-206c-4208-a3c9-af4d6e92091f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb2f97a-94e5-47e2-9e4a-d3220ddb6782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d95e521-09d6-4477-82a1-b7504f137bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e944bda-b760-4fe5-8120-352331238ffc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fffef0-db2c-410d-bbbe-94b2c30a4a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8b3b30-f0b6-4496-970f-7f43cee7c7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e303e0-f2e6-430c-afdf-92daf7264fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa7ec0c-3bd3-4e2c-b1a4-17838487dd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17400a7f-ae14-4c1a-956d-f0d0bc26d656",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6116cc83-f471-4f60-b1bd-094f75843f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62959eeb-ab15-486e-9c38-f5e9671779ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7606e907-342a-4d63-9754-c579736dee9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57d7c243-17f5-46c5-8fc7-ded12153d952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3cd00d-153d-43aa-82e4-dd66ad047801",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d0a5d2-4566-4acb-839b-b49c616ace0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02e3561-30f1-42ea-a293-8bafa29d03d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d401e956-c239-4047-b192-4a3da1c57420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f885e978-39d7-4977-b576-f0d38480cb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076c6715-0a6c-409b-9667-5c2182d25f2c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364de57a-7501-44a8-9a26-163f700175a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3877c6bd-d16c-4bd9-88c4-8016c488ac74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d595cff-4848-4c22-92f2-16c7fa6e2ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9196a84f-9501-4c3c-ba6f-3dcd9c75ed4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c0bfb8-49f6-4305-8399-96e649546e97",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f842459d-2f28-4b79-93d6-9bccf9cd58d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1659cecb-e846-4d07-b1d3-de13bc677cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd35470-bde4-4669-af5b-0b999351bc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d4fb98-1bb6-4fa9-8e53-0bc48df6a322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58125805-9d6a-41ae-b8a3-2059ad20b573",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a28d909-ad5f-479d-8d22-930eed69dcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f562e08-975a-4285-bf74-a4b88a410d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1f5474-cdf6-455a-8ded-6a20fca175c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c40e279-7a5e-4bd1-a4e7-428477ef0455"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "baf09ba6-ab71-49c4-95e6-d6983a205657",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d514055b-e908-484b-9c6b-7aa9694fa410",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a995e14e-f4ee-4434-ba4e-999d5c4460f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2f88a3d3-1656-4921-890c-1aeadfc0d1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25507eb6-c0c8-415f-8fa7-6d9e991ceed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02db8172-f2a9-4640-a797-778d748fbcb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "474a60c1-a782-426c-a5d7-f8238915d455",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53b828a4-5384-43cc-acb1-09c5256d20a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3906f5b5-d915-419d-b676-c1b7899cda4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a83f1bd0-c82b-4423-aff8-c17f3386f0c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c4388a5-a729-4e5e-a13e-9bfef0650a86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be653f4a-0bf1-47b3-9e37-989920f67a48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf2182d3-898b-4f48-bdf6-0cb0287b21c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17476004-3c26-4fa7-9a7d-9337f0ee5361"
            }
          }
        ]
      },
      {
        "id": "a4f74a13-0375-440a-9735-bf9bb9974885",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3e34e9e1-5fbd-422b-b685-f164fe675b19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7a1908b-db99-46a5-a385-669466ee9eed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7e7a6b0b-d2b9-4026-9c2d-95eedcbff4c3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5151ef6-c28b-4888-95d0-a4f74b94dcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da6b1f3-084b-42ac-b361-8cb14babdef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05a88a5-d8d6-4f65-99fb-ba807c715e23",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25228cbd-080a-4d5a-8bd2-0901fc70fb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aca5022-74c9-4e05-abf7-0cbce689d159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99db039a-7439-43a4-9f4b-a1c532591f24",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b99e45-e259-4d9f-80c8-745625a996da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9b67e6-c0d8-4f5e-a627-a4598cadb78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fb2dd7-5cf7-469e-a2b6-c68c3dc8eaaa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bb1f2e-4214-4b6b-aaa7-8a7a0671b4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac53a5c-e50c-4f50-8c72-d2a81be11a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edbb6a7-5270-425c-b1ad-409a27e3bfed",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085dadb0-068a-489e-ad86-d9809f3dc796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee998b46-dd57-4f68-aa30-325a212f614f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c246ba2-b7d6-48ab-b5e9-42236f2f7213",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc9ff92-5465-4cd7-bd17-3a80f074c694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2a1ba4-9c34-4bc6-a44e-76d21b29f240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880d09a1-ee5e-4b5a-b95c-3d8607aa4071",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf1a09a-6304-4b6d-bb98-72e951c62d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b7ab94-d0ef-4aa5-ba3e-c8a7020aab52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dfec17-d6ec-4674-aa48-f1c2134bdf54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf7e653-9314-4f1f-85ef-dccd95e95ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eaa6ac-2054-4e02-9f5e-2298dcd37db5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b08ad1-bf78-4776-92c3-7e4d141e39d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca7490d4-a785-40cd-b1ca-806010bf74e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee6a98f-6a8d-4faf-99dc-a6bcae4c5de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecc7795-81db-4fe0-b18e-77a6e2dd2948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8c6da0-ad42-46cf-81b8-482bb023c938",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa541ada-29de-4a23-a5ac-9d53e97f0c1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4b73730-61ea-433f-b770-84965a71ac2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1838253b-6845-439b-8f11-b827351b667f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07d7dc7-55b1-4569-89eb-64119900e2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1568b67c-1504-4e4f-b76a-04f460f09a7f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11824df-3859-4fb7-82dc-62f677be778f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc6e825-d00e-4ce1-829a-6b53f7a74718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccc18c5-4867-4da2-bb1a-34e64d5804cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6547e0cb-4e69-4415-9d53-32f21bd5b514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3bbb0a-9707-4f63-8748-6ddbafa2718d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331faa63-c56d-468b-9129-c7c1d153e639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab876e06-ca29-4c2f-a708-d91235bb9019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94663d2-6787-497a-ba6c-8410abe9bb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e935db56-64ac-4be0-9c1b-44c5fd4059be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ed7a46-9d72-49df-85dd-117187bce83a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3b15d2-30e5-4df1-8f36-72dff44ef653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea853e40-c587-469c-850e-76a883d80a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15422ca-5d31-49dd-9e84-0be905535ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cbfba7-b722-4ad2-b60f-5ccb0a97550e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdb035f-b79f-41cc-b6fb-3ede44267399",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1794affd-2e32-4466-a9d8-7cf5fb230d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ce749d7-e8b1-40cc-94a7-e6fbb4eb2fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1434a9-69ab-455f-a8ad-806765bc503f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67a2407-8cc8-4a06-aa0d-da04b093fda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10d8e8c-41fb-40a4-882d-ce31a0cbc219",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a801f3-234e-45fb-9922-022a43c5d3c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d4e5411-621d-4748-9551-6bced10a1d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91700b41-a790-45db-8d51-4f1e69243e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0d0af4-bc26-4811-8262-0893259f947e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a777c168-341b-434f-9ffc-783452bbde7b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895811ab-4b22-49eb-a196-4dad64386ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9a9700c-969d-4610-b3ba-cd1d3604581e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e540cdc9-48fb-4bd3-9000-f2d66e6882b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241fa304-31fa-4461-a451-685b89724f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314bd41a-4bba-41bf-af1e-45d93b1d99e9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f89c9f-5723-4571-9045-df7b067e882e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c11e2c-824e-4795-8702-c493dd19dad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22480d4-2e5f-488b-9dc6-5e95074fe6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ac1642-11fe-4c15-8b38-a5f47e4bc9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f95e76-a191-444e-baf9-99f44252610c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e759cb-e49c-4fde-b7f8-b78adb4e7f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885a38cd-a01e-4c80-bc4b-5ca9ea97de6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9870ac-18ec-45e6-96b1-1d05e9eccbe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3f065b-ce87-4f3c-adde-3b5b380902cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3969472-3d94-482c-be43-6a9b5fedd33f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1905fa12-1402-4fec-8457-c3bb69fe938a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90322568-07ee-41ac-b832-30927327047e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b041e448-6fb5-41a1-9376-fd313da6c3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828e2be0-70ce-41e0-9428-65fef6db4ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c6f5a7-db9c-4810-9a74-ebc53bb272ea",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4809cbd5-2c1e-4708-a0d1-8c3082b4f388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cd4030-7788-46e5-ba04-97544d16947f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fde95d8-9d77-485c-8b6c-290cf0ee85e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e229c9-4fe4-4f2f-90de-9d9e77d70655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c08a6b-c3af-47cc-8f09-21f65675c876",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f43d2a-cc98-460b-be1d-6b16ac582211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cb355a-e695-42b3-b61c-5879acd89615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58157552-7646-4348-adc8-55c145ddb448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f64a6a-8c4f-4f9e-8fdb-07bac223c298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea20e1d-5c12-43f2-9d6d-3c695485d746",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43baf08b-04d8-4dc0-9d5f-d382cdaffd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a491f2b4-17f1-4622-b5c3-faa399aa403e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52c6bb7-b027-47be-a43e-44746a057bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f91d1dd-7524-4118-849b-e106381f9cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10caa247-ee96-4c82-b03c-a424161552d3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f9a0ac-c6d2-4374-9d6a-df8ef6aef48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ff807e-2dae-4fc9-bbd5-47722ec796c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66e68c3-30c9-4f15-b8c8-acb5558c39d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f8f768-50ce-4bae-a35e-5e7000879b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5898491f-eab4-48b6-9a47-8c1ab861240d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360fb77c-fcff-44af-8ea7-c7b575adf1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89090809-396e-4cd1-b2a6-4ea5b7fa91d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32523c7e-e733-450f-94c9-025d62006f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c305fcb-3d14-4371-b208-4be3a38275f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256bf6c7-e004-458e-b0a1-9cc2653e6d5a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc390593-cf13-4e89-bd1c-afb681d39d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c7a81c8-e437-46ab-94f6-f9d606aa49b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1b51b3-329d-48d2-8e19-eaf197be4202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a347aa-78c6-4418-a9f6-6362548f7431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f822b6-3209-4150-8655-01479d210827",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ad3c50-a9cf-4d51-9a53-065283ab0a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9f4fcb-c0a5-489a-a912-dcb2311d5bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb94a5e-602a-4d6b-bced-f332175e9280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e5763a-42f7-491d-96e3-f0247c675b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ff766a-337d-43b6-b835-4953d3a34f86",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecc8e79-e0d6-4f73-bfe8-a2898b911c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c21b77cc-e189-453e-bce1-9b3dfd0b9e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a904583-fd50-488d-adf2-6e2ce80505b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6e92c5-a99f-46e3-8a6e-74b273e4a31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ac6e9f-c16e-498a-a698-7cafa6df5675",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518fe40e-14ab-4868-a042-5f4a2528a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b27fdfa-5878-44b6-aaf2-98bf239b33ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821e40ec-88cb-47c0-a9eb-e35981af1dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17192904-110d-40b3-afe3-918bfe2b94a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4c6fcc-ede0-4240-a82b-d384b6232f7e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07387ff-710f-4890-94c9-05f13ca87c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d50938-0204-4fa7-b60f-8c70ea6eca7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2538df61-afb2-4543-b170-89a9d966b59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf76a7cb-b761-4547-a4ac-cd263d30d0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7b31c3-e37a-4a68-9bd7-b979207d5d5c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59137f5d-bcb2-4cf3-8244-6e0a44e04ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a5b4c0-a0ce-47c0-bfb8-23e6e91a02c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb8cd62-c5a8-4d98-a6cb-f037bcb1101e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b9ab81-6b72-45eb-a9d4-7847c1ded69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8e91a1-dd70-4a99-a1ef-36f529d845cb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2ce4fe-9e1a-4d92-81f3-9f1efdc3dd39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40a0ad9-19c4-4922-af6c-5deb85e3e694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bf5fa0-2b7f-4eca-84b2-1aada6dffbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc722e1-a735-4300-9fd4-d791dd9faa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20baece9-5f88-42a0-b613-add4c2ff5cac",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5e6582-557b-426d-b5c6-269fc093e513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a42133-6d3b-4345-8132-84a092afd5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2ce887-2c2b-48f2-a844-ef9fdb2449e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f963f7-6a52-41a3-a5c4-d2945fc6a73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23a39ff-3958-48bd-8c5f-e67035365d50",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5adda6-d4d1-4646-81f5-04621b85dcfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba354f86-fc02-482d-a25a-0fe7a97a61a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a3155e-277f-42f1-b270-9d30f66ed905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba57cd4b-cd43-4ad6-9f0e-e06aa2335ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe94689f-5efb-405a-b9e6-969dae5d054d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe947be-659f-4f1a-9179-ff0ba0e75b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e65404c-b402-44a0-9ddf-fc5452d85902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7bb8ca-9af8-4991-b928-fb3e7c3032b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90288a5e-96e3-438d-b2db-bd976a97fe62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae2f884-f030-4bf2-9142-78034633bccc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d624304-b5b7-4ff5-a64f-a9e8b163e32c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26c2618-2a8d-4da7-9a70-1fa8ebde43f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16259d47-a025-42bf-bd12-c28bc6534af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4314212f-f489-43e8-853f-f18dd2721ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963e306e-2b95-48e8-8786-51a16fd75069",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ca0a9a-915c-46fc-8723-164166828910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889bc1c6-2e0b-404d-aea6-1c32c37aab18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb53612-33a2-4f46-890c-81d140c2516d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3736707-2970-4218-975d-edc96ec56635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357bd77e-4e6f-4425-bbdd-835bdf0d3e8a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06560a13-8744-4cb5-9a11-4f26ae78ceaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf2dae3-f72a-477c-9d2a-c7b0770a1175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821f9120-5425-4a6d-8109-d50bf5f3484e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a585e0-d138-4ed6-b45f-fef4f67ac5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f82f88-a503-4f9f-aba7-04f5ebbb1fe2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b568cb0b-8530-451b-a837-914a1aed75af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d163ea-cd3e-43ed-831e-056f4cbf9ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf3bc1a-9db2-4e42-abd9-c75493857e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ccde0a-5b0c-4d94-b652-fb6d0f7c89d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92af6351-193f-444c-8e92-1e0af18437b5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a3924f-514f-44bd-aff0-22d77f850bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24161e1-e0db-45f8-8f1b-52c08e5a1f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80713992-24fc-4ff4-83ca-3b75820ac615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afb2f3a-fa09-4d40-9353-44747d8192af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b633f30c-fa8f-479f-bbdc-1c88117c209f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d3dc71-580c-4afb-bed3-7027dd3bf2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d133cd41-2b80-4319-b40a-a6bd75da3694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2473bf5-329b-4f6d-8c1c-86c42fa237cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ea9341-f582-4d02-84b0-fc3e93ccc3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72ff263-ce33-4e2d-8d89-bd97bdbb8f00",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de7aced-ceba-4655-b6d9-36f42b995a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386b8ce6-83c0-4294-a35f-2e38ce16e71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93531c05-19c6-4489-95f7-40a1f493ff85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1eb354c-8cd0-40a4-a187-cb1a1c9b485d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cd812f-3155-4eb9-a92b-bbb53527f395",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d1fe00-6e1d-424a-9841-979c1405ecc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c648eea-d4f4-48a9-9587-fc04ecf15234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0da675-ab40-4ab2-913f-1d706c6d726c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fad38c1-9839-4982-b7a6-73edcb70254d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6424f47a-2cde-4509-8ce9-6dd1f6c8430a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db27ec3-6afd-449d-8e3a-5d9ae8706838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c55a720-76f7-4e35-b8a7-5c97471e1ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d94f0b-47d6-40da-8954-f1c12546ee28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3be8cac-8b89-4417-90df-561289b5a0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222bece6-85c7-46b2-a7a2-0b7c2f6e0d2a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b538a6-f74f-404e-85d4-22ebd13ec433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f670d211-39fc-48b5-9eca-387632bad431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f240a3d-d2ed-46bb-8896-bcafdb680ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1782feab-4dcf-404d-ac29-9e78981e28e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd7b75a-8c41-43ea-9402-b7e31490bb5b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d731848-2a11-4014-a304-82a2a753b4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7b6cb5-e7ae-4054-adc2-bcd387f71e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5b32b2-0cbf-4f32-bc61-5981a350236e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a43cf9-d767-400e-8163-5f8606a5846a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1212bf-7ef3-4d48-b2a4-db4d61fef5fd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ce87c6-d633-4145-a6bd-d34bd078216a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29f7346-db26-48c7-b819-e0e5c8915a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a49d49c-07e6-4d43-97e3-9e0868297f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98825bd-9dcc-41f8-a858-285c6f28e56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a596dc9-190f-4fbc-ad13-55e2a56b1f5d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce04e4ff-23a3-474f-8cd4-c09787bb8f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d933c6ba-9a14-4b0d-a98c-e60ac7c5174f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907f55db-e18a-4c2d-b893-100d569dca96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2ef69f-3b2a-419b-b813-4825a5baa760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28223ee6-c5dc-4c8e-aabf-30bd283f841a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1df58a1-0415-4377-84ea-ee2e9d253bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea82c952-8f9c-43a4-b9d9-d63a88545343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61fe14f-b173-48cd-93be-41d551552a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310f326b-f21e-4510-a1e3-f9302bbef588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969a999a-a374-4a48-b10f-db661f9785db",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce82cd97-b0e9-4d2e-af7d-76b1623c3c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b854e7-f0f0-4a1c-9df5-0596e4ef49f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051d018a-1749-4d0a-aac8-2d898e1b0840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0accd7-4714-45ff-b6d8-fb39077c1a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf21855-4e54-4e00-bc83-7e0c41f7566f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc07cc8-d71b-4123-8dfd-3af3d5321f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b8bcf7-934b-4fab-8aa7-d4a2f50c9aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585b7660-5391-40c0-9d96-96cd12ea5963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2bdaee-85e8-4c1a-b6dc-6389b4508fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0354607f-4b4c-4ea5-aa3f-a31d71b0ba9c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a16ab74-ef5f-472f-8baa-f478aea38728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d78c3f-0fda-41a1-b023-af60db70ac7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd03dac-8e8e-40a8-bc1b-4efad1214808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8a294b-884c-4001-afdf-171921e382b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5441463a-2a11-47e8-88f1-5d6fd4ad30fa",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3149a078-45ee-427b-a746-b3cbcba308bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec70a71-e270-44ad-9c15-7ae99151da20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ef941b-2602-4b04-a61c-6706da60a28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a8a99e-22a7-4bf8-a585-4f8f60980538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52de7fed-f885-4406-aa6d-e704e0780f8f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3648c49-9dcf-4197-bfc4-562c189bb522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedd38b6-0b68-4dc7-98dc-297cf391228f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6a472e-a1f7-4d07-9538-1e06250d906f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd32f865-2677-498a-aa18-9bc27025e0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d650fd-a84d-4534-b24a-01edcb464857",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2e991e-7b1b-4dba-8fa5-8a9dd18229f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c3f066-0f1f-4119-a991-8b98467113d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f3bc55-4c0e-4120-bda3-6f4be432cf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5db51a-a211-4640-8ce7-8fe811113780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea36d64-5e8c-4444-bac5-5a8c5455ac34",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa035c7-145c-49c4-b2c8-c7eecc40149a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e8c999-5935-4004-9604-fb64f20ff6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d7be65-d2f0-4f38-a7f8-3773cea98b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898d397e-8e54-442b-b7f1-e6cf83758034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517a00fe-5f61-476d-88e1-0ceae4b5387b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887ae935-d770-4065-abc0-a5e25384f288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d023dc9-43e5-4797-9be4-d3c2c198989c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be317b0a-986f-4b7d-903e-b1473738101f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0c081b-6b94-42d4-bc61-c57f1b45ae2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21f0b00-05dd-44fb-96cb-ff20b94fef8c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fdda01-07b7-4dff-845c-c00327fce15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4742d020-b0fd-4ae2-a57f-750292fdecae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60127c8a-b864-4822-a306-1672c63b40bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf0a916-6a64-4c5c-8327-4d4406e88423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87861c5a-ed67-4161-b231-03c852d89105",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86804d0d-88f2-4e57-b477-8a0c04a2d2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb4bf8b-64d6-4ce8-a271-e388e139e3bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab730087-f8e5-4869-92e1-c8a674f84512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b360a03e-4a36-4725-b424-1be5909527d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876b433a-022e-4f3f-9d8c-411bf4594b6e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae737de2-53f5-4991-9922-a99fe3262aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfefc02e-add8-4b36-9f6b-89a164243172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab420da-83d6-4d5c-844b-4761dc703fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2277f6-f1c2-40ed-87dd-b134cae0d85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e033c2-de5f-46af-9890-8f86ed74d418",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b540b304-30b9-4b09-bf36-de632b9d9367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f62d1c-b4bd-46e7-acbd-dea8fec4d623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115811ae-194b-4b2b-8abd-1b72d08b9ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673f2961-bf11-4faa-a13c-98eb617d54a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2ffa90-f063-4e97-93c2-c183dd8e1767",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3b9b8d-a673-4cd8-babc-af37a7e258a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72dd40a8-6c2f-4928-9dd4-02241d4a4fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d3ae1c-ab23-4a34-8afb-f198f51f42ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9c2e53-c793-497c-8c49-b8f68ad8453e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ad3ef1-c0a3-400a-843c-9307db2c2e4e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b36c5dd-a725-4711-a5de-192bd00dc98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bff803-96f4-4b6e-9f6b-b48499579d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b4beed-8997-4c38-90e4-14ba2398ba3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8367b8e1-f7e7-4e62-ab37-b3c77ed71823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e75880-835e-4778-8460-1ab634879513",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6b5701-7b20-4435-85ff-2508314a5a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07683c77-f9fc-475a-9014-8938580bb535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9d2e34-abcf-4d2f-8a27-fec597fd11f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c378bb0d-9884-44c4-98b6-4fe05ef98794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e72db97-760e-48b4-afc4-529fdf670576",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3a8d5d-3366-4609-9b0c-a5c8981dea3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277679a1-3375-41fa-9242-76b1de03ecfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116f1c65-5317-41ad-aca1-d77ff65865ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bf3034-d140-4938-8a82-8350cb25c0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5a3e09-8367-446e-bf63-6ec110f45a1a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60406e8-a281-4138-9268-337f5ab6ee60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f878cf82-6220-40c5-818a-1b839f06f72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf6435a-053c-476e-b503-64150569f2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc87bd37-90a8-4e46-bc87-54ba51ed67ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088cdb2c-8175-4ea5-a297-fe79783d0a54",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e431e8-0f36-46fb-8a3b-8b7914e757db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d58f38-03ef-4f59-a5fe-f31f0b7f7ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ff5291-37a6-4284-abcd-19132a0fc20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c4520f-a2ab-4cb9-8e8c-92a59e878ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15c96c1-5226-47ef-9c3b-2e974626af00",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b2d053-f724-4ae5-938a-e2baf578635b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "982f9531-27e3-476b-91d4-56568ce030a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06439cd5-2e9e-4090-8eba-63e6835a20b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871ce213-423c-48b9-b709-76754f77def8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85e453a-85e5-47ac-ab00-7524cbb4de77",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42988685-b7d4-41d9-be57-3054da9a8491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3838142-15e3-431d-8028-dd0f7c44a58d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f797e33d-79c0-401d-b42b-309beae4852b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e2fe2f-f01f-4487-86fc-648f2bad0e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45639e2-fac8-4afa-8cc0-73200b16aa97",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2a838c-3f9d-49d5-99a8-7170f1d1b490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d84c4320-af0a-43fa-8afa-31bb5cb6e8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911061e5-59ae-49c3-b4f2-2f65e8c177bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a088d708-300b-477f-8fb5-8f6976e3001b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490ff872-5f66-49e1-a41b-39689643652c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b0f653-e859-448b-9c39-72bcdc00cc01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcab75d6-248c-49f2-acee-4f00a97e510d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cf58ef-b8ec-4a30-96ee-5b431302b5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64659bae-11d2-4b74-89f3-12e305f56bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fa03c6-9775-440e-a7cc-850b40ba5f6e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a90449-9d1a-4cd5-b4d4-73115182a740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb0866c6-c680-4467-8a29-e16955f1cc25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e7f2b8-4975-448b-8191-c9be0ff9d589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d645b74e-96dd-4e16-870b-1e5d13f74afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f550946-03c4-4131-b149-57d9e31abc46",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0dc510-210f-401d-854a-910f78b1b59c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00181710-d0f8-43b1-a732-1674e73161bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a65eaf0-6583-427d-9c58-0c124b166ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7e7cb9-f44c-4345-81e0-64f54a38412e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09096cd7-2ce1-48ff-80b9-5fb98496cc67",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b0064b-d68e-4aec-8baa-2a8f5be45263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89063728-9cb3-4002-8c5f-3125f104de8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e553f2-4f57-4501-9878-603919e61614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efe6cd8-f7b3-4329-82c0-b85e935aff37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df441fe0-16bd-44a6-b8df-62cfdffc6d90",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24567e88-933b-4113-9a66-78a6a7fb3ce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d30c7f75-0370-4af3-9927-99a7020fa7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c5d40e-4eae-4463-a4d8-71e0af44cd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f71165-6a7a-429f-a5a7-aedce57a2635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d994902f-d117-473f-a8af-dd9d319cc39a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2050e3eb-f256-4cab-8e03-3fd4f77e6ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85a5a53-d367-468d-8b68-f1900a98d1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad1a832-8f2d-48c9-a738-da5cd47a6f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3335e6ce-6a41-46a9-bb30-74ff843ad8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7ac6ab-9dc6-44ab-a103-0ffa30c51898",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9087a2a9-78f1-4d51-bee4-b5a2d5d6ce9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f8b797e-e81b-49cc-aef6-e7a3c2aa950e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6dd320-653a-404e-91ad-0da9f50e687c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b047bae-19a5-494a-a412-adcd3c721429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d5b272-8cb7-4f35-a8e1-b602d96e77f7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc1a4ff-f2ce-4c4e-83fc-6dedaf57fe01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db884b7c-cfbd-4df1-96f4-df5b713a3f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2909b13f-5fdd-4f4f-8844-ab7d1b7f54c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3976476-1b29-43f2-ab37-728e893e84cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08626889-66ad-4787-8d02-da676ca228e0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be91d31-52df-4b9b-ac26-b9defcd792eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e790d8-69ba-433a-b87e-0652071cd55b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1c8aa1-d11c-4c89-b39c-5ef134a8275e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e55cf52-a0d9-4935-a4e2-d90a48771872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe935c7-183b-43f5-949c-12256b29ccc7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84579e4-c427-4212-b5cd-b6bb7d4f1264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8680497b-50e7-4334-904e-0bb76969d5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffced0e-c154-48c1-b69e-a33ef108de7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55d48cf-e07f-44a4-8f76-5bce47420ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7182494-1238-4877-9c06-12e52d4fc8d2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e2c09d-e6e7-4df9-8915-1cbdf7222527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53c6e3d7-f71b-4c80-8028-a3e36d353ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c798218d-c4a0-443f-9970-8e6b9cfa8759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fb63ab-02cc-4537-9199-80be3d66b717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d339c4-0780-40b0-b0af-c04df23ec1a7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecdb378-6076-4b5a-abf4-7ddddd51f924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07697645-1107-45c5-aa6b-6c9022f741ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872f4411-1b9d-44dc-9a7c-e20d03ce48b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac22dffe-c41f-4043-8484-376c16f74851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2f132d-699a-4abb-98df-f47b227f457d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755859cd-0b9e-4895-9c27-3daaabd20993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344a1c43-d239-4e44-8f56-f8eb26de6217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381afe7d-d5bf-4bf9-a9ea-eb81c2d8258e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7d9d38-4c44-44c9-ac42-0e38367ba677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13859a57-1910-4c30-96fc-ae2cb502eed5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5744c9f4-fbca-46c3-ba8b-5e7a7ac6906f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "048e550f-6216-40f9-b7f8-6b5db93e6806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d47a2d-44bf-488e-8a88-51f155d835e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b599d2a4-6427-47f4-aa9a-20ad8de09b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924b060e-c73e-407f-b5d2-4123b07b93d6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a384ac6-4b5c-4e56-ae9a-8e29a240d75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1677f9ad-34de-4f06-afdc-9fc6a989587b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6bd157-c7f1-4d9d-8d25-58b0aa289960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e0e8db-ad0b-4860-98f5-2cf22af68e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5cf162-cf10-4afc-aa53-787316de4e6b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208a91cb-ddac-4fd0-8c03-7d9cbac3dd9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610771d4-4a4e-4bc4-96f8-af6736121ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e297ebd8-1be4-45e4-928e-055ccef5d4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027614a8-bb97-4cc8-9ba8-67c0c3ad3ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957f0a18-952a-4d7c-92a3-1ab0ce6c7beb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff60099f-6b83-47da-8c57-624686f79073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383f536e-82ad-4d07-801b-b0236b4d3eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56d6732-f29a-46af-91b4-9c1d66284694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83340b7-9260-4bc1-bea9-e6332923e35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e188bdd0-bfd3-4b40-9d4c-55eb075f5f9e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70982b67-8899-43b0-a263-0bc89de6ffaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32c12f56-c996-4faa-9403-35c34239b63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74594bbe-140a-45cf-b3d5-d8fe679b57aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69f58bb-5846-4e2e-baf3-8083afc08ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abab2769-fd44-42a8-a7de-d96154216bd9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755e9635-9271-4ed6-a79f-6ffbf0904c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59c3311-8be4-479c-9b7a-abfad8fd875b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c53b550-1036-42a1-bf41-dd95ee0ce674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ad838a-2b14-427b-8678-fa92d5717766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10099b12-c83a-44c9-afb1-cecf46a5e5e8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f719ea80-f378-495a-971a-e5d194a4c636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b54de9-30c9-46a8-863d-aca48f1da559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077a1181-5510-4b48-b84d-d847764869be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fb3893-1bd1-462e-845e-7ca9b04347a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57bc8dc-2174-447f-96d1-f5d8ca58932b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c741208f-0f90-4346-8aad-dbacf287c7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e677bf8a-28e2-47e1-b1cb-e3250f1e0a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59897dad-8025-4201-a0b1-5c1a813458c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e3e032-cf8a-4aa2-a479-c80aefec3cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4b4408-475b-472a-8264-b4f9edd61694",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79af8a5-2dad-45fe-b1a2-05d973b6fbec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185d7289-994f-4611-8f71-f6a072dad56c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6b2fc9-04b7-4217-a058-019e874d6bc5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f13a4d-9cae-44a3-a3b6-126f264f7b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b141b111-70bd-416e-8717-3d116707b23c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e735d4fd-1f89-496b-8174-6c01dfe5fea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "169767ec-f599-4a75-bade-2bc463dd867c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b77f869-4985-4319-bcde-12d4ef3a814f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5128c72-4639-427f-8303-d142865e4ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311310bb-31de-4f27-ba92-4674d558cd4c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49459bdc-5ebe-472a-aa89-b41572483101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940063ba-24dc-40fe-bd40-54c57392990c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928f72be-307f-42c7-8920-fc402ed61043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a551e3a-68fc-4f23-86f9-ce2e0047130e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f68be62-3b9c-49da-9885-db17282357c2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d5ee52-73dc-4ac5-bf2b-722dedc3ff06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b64c715e-f308-45f0-b6da-506b507e3c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01678b48-3db7-459d-aa33-b55a5d7b480e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d483e1-9789-4976-9af8-6d535931f250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f86f08-822b-479b-a2fe-4e056aa10ff6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807f7998-4de1-4525-b09c-f5ac760183c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13a8a5b0-d398-4945-9b21-e91758f368e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2243666b-c58a-4cfb-b943-0e20f2710827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9487c6-20a2-4191-8166-a55aca90ac20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67250a91-fb86-42e8-9c4a-5444f2b9e586",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77321204-abf8-4dc0-9fee-79a6104fe78c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2917a10-4533-474d-820b-b64c38f218f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ca979d-f2fa-490b-9a14-6400d50040b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab0bb21-28f6-44e5-90d9-c4f2e41423e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caea9a9-3bd4-418f-a96c-dd50d960cafd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5879af-2458-48a0-9bdf-b6d92cc09d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d2be43-30ef-4376-94f9-352723b41192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977d9c93-b1f9-4dd0-891b-2596ba12888c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4bdaaf-40e7-423a-9dfa-ddc42294f625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c366bdb3-f68c-4364-bbf5-9ab4ad2d0ebe",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11b144b-cd12-4a3a-9905-1a6ded9a716b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ed76a5-66af-45f8-8910-20d2a134379e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fb0ac7-911c-4a17-a402-d71743ada2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2df572-13ee-4477-a2e2-be85638db882"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5751e21b-7c5c-4a94-b1ad-024852242111",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1d6212d-165f-4293-9c99-caaf2692de1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4b695c7-6015-4b4c-aaae-c426f58a42df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a3cc8a5-497f-4b07-9d54-c8cce6c8f83b"
                    }
                  }
                ]
              },
              {
                "id": "2ebb0f9d-54c5-428d-80eb-6eef7539e9e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22efd8a4-70e9-47a9-8d17-9687de8bc00c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0de4c44-2b57-4dd0-ac9b-a2d4e0b669ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a9d55fce-6679-4d55-8cd5-d709d1ba8173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cd00df-7353-48f3-9d82-be92c2c50bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a993622-45c5-4bc5-b995-ddfedd82f9bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1818365d-85ec-4c5b-8ea2-beb3bd4e6d10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa877201-7893-4520-8b29-4c8e1bca8935"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dab0252c-34f9-455b-94e7-01690a9ccfd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "703ee1e9-3f83-4500-a295-76826e8be97d"
                    }
                  }
                ]
              },
              {
                "id": "5e002e1c-6742-4df0-a608-780df7ebc7b0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "392268ff-3e32-4e85-b98c-c2311db0933e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6627bd-5dcc-4409-9deb-f35a705e0389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b2a3bd66-201b-4b82-b818-39df0cbe1e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3df25f6-5cb4-4c3d-ba50-30a04c7a4d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7f1417-491b-4a76-9e55-d4050e134196"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c1f74367-c6de-4f98-bb25-00d741ced1b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1cf3cc03-6410-4071-82a8-8f62d986453d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca091035-f868-4e09-adc0-3bf6f23ceb60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d2fa747-ef59-4820-8e65-9ee6eaaa28b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f14ce689-44c6-45d4-823d-43bcba533d99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54fd8abc-c77a-4495-bbf6-3d1c8002767c"
                    }
                  }
                ]
              },
              {
                "id": "eedfb6f4-8c98-4f1f-9179-5814f4a09d3c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac2be100-6d9a-480a-b7df-030cbf12c618",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "455db5d0-e81f-4335-85e3-6dd177efd003"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2468d2f2-f0e8-4e52-a83c-c139fcbc4263",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "573f948a-5f61-4951-a950-21db26646862"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afdd4c9b-fbe0-4c91-9b18-9fa64943c365",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "31575c62-a54d-4ca2-b779-934ebdb93832"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b293cd8-a6e9-4d77-867e-5c34f8dfef1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b9a2213-9192-43b9-ac6a-38b68c9378e0"
            }
          }
        ]
      },
      {
        "id": "d7c70aab-60d4-4df9-80bc-1aadc9eb0e0d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d0aa347e-6c0d-4519-8d8b-20467e7c41eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c8c4309-ea58-428c-93b3-0b13280bc251",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b94d64a8-cfe4-40bc-bf95-9e6974e09ada",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c93bd0-21e9-498c-b8c0-98f3ca232fc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3c51c2ae-c0c6-499b-9e35-1e7225174c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0864ac6e-7aec-441c-86d5-8dec216320b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "faf5a6af-3315-4980-a07c-b570e593bbea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad7bb30d-5015-4990-818c-a9fff1ec2218",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db2b9b0b-c9f5-4ed9-ad84-27df21d7a62c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2287eb5-d580-4f2f-87c5-dd8d17df45af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "962e9d84-d009-441b-8644-5ff711a55501"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31141dfd-4819-4eca-9fc0-e4a9a149512a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "40eea8d5-1cb2-415d-b23b-608a1b7c7eec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cf62a83-2668-4329-ada7-5e24f9360bba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "242f8cb4-6f9f-477c-a34f-6ef1a545001c"
            }
          }
        ]
      },
      {
        "id": "837c7577-6caf-4216-9e61-e9238403bbcd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c3db34bc-2ddf-4aa3-8967-f952dfddf2da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29d53d77-c696-4b7e-8fe5-753e379e7ad3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c22885c3-eba8-4527-8978-96adbb5b7003",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28be3837-32eb-430f-becb-4544ed834364",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c6dd49d-cf56-4bb6-b7cf-919f1d35bdb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c850ab-eca0-472d-94b3-8785724ec395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7111611-06a8-483a-b7bd-2ff6551cfc83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "236d50b7-394a-4451-a8c5-dcd0d7a8ff74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaadcc9e-a07d-4c59-a36b-ee7900050544"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "325ce206-f3c6-4355-a2aa-72c9e1b5db57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4992ff2a-a5fd-45b4-a6ed-c08a6466a868"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a5a2352-e222-4ce0-b221-a877e725b9fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ff58b07-ebfb-4b2b-a864-7261639ac861"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92fe4dcb-286d-48f2-8867-f22cf7deb714",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09a67bb5-c77d-4b2d-8372-a2130d4cfa6a"
            }
          }
        ]
      },
      {
        "id": "1ce8ae64-86cd-4c35-a4c9-388c794525ab",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0231e796-eef2-4661-97bc-b4b82542f8d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcc9e5af-1b11-4bd8-964f-d2b1b25fdaf7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80792add-7303-4040-b4ef-c0fb12c1e9cb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf8dea0-c6a7-4330-8071-3745a6ab6522",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d01cefc7-42e9-4189-ba47-7ab8de51d264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a4f11b-50ef-4dbf-a80e-9f7f83ba8ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d135342b-f30f-4fb4-8c81-d8704e9421a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "169cdf6d-0d51-468a-b6f9-929f2d08c9e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e64cd1fd-8914-4716-860c-b52c964d37bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fee2f227-d23e-4941-8390-0fc2210ebd30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea04182b-3a74-46c0-807c-511aa5eaf4be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c15f5b37-345c-40ca-8bfd-519b60a78a52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "18007556-220d-43df-93c2-4047bfe82903"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca0ecae0-6aae-42d0-a9c4-94270ea8d40a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01720303-3025-4c45-bf7f-4ae4a2ded64c"
            }
          }
        ]
      },
      {
        "id": "6fce60d4-79a0-43e1-acdd-1e2f292aa5ce",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "864be33f-370b-4158-9f98-f38f639320c9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e7395a8-3ac4-4651-aea8-5b96d3c3fec9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8799627b-937f-423f-bec5-5b49f37c0cdd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b995b68-a526-4ce8-bee5-e1139d9d4d87",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9918a5f-1bd7-494d-a73f-a62e4d7084f4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 292.71478873239437,
      "responseMin": 10,
      "responseMax": 6104,
      "responseSd": 742.147174903949,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692145880153,
      "completed": 1692145975225
    },
    "executions": [
      {
        "id": "1497ce83-07d1-4fec-990e-44ae1ca5ee13",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "43de619e-dc4e-404a-8f68-52e88926b485",
          "httpRequestId": "dbdac51f-7d95-4af5-b00f-79d2dd7f30c5"
        },
        "item": {
          "id": "1497ce83-07d1-4fec-990e-44ae1ca5ee13",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "82634e4c-d630-474c-a323-31cb98c8a0b5",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "1e74c302-7046-46de-a8ce-39be40519c04",
        "cursor": {
          "ref": "d78467c9-c860-44e2-8552-bfedf59c9ac1",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1ffef7b8-1992-4690-afb1-da1303e6dcd2"
        },
        "item": {
          "id": "1e74c302-7046-46de-a8ce-39be40519c04",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1d4b1cf7-6f44-40cc-abf9-3003b0f8c415",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "64c26ea8-d052-4e6e-99dd-9d3f393604a4",
        "cursor": {
          "ref": "f84de7f5-92a1-49e1-a8f0-59462bab3f81",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ef978671-05e9-4b1c-b1c9-161292e9bdae"
        },
        "item": {
          "id": "64c26ea8-d052-4e6e-99dd-9d3f393604a4",
          "name": "did_json"
        },
        "response": {
          "id": "9caeac0c-a0e8-4d72-88c3-589da51b4611",
          "status": "OK",
          "code": 200,
          "responseTime": 1308,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d56ed69-347a-4859-8f68-c141d7d0b108",
        "cursor": {
          "ref": "9d5bcd8e-c618-47af-9bf1-6ee357686c67",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ca66c62c-2630-4e69-ae4d-fa4c545b3188"
        },
        "item": {
          "id": "6d56ed69-347a-4859-8f68-c141d7d0b108",
          "name": "did:invalid"
        },
        "response": {
          "id": "f89b4b69-e2a1-4404-b6e8-729ad78e515b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d56ed69-347a-4859-8f68-c141d7d0b108",
        "cursor": {
          "ref": "9d5bcd8e-c618-47af-9bf1-6ee357686c67",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ca66c62c-2630-4e69-ae4d-fa4c545b3188"
        },
        "item": {
          "id": "6d56ed69-347a-4859-8f68-c141d7d0b108",
          "name": "did:invalid"
        },
        "response": {
          "id": "f89b4b69-e2a1-4404-b6e8-729ad78e515b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17834f3-8371-4f3a-8bf5-c70fc9a69167",
        "cursor": {
          "ref": "834f048e-149e-4435-b8a7-32c1dcc9501c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c810178a-40f2-4006-b0b9-60f6eafb5d16"
        },
        "item": {
          "id": "f17834f3-8371-4f3a-8bf5-c70fc9a69167",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "00d28ae5-6c4a-41e9-b28e-9034bbd878d1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 397,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1afe10-c004-45e6-bd9d-d44eb6f0ac8a",
        "cursor": {
          "ref": "073789d3-f6da-42b7-bcd8-99e5d11213a8",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7948fd89-e5df-44ee-acfb-3af04ee81177"
        },
        "item": {
          "id": "1e1afe10-c004-45e6-bd9d-d44eb6f0ac8a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "13af4835-55ba-41d7-b5af-9e563bf6d58a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 267,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d504443-036b-4edd-a11b-8d1e4e4cc1af",
        "cursor": {
          "ref": "771de2b6-55f0-425a-bff9-76ec5f733cdf",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c3f622c-4dff-4f58-a6f9-0c6d288e4eb7"
        },
        "item": {
          "id": "5d504443-036b-4edd-a11b-8d1e4e4cc1af",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "087d2945-2109-4023-bcfd-3cdd3b490672",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd90fe5e-deac-43d7-96a1-6f13f3948aad",
        "cursor": {
          "ref": "a2ccd2eb-53c1-4818-8cef-57854869454e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d04e819f-e581-4988-a795-c0c26a377107"
        },
        "item": {
          "id": "dd90fe5e-deac-43d7-96a1-6f13f3948aad",
          "name": "identifiers"
        },
        "response": {
          "id": "e9d2e2f8-dfdd-4b64-9232-637a0e443e13",
          "status": "OK",
          "code": 200,
          "responseTime": 954,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eda011-ca24-457e-9e6a-c4c37fe565db",
        "cursor": {
          "ref": "940c4db4-f219-4816-99be-7c60a6f03a70",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8869d418-4943-46ef-933d-b2769811cb08"
        },
        "item": {
          "id": "a2eda011-ca24-457e-9e6a-c4c37fe565db",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0d32a0be-2e00-44ca-8d73-b86ac8958a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0903e7da-bac7-4443-af37-c648aba871a1",
        "cursor": {
          "ref": "2e7f906c-6ed8-4da1-a43e-390ac9275b07",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "421a74c3-1477-4d58-93d9-64c5436ad886"
        },
        "item": {
          "id": "0903e7da-bac7-4443-af37-c648aba871a1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2b97df18-3829-42f7-88d1-9634ee4de93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6bcc7b-c312-4a67-b65f-19635c3a4008",
        "cursor": {
          "ref": "bbbd4c5a-63d1-42e9-8a66-47e221e151b2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "237bdbe9-eefa-4b82-96e2-6e198bc02000"
        },
        "item": {
          "id": "6b6bcc7b-c312-4a67-b65f-19635c3a4008",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3d7ac844-c6ce-4f4b-98f5-c2e98933aa79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccf7488-5c63-44c7-a4d7-f7362b209db8",
        "cursor": {
          "ref": "f1511a19-75da-4989-a7f1-1ce7f3732e4f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8a07e132-2455-4b18-ad32-764a66297326"
        },
        "item": {
          "id": "bccf7488-5c63-44c7-a4d7-f7362b209db8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "500c192c-1b24-4e9a-ae23-03cc1fed37ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f3a459-cff2-4340-aae1-519ac7c23c7b",
        "cursor": {
          "ref": "f24b53ec-710c-48d0-aea6-1b095b8e8af8",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "08f260b9-bd61-4f09-a31f-2939dbda2e3b"
        },
        "item": {
          "id": "88f3a459-cff2-4340-aae1-519ac7c23c7b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fc784212-d5ad-40bc-9d7c-4284c1437013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8123ad-cd80-4c6b-a869-f563783bdb83",
        "cursor": {
          "ref": "46f5f96f-5039-4d92-a681-8655be4c6e33",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "939e5b36-f3e6-4929-b641-a042f2e08c7a"
        },
        "item": {
          "id": "cf8123ad-cd80-4c6b-a869-f563783bdb83",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "45214c0d-98b1-4b59-9768-71aec6065386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9e64b9-a86d-4ebd-9b0b-ba0794397b24",
        "cursor": {
          "ref": "5c81a183-7cf5-475b-bc37-4cec319a8f88",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "90dc75c7-e556-4e33-8b7f-b64e964cb1f0"
        },
        "item": {
          "id": "ed9e64b9-a86d-4ebd-9b0b-ba0794397b24",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b2d6fbf4-e771-413c-a79d-d369a3860377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61556b3b-6442-47cf-bfa2-6ca7ec846a69",
        "cursor": {
          "ref": "5ae3cbb4-a807-465e-a7f8-5b46ca35f3af",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ae80d74c-da42-448b-94b7-85ad83d4b6ee"
        },
        "item": {
          "id": "61556b3b-6442-47cf-bfa2-6ca7ec846a69",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d214e4c9-2aed-4550-b480-84abe77c0815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11c11d5-4d9e-473a-9b97-a0ad6ff344a7",
        "cursor": {
          "ref": "f4572a5e-9e5f-4112-b6c1-46b8c5d1cce5",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d1f812c0-ef6c-4de5-a269-b2d042abc478"
        },
        "item": {
          "id": "e11c11d5-4d9e-473a-9b97-a0ad6ff344a7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bdd0cb42-9b02-4858-9638-4c8fa51f1f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0848d830-1a3f-498e-a99e-ea02793a421c",
        "cursor": {
          "ref": "8b22a2b2-dfb5-4573-8ebd-763be42b78d4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fd85933e-815b-4797-863b-da5de9e13e04"
        },
        "item": {
          "id": "0848d830-1a3f-498e-a99e-ea02793a421c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6156bbfc-7c9e-451e-9940-372049f24fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8505b9-be1c-42f2-9efa-c12315e2c345",
        "cursor": {
          "ref": "ac979802-c806-470a-b0da-dd97352e4969",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a8294fd8-8ece-4346-adfc-cf9ad0772a8e"
        },
        "item": {
          "id": "0c8505b9-be1c-42f2-9efa-c12315e2c345",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "76370db0-e300-4296-9337-7d7770212562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8283962d-a86a-44e1-bbbd-a7fbe331b586",
        "cursor": {
          "ref": "572cd5bc-893b-46da-989a-8ce198fb5b6c",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6267dd48-39ad-4997-bb72-03808babec1a"
        },
        "item": {
          "id": "8283962d-a86a-44e1-bbbd-a7fbe331b586",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "31687899-b536-42ca-804c-65f06d803d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec4e17e-331a-427d-8b71-b4018be650f2",
        "cursor": {
          "ref": "b6e58d5a-e8ba-4f23-b129-6ac4807a7449",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e7522da1-aabd-4584-838d-30b62931cb85"
        },
        "item": {
          "id": "3ec4e17e-331a-427d-8b71-b4018be650f2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c040ddd2-991c-489d-9048-bab686c1ef93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ea16bd-e6bc-4820-a1d1-df4638b62b3c",
        "cursor": {
          "ref": "a6984a0b-6356-46a9-b944-78160e68ca55",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5cb8317f-75d5-43c5-a3af-128d575d8b07"
        },
        "item": {
          "id": "b9ea16bd-e6bc-4820-a1d1-df4638b62b3c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7fb26b5a-cb2c-44b6-910e-5b87fec51421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb1a9ae-67f8-45d0-8c2f-ac5da8a81ff5",
        "cursor": {
          "ref": "445d6f7a-764b-4696-ab9d-1999a00d0590",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8c368b24-e0da-4a52-a7b2-4dbbf4de494a"
        },
        "item": {
          "id": "9cb1a9ae-67f8-45d0-8c2f-ac5da8a81ff5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a742c8ae-7f46-4dea-a594-231a31b0017f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb592bd-b5db-4d1f-986c-267417c753ee",
        "cursor": {
          "ref": "6180a1ce-18c1-4abc-b380-a7e6b0b096b4",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e80d2897-7459-4205-9f18-bcbf837a2649"
        },
        "item": {
          "id": "5eb592bd-b5db-4d1f-986c-267417c753ee",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d4bc2fed-b3b9-4caa-bad7-743baaa66a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a9a8be-7bba-4563-b1ed-8c6aac5fd7d9",
        "cursor": {
          "ref": "53b3c701-620b-4bb5-b54b-ac718bf90907",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "eba0d7d5-422e-4fa3-b77d-3b26feb35ebe"
        },
        "item": {
          "id": "85a9a8be-7bba-4563-b1ed-8c6aac5fd7d9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "46539933-b5a4-42ea-ba83-81cb181016f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2b0b91-6ae4-4776-8855-70ea41c988c8",
        "cursor": {
          "ref": "fddfb65b-5f87-4864-8c41-1d50f2246722",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7e2dcbc7-d625-454c-9858-d3315a307ae9"
        },
        "item": {
          "id": "cb2b0b91-6ae4-4776-8855-70ea41c988c8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8ec77ded-8640-4029-90c4-27295cfa5b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca69c73-f72d-46f1-8cf1-e202a3884af6",
        "cursor": {
          "ref": "aff7b7b6-6141-413d-8140-3847be5b363a",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3e863bbc-3a91-4052-bfdf-780e7b9ced76"
        },
        "item": {
          "id": "cca69c73-f72d-46f1-8cf1-e202a3884af6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "66b2753c-eae1-4b50-8588-b90485afeb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c0b014-f916-4b9c-a4a4-41399a39528f",
        "cursor": {
          "ref": "cfaeff87-427f-402a-a09a-08bce7fc4886",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cd42e103-ae05-4b3f-bbb9-41ff2b5b0edd"
        },
        "item": {
          "id": "31c0b014-f916-4b9c-a4a4-41399a39528f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a9f1bcbd-1940-4c71-88d7-d6875cbb1de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64cde8a-c67e-47e5-925a-468bc8a8d679",
        "cursor": {
          "ref": "21220133-29e2-471b-a4e2-f3cf2b7d9f7f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1d660833-b432-4a4d-9be4-1406eb9f1e7c"
        },
        "item": {
          "id": "b64cde8a-c67e-47e5-925a-468bc8a8d679",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e5045461-70b7-44f9-91b5-df6154363d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f967a783-2cab-47c3-b170-8d745a90a8f9",
        "cursor": {
          "ref": "769d9c81-9114-4172-b9e2-a4244c0f0814",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "045cfb57-90a6-4765-8058-4aff98f66692"
        },
        "item": {
          "id": "f967a783-2cab-47c3-b170-8d745a90a8f9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f250ba4e-e709-4623-aa0a-a606ed12ac00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6832eb5-78bf-44b0-8a7e-a0a7fe106d6b",
        "cursor": {
          "ref": "64763905-9dee-4cbb-911a-6150a43d7597",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6a93a6c7-a4a5-4fd1-846e-64ffa9b8c6b0"
        },
        "item": {
          "id": "f6832eb5-78bf-44b0-8a7e-a0a7fe106d6b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "848403f8-1c95-4ba4-bf57-b21f72d71124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e478cc-80ec-4326-93c5-2f39d5ee9983",
        "cursor": {
          "ref": "c2db4a77-6c19-4844-84d4-eb210f091a74",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "76d641e6-8562-4b3f-9e3b-a2f041a8a8f0"
        },
        "item": {
          "id": "83e478cc-80ec-4326-93c5-2f39d5ee9983",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "009f404f-40e7-4494-a9f9-35951d2daf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65c3d26-40a6-493e-975e-76f32ff1632b",
        "cursor": {
          "ref": "5062ab5c-5d70-452f-87c8-bece74548b57",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8c22ee9e-5ff4-46db-8219-12ff3916505b"
        },
        "item": {
          "id": "a65c3d26-40a6-493e-975e-76f32ff1632b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "85a0e240-936a-49db-b29f-69ea870e4c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375f3183-791a-45a7-b09a-54a6772289a0",
        "cursor": {
          "ref": "40d7f707-5853-4532-9f4f-74aecdfb9d7f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1c1bf204-2df3-4c9e-86d5-7a70a3ca3484"
        },
        "item": {
          "id": "375f3183-791a-45a7-b09a-54a6772289a0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "72099bf4-0e8b-41d8-8db2-2e29f6378ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59be1b88-69ba-479a-bda2-efa7568262f3",
        "cursor": {
          "ref": "442ff352-4415-4423-8206-6f3ac3e3fd25",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "149b616b-24dc-483e-a3d2-5a3137043045"
        },
        "item": {
          "id": "59be1b88-69ba-479a-bda2-efa7568262f3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5dd280d2-e1d2-4c48-a8e0-dc4c78cd368f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd60b59-2f3d-49d9-a14b-f3a89dd6d506",
        "cursor": {
          "ref": "4b18b8a3-0015-4d83-becc-f642fec555ed",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f2d9b168-ac30-450d-bb79-35c596701752"
        },
        "item": {
          "id": "bbd60b59-2f3d-49d9-a14b-f3a89dd6d506",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "981f1a0c-cf65-4918-9c49-fd19d637e16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6168e80-7cd8-4154-9925-1b9c0255f37e",
        "cursor": {
          "ref": "f1d0c81a-6c44-4a1c-9c4e-0cff10be49d0",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "21fb0ad3-e223-42b2-91a7-d73a1e09a405"
        },
        "item": {
          "id": "a6168e80-7cd8-4154-9925-1b9c0255f37e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d4b65cd0-9f6c-492b-b734-1869bcf7deb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f14899-53b2-482c-a366-ac7812462201",
        "cursor": {
          "ref": "7c71c33f-6b8c-495a-942a-033658670067",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "69935cb0-3879-4918-9493-4a328401ee15"
        },
        "item": {
          "id": "d8f14899-53b2-482c-a366-ac7812462201",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "223d8f16-97a3-4e52-9b66-b31c6b0f75f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08f81db-038c-4872-8740-7cc151825e0a",
        "cursor": {
          "ref": "24734e8e-e059-4032-b8dc-65504fd606d2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5137ba5a-4be7-44a0-98ce-98bf5745b57b"
        },
        "item": {
          "id": "a08f81db-038c-4872-8740-7cc151825e0a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4db13395-f6a8-474c-9634-538daa5c13c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d0818e-10ab-4aa4-9736-77844a9c0c5c",
        "cursor": {
          "ref": "931a4fe2-ee74-44a1-9a64-4cd0f416045d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "913064bc-881c-460d-b8eb-2917129a097c"
        },
        "item": {
          "id": "d6d0818e-10ab-4aa4-9736-77844a9c0c5c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cb0e5be8-23c8-4acd-ab13-20c79a567eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bab05a-dd09-45db-805c-88eee652b882",
        "cursor": {
          "ref": "9a0851b1-e600-41ce-a767-12d719bc317c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cd744549-f067-4cf8-99eb-30c8d99b7d0f"
        },
        "item": {
          "id": "46bab05a-dd09-45db-805c-88eee652b882",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2a692371-888b-4d49-9fce-784a6181edab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a70e50-7851-41e7-a727-6a1aace02778",
        "cursor": {
          "ref": "8648649d-20cf-46a4-9d7a-759d19b6d518",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "22cc2fb8-3fea-400c-9565-345c9193ba63"
        },
        "item": {
          "id": "e2a70e50-7851-41e7-a727-6a1aace02778",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8320e902-ea96-4815-9d87-9a1cc6ee6614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae4cc8b-fd76-4d52-b09f-6fed75f3c001",
        "cursor": {
          "ref": "79a24a51-0c3e-4c04-974e-81b0481f6db1",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b3a7a828-cb26-4d07-bfb3-c826505ac1f4"
        },
        "item": {
          "id": "3ae4cc8b-fd76-4d52-b09f-6fed75f3c001",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "81d13da1-f82b-451f-8e82-3fc11bd4901f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ba1287-fa97-4c0f-aedc-34bebc661e90",
        "cursor": {
          "ref": "05f536cd-3949-460f-8f3a-cb1dc4764fbf",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "45c305f5-b00f-4804-85a4-c322d119c6f7"
        },
        "item": {
          "id": "04ba1287-fa97-4c0f-aedc-34bebc661e90",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ca3c12e7-f39c-4884-ba52-e71d31f9511f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 594,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5abc5fa-7fe7-4c57-a029-ca1414fd876d",
        "cursor": {
          "ref": "1aa73642-4cee-4a33-b876-e429d8eaca31",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a52817d0-8efd-4c44-9c5c-4be99413e1d4"
        },
        "item": {
          "id": "e5abc5fa-7fe7-4c57-a029-ca1414fd876d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d78f0889-8831-45be-8fd0-fcb612408dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46722a79-2349-402f-ad78-7206bc8bab58",
        "cursor": {
          "ref": "eefe5702-97a3-4c64-9661-b0df819fbaec",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e949225d-f5d0-41e8-9f9d-a7ef8930c9c7"
        },
        "item": {
          "id": "46722a79-2349-402f-ad78-7206bc8bab58",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0d3bd06a-099c-42b9-843f-78a0faa166b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39546fde-5d2f-46d5-9f56-201198f70256",
        "cursor": {
          "ref": "7f3daccf-1eb7-4494-bd9e-9d615a3142e0",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "360bba4d-924c-474b-8692-f5eea6982dfd"
        },
        "item": {
          "id": "39546fde-5d2f-46d5-9f56-201198f70256",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9f45f53e-91c6-4865-91ee-e715dcb6c671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa55afe-b1e0-46ed-b9be-f88ac6de6567",
        "cursor": {
          "ref": "42d994c2-5c8f-4850-9008-fa3030274e37",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "84f3a861-a065-460a-9a10-613ac8ab3864"
        },
        "item": {
          "id": "aaa55afe-b1e0-46ed-b9be-f88ac6de6567",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e4977509-e2bd-4851-ad0c-fa090e5b20b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9845fdad-8f98-4d7c-8aff-d82fdcd8df05",
        "cursor": {
          "ref": "71a41d52-3223-4644-8a53-2ba328fa4bb7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "04e070c4-a72b-4443-aa72-5758d3f9e26e"
        },
        "item": {
          "id": "9845fdad-8f98-4d7c-8aff-d82fdcd8df05",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "04329350-7398-45b9-8663-66a9dfca4e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8a5721-3544-4057-a68a-6bc964781133",
        "cursor": {
          "ref": "b5bcba4a-623a-456f-9ba4-5e500edee1e6",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "50669974-bf1a-4a0e-8cb1-18e196f51f2a"
        },
        "item": {
          "id": "7e8a5721-3544-4057-a68a-6bc964781133",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "80733920-740d-4bd6-9cb0-70b906e73f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f44224-5f83-41b7-a108-529d8696e337",
        "cursor": {
          "ref": "ec990b4d-9a95-4581-8ce9-2fc60d492a8b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "281b4cec-5320-4f25-a1af-b35b81434497"
        },
        "item": {
          "id": "b8f44224-5f83-41b7-a108-529d8696e337",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6598ba9b-5510-4225-91b8-2f9a08acb9f9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 584,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b3663a-65f7-4c61-bb8d-7da9ebf807a0",
        "cursor": {
          "ref": "55669515-b39c-44a8-91d8-d6ece1a56c8e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "610df541-bea6-4bf7-b260-5bca61c2523a"
        },
        "item": {
          "id": "55b3663a-65f7-4c61-bb8d-7da9ebf807a0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "22072f1a-9ad0-436a-8a64-ab66b57f2e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e39292-2836-4400-9620-c64bcf64bac2",
        "cursor": {
          "ref": "33e37cdf-a294-4571-b69a-90cbc330f05e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "609158f8-ac2d-48e3-b920-e3926ca0ceff"
        },
        "item": {
          "id": "83e39292-2836-4400-9620-c64bcf64bac2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "466a8333-2013-4c7f-add3-2305823ddacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eb3b47-08f2-40e9-a689-62dbea351ad0",
        "cursor": {
          "ref": "169d2915-292b-4033-8025-f026f94dcef9",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7682f566-716e-4ae2-afda-f2f0b28f2010"
        },
        "item": {
          "id": "61eb3b47-08f2-40e9-a689-62dbea351ad0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "638f13dc-91de-4a98-bc2b-320e86b60727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d905a0c0-8158-49c0-818a-1f168e117345",
        "cursor": {
          "ref": "4ca7704c-a311-4436-805e-ebc33740601b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "07d94562-2a3b-4ceb-b4ac-c103b6422750"
        },
        "item": {
          "id": "d905a0c0-8158-49c0-818a-1f168e117345",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2a4e6a77-06af-446d-b779-125ffa9ea37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42517e0-fedc-4661-89b0-56f00564d328",
        "cursor": {
          "ref": "3d32ed2f-781f-4c7a-9382-6e934ddcb02b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7dfac05d-0e62-4032-99f6-5a1396320e93"
        },
        "item": {
          "id": "f42517e0-fedc-4661-89b0-56f00564d328",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "99bdbf16-5992-4bd7-a1be-36d6ee78c2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64f2c67-c08b-4d57-904a-a0d37dcfe6f4",
        "cursor": {
          "ref": "db1e731f-9415-42c7-af71-0fd3e4ca1855",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "82d9295e-3c3e-4a5f-9e60-d310ef0c53f3"
        },
        "item": {
          "id": "c64f2c67-c08b-4d57-904a-a0d37dcfe6f4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "701222b6-d587-4841-a21a-b12ba5cc4b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fd65d8-44fa-4892-9bf1-0c0abcaa2ea6",
        "cursor": {
          "ref": "0f8d2146-0999-4f85-9f94-d67ee8e8ebad",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f5c4b721-33f2-4247-9d52-1a5268abb823"
        },
        "item": {
          "id": "31fd65d8-44fa-4892-9bf1-0c0abcaa2ea6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dfed3cb7-fc7d-4b8a-ab9c-158e00ce4b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d45c87-677c-469b-97ad-02026122c4cb",
        "cursor": {
          "ref": "f6de48d1-5320-4066-8282-cedf969ca681",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ba62e604-88d0-4a44-8caf-7c56d583dc2c"
        },
        "item": {
          "id": "b2d45c87-677c-469b-97ad-02026122c4cb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e27cf0a6-fb3b-4b8b-9493-b0bd64c72376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7f297d-96fb-4e07-94e1-7f593f550278",
        "cursor": {
          "ref": "d6da99c4-18e3-449b-ac9f-fed5bc119ddc",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0a5340e7-d487-4527-9917-2e22a7ab02ab"
        },
        "item": {
          "id": "ec7f297d-96fb-4e07-94e1-7f593f550278",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fd6cd985-a535-4844-bf27-5de28bfff10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6091b31a-255e-4cbb-87b8-c04860d31d6b",
        "cursor": {
          "ref": "096f436e-b333-4f73-848a-d09ff602554c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "41972572-d9b9-4789-ac7f-5a132de1c0af"
        },
        "item": {
          "id": "6091b31a-255e-4cbb-87b8-c04860d31d6b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "549c5783-b472-4daa-8e51-7ac52d1ef6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e8dce7-feb6-4a4c-936a-417f58c828ef",
        "cursor": {
          "ref": "48082315-0b69-43c0-a6d0-1240fde280c2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c35f178d-1c4e-4b2b-8d37-a09ea3db1aa8"
        },
        "item": {
          "id": "36e8dce7-feb6-4a4c-936a-417f58c828ef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f47f2521-5886-46c0-a4c2-1e149cd7a3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9d92a6-b6ca-4e5d-9b31-b936b6a07d7b",
        "cursor": {
          "ref": "23dbec29-9bd1-4670-88b4-367a08dba460",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "41a6ea3b-0275-46ed-b9d8-7f73a2691697"
        },
        "item": {
          "id": "9f9d92a6-b6ca-4e5d-9b31-b936b6a07d7b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3c8c54b9-ef4b-4c5b-879c-4285b87848f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594067c5-7588-4f44-b387-b55d4f1e9b77",
        "cursor": {
          "ref": "bbe82aea-b6a4-425f-85f2-3153e2112058",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "37e0bc0a-06ed-4e45-8384-0e7b70ee9b30"
        },
        "item": {
          "id": "594067c5-7588-4f44-b387-b55d4f1e9b77",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5efd7b93-e1f9-4e85-9263-bd7ef19db90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3baaa640-1875-4c18-bede-c41f68a7fdd0",
        "cursor": {
          "ref": "d6d44928-908d-472b-a4f2-ed339482fd49",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "22b28156-d6bd-4f80-9042-72ce058d446b"
        },
        "item": {
          "id": "3baaa640-1875-4c18-bede-c41f68a7fdd0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c1f3f3eb-513b-44f4-9d8b-cfa8abe832ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6684a509-1789-4eda-8770-1e9e0bdff1b1",
        "cursor": {
          "ref": "f9fb322c-f6ba-4eec-8868-b650014cff39",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "99d44b02-e4e9-4e5d-a91f-63ae6fd3880a"
        },
        "item": {
          "id": "6684a509-1789-4eda-8770-1e9e0bdff1b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e38c18e1-bc7b-4088-8871-7176bdf321d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423bcf93-3fa3-4ed9-87e3-7e7220d79496",
        "cursor": {
          "ref": "e3475286-30dd-4592-b491-5b330ecdeb9f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2a4b4234-72c7-4b64-8b2c-a4e5a58a0b62"
        },
        "item": {
          "id": "423bcf93-3fa3-4ed9-87e3-7e7220d79496",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "14da560b-9003-4229-99e7-7f8453fb42c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a4e1e0-cd1f-4917-8ea7-ff451ef92336",
        "cursor": {
          "ref": "0a6541ec-93a4-4202-b653-e03f97fcac9f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a6d8e9c6-5a81-42f6-b0ad-20bc0c39167b"
        },
        "item": {
          "id": "42a4e1e0-cd1f-4917-8ea7-ff451ef92336",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "74651e18-166f-4f63-b069-9faa12b612d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b494a6-35a2-4b8a-aa68-65cc5944192e",
        "cursor": {
          "ref": "b8d743e9-82bb-430b-9e1b-5e1435fcbc11",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9ac7e743-6f66-4959-96f8-edc4872cc3ee"
        },
        "item": {
          "id": "60b494a6-35a2-4b8a-aa68-65cc5944192e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2e53328c-666d-41a0-9d55-ed92a4375109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fb69c0-a20e-466c-8e67-25cfedf24740",
        "cursor": {
          "ref": "83b99ba7-3206-4191-9063-28ebd0932603",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bbb53077-9729-43b0-a469-e288974ebd71"
        },
        "item": {
          "id": "04fb69c0-a20e-466c-8e67-25cfedf24740",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "15bd8af2-b323-4d68-93f5-2336f96eb009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1507fa-6745-48b3-9dc3-72d881b2166e",
        "cursor": {
          "ref": "6a03aaa5-1710-4d9e-a2f9-1eae9af895c9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8ccf6404-7478-4151-8398-bdb5821fb062"
        },
        "item": {
          "id": "2d1507fa-6745-48b3-9dc3-72d881b2166e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "04c1956f-de43-41cb-9b21-cd53715078ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b88bdc-c176-41c0-bde5-b64f19696786",
        "cursor": {
          "ref": "916bcc18-b0fc-4dde-8b0e-de8fd4b86089",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7b4bdf01-5c55-43e7-8f2b-bad779bd6e7e"
        },
        "item": {
          "id": "21b88bdc-c176-41c0-bde5-b64f19696786",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "89b50195-e62b-432a-8233-b7b75d8daccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd25ab40-b4e6-40e7-aeee-2f14a58cc0e1",
        "cursor": {
          "ref": "aae4ca8e-f27c-4540-b89e-e533c41885db",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f2883bed-9f31-4b87-b899-e69deaba4cd4"
        },
        "item": {
          "id": "fd25ab40-b4e6-40e7-aeee-2f14a58cc0e1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e11e928e-beab-4453-87b8-4b0d48bd2973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bf6d8e-191d-45b9-af2c-2d1b1c9670d2",
        "cursor": {
          "ref": "f6ae8719-f5d5-4616-b3da-9e7a4c61a054",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8e5030ec-4e7d-4662-bf9c-b9a05e305c3a"
        },
        "item": {
          "id": "78bf6d8e-191d-45b9-af2c-2d1b1c9670d2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cad1a178-c059-41a0-96e1-d3f3fa583bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85421a98-e36c-4cbd-9f9e-2ec7c33a8c99",
        "cursor": {
          "ref": "3d33d97e-6295-4b9e-9059-0460757994df",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "37c91f6d-c67d-4d9e-8f94-543b1a129ef1"
        },
        "item": {
          "id": "85421a98-e36c-4cbd-9f9e-2ec7c33a8c99",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "272e90b1-f066-4041-947b-6a500b55eb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488b248d-1d57-4afe-aee7-80f037e95158",
        "cursor": {
          "ref": "9938f858-0580-4f01-b917-61311b916887",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "13b7bc09-422e-457f-ab73-c5412b32d1cc"
        },
        "item": {
          "id": "488b248d-1d57-4afe-aee7-80f037e95158",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "055f0933-2cb6-47f6-bac4-b7714b1974a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f2e1ab-461a-4fd3-94ee-c0921030272e",
        "cursor": {
          "ref": "dd158e19-71f6-47ee-a2a9-13725126d486",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0ddab91a-5935-42b7-876a-6a27eaa7bc60"
        },
        "item": {
          "id": "56f2e1ab-461a-4fd3-94ee-c0921030272e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e874fb6e-5801-4efd-8341-621a33350fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e61b90-28fb-46a2-bf3c-e93d85e47993",
        "cursor": {
          "ref": "483e94ef-1fba-4fbd-8fc7-3340f07f81ab",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e4c002c7-793a-4196-8b05-666475732a43"
        },
        "item": {
          "id": "c1e61b90-28fb-46a2-bf3c-e93d85e47993",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "876eea34-14c6-4145-bbec-0bdf1f03a2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf8e0f6-ba60-4295-829f-6aaaac69202f",
        "cursor": {
          "ref": "e6925f15-a17d-4e64-9907-99e767d38c4a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c926bc65-c12b-4423-9e8a-646e6bbf4173"
        },
        "item": {
          "id": "eaf8e0f6-ba60-4295-829f-6aaaac69202f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "67f19886-f605-428a-bed7-9ce0517030c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2873be4e-8808-46b4-9765-9e56dbe065dc",
        "cursor": {
          "ref": "bc6b66d6-7f62-4ee2-bf28-e937e7441d0c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b2fc3c51-138a-4c2b-9a07-1bcd4c9bfd32"
        },
        "item": {
          "id": "2873be4e-8808-46b4-9765-9e56dbe065dc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a71c946b-e21b-4858-be8e-3b534fe34cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d16f28-d17c-4bb7-a2fd-2bdb8bdced3e",
        "cursor": {
          "ref": "544499c3-a7ba-44a4-a491-af51d922847e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d58960a-d9b7-4d5c-a3f1-2445e81deb24"
        },
        "item": {
          "id": "86d16f28-d17c-4bb7-a2fd-2bdb8bdced3e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9c7dde52-720d-434c-b31c-9aa6accb7e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd357d9e-8047-49d8-8fb5-541081da60cd",
        "cursor": {
          "ref": "4a5f7812-f5a6-4134-80de-d48d155479b4",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f86a7e2a-af83-4d17-957f-e57cfedaf443"
        },
        "item": {
          "id": "dd357d9e-8047-49d8-8fb5-541081da60cd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c4591c1-a215-406d-964b-a5f3c0d45966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766ab8aa-4537-429e-8194-404841958113",
        "cursor": {
          "ref": "9f6a3ed2-d24a-4dbf-9225-676a6670cf6b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "13522b30-7f6d-406f-9fba-bb1b4fe46126"
        },
        "item": {
          "id": "766ab8aa-4537-429e-8194-404841958113",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dbd21ee1-827d-4aa1-9a93-8a8eb6fc1ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2df9d6-e324-47ab-af2f-9f330db8f084",
        "cursor": {
          "ref": "3f11fc94-4e24-4f36-9b7e-dcda46c0dcd2",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "db964636-956e-42d7-99d7-244956b16952"
        },
        "item": {
          "id": "3e2df9d6-e324-47ab-af2f-9f330db8f084",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "03537c5e-e2e8-44e5-8753-8729b1be7ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faac7e81-bc57-47f7-93f2-59e1c62b7ac9",
        "cursor": {
          "ref": "6d2883a2-e69d-4cc8-b46a-883a983b7a92",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8aa5ea77-fea7-4d8d-beb8-73e94c6de50c"
        },
        "item": {
          "id": "faac7e81-bc57-47f7-93f2-59e1c62b7ac9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2fb04b83-ae5a-436b-aea7-fb0770dc7de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e825f13-4451-4dd8-aead-910244dff050",
        "cursor": {
          "ref": "4b55d229-ade8-4dda-8a50-619f9e44def6",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3e05627f-2c97-49c9-8959-5970ff1aa4ab"
        },
        "item": {
          "id": "4e825f13-4451-4dd8-aead-910244dff050",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dbb20663-60c7-414b-a8c6-59f95e5b4ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa20099-e9bd-457f-9f16-0cdb29a7a150",
        "cursor": {
          "ref": "873b5236-d30e-4df3-97ac-18214753508b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2715dde1-f453-4064-96ca-e207bb2952c6"
        },
        "item": {
          "id": "1aa20099-e9bd-457f-9f16-0cdb29a7a150",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4f3202d7-f0c4-4686-8e94-c5e4a03527ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1d2df3-f7c1-4d3e-ac9f-dd19775a8155",
        "cursor": {
          "ref": "4c71f00f-7273-400a-baeb-fe79ab933af9",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d3ede627-9d8c-402a-86bb-99ffb07b333b"
        },
        "item": {
          "id": "dc1d2df3-f7c1-4d3e-ac9f-dd19775a8155",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e493f200-58e7-4f75-a4d7-d126035e44f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843fb440-9b86-4db9-8b83-a3b1958e2ace",
        "cursor": {
          "ref": "11f16d93-11b4-402e-b192-ac079ff5b0a8",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5d68165c-2623-47ff-98bc-fae8f8f966df"
        },
        "item": {
          "id": "843fb440-9b86-4db9-8b83-a3b1958e2ace",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fbb700ba-ab1e-44c9-88d2-0207f8825ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75904bd2-4f2f-4455-acea-3a9c5fe3dc25",
        "cursor": {
          "ref": "0bef6512-e452-47bc-b330-4c6c9d1c1b5a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9c9c127a-b70b-4bcd-acfb-31289f371f4e"
        },
        "item": {
          "id": "75904bd2-4f2f-4455-acea-3a9c5fe3dc25",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "33c2c212-44e4-4c52-8a96-f9586e405380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0bb75f-b947-48ef-bf98-8e30cbcc866a",
        "cursor": {
          "ref": "4b17c3f0-09bd-43db-853f-0fb1ac2098dd",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "34e48109-7f14-4284-b89d-0db41298255c"
        },
        "item": {
          "id": "4c0bb75f-b947-48ef-bf98-8e30cbcc866a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fcf12712-043d-47b2-96b5-e0e0725a1e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f03d543-c65f-4d9b-a0a6-8fe24ab412ae",
        "cursor": {
          "ref": "850a604f-0b18-4ac9-8a64-de5c1c21764c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7e811667-14c6-46a0-9762-cfbb77c38ac8"
        },
        "item": {
          "id": "0f03d543-c65f-4d9b-a0a6-8fe24ab412ae",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b4e4a9c8-fab7-4af4-9cb6-4d4472fe09d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2e8606-b4c3-47a8-a6ba-c9adbba4577a",
        "cursor": {
          "ref": "669b902d-89b2-4fa6-9ee2-f19f66a0f289",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3f257705-d20a-402a-867b-39a415824253"
        },
        "item": {
          "id": "8d2e8606-b4c3-47a8-a6ba-c9adbba4577a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "609276fe-361f-408f-aa35-b9804a30b635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1c9f94-abaa-4a79-8a39-a970fe659b74",
        "cursor": {
          "ref": "f75e3973-d831-4a94-8167-a33d93b94907",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9d9946c9-1405-4502-b913-c77f61c35dfc"
        },
        "item": {
          "id": "cf1c9f94-abaa-4a79-8a39-a970fe659b74",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "304c230e-c77e-4cb8-ab37-4c50378f6f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a659937-a298-4b6c-9c93-0e3328350791",
        "cursor": {
          "ref": "34ff2a64-9042-40f0-98c7-5128b52986be",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2f5e57f2-dce7-49da-aeb0-097ce9a912ad"
        },
        "item": {
          "id": "4a659937-a298-4b6c-9c93-0e3328350791",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4e489201-38f9-45cb-837a-b71a40bc3118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99b7e95-049f-419a-8705-a3492d591989",
        "cursor": {
          "ref": "e7325d54-94bc-427b-8671-1472c18d64d7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7d242a6f-80a8-4c68-bb7e-72d6079988d0"
        },
        "item": {
          "id": "a99b7e95-049f-419a-8705-a3492d591989",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5c022969-e2b6-43b2-a02d-35145a3c6c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bb0521-8566-4441-929d-2d64f2d797ec",
        "cursor": {
          "ref": "a0adbf19-f192-4c07-a4c2-c6419a02a965",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cbcada7c-7d98-4267-b2c4-8ce43b715182"
        },
        "item": {
          "id": "f9bb0521-8566-4441-929d-2d64f2d797ec",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7bf9c605-6bdb-47f9-b66d-400a61de18ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb0bdff-0135-403c-83e9-1f2adba9dbeb",
        "cursor": {
          "ref": "3c59abbf-2b9d-4d78-a6ce-36623a5e83c8",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8f1892cf-c990-4b0e-a521-c532be06e83f"
        },
        "item": {
          "id": "6fb0bdff-0135-403c-83e9-1f2adba9dbeb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ac8daed5-95db-475c-a2cf-50cf62960f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02b09f9-a763-4316-a0a6-c4be07d5ad00",
        "cursor": {
          "ref": "a509dedb-9669-4494-8d44-bea4580819b1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6732dd88-e7ce-4656-a888-2d23693f3018"
        },
        "item": {
          "id": "b02b09f9-a763-4316-a0a6-c4be07d5ad00",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "594f598c-4ae2-420f-9654-f807444ba0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac88754d-a3c8-439b-b19b-563f7746813b",
        "cursor": {
          "ref": "772de9cb-779b-429a-9bb0-338fac4895b8",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4ddccecd-2b18-4aad-ae99-0bca4de63c36"
        },
        "item": {
          "id": "ac88754d-a3c8-439b-b19b-563f7746813b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e47d47f5-a52f-49a0-97b3-a40b1ab4cebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5424787f-a384-4944-ad33-d8625986e937",
        "cursor": {
          "ref": "f80d2cc8-1a8e-4b8c-90b7-1847b146787d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "754bcaf5-e4a5-49bc-98aa-cfe08e5bcd52"
        },
        "item": {
          "id": "5424787f-a384-4944-ad33-d8625986e937",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8c356e6d-7e88-49de-be1b-4750f353b8ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9649e4-6b55-46c1-bea2-1344aaeb90ed",
        "cursor": {
          "ref": "c14377ed-9194-4fc3-b559-8faac0453268",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "09edb5d0-25e4-4e8a-9988-e6bbe04426c2"
        },
        "item": {
          "id": "9d9649e4-6b55-46c1-bea2-1344aaeb90ed",
          "name": "credentials_issue"
        },
        "response": {
          "id": "99514a4f-395c-47b8-bea7-3c834fe727d4",
          "status": "Created",
          "code": 201,
          "responseTime": 6104,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2643e10d-6c1e-46d7-a0e8-feef4021476a",
        "cursor": {
          "ref": "5d646bd4-ac04-4a23-bf57-e191a83b69f5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3ad6d199-4c4b-4e34-9c61-ab6699feb62e"
        },
        "item": {
          "id": "2643e10d-6c1e-46d7-a0e8-feef4021476a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3ba98ec8-503c-454e-880f-9ecd4aff4e77",
          "status": "Created",
          "code": 201,
          "responseTime": 5738,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9048db-d9be-4da1-adcc-72eca82e85d6",
        "cursor": {
          "ref": "bb3fbeff-a468-4f18-8a3a-a19ad6646010",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6e79928a-c828-412f-8fad-0d2463baaabd"
        },
        "item": {
          "id": "ac9048db-d9be-4da1-adcc-72eca82e85d6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4f40ca64-b99a-48cc-92e4-04bd7ae752ea",
          "status": "Created",
          "code": 201,
          "responseTime": 5567,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad8bb31-6c63-474f-897b-4ac2d0350195",
        "cursor": {
          "ref": "ff1fb596-7d05-474a-b6b2-5e364b67fdbc",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c3ade4b5-af13-43b8-83d6-789a6d944893"
        },
        "item": {
          "id": "cad8bb31-6c63-474f-897b-4ac2d0350195",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e116d4fa-bcea-42c3-bf73-ac5a1ee7b934",
          "status": "Created",
          "code": 201,
          "responseTime": 5636,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fb6179-7e71-4b76-93e5-914d645a9031",
        "cursor": {
          "ref": "f8add5b3-2da5-4323-b068-a4c2bbf46f6d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b394ceb2-0c9e-4f9a-af39-c1610a571337"
        },
        "item": {
          "id": "82fb6179-7e71-4b76-93e5-914d645a9031",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "215a3878-6200-47c2-9e5b-25ba5327876b",
          "status": "Created",
          "code": 201,
          "responseTime": 5348,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3c2e7b-8417-4686-838e-ca57bcc9ddaf",
        "cursor": {
          "ref": "b20cfb2f-5304-46e5-a61e-ee0327b784ca",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2ae7efa3-71db-4833-bd50-88a464b15a08"
        },
        "item": {
          "id": "3a3c2e7b-8417-4686-838e-ca57bcc9ddaf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8df36ad1-9c1c-405e-9c16-afb87a63aebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "827656b9-d5aa-4eae-9001-f294cf2f2371",
        "cursor": {
          "ref": "122c5cc0-a9d7-48df-a316-32aab8315f4a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5e1f3dac-39bc-4717-ba3c-4d73fab69007"
        },
        "item": {
          "id": "827656b9-d5aa-4eae-9001-f294cf2f2371",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3b66b4f8-48e7-46c9-b3f0-e86be6c40235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07405184-747b-470a-b04b-5092757d003c",
        "cursor": {
          "ref": "4db42ebc-9f47-4c7d-be38-15d38c2e4388",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d813a9bb-0862-45ea-9c63-29b6ba96d8fe"
        },
        "item": {
          "id": "07405184-747b-470a-b04b-5092757d003c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "18448d63-5834-4d2f-9514-fe637fce4609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5868870-098e-486a-a30e-c971b6df9151",
        "cursor": {
          "ref": "ac5c5c09-ef19-41f3-8b96-385d54f216ff",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9d85bde5-d2b5-4bab-95a9-8b598c055a9e"
        },
        "item": {
          "id": "f5868870-098e-486a-a30e-c971b6df9151",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e982baae-8105-414e-969c-5441f7f0fde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee7344a-4d11-40a7-bb5f-28f5bdc10012",
        "cursor": {
          "ref": "7d0b78d2-bc03-440b-b56f-7d2e477e7651",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c7b11380-c95c-49d2-9604-81a0b69d8d0d"
        },
        "item": {
          "id": "fee7344a-4d11-40a7-bb5f-28f5bdc10012",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e27a9480-645d-40a5-b1a0-1b1a6c0fa788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673760d5-c3ec-4af3-b582-712bf74323b5",
        "cursor": {
          "ref": "7a44ed17-b2cd-443c-b7e0-5895c8f9d7e7",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cf31a063-7926-4bcd-8218-f31871a658ee"
        },
        "item": {
          "id": "673760d5-c3ec-4af3-b582-712bf74323b5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "616753a9-e748-4771-ab56-be835b8071f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fd1770-5779-4560-b74f-6465d97b7abb",
        "cursor": {
          "ref": "a06562f8-6bb4-420c-866a-da7f7b987a00",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dfa889ce-903b-48fa-a682-7ce65bd5f3a3"
        },
        "item": {
          "id": "d0fd1770-5779-4560-b74f-6465d97b7abb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5b24fe0b-b742-4496-b5d7-402f5b5c1230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accae378-5565-411a-bea0-ba9d8e9b0135",
        "cursor": {
          "ref": "73f3a2b6-6aab-4682-af25-9b472ac3b6e9",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fe2239ae-67fa-4892-9bff-a2670fdbb0fa"
        },
        "item": {
          "id": "accae378-5565-411a-bea0-ba9d8e9b0135",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "926c9b2a-c63c-4b86-a3da-1641d4f192a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b9a598-cb3f-4355-a7fb-c7ce577eed4d",
        "cursor": {
          "ref": "462e2e54-dcb0-441e-9d86-03fcb46072ea",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "924039b5-c63a-46d3-b4ca-9672ad41be81"
        },
        "item": {
          "id": "04b9a598-cb3f-4355-a7fb-c7ce577eed4d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ff969c78-f2b6-45ab-b5e3-a306c0e47ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3946b680-0815-45c9-ae79-a6ac10782b5d",
        "cursor": {
          "ref": "e9cef7c4-d031-457d-8245-b0364007283a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3c4f2158-a19b-4f76-96f6-c0ab9329b5fd"
        },
        "item": {
          "id": "3946b680-0815-45c9-ae79-a6ac10782b5d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3385ae41-7a99-4d9d-b382-1255f981b202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5990f09f-3a93-419e-9eb3-7036eb5bacc2",
        "cursor": {
          "ref": "c927fff0-33c3-463f-a394-fe36d15b4352",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7517e6c9-6532-4fac-a160-84d27f88dfc0"
        },
        "item": {
          "id": "5990f09f-3a93-419e-9eb3-7036eb5bacc2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "78047fee-82be-4beb-93e4-509e88f5f415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d17291b-996a-4237-891a-7fe079a0bcf8",
        "cursor": {
          "ref": "e65fead3-d62e-4b0a-9a1b-bd0f1b1dd0d0",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e03ca7a9-cfa4-4f39-9bde-380541a79ae7"
        },
        "item": {
          "id": "7d17291b-996a-4237-891a-7fe079a0bcf8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a39beac9-0dce-4b1a-b27e-9467b916630a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83c6b7f-65d3-4f8b-b244-1a8220aad9e3",
        "cursor": {
          "ref": "72b86ba1-7dbd-4e22-8f4b-64af509eed96",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f9415fe7-f2be-46d0-a238-e4041bc3ccbe"
        },
        "item": {
          "id": "a83c6b7f-65d3-4f8b-b244-1a8220aad9e3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8d9aa406-8110-4edf-82b9-d5615d356694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc66644-1244-4921-8256-98e639ed1462",
        "cursor": {
          "ref": "9f884ce5-9272-49ac-9cde-9a30e510462d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0e9f3971-dc20-465a-946c-d2c7f6c0730d"
        },
        "item": {
          "id": "5fc66644-1244-4921-8256-98e639ed1462",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c6bca888-c634-453c-8f03-92ac58d565d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b94cb8b-dfc9-4193-843f-c1f00c83ee8e",
        "cursor": {
          "ref": "cf74d460-e172-43fd-90df-34389ba0a290",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a0e62473-e89a-4d9d-afab-d96e1f653784"
        },
        "item": {
          "id": "6b94cb8b-dfc9-4193-843f-c1f00c83ee8e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ea4cc82e-42f2-4c7b-9483-4baf230a5ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b148afe-8b53-4d1b-9b39-24722db1489a",
        "cursor": {
          "ref": "51235f7b-e0c7-402a-94fb-f07f39505461",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1c032262-c2b8-4327-808f-58a6739beccf"
        },
        "item": {
          "id": "1b148afe-8b53-4d1b-9b39-24722db1489a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fb715f8e-293b-4d62-88fd-3db303d8413a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a92ba2-0169-4bb0-82a5-2f25293c3c44",
        "cursor": {
          "ref": "6236d96f-dc07-4298-b24d-1f8dd6f7dd47",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c7c55d11-51f1-4313-a6c3-6c8bd94c4aa2"
        },
        "item": {
          "id": "86a92ba2-0169-4bb0-82a5-2f25293c3c44",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "136ac088-5afe-402f-9357-e374a6243b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57605d17-01f5-4664-b432-c244532a37ae",
        "cursor": {
          "ref": "d3ce557b-61ea-414b-a7c2-9e4368043984",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f04fa665-7017-4003-b654-0d3e1b568ef2"
        },
        "item": {
          "id": "57605d17-01f5-4664-b432-c244532a37ae",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "53446aa9-087c-4fea-a881-3fe14d90961e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b13d4-c268-40f1-bac6-8512293976e9",
        "cursor": {
          "ref": "de32726e-902e-4e88-94bb-48d0675d6c6e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "10841be5-fa40-4bf4-ae84-0b6ec82d89ed"
        },
        "item": {
          "id": "3d2b13d4-c268-40f1-bac6-8512293976e9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f4fba54c-587c-460b-afcc-77e820b7943c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991d087d-57d0-4763-b8f9-59b355bbd59c",
        "cursor": {
          "ref": "1b2a33e4-34d0-4985-bf0a-7397f567880e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "29967b0f-c7c2-4057-acf1-e9984927074a"
        },
        "item": {
          "id": "991d087d-57d0-4763-b8f9-59b355bbd59c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a90a18e6-e7fa-43c7-b295-9da81db7c134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed51f05c-5044-45c3-9374-fe75226c6776",
        "cursor": {
          "ref": "ea610acd-c8ec-4732-8e26-7515a216d54e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a59708e9-2051-41b2-ba2f-f7aa90d35db7"
        },
        "item": {
          "id": "ed51f05c-5044-45c3-9374-fe75226c6776",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "54d8dc2a-0fb4-4ffc-86d5-985c117a1382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007c69bb-84c6-47ec-af3f-8b23edabaa4e",
        "cursor": {
          "ref": "17716715-71cc-4638-98ba-896346a48097",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c8d83a87-c5d9-4f9c-bd40-048e0c31cbbb"
        },
        "item": {
          "id": "007c69bb-84c6-47ec-af3f-8b23edabaa4e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "39b1c4a1-84fc-4e58-9595-3b792b8d9ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc1fbb0-5afc-469e-a3b9-d59b1ffd0c5f",
        "cursor": {
          "ref": "042eb130-36da-4a91-b3cb-a726b7624e18",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "df2c91d6-5bb0-4cbc-98f6-6e357dc118a0"
        },
        "item": {
          "id": "edc1fbb0-5afc-469e-a3b9-d59b1ffd0c5f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4a894ef7-18d8-4a23-a28d-2e7ac84c428a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a237d7-aac3-4f44-80e0-e2ed7df9e5fb",
        "cursor": {
          "ref": "cb22d26f-b996-49b9-ad9a-cf5aaddc90fa",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "666f591b-2df8-4bad-965e-8fc44f0e4c8b"
        },
        "item": {
          "id": "45a237d7-aac3-4f44-80e0-e2ed7df9e5fb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "14897e03-2cfb-4910-bfbb-34af2c96a9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e3f35d-c041-45dd-9852-60d863bdaa45",
        "cursor": {
          "ref": "95518c5d-0b29-48e0-8fae-8c11640967c8",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "09d93123-99c6-43dd-982f-e0a58fbba263"
        },
        "item": {
          "id": "11e3f35d-c041-45dd-9852-60d863bdaa45",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "84c8d140-4e27-4688-904f-9b75eea3543c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed90e95-4066-463a-9f63-bd58428f4638",
        "cursor": {
          "ref": "ff825af6-86fb-441b-8e0c-b6d7f25fa672",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4cdbaf24-2575-4c50-b487-3349153e3ed4"
        },
        "item": {
          "id": "2ed90e95-4066-463a-9f63-bd58428f4638",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0aba58cd-f1ef-4d65-b0d2-30603261bd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d99123e-99fa-49ea-b9b4-4562c6457c4c",
        "cursor": {
          "ref": "8fd513f5-0fff-48d3-8e17-e5d84636b94a",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "42c85ae4-cd64-483a-8634-75eb23868f6a"
        },
        "item": {
          "id": "6d99123e-99fa-49ea-b9b4-4562c6457c4c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "85907306-c0ae-4faa-87fa-7767efadf9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a304ec0-b5c0-47f7-b933-178d14b219c3",
        "cursor": {
          "ref": "9d736fab-3cb2-4e78-b4a6-d34c3189fd39",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "355dbdb8-4e13-4841-97f3-44a3c992c592"
        },
        "item": {
          "id": "0a304ec0-b5c0-47f7-b933-178d14b219c3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "deeb9394-2ec1-4a25-9fc6-4d16d58c1c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89f9c3b-0ba3-4664-a0b8-0be40faed04c",
        "cursor": {
          "ref": "66bd738c-0c18-4ab8-8950-b29fd3bd8f55",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "66449181-ee3f-472e-b145-cda960486e7b"
        },
        "item": {
          "id": "c89f9c3b-0ba3-4664-a0b8-0be40faed04c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2fcbd7c5-fd3c-4b86-b938-ba3c41c88665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c432ba-1399-47f8-8216-9405cea8716f",
        "cursor": {
          "ref": "a5cc7c08-8cfd-4be5-8c26-d1d69c397914",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "34cf7f82-0019-45f4-bcd5-8e796e0741d3"
        },
        "item": {
          "id": "18c432ba-1399-47f8-8216-9405cea8716f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "08bc9e2a-914c-4bf8-9bfc-2cebdcdff5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bcf6ad-7ae9-4217-88b1-11cf2ec3aa81",
        "cursor": {
          "ref": "dee8bc1a-7f6b-40b7-95bf-4932319d6ffd",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3ff7a725-5a8a-4fd8-98db-57a2fb4d7af5"
        },
        "item": {
          "id": "16bcf6ad-7ae9-4217-88b1-11cf2ec3aa81",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fcbc4724-7386-47d4-958e-865fd3481505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0340e71-bdc5-4c53-9e88-89529b31bb01",
        "cursor": {
          "ref": "ea6d8ca3-7b7d-416a-86d1-72aa5849aa9a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "649df3a4-454d-4c10-9a2f-de2663b4ec84"
        },
        "item": {
          "id": "e0340e71-bdc5-4c53-9e88-89529b31bb01",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c75d3678-2f9e-48e8-b721-a7211f8891ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb3fecb-7cdf-4a50-9493-173947d39b56",
        "cursor": {
          "ref": "ae4e5237-a497-4294-8858-d5bfa635ef67",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ca8820ff-1171-4a63-9908-a13e3fb26607"
        },
        "item": {
          "id": "9bb3fecb-7cdf-4a50-9493-173947d39b56",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "38494726-43be-464e-b4ce-21e0da41e967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8386ab8-77aa-4f62-b546-32d9b40465af",
        "cursor": {
          "ref": "1f409658-8846-4856-a94b-5c4c1e2e3d54",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fc3579ec-3ee6-4a30-a826-2714f0ac308e"
        },
        "item": {
          "id": "c8386ab8-77aa-4f62-b546-32d9b40465af",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8b4745cf-e735-40e8-af2c-7e034adac437",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb942dc-92bc-4001-9e63-4b63346799dc",
        "cursor": {
          "ref": "372d85b0-fdc9-4ad7-9a38-5e8071040c1b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cc2a04b5-1cbf-40bd-9d71-3117fcad4266"
        },
        "item": {
          "id": "6bb942dc-92bc-4001-9e63-4b63346799dc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4ef8e859-dca7-43e2-80a6-a8a3b4c585a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff234c9a-adf7-4f63-b378-709126638a15",
        "cursor": {
          "ref": "d73b4825-cb8e-47a8-8ab4-f12488f36989",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ad96f96c-5c08-4444-b364-5888e6a76cd0"
        },
        "item": {
          "id": "ff234c9a-adf7-4f63-b378-709126638a15",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7d5c480b-28ff-46e0-8f91-9e72f0384326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32ba0a3-8f4f-4dd5-bcca-e93f8eaff7ce",
        "cursor": {
          "ref": "93a9fa6e-38e4-47f7-8363-ea315ee7b050",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5eae611e-5bb2-4236-8f95-cdcbd7a75ff8"
        },
        "item": {
          "id": "b32ba0a3-8f4f-4dd5-bcca-e93f8eaff7ce",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9bda650d-7810-409a-b950-75fb5ab548d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8980da1-206a-48d8-9b60-71a1722a9eb8",
        "cursor": {
          "ref": "99919ec8-2311-462c-8d1a-f1449673e03c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6ad54100-d180-47cf-b2ac-34dc7fdaf99c"
        },
        "item": {
          "id": "b8980da1-206a-48d8-9b60-71a1722a9eb8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f0ce365f-d594-4946-aca4-4f7cd2b11efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18058a5-9c02-403f-9213-9174b1bac1da",
        "cursor": {
          "ref": "47dcb675-d3d0-4d72-9cf4-ba71dd6c5eef",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2e9cb6d2-38aa-411c-917a-55ff1834e792"
        },
        "item": {
          "id": "a18058a5-9c02-403f-9213-9174b1bac1da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "691d7db1-9c16-4122-8597-48f72c3a4ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5990eef3-8ac2-4277-bba9-a9dcf5d8839f",
        "cursor": {
          "ref": "52bbba4c-a6eb-4903-9353-254e36d38783",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5436dc13-e2e0-451f-a960-d2ca9f18ebd3"
        },
        "item": {
          "id": "5990eef3-8ac2-4277-bba9-a9dcf5d8839f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b9cba741-8a36-4a20-85c2-001cae389aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46bc342-1516-4780-b8f9-156ac5403a54",
        "cursor": {
          "ref": "6a656bbf-e7d5-41dd-bcab-b8a6d7d1d56f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0271f8df-7f71-42b0-9818-6a585c944e0a"
        },
        "item": {
          "id": "b46bc342-1516-4780-b8f9-156ac5403a54",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ca0cbf32-ff16-48ef-b38c-718b83998666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcfa677-7a1b-4745-bfd7-bea41aa163d7",
        "cursor": {
          "ref": "3acece26-f5da-44a7-adf6-11cb8fbc4e14",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ecd73e88-23fb-45ef-b7ba-6278e33a4ea7"
        },
        "item": {
          "id": "1fcfa677-7a1b-4745-bfd7-bea41aa163d7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b747e676-e87f-472a-97ff-048035b670a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fb2e29-3623-41b4-a652-38b0b1bdb52f",
        "cursor": {
          "ref": "522784ee-459d-4b53-97c7-bd2b282fd0fd",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ca69610c-4203-4bba-9ac8-4e526b908d81"
        },
        "item": {
          "id": "55fb2e29-3623-41b4-a652-38b0b1bdb52f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dfd696ff-1740-4c1a-ae3e-0f13f7ffd3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218ebb6d-cb1c-4bec-8be9-6a1c3e7108c8",
        "cursor": {
          "ref": "e2575827-423a-42b2-85bd-cf437a5b9634",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e26f6628-6947-4925-9af0-099020640a2b"
        },
        "item": {
          "id": "218ebb6d-cb1c-4bec-8be9-6a1c3e7108c8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "22429589-abee-4806-86f9-dfe362e4f248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f7f556-518f-466e-a044-6ab0806e0441",
        "cursor": {
          "ref": "c687444f-1b95-432b-8546-6644db09f649",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a8f26b5b-aacf-4020-a23a-334098c9e8fc"
        },
        "item": {
          "id": "d7f7f556-518f-466e-a044-6ab0806e0441",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "56116cb5-3b4b-40d4-9b71-343eb674a311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b72e6e1-1efd-4a76-9022-9d9afeda295e",
        "cursor": {
          "ref": "3dede7fa-7cc1-45a6-89dd-d9b1198f011d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a62f79ed-e7b1-421d-8f20-28e873aedf27"
        },
        "item": {
          "id": "8b72e6e1-1efd-4a76-9022-9d9afeda295e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "725ce855-49d2-4cac-a145-5c7b321d009e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f5a8aa-5357-4405-8e45-e6f44197bcd8",
        "cursor": {
          "ref": "0c537a68-54da-43c8-9bdc-8c19b80659ca",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "741b6dc8-c9e9-43b4-8500-efc394cc65d6"
        },
        "item": {
          "id": "a6f5a8aa-5357-4405-8e45-e6f44197bcd8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9abe1250-997f-46d6-a896-536edfdbe2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b32cdd0-d898-4487-9c4f-e020465aebe9",
        "cursor": {
          "ref": "e59e9108-a97d-4530-b9ae-b93a1f11ca9f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "332a5cbe-5c44-4299-8907-59d935aaed9b"
        },
        "item": {
          "id": "0b32cdd0-d898-4487-9c4f-e020465aebe9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b27de576-44ca-4d79-ab6d-80f2335e35a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd7f49e-8393-41f6-88cc-34a30cd41423",
        "cursor": {
          "ref": "10520976-256f-4826-87b3-6e9d237c4bec",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "04e1812f-6779-455f-aee7-acb3a51dd408"
        },
        "item": {
          "id": "afd7f49e-8393-41f6-88cc-34a30cd41423",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b7a6c64e-7af4-4e6b-a11a-a3758d5888fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eb0c7b-9463-4564-b82b-e08d8abc4509",
        "cursor": {
          "ref": "e63625fb-d170-4e04-a160-e33eb27822f5",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bdd9656d-20ac-43fc-99e9-c6e62c1b28b6"
        },
        "item": {
          "id": "d6eb0c7b-9463-4564-b82b-e08d8abc4509",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4887dccf-ac11-4d96-943d-2cdda176a0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b6d386-8304-43dd-bdc2-4e8b11fd9b80",
        "cursor": {
          "ref": "ce84de1b-2c8b-4859-9a5d-6cf6096a21f1",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2029ba4d-0c58-49f2-a9bf-b58edea1f373"
        },
        "item": {
          "id": "29b6d386-8304-43dd-bdc2-4e8b11fd9b80",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ff8eff6d-b620-48d5-a746-9132f01e8f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2da61b7-9094-4cda-b1bb-670c91b397f0",
        "cursor": {
          "ref": "a2c4bf4a-88f2-420f-83a3-30b576bf5e58",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a6ff0c6c-85d8-4a5b-a03a-72553d397dbb"
        },
        "item": {
          "id": "e2da61b7-9094-4cda-b1bb-670c91b397f0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1db0bea1-1269-4f27-ab7e-c29dacdcd45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c2055d-2d38-47aa-aa76-04a6a67bb890",
        "cursor": {
          "ref": "58475350-29d8-450b-8cb5-a5a79e788800",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "39e3d225-8d73-4547-84c4-2592c50a0b7f"
        },
        "item": {
          "id": "90c2055d-2d38-47aa-aa76-04a6a67bb890",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0e173b36-5592-4df2-8232-426ba12ff6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7fc033-33e9-404f-9584-2adac3a5dc48",
        "cursor": {
          "ref": "877ae1c2-3621-461b-a602-4f228c9f6e2b",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8d1fb9bf-ce1a-4f57-93b0-df76f8b44db6"
        },
        "item": {
          "id": "1e7fc033-33e9-404f-9584-2adac3a5dc48",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "63b375fa-5939-4df5-ae6f-c6958e993210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1dcf4b-75df-4eac-baa1-974c4cf07a21",
        "cursor": {
          "ref": "c19d0c19-a3dd-435b-bc7a-921938627a7a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8081a544-9c27-4e66-a0fb-f59255bbd09a"
        },
        "item": {
          "id": "fc1dcf4b-75df-4eac-baa1-974c4cf07a21",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8edf5dcd-e8c3-4cee-ba1c-1c9a91503a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84dc9e0-beb8-4fa1-8fc4-fb8a2788f981",
        "cursor": {
          "ref": "40e86998-7af9-42f0-8278-c6f5eede64f5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "52d9ef9f-f139-44a7-a02a-a58961150ccb"
        },
        "item": {
          "id": "f84dc9e0-beb8-4fa1-8fc4-fb8a2788f981",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b22abb21-6f1f-48e8-a910-8120e47e002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe73666d-abb9-4145-a617-4f1455bcc8e4",
        "cursor": {
          "ref": "8657f762-9dfe-4aa9-82fd-53ec91afa986",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "482aea1c-a257-4918-a831-9c29e7f06fc0"
        },
        "item": {
          "id": "fe73666d-abb9-4145-a617-4f1455bcc8e4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9b8fd6a1-a437-4f37-af6a-05527578d191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e774a8-e926-4917-92e8-fe0ad38bda16",
        "cursor": {
          "ref": "63bf7731-23aa-4215-b677-8b920d84840d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "84e0c30b-715d-4189-a135-9cbabf3ec091"
        },
        "item": {
          "id": "89e774a8-e926-4917-92e8-fe0ad38bda16",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a316ae00-c42e-439a-be13-59ae98bacb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d53f16-76cc-4995-88b8-05d60518d0e8",
        "cursor": {
          "ref": "5e84c25a-3eef-4325-ab0a-16d9c30f5d11",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4d5314f0-0c0c-489c-8d55-c6c2be1f6ee3"
        },
        "item": {
          "id": "30d53f16-76cc-4995-88b8-05d60518d0e8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a838f8ff-012f-4332-b991-57ac58331e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dc0afa-db67-4bab-ac9b-ab942f863667",
        "cursor": {
          "ref": "6fbbc73e-9373-4e9c-9b5d-1fd43ee67711",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "29e504cb-8942-4da5-8fd1-75539fea3cb2"
        },
        "item": {
          "id": "65dc0afa-db67-4bab-ac9b-ab942f863667",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bfe5b834-2bf2-400c-aa9e-1646f7c49cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bf8fdc-9ae8-47b7-83c1-df16cb184d9a",
        "cursor": {
          "ref": "b989c82f-5721-4ad3-abdb-ed2f8c9c98fc",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cee19a3b-8163-482b-979f-4209276517f0"
        },
        "item": {
          "id": "19bf8fdc-9ae8-47b7-83c1-df16cb184d9a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4372a970-a30f-4ad3-a620-9af298cbed1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1020ef4d-ca59-4583-83d7-715e6580a65c",
        "cursor": {
          "ref": "de5f4769-fc66-4c2c-8c37-3f15f37c2264",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "76e7a9e5-ed7f-4d6e-8e95-2c9ded4881e8"
        },
        "item": {
          "id": "1020ef4d-ca59-4583-83d7-715e6580a65c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8521dbc2-807e-4a86-a932-2e31007f10ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45080e25-9cfd-454c-93ec-fb372fc84b5a",
        "cursor": {
          "ref": "9588cb1b-5265-44e0-872a-570dbfad0eaa",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a38296a6-f40a-42f7-9cd1-8503789a1415"
        },
        "item": {
          "id": "45080e25-9cfd-454c-93ec-fb372fc84b5a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "766d17e4-84f5-41ce-aaa8-da8373aa59eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129ffd25-a401-48ef-823b-a51f28c793db",
        "cursor": {
          "ref": "eba636a0-589a-4fed-b671-3bcd8b85a0e3",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "079f1b96-2119-4dbd-9d94-c13b73b01d8d"
        },
        "item": {
          "id": "129ffd25-a401-48ef-823b-a51f28c793db",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a8cf688b-b588-4ca1-8ae9-2b769ff99dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b38a655-a01b-4321-933a-d00413a96be1",
        "cursor": {
          "ref": "7c6570a1-a481-45fc-ad3b-4b293edcce24",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "27893543-89f6-4f5d-8f23-e2e1485f5338"
        },
        "item": {
          "id": "1b38a655-a01b-4321-933a-d00413a96be1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "76a9b8bc-e881-4cf2-9427-b1171e562b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e944bda-b760-4fe5-8120-352331238ffc",
        "cursor": {
          "ref": "b6af5bd9-7bcd-4d20-a744-c01e035b6b5e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "037ece83-01ee-4116-8081-851097eb2487"
        },
        "item": {
          "id": "0e944bda-b760-4fe5-8120-352331238ffc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1de0a248-113b-4b29-b087-5198c01387bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17400a7f-ae14-4c1a-956d-f0d0bc26d656",
        "cursor": {
          "ref": "0501e5d7-6299-448e-abd6-2adde1598873",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "23f3c4ac-ef32-4b8d-8549-788d08385f3b"
        },
        "item": {
          "id": "17400a7f-ae14-4c1a-956d-f0d0bc26d656",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9d6e6dda-3a0d-43a0-a1df-47351938304b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3cd00d-153d-43aa-82e4-dd66ad047801",
        "cursor": {
          "ref": "98065205-93cb-4fc1-925b-53ecd16904b1",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "eed4e822-a734-4ea5-85f9-56911c8c156c"
        },
        "item": {
          "id": "4f3cd00d-153d-43aa-82e4-dd66ad047801",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7e6705b8-3807-4a84-8bdb-958f41c966fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076c6715-0a6c-409b-9667-5c2182d25f2c",
        "cursor": {
          "ref": "e1cf55f2-7526-49d3-85ab-747edc9b2e35",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3ea137c4-299f-403b-af75-aa2e8310d961"
        },
        "item": {
          "id": "076c6715-0a6c-409b-9667-5c2182d25f2c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f5ce0d09-e082-4330-a08d-fe1ffccdc873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c0bfb8-49f6-4305-8399-96e649546e97",
        "cursor": {
          "ref": "e5e8543f-f01f-4502-b9d6-95519cc779ba",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "da9ced48-3159-49a5-81fd-14fd3f3c98f0"
        },
        "item": {
          "id": "c7c0bfb8-49f6-4305-8399-96e649546e97",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fd4f4688-7fa2-43cb-afe8-c73e7d9a64b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58125805-9d6a-41ae-b8a3-2059ad20b573",
        "cursor": {
          "ref": "5b553d67-a13c-476e-a6b5-8ddad0658496",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c4844792-ed72-415d-90a0-27ba80f74b1a"
        },
        "item": {
          "id": "58125805-9d6a-41ae-b8a3-2059ad20b573",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "10ce4831-72d9-4869-a47b-9304e869fefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d514055b-e908-484b-9c6b-7aa9694fa410",
        "cursor": {
          "ref": "04ff3eb4-c05d-4576-8dad-0b3d940e1f72",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b2679cea-a72b-49b8-b7e0-e0707d9aa343"
        },
        "item": {
          "id": "d514055b-e908-484b-9c6b-7aa9694fa410",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "df7a4e93-897f-476f-8d89-e57fc711c345",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7a6b0b-d2b9-4026-9c2d-95eedcbff4c3",
        "cursor": {
          "ref": "ec0539f1-ef0f-4353-961c-a48f7fc830cc",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "80bc80cf-63c0-4588-9457-782b99b6c201"
        },
        "item": {
          "id": "7e7a6b0b-d2b9-4026-9c2d-95eedcbff4c3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6a7d9c53-89cd-4055-a8fe-4948411fcecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05a88a5-d8d6-4f65-99fb-ba807c715e23",
        "cursor": {
          "ref": "f68f6458-ad29-477d-9c19-fe7fbb2bd3da",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1c3c21df-dee6-4084-a651-f0b65dbf6e01"
        },
        "item": {
          "id": "c05a88a5-d8d6-4f65-99fb-ba807c715e23",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "07a1c689-a3be-49bd-be98-f75671f0961a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99db039a-7439-43a4-9f4b-a1c532591f24",
        "cursor": {
          "ref": "019eaeac-8e1a-413b-a165-08b40f52581c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "042105dd-9c12-47c5-9a5b-e4b94234093c"
        },
        "item": {
          "id": "99db039a-7439-43a4-9f4b-a1c532591f24",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a77b52ec-b249-409a-9050-e9009ad78ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fb2dd7-5cf7-469e-a2b6-c68c3dc8eaaa",
        "cursor": {
          "ref": "d7792a99-2460-40c9-8012-4cd2170664b1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "69eaf9d8-2cf8-4c03-a831-7238f605dff8"
        },
        "item": {
          "id": "63fb2dd7-5cf7-469e-a2b6-c68c3dc8eaaa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2e08d2f0-4b95-4d9a-b8cc-8a8ec6dae156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edbb6a7-5270-425c-b1ad-409a27e3bfed",
        "cursor": {
          "ref": "0b21893f-9632-4aa1-a8fa-a79f64f1d3f4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f7bcf943-4407-490a-adb1-dbbb29501620"
        },
        "item": {
          "id": "8edbb6a7-5270-425c-b1ad-409a27e3bfed",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e1ed2e23-e04c-4bbf-84b7-a58cb268481a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c246ba2-b7d6-48ab-b5e9-42236f2f7213",
        "cursor": {
          "ref": "f741aa32-5c54-4a5a-a66e-367ee91331e7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8e896f49-4d05-4865-bca3-55fd3cfcc37c"
        },
        "item": {
          "id": "2c246ba2-b7d6-48ab-b5e9-42236f2f7213",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "123aa4fd-8033-4813-92d6-5efd8b9cbbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880d09a1-ee5e-4b5a-b95c-3d8607aa4071",
        "cursor": {
          "ref": "2ac08257-e5b7-4995-91e4-86e72779b439",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b782be2b-dc0a-49d0-ab99-0c89e268d227"
        },
        "item": {
          "id": "880d09a1-ee5e-4b5a-b95c-3d8607aa4071",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7b1a7417-2092-44ce-a43f-e00886fc34b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eaa6ac-2054-4e02-9f5e-2298dcd37db5",
        "cursor": {
          "ref": "bfffc098-bd20-40f0-b59b-3a5e71a4d375",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1ded9d98-b57b-487e-9fde-1ba04064aaeb"
        },
        "item": {
          "id": "96eaa6ac-2054-4e02-9f5e-2298dcd37db5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5c292a89-3153-4ebe-b7c4-8da883e71023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8c6da0-ad42-46cf-81b8-482bb023c938",
        "cursor": {
          "ref": "cc58b621-7b1a-4255-9327-dc9b60f6428a",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "96d9bb54-d3d3-46f3-b0a5-4a78a5aaae32"
        },
        "item": {
          "id": "ed8c6da0-ad42-46cf-81b8-482bb023c938",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "86770919-5eb2-419a-aa4e-db1475757e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1568b67c-1504-4e4f-b76a-04f460f09a7f",
        "cursor": {
          "ref": "d1aa6fad-033c-468f-b2d7-360b6a0a6271",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "63f0e765-7594-4d51-a939-c405358c285d"
        },
        "item": {
          "id": "1568b67c-1504-4e4f-b76a-04f460f09a7f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bdf79a34-1aac-43a4-a649-e1c62276f399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3bbb0a-9707-4f63-8748-6ddbafa2718d",
        "cursor": {
          "ref": "748a27f3-8e4c-4e87-a6e5-bd5628ec5fcc",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "93dc6815-fa3b-4019-8edd-9ffaeed1724f"
        },
        "item": {
          "id": "dd3bbb0a-9707-4f63-8748-6ddbafa2718d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "da0ce06a-45f9-42c8-a08c-278992633c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ed7a46-9d72-49df-85dd-117187bce83a",
        "cursor": {
          "ref": "1d9a0866-38ca-4beb-8c40-a92dcafdb6ce",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "37441c95-379c-45b3-be19-2a1be9288782"
        },
        "item": {
          "id": "79ed7a46-9d72-49df-85dd-117187bce83a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0c129a27-ff4f-44b6-8454-a9294fd1d147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdb035f-b79f-41cc-b6fb-3ede44267399",
        "cursor": {
          "ref": "d62e87d3-9fe1-4b57-a641-f8f8555774f6",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "15dc5d14-584a-48fb-8e9a-06f043c3047b"
        },
        "item": {
          "id": "1fdb035f-b79f-41cc-b6fb-3ede44267399",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e4915807-f647-460c-af6c-a78133793b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10d8e8c-41fb-40a4-882d-ce31a0cbc219",
        "cursor": {
          "ref": "1e78a0ec-d603-49cc-a944-7272459e681b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "653811d0-b09f-4d27-bee6-7ca446de8e41"
        },
        "item": {
          "id": "d10d8e8c-41fb-40a4-882d-ce31a0cbc219",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "129f8af5-90a1-45d1-99fc-eeaf075d5d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a777c168-341b-434f-9ffc-783452bbde7b",
        "cursor": {
          "ref": "8eeeaca5-8713-43ae-be7e-99824b5c2449",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c2020615-d1fa-48df-a0f3-a797757dbdf8"
        },
        "item": {
          "id": "a777c168-341b-434f-9ffc-783452bbde7b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a1bd04cf-bdaa-4382-9cfa-ed7927ba7566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314bd41a-4bba-41bf-af1e-45d93b1d99e9",
        "cursor": {
          "ref": "deae6593-daff-45d8-997d-0571f1319139",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6710e93a-90ba-45e0-927a-217a731cc887"
        },
        "item": {
          "id": "314bd41a-4bba-41bf-af1e-45d93b1d99e9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a62880c9-fa6e-45d1-9b5d-c386b576101d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f95e76-a191-444e-baf9-99f44252610c",
        "cursor": {
          "ref": "187f88f9-1234-40d9-a255-8804cc75182d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6ff22f2e-51fb-49dd-ad1d-1ac744c54d8f"
        },
        "item": {
          "id": "a8f95e76-a191-444e-baf9-99f44252610c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4e50ab51-76f0-4f25-ba38-a0a84a2d42d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3969472-3d94-482c-be43-6a9b5fedd33f",
        "cursor": {
          "ref": "55d37a61-1d64-4ef5-a9be-b00eff1b01f9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "95546f35-bef3-440e-a072-47f4322551d3"
        },
        "item": {
          "id": "b3969472-3d94-482c-be43-6a9b5fedd33f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cbc54e6e-d3e0-488f-8199-8de238fdbfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c6f5a7-db9c-4810-9a74-ebc53bb272ea",
        "cursor": {
          "ref": "27296bbe-c80e-4359-ba04-bfb263906a62",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7fd9133f-1f16-46ec-945f-0090290b55d7"
        },
        "item": {
          "id": "b8c6f5a7-db9c-4810-9a74-ebc53bb272ea",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0ce87db1-11c5-43b0-8109-ff55942a2c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c08a6b-c3af-47cc-8f09-21f65675c876",
        "cursor": {
          "ref": "ab3e6a8f-f9a6-40d6-9867-53aa68a43544",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e243b5ea-659a-4e13-842b-ebb28da3d2d9"
        },
        "item": {
          "id": "98c08a6b-c3af-47cc-8f09-21f65675c876",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6c3911ac-547b-4f35-b739-64acbd3d8c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea20e1d-5c12-43f2-9d6d-3c695485d746",
        "cursor": {
          "ref": "3f898495-8a3c-4dab-94e6-80408c4c81f2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2cf1facf-b3b2-442c-821a-3a58587c46fc"
        },
        "item": {
          "id": "1ea20e1d-5c12-43f2-9d6d-3c695485d746",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "56b92f68-24ff-4616-bffb-97821414eeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10caa247-ee96-4c82-b03c-a424161552d3",
        "cursor": {
          "ref": "ecdbea3f-8d53-41f9-ba2e-07967749b727",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "595792b4-f342-461b-8d5c-1234793cee4a"
        },
        "item": {
          "id": "10caa247-ee96-4c82-b03c-a424161552d3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2624b687-e687-4af1-9b87-9536e81e33b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5898491f-eab4-48b6-9a47-8c1ab861240d",
        "cursor": {
          "ref": "a14f70e3-eb82-4a59-a589-7ceff80095ce",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8571fe06-56fc-4386-8792-cd9a6b918bcc"
        },
        "item": {
          "id": "5898491f-eab4-48b6-9a47-8c1ab861240d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e37f43f6-0204-462f-8bd9-7338e61347d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256bf6c7-e004-458e-b0a1-9cc2653e6d5a",
        "cursor": {
          "ref": "2a318377-1162-4a4c-a1fb-374f1567b846",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9829d126-d90f-44db-a051-8a8d79fd7ce9"
        },
        "item": {
          "id": "256bf6c7-e004-458e-b0a1-9cc2653e6d5a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "99452733-9bfd-49ed-b371-7bd87af62b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f822b6-3209-4150-8655-01479d210827",
        "cursor": {
          "ref": "514693eb-d69d-4f0c-9856-a385aceb2a52",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b25add25-186c-4b53-a083-38b77f3bf295"
        },
        "item": {
          "id": "96f822b6-3209-4150-8655-01479d210827",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3b84f7a8-66d3-4190-923a-be665b66d573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ff766a-337d-43b6-b835-4953d3a34f86",
        "cursor": {
          "ref": "96e2e61c-97bf-4bb7-a1af-055afceaae89",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cc824a3d-5498-4eb8-8b45-5b7cacea7bc2"
        },
        "item": {
          "id": "d5ff766a-337d-43b6-b835-4953d3a34f86",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cd15dd2e-cea7-458c-a576-a49c48d17545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ac6e9f-c16e-498a-a698-7cafa6df5675",
        "cursor": {
          "ref": "f95b9a6d-f741-4c34-a70a-1f5faae6ed29",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "22bedd59-01fd-431d-bc30-c69e6a2128d0"
        },
        "item": {
          "id": "79ac6e9f-c16e-498a-a698-7cafa6df5675",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6b581b01-f94a-420b-9ce9-f38800aa3477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4c6fcc-ede0-4240-a82b-d384b6232f7e",
        "cursor": {
          "ref": "0c1b09fb-aad6-4eb5-8849-74187e7037f5",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ef791dc9-be0d-4e5a-832d-979332b5ba10"
        },
        "item": {
          "id": "3e4c6fcc-ede0-4240-a82b-d384b6232f7e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5cd00fa6-4bfd-4398-b53b-0b403ea1741f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7b31c3-e37a-4a68-9bd7-b979207d5d5c",
        "cursor": {
          "ref": "f2248f08-2f72-4c03-8f49-ab5e37085b56",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d49162ad-bed9-4e14-b11b-775873c1b387"
        },
        "item": {
          "id": "df7b31c3-e37a-4a68-9bd7-b979207d5d5c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2495fb2e-5bf1-416f-bedd-c881d3da420d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8e91a1-dd70-4a99-a1ef-36f529d845cb",
        "cursor": {
          "ref": "505219cc-39b8-4d3f-acb9-7c0f536319cc",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fe9134c6-2200-470a-bcab-6d40021cd96a"
        },
        "item": {
          "id": "2b8e91a1-dd70-4a99-a1ef-36f529d845cb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b2d5c24e-bbaf-4331-9b07-a02ea61b8598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20baece9-5f88-42a0-b613-add4c2ff5cac",
        "cursor": {
          "ref": "c605d57e-09d7-49c0-988d-5cc6764fc2d8",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1cfaba36-f9d7-4573-9e30-32686f7f7ab0"
        },
        "item": {
          "id": "20baece9-5f88-42a0-b613-add4c2ff5cac",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "57fd7740-1402-4013-91f2-67b642f97839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23a39ff-3958-48bd-8c5f-e67035365d50",
        "cursor": {
          "ref": "6528a3a3-dd8a-4b6b-a50a-dcfbadaee386",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1d2bbd28-7bc1-4b4e-8bcf-d0a57d43d598"
        },
        "item": {
          "id": "a23a39ff-3958-48bd-8c5f-e67035365d50",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9d9750c3-0088-4806-bbab-dd6687a6bb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe94689f-5efb-405a-b9e6-969dae5d054d",
        "cursor": {
          "ref": "4a8f4cb6-66b0-411e-93b4-10c79aac3956",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "da1f16e5-2bc4-49c0-8c3a-dbbfcec628cc"
        },
        "item": {
          "id": "fe94689f-5efb-405a-b9e6-969dae5d054d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e25f9cf5-dbd7-4668-a66b-815905a5ed3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae2f884-f030-4bf2-9142-78034633bccc",
        "cursor": {
          "ref": "e7b0f852-5597-40cc-8130-7e7d67ebe7d1",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "93b82357-703d-4632-9c75-76fb303fd3e0"
        },
        "item": {
          "id": "9ae2f884-f030-4bf2-9142-78034633bccc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ce76bf3d-0cbb-4c17-a37a-5b3d8863bcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963e306e-2b95-48e8-8786-51a16fd75069",
        "cursor": {
          "ref": "002cd2e7-cdae-414c-97b7-27bd6bab370e",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7ba09dd9-a882-412f-857d-cd53957cacd0"
        },
        "item": {
          "id": "963e306e-2b95-48e8-8786-51a16fd75069",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2e4d6875-2c54-4019-8fff-52d85320de7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357bd77e-4e6f-4425-bbdd-835bdf0d3e8a",
        "cursor": {
          "ref": "d4c3d261-318e-4fca-bd89-54b871df4beb",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "04fedae9-06f8-4bd8-88ca-70af5985a47b"
        },
        "item": {
          "id": "357bd77e-4e6f-4425-bbdd-835bdf0d3e8a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "80992ac1-246c-4c8b-996f-eb35933da1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f82f88-a503-4f9f-aba7-04f5ebbb1fe2",
        "cursor": {
          "ref": "31fbec2b-f810-4923-b19a-0abf107daeb8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3f51a698-1d8e-46b0-8ba2-3511d766db70"
        },
        "item": {
          "id": "25f82f88-a503-4f9f-aba7-04f5ebbb1fe2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "33eafa17-d759-450e-95fa-b5c0debbe134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92af6351-193f-444c-8e92-1e0af18437b5",
        "cursor": {
          "ref": "988a494e-5169-478e-af34-2138cafb7e96",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "951d9bf3-0da3-4728-9ef6-44d9a77ba4bf"
        },
        "item": {
          "id": "92af6351-193f-444c-8e92-1e0af18437b5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "de7dd1f0-5e21-4eae-8ff8-a10d8d73987c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b633f30c-fa8f-479f-bbdc-1c88117c209f",
        "cursor": {
          "ref": "565aa1ec-5a11-4734-ac11-46fbe6efa1cf",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "472e403d-53bc-4c0b-bfc4-0a110330a54e"
        },
        "item": {
          "id": "b633f30c-fa8f-479f-bbdc-1c88117c209f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "65332b26-6795-4cb0-be01-4917441f75da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72ff263-ce33-4e2d-8d89-bd97bdbb8f00",
        "cursor": {
          "ref": "1be59e2c-5de6-47f4-a334-95f4666fc8b3",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "39093002-4a25-49eb-b102-5c6377d6ee16"
        },
        "item": {
          "id": "f72ff263-ce33-4e2d-8d89-bd97bdbb8f00",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bcb70015-95b8-4ce8-904b-badc1b3d3b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cd812f-3155-4eb9-a92b-bbb53527f395",
        "cursor": {
          "ref": "2f395664-6514-4976-8c60-105472a0ceb0",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7d8e6aa0-8900-4780-a009-d20fb9920bbf"
        },
        "item": {
          "id": "32cd812f-3155-4eb9-a92b-bbb53527f395",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5355f8be-9862-43b9-84f2-a8c31eead3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6424f47a-2cde-4509-8ce9-6dd1f6c8430a",
        "cursor": {
          "ref": "26b55abd-4551-4745-860c-97f11534779f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cfd4d939-aa1c-47f2-97d2-8d166e34a554"
        },
        "item": {
          "id": "6424f47a-2cde-4509-8ce9-6dd1f6c8430a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bee65da0-6518-4129-bdb0-62c3330a30da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222bece6-85c7-46b2-a7a2-0b7c2f6e0d2a",
        "cursor": {
          "ref": "8d15ee9e-fbc6-4956-a45d-424d73e5245d",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "56dd765e-2bea-4c71-aaed-f4d3271694fd"
        },
        "item": {
          "id": "222bece6-85c7-46b2-a7a2-0b7c2f6e0d2a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "45a2eaaf-8625-4a6c-b5b7-bff01eeb6be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd7b75a-8c41-43ea-9402-b7e31490bb5b",
        "cursor": {
          "ref": "b324cea2-4b4d-491c-b4b0-2845d119226c",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "959d30c9-ff09-41e1-a12e-8c66777b0d0e"
        },
        "item": {
          "id": "bbd7b75a-8c41-43ea-9402-b7e31490bb5b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fd67a0ac-6330-47f2-a58b-d9508abeb593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1212bf-7ef3-4d48-b2a4-db4d61fef5fd",
        "cursor": {
          "ref": "6fb4f10f-0fb6-4d54-b760-0d3fc6a7dc30",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8709fd58-3e61-4205-8bd9-3a8e9ee63bfb"
        },
        "item": {
          "id": "fc1212bf-7ef3-4d48-b2a4-db4d61fef5fd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1ebc17eb-5ac9-400c-a2cf-6f5a63a2a8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a596dc9-190f-4fbc-ad13-55e2a56b1f5d",
        "cursor": {
          "ref": "63bb3b55-2180-42a6-ad35-dd99f597cdef",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "57009239-4afb-4d5d-b87c-b1515ac3a62e"
        },
        "item": {
          "id": "9a596dc9-190f-4fbc-ad13-55e2a56b1f5d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ed1a89da-b61d-4822-a6ca-946d9180c69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28223ee6-c5dc-4c8e-aabf-30bd283f841a",
        "cursor": {
          "ref": "07c57f38-68b6-4dd2-b1f2-b56e5e3fe565",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "02f06b9a-307f-46ef-b973-11a424fdbf4d"
        },
        "item": {
          "id": "28223ee6-c5dc-4c8e-aabf-30bd283f841a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6640c98f-205b-445b-bce4-64620df38a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969a999a-a374-4a48-b10f-db661f9785db",
        "cursor": {
          "ref": "495f0a4e-39d3-4772-94ec-424355f5c9cd",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b8eadcc5-6e2f-4431-884e-f804a0d2f9ee"
        },
        "item": {
          "id": "969a999a-a374-4a48-b10f-db661f9785db",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "aa9d0dd1-226d-4c4c-8d0a-6b1bd8417e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf21855-4e54-4e00-bc83-7e0c41f7566f",
        "cursor": {
          "ref": "9c4d3ac1-8750-43b3-97b1-c4e09acd6d0f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7eb0b33e-dae1-417d-8297-7f9290545417"
        },
        "item": {
          "id": "6bf21855-4e54-4e00-bc83-7e0c41f7566f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "077f8d39-4002-4d3b-b306-719af0d2619c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0354607f-4b4c-4ea5-aa3f-a31d71b0ba9c",
        "cursor": {
          "ref": "55257862-327c-4946-8825-5e11abb3458e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "64e67dcc-7a1e-4731-9b60-6f61ff42e8ca"
        },
        "item": {
          "id": "0354607f-4b4c-4ea5-aa3f-a31d71b0ba9c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d4e98311-f912-4346-94d1-4f547eda8b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5441463a-2a11-47e8-88f1-5d6fd4ad30fa",
        "cursor": {
          "ref": "3908ba0d-4bf0-4fa6-b697-e1a3d2bf5ec9",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9514a1f6-492a-4a16-bf58-5eefbc2eae18"
        },
        "item": {
          "id": "5441463a-2a11-47e8-88f1-5d6fd4ad30fa",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8712ae9c-0e83-4d73-9bf6-ff8e0bf80eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52de7fed-f885-4406-aa6d-e704e0780f8f",
        "cursor": {
          "ref": "04df5d84-8cea-46c0-ad0b-60b432acab20",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "95929147-953f-4e66-8e65-88e13afcf265"
        },
        "item": {
          "id": "52de7fed-f885-4406-aa6d-e704e0780f8f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dfb74dec-0eb2-43b2-9b2c-e4c5197945dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d650fd-a84d-4534-b24a-01edcb464857",
        "cursor": {
          "ref": "78071e0c-55ae-4399-9246-cc10657f29d8",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c9446134-e2fe-47cd-a6a1-98bac71c0248"
        },
        "item": {
          "id": "77d650fd-a84d-4534-b24a-01edcb464857",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "04220d2f-3000-464b-a2f9-f53d69f0bb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea36d64-5e8c-4444-bac5-5a8c5455ac34",
        "cursor": {
          "ref": "e8a7c02a-c36b-49e9-9b15-882667eba80d",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6598c4be-30fb-4cdf-9357-e837c20fe99a"
        },
        "item": {
          "id": "9ea36d64-5e8c-4444-bac5-5a8c5455ac34",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "466e5f16-0bca-4aa3-813a-a11d7f86cfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517a00fe-5f61-476d-88e1-0ceae4b5387b",
        "cursor": {
          "ref": "799bc6a8-8796-4de9-9569-fdb0a19a8db6",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "34de42c5-4c46-4cdf-88d2-1040e309f94b"
        },
        "item": {
          "id": "517a00fe-5f61-476d-88e1-0ceae4b5387b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a121b637-4e92-4f92-be13-673568bcdfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21f0b00-05dd-44fb-96cb-ff20b94fef8c",
        "cursor": {
          "ref": "0e9ef0d5-e4ee-466a-8941-9541bae2e384",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8c5ba6c2-9332-4794-9ce4-1895be60d25d"
        },
        "item": {
          "id": "d21f0b00-05dd-44fb-96cb-ff20b94fef8c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e74af259-9249-4611-8197-7d34862df94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87861c5a-ed67-4161-b231-03c852d89105",
        "cursor": {
          "ref": "4fe02614-5940-43df-a702-99065cc15cf1",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7d501f0a-a1a8-4bb9-ae45-efd56710383e"
        },
        "item": {
          "id": "87861c5a-ed67-4161-b231-03c852d89105",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5f25ee13-50e2-45e5-b661-b3234c06a399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876b433a-022e-4f3f-9d8c-411bf4594b6e",
        "cursor": {
          "ref": "ebe097ba-09fe-4506-89fa-bd4a2a8a3cfd",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c31f3297-4589-46a6-87cc-bfbdedf4788a"
        },
        "item": {
          "id": "876b433a-022e-4f3f-9d8c-411bf4594b6e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "48c793be-0784-4c63-88db-9d1a738e100f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e033c2-de5f-46af-9890-8f86ed74d418",
        "cursor": {
          "ref": "9767bfa6-f1ec-4764-a450-385ccd7dac99",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1e72deed-da0e-4252-80f9-e639f199f748"
        },
        "item": {
          "id": "b6e033c2-de5f-46af-9890-8f86ed74d418",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1e87508a-6429-4d00-a350-ce99d3b1aaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2ffa90-f063-4e97-93c2-c183dd8e1767",
        "cursor": {
          "ref": "adf415aa-1f14-4974-93ea-76902978c902",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8aab9bc8-1a16-4547-a641-2ead5e8691c1"
        },
        "item": {
          "id": "7d2ffa90-f063-4e97-93c2-c183dd8e1767",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "acca17dc-4a04-4387-8090-14435aa005f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ad3ef1-c0a3-400a-843c-9307db2c2e4e",
        "cursor": {
          "ref": "c80745ac-7acd-4dc2-aa6b-96291f9471e6",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c1b053db-fc60-46b9-aba1-53b68fec68ef"
        },
        "item": {
          "id": "42ad3ef1-c0a3-400a-843c-9307db2c2e4e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b645b709-1065-4e23-ae0f-f823268f1246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e75880-835e-4778-8460-1ab634879513",
        "cursor": {
          "ref": "66dfbc42-8d10-4636-b181-b66b77636bf1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f318879a-c65f-4c4e-b3c3-092616b6cd2d"
        },
        "item": {
          "id": "c4e75880-835e-4778-8460-1ab634879513",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2022ed9b-1a2b-4c8d-a464-0036e677e23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e72db97-760e-48b4-afc4-529fdf670576",
        "cursor": {
          "ref": "d9e9039c-ae45-465f-9ccc-44c72549698a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d2fcde49-85ba-4fd8-9caf-70a5f48313f1"
        },
        "item": {
          "id": "7e72db97-760e-48b4-afc4-529fdf670576",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ca0fb358-b71e-4bed-bd7b-1b278cf1261c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5a3e09-8367-446e-bf63-6ec110f45a1a",
        "cursor": {
          "ref": "d4fb7c81-b077-4d59-b18c-b657678d7988",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "063cadb2-42b3-4ee4-842d-981e9e06f457"
        },
        "item": {
          "id": "eb5a3e09-8367-446e-bf63-6ec110f45a1a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ca42a60d-564e-4721-8e24-9a70c22dfffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088cdb2c-8175-4ea5-a297-fe79783d0a54",
        "cursor": {
          "ref": "678af3bb-865e-4d9c-ba33-325ce6ca80f1",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "93cc3cb0-bfeb-43d9-9742-1eab4ea16e21"
        },
        "item": {
          "id": "088cdb2c-8175-4ea5-a297-fe79783d0a54",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "69a2b403-b058-478c-822a-902c4debfd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15c96c1-5226-47ef-9c3b-2e974626af00",
        "cursor": {
          "ref": "9867d782-197d-418b-9b60-5dc3374aa766",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "076dabfe-3ed3-4285-b2f5-3f290c09f7ad"
        },
        "item": {
          "id": "c15c96c1-5226-47ef-9c3b-2e974626af00",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6fde24e8-9d39-4ffa-bf16-7480f6d82ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85e453a-85e5-47ac-ab00-7524cbb4de77",
        "cursor": {
          "ref": "dc808486-c27e-4a80-900e-187b64f5ef7d",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4606c00c-a85c-4c75-80a6-3d7926a35ab3"
        },
        "item": {
          "id": "d85e453a-85e5-47ac-ab00-7524cbb4de77",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "08a95cd9-f25f-47c1-b45c-5f71ab665336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45639e2-fac8-4afa-8cc0-73200b16aa97",
        "cursor": {
          "ref": "51206934-55b1-4235-93cc-6d2dfe0cb68e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "305ad203-8109-490a-8305-a6a2c2e6cf78"
        },
        "item": {
          "id": "d45639e2-fac8-4afa-8cc0-73200b16aa97",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "47af04a8-13a5-4cab-98bc-251bacdc915b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490ff872-5f66-49e1-a41b-39689643652c",
        "cursor": {
          "ref": "b2ab0fc0-be0a-4200-bbd6-292f42c7fbda",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8cef74a3-d3f3-4d78-a8aa-c497d7fc8dff"
        },
        "item": {
          "id": "490ff872-5f66-49e1-a41b-39689643652c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a833fa60-c849-49cb-9d21-1ab32a970ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fa03c6-9775-440e-a7cc-850b40ba5f6e",
        "cursor": {
          "ref": "f28ed105-f1ac-4311-ae54-ce3f32b9640d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "22846454-8a7d-4d6b-9da8-b901302327d2"
        },
        "item": {
          "id": "e9fa03c6-9775-440e-a7cc-850b40ba5f6e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5fc791de-b70d-44cd-853a-e0a1954abbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f550946-03c4-4131-b149-57d9e31abc46",
        "cursor": {
          "ref": "af251bcd-9fe9-490b-a457-0a0597b13974",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "31cef0df-672b-4937-8eee-00f8d73a6c95"
        },
        "item": {
          "id": "6f550946-03c4-4131-b149-57d9e31abc46",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3e510708-39da-44fd-84a3-084e2d85c8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09096cd7-2ce1-48ff-80b9-5fb98496cc67",
        "cursor": {
          "ref": "944c39a8-6ea5-4f97-ac10-9bef561d9c65",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8a41482b-27cb-491e-ab13-1276a6b27d2d"
        },
        "item": {
          "id": "09096cd7-2ce1-48ff-80b9-5fb98496cc67",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2e8f2847-9bc1-4ef3-8343-3ea14de15dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df441fe0-16bd-44a6-b8df-62cfdffc6d90",
        "cursor": {
          "ref": "0fc1a6dd-5446-46f3-bd6b-c17cf9629e13",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7389f794-5542-4458-be60-cc2dd5f74abb"
        },
        "item": {
          "id": "df441fe0-16bd-44a6-b8df-62cfdffc6d90",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "194ed9c5-6aac-486d-94c8-ab0f2d00a076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d994902f-d117-473f-a8af-dd9d319cc39a",
        "cursor": {
          "ref": "3ff2aaf8-243f-48ce-800f-495c0fe4a47d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5d7cd986-c07d-456e-9d61-3791690fb354"
        },
        "item": {
          "id": "d994902f-d117-473f-a8af-dd9d319cc39a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c334c5cf-e2d8-4ab5-95f3-05cef5281c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7ac6ab-9dc6-44ab-a103-0ffa30c51898",
        "cursor": {
          "ref": "1baec38b-6518-49ca-a6c1-d9f687c62758",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ebb2aa4a-f9ae-427e-8d71-1abe78913f7a"
        },
        "item": {
          "id": "6b7ac6ab-9dc6-44ab-a103-0ffa30c51898",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "00ac9c2a-3f5b-4584-8e36-ef5b57767020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d5b272-8cb7-4f35-a8e1-b602d96e77f7",
        "cursor": {
          "ref": "d20016d1-ca69-49a2-a2d9-0ca09a0ebdf9",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "01085747-7638-42ed-98d0-d438048d39c5"
        },
        "item": {
          "id": "f8d5b272-8cb7-4f35-a8e1-b602d96e77f7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7b1b2dd1-b9df-499d-8f25-48611059027e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08626889-66ad-4787-8d02-da676ca228e0",
        "cursor": {
          "ref": "b4e23505-3c7c-47eb-9e0c-0214e40323b7",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fadaeade-a56b-4ff2-a159-caae5839d7d7"
        },
        "item": {
          "id": "08626889-66ad-4787-8d02-da676ca228e0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "490eac95-581d-4a78-bcff-d04624784c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe935c7-183b-43f5-949c-12256b29ccc7",
        "cursor": {
          "ref": "15ba279d-ffaa-438d-a7c7-fa1bfa6a3826",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ce291fb9-749b-489b-ae23-ecabbbf914d0"
        },
        "item": {
          "id": "8fe935c7-183b-43f5-949c-12256b29ccc7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "07f1027d-ab85-42cb-9c9d-e72298a829cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7182494-1238-4877-9c06-12e52d4fc8d2",
        "cursor": {
          "ref": "8695708a-9c48-42a0-97c4-7971fff14b23",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ce4523da-6c62-4e82-b5a9-b1fc89bb1353"
        },
        "item": {
          "id": "a7182494-1238-4877-9c06-12e52d4fc8d2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7ee460ef-0e24-40f0-bad5-0b1df09d8301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d339c4-0780-40b0-b0af-c04df23ec1a7",
        "cursor": {
          "ref": "188d172f-4a14-481a-8cc8-a703c135e653",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "427ef88d-ef2a-4b12-8766-bb6f6f36598c"
        },
        "item": {
          "id": "27d339c4-0780-40b0-b0af-c04df23ec1a7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ddf7dcee-8e43-4a77-b7b9-43d0eb52b377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2f132d-699a-4abb-98df-f47b227f457d",
        "cursor": {
          "ref": "a0920b27-ab21-49ae-93b8-a58880139960",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ed19c911-a1c0-4188-8489-51faf9e024fb"
        },
        "item": {
          "id": "ab2f132d-699a-4abb-98df-f47b227f457d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4d10ec5a-baae-48aa-a2aa-715319d4c580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13859a57-1910-4c30-96fc-ae2cb502eed5",
        "cursor": {
          "ref": "2dd6036c-c5d8-4752-b8eb-7b48cee71877",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "268e4798-5462-4189-9e5f-48957aae2938"
        },
        "item": {
          "id": "13859a57-1910-4c30-96fc-ae2cb502eed5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "301ac5a2-0223-403b-a1e5-502530d405d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924b060e-c73e-407f-b5d2-4123b07b93d6",
        "cursor": {
          "ref": "ec922ec4-c55a-4c67-b52b-4482cd6013b3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ef7f8c01-5b6d-450a-9921-15337fc3a6e3"
        },
        "item": {
          "id": "924b060e-c73e-407f-b5d2-4123b07b93d6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "87f960bb-6454-4432-8a22-4548ea9a8650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5cf162-cf10-4afc-aa53-787316de4e6b",
        "cursor": {
          "ref": "9fbef733-a81e-4fc6-8732-a83b69cb91df",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c45efb5f-8cae-4539-bc9a-b01f41b7ad41"
        },
        "item": {
          "id": "fd5cf162-cf10-4afc-aa53-787316de4e6b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "39936481-601c-4bd9-bb22-3c6567f3d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957f0a18-952a-4d7c-92a3-1ab0ce6c7beb",
        "cursor": {
          "ref": "da9ec6e0-b092-4211-8e21-d98edce93f04",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7ae54256-31a1-489c-b53e-61e896fe6115"
        },
        "item": {
          "id": "957f0a18-952a-4d7c-92a3-1ab0ce6c7beb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2b763c59-ec65-4c18-af49-d82272f3af9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e188bdd0-bfd3-4b40-9d4c-55eb075f5f9e",
        "cursor": {
          "ref": "c8e5be23-a7d8-45c6-893e-f6afc8c6a801",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f5d9d3c6-b0bf-4fc6-be91-361c71614488"
        },
        "item": {
          "id": "e188bdd0-bfd3-4b40-9d4c-55eb075f5f9e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "32fc83c3-61ae-4258-9dfb-905a0b408a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abab2769-fd44-42a8-a7de-d96154216bd9",
        "cursor": {
          "ref": "5b66d95c-da73-42d7-9afa-618e83297d7b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "006137e8-0511-40e8-af34-80ddb1481c39"
        },
        "item": {
          "id": "abab2769-fd44-42a8-a7de-d96154216bd9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "864e6da4-57d7-4ad9-95c4-d1153a485189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10099b12-c83a-44c9-afb1-cecf46a5e5e8",
        "cursor": {
          "ref": "e2fe5cd5-7370-40b0-8d06-a60258146094",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "59b55241-942b-405d-a673-1197c9d1f1c3"
        },
        "item": {
          "id": "10099b12-c83a-44c9-afb1-cecf46a5e5e8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b35cd4db-fe2f-45df-a8af-db1a195eb0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57bc8dc-2174-447f-96d1-f5d8ca58932b",
        "cursor": {
          "ref": "f57140fd-b4ea-485d-9364-1d3167be817e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0e43de21-7cb4-4378-ab1f-327fbc7a7add"
        },
        "item": {
          "id": "c57bc8dc-2174-447f-96d1-f5d8ca58932b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b70feab9-18a1-47a4-9529-8c0af818bf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4b4408-475b-472a-8264-b4f9edd61694",
        "cursor": {
          "ref": "5c313e28-6b20-4e69-afa1-7b86a2d11d67",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a00aabb4-0195-4d30-b373-b0b54a312539"
        },
        "item": {
          "id": "ef4b4408-475b-472a-8264-b4f9edd61694",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0a676d9a-5513-4a4d-a526-59081fe437ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b141b111-70bd-416e-8717-3d116707b23c",
        "cursor": {
          "ref": "d9911b30-d0a2-4e08-b80c-ef158503f219",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1550cd1a-093a-47ca-89ee-9e2c8f152d21"
        },
        "item": {
          "id": "b141b111-70bd-416e-8717-3d116707b23c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "07eda3c3-a532-45f7-b2aa-14cee33d09fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311310bb-31de-4f27-ba92-4674d558cd4c",
        "cursor": {
          "ref": "72717d2b-a49e-44bb-be0e-d9e83a3ebed5",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9df4b829-3e16-453b-aa57-8b1a39475852"
        },
        "item": {
          "id": "311310bb-31de-4f27-ba92-4674d558cd4c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4b49f9d1-1117-448e-a2eb-8882bea86a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f68be62-3b9c-49da-9885-db17282357c2",
        "cursor": {
          "ref": "b203a313-db31-4178-b0bd-6372cc3e3c70",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "893308b0-d4c5-4f41-9b7e-c53247a94e0b"
        },
        "item": {
          "id": "8f68be62-3b9c-49da-9885-db17282357c2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "44512f9a-472b-4231-b6cd-974af019076f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f86f08-822b-479b-a2fe-4e056aa10ff6",
        "cursor": {
          "ref": "135fdd04-7955-4c84-b156-3b0b6843d278",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f9971ea4-8fb8-40e1-b226-be7c90742756"
        },
        "item": {
          "id": "17f86f08-822b-479b-a2fe-4e056aa10ff6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7eee4b56-da95-4eaa-82b2-4d82becc6b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67250a91-fb86-42e8-9c4a-5444f2b9e586",
        "cursor": {
          "ref": "cb22b354-32c1-4c52-9582-70f1724f2b26",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c1753011-e528-4d94-88b3-33427fa70c02"
        },
        "item": {
          "id": "67250a91-fb86-42e8-9c4a-5444f2b9e586",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d3ad569a-555e-4116-a9a0-dcb878801d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caea9a9-3bd4-418f-a96c-dd50d960cafd",
        "cursor": {
          "ref": "6decad97-e675-4dd7-8da8-f5008fda1d02",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8cf7312f-e1e6-4313-a040-778dda8a2912"
        },
        "item": {
          "id": "8caea9a9-3bd4-418f-a96c-dd50d960cafd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2dc305fe-2546-4583-9416-df3ba24c9d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c366bdb3-f68c-4364-bbf5-9ab4ad2d0ebe",
        "cursor": {
          "ref": "946dbbe3-256d-4c6d-bec3-a1d927c5f188",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "57d99b98-9c34-4b4e-b7e6-f13626d8052c"
        },
        "item": {
          "id": "c366bdb3-f68c-4364-bbf5-9ab4ad2d0ebe",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2e8c7eba-dd19-4622-97fd-39b6e5aa9bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22efd8a4-70e9-47a9-8d17-9687de8bc00c",
        "cursor": {
          "ref": "28a45cec-8b01-44ab-8687-ee77d747bd15",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c63582dd-8b23-451b-a8aa-abd7186b400b"
        },
        "item": {
          "id": "22efd8a4-70e9-47a9-8d17-9687de8bc00c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9a8a1df5-d0ed-466e-9e42-bffe1ab8872a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392268ff-3e32-4e85-b98c-c2311db0933e",
        "cursor": {
          "ref": "f24690d9-6c43-4e76-a157-2390e6f2bdbe",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5b7a4393-9bdf-48a1-9a2e-5d13b32c3237"
        },
        "item": {
          "id": "392268ff-3e32-4e85-b98c-c2311db0933e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9085fe81-224e-4f8a-b1f0-975fc9c9aede",
          "status": "OK",
          "code": 200,
          "responseTime": 122,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf3cc03-6410-4071-82a8-8f62d986453d",
        "cursor": {
          "ref": "cc944be2-7bbb-4724-a448-ad5c8199fe66",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5cee3a51-9214-469e-9912-94b336a94a96"
        },
        "item": {
          "id": "1cf3cc03-6410-4071-82a8-8f62d986453d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "abedcc37-31f5-4e78-87a8-8b73d189411d",
          "status": "OK",
          "code": 200,
          "responseTime": 1471,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedfb6f4-8c98-4f1f-9179-5814f4a09d3c",
        "cursor": {
          "ref": "8aa8bfe0-106b-4f4c-9f38-8298a9934f3a",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9d2c5024-23d0-47e6-8051-cb278d699c2f"
        },
        "item": {
          "id": "eedfb6f4-8c98-4f1f-9179-5814f4a09d3c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "228a770f-4570-4d38-b457-eb272a5762ce",
          "status": "OK",
          "code": 200,
          "responseTime": 1425,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94d64a8-cfe4-40bc-bf95-9e6974e09ada",
        "cursor": {
          "ref": "d7c555ad-4db9-4a7a-99aa-83d3d0d2ee8b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "38332b84-52b9-4e66-9414-f64eb9d5e3c4"
        },
        "item": {
          "id": "b94d64a8-cfe4-40bc-bf95-9e6974e09ada",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d4b83389-63fc-4331-9e1e-09c39b8b8764",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94d64a8-cfe4-40bc-bf95-9e6974e09ada",
        "cursor": {
          "ref": "d7c555ad-4db9-4a7a-99aa-83d3d0d2ee8b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "38332b84-52b9-4e66-9414-f64eb9d5e3c4"
        },
        "item": {
          "id": "b94d64a8-cfe4-40bc-bf95-9e6974e09ada",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d4b83389-63fc-4331-9e1e-09c39b8b8764",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22885c3-eba8-4527-8978-96adbb5b7003",
        "cursor": {
          "ref": "349d2ae5-45fe-4ecd-9362-04de5e319dd7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "89670f95-d03c-49fb-901f-e892fabe90f7"
        },
        "item": {
          "id": "c22885c3-eba8-4527-8978-96adbb5b7003",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1c0bbbd6-34c7-46d7-a2a1-1a542b013afd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80792add-7303-4040-b4ef-c0fb12c1e9cb",
        "cursor": {
          "ref": "71f909f6-8176-4f82-b294-4523b5742ca8",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a9f145ae-122f-4c1f-8530-ba30eb8a61f1"
        },
        "item": {
          "id": "80792add-7303-4040-b4ef-c0fb12c1e9cb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "846b0b94-1726-4e2f-9415-795bc9f9b57a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}