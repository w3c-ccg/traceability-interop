{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b2fd6eb8-858e-4baa-9c5a-e3db9bd9893e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c689afcb-aec9-432f-a003-33bf06421c82",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ee9c33e-0e4b-40c0-81fc-7393882edbb8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "446d394e-bcd1-4e35-9785-fa8701e50c6a"
                }
              }
            ]
          },
          {
            "id": "6e573d0b-4bed-4fcb-92d8-f05e06dca5d2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6a39b60-14c9-4371-9a25-db50376bab50",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff548719-9507-4a0c-8fe7-4efec09f0991"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "20e78993-8550-4e48-b695-8b4217e625f1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3f1b61aa-8111-4390-b322-96b7faf21511",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7639f14c-d82e-4357-bd57-2879862efc9f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4fa7047-b6a6-4459-9d5a-2195a40d18a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "916e28ba-b1f2-4f1c-bc6d-3776fc8a2d7d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "613551fa-8ec1-43c5-9569-3be5ad8c06d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0bf91fb4-8bdd-493e-a129-a52e20cd0920"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c36df2f-5c40-4c8b-9015-12436e39e2cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e5b012b-6273-40a9-aa03-dcea20563438"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff31e673-6ac7-4c23-8fd9-a7990c150936",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e7e5215d-36df-4e3e-b68a-22c1737e3c41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94f83d1c-61f7-43a7-85a5-71ef41e06623",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "133cb20e-a3bb-413b-a99c-5e355955e987"
            }
          }
        ]
      },
      {
        "id": "327c95fa-29b6-4e79-9be1-33a87432dd76",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d09b4bd6-e00d-48b9-a969-c41fdd247297",
            "name": "Negative Testing",
            "item": [
              {
                "id": "075cb033-73a1-477c-8d13-2bea8d32982d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea1e1af5-58ba-435e-a00f-9b1b0cc78f27",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375ad8ef-8b7c-45df-b5be-e85a3e0411ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98becca8-f085-431d-96dd-ae60bb171417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df7a108-48fd-41db-98e4-e3a559fa1f02",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35da657-98c6-4ec4-8d18-28ea73a440c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13f7a588-168b-4eda-8438-24aa6f230c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd004c9e-8bbb-4f59-bd1e-e910b186d5ed",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721d3bf0-194a-406d-9bce-f59f6c3af84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fbf1051-3018-4027-8190-6ebf1901c3c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51fcf2eb-cfad-403c-bef2-a0511749d2b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0acc356d-8580-4f36-ae3c-5b0dfbbac66f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299880a5-368c-4d4e-ad71-3558b6219dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "226fd942-b54e-4ec6-8f8f-6f6fd5083b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76be0dee-e5e9-47f1-854f-a17800932ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d32465e-b9eb-4d61-845c-9f4611a7f8cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "55b5a957-66f1-41a5-8488-da204280654d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6355c58-1847-48a7-a8c8-ff84a95b57d5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91954f8d-0dd0-4f67-837a-b0bd3b65b30e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bff33434-0d0b-42f2-a190-a64c8d7360f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a24e411-eca9-4b8f-919c-e52d6725f47f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e7590b27-3a86-4e52-9779-66fd5443e396"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91d07092-fb3a-4bef-b663-8d8ce9d034a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9f7e5cb-43a8-417b-8735-18dbd75c4959"
            }
          }
        ]
      },
      {
        "id": "868d4251-11f1-4b1f-8d23-c2951549f6fe",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "952acb58-b6ed-4961-92a8-4b94af0b0dec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc186792-4118-44f5-ad73-a5cb389b677d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d39d1664-6339-48e8-9104-1dc891325f54",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568eebc2-0983-4d5d-b35c-2610d216f16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424a29ea-3d1b-4b33-b771-f7f26cf378f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae6d6e7-95b0-41ca-90bd-cf2691b9d425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af9588c4-8a70-4954-b8d6-aee16a97c778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e86348-8ac1-4f47-b00c-ee410e2006e8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23ffdca-cc24-4c57-a8e5-6a64e490cc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069c6d76-cb99-44e3-8118-f0beccd5dec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377ecb6c-ff69-4bb3-801f-cc6e8e9ab78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ac90bcc-e6b6-4d67-afb9-08e9ed8ac1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670d4755-a85e-4dfc-b6f3-ebba5052b34d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef6b070-3d4e-469a-924c-a5f5c0df466d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d191f16-e3fd-44de-94c0-468cc68f19a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec42f4f9-3e2d-4bac-aa16-935e66f6ecc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8fa0093-a0cd-4894-bed5-ad83312c852a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55344fda-4018-47c4-a896-b4c75983b7c4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed60d77-0a7a-48e4-a7f7-8f8b6e9c44e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a0ce1b-2d88-4d85-a3ca-498eff81598f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cb71c0-4f57-4f8a-8535-e1cdee61db4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f41cce79-5cfe-42fb-bece-0e20afee9295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e04b480-183c-4a06-a373-b9ff35d1f0b4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30869a00-4f29-4b60-819c-5ad81cdd2ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1da5de-f45b-4bb2-bc4d-7082b4ad00e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0a1b5b-cff7-4f8b-b031-7932eb2da564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bc2c006-9a56-4453-a7e2-8094e936779f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285a0146-7663-4675-80ff-4d004444a5f9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0813e3-2328-4768-8de5-41f470125209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c55384-5ebf-484c-935d-4aab07a53b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cff48ce-96f8-464e-a9b7-3f93f496a1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "097a6421-2d5c-4207-81fe-4cbffec5aca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f81d65-cd4e-4d02-8915-b4739ab67731",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a550671-c1c9-470e-b7be-478ee900dafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63badcd-8fb3-4de7-b118-38eb044867f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f653ae-a492-4bd4-9269-ed94e4cce7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "109e4d4e-17ca-4f3f-8074-dc13cf0cf44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2850b7-f926-4021-8415-4dde1bd75a56",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf99ec4-72f0-4798-a4c7-5aa3331c8b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b7e9f9-22f9-4255-9fb2-ac181166e5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3ad1cc-95e4-40d6-8596-bd9c8267c08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5882e586-0f06-447c-9794-b6c855264ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b89381-6772-451c-bf0d-f9b6757fc3ca",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7c02c1-e6e5-48ed-8936-13e188461e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1ab2a4-0c23-407c-bb4f-8f7ef92a2c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12692a39-ae62-4ad3-a312-b3b531a85f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47cfd6c3-e3eb-42a1-a92b-2a7ad3766293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60c4bab-e2e3-4e01-b867-13371cb7b8a3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec8f5ec-254f-4276-ba14-4c64de85ae8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40132e03-acc1-4570-b236-dda5be2866c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2595f576-5610-45b2-90a1-afcd15a7e494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "806806a6-6ba2-4eda-a2e1-ebb58cbf13eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97767525-5fc5-4b22-8e4d-7ca07fb962a5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe06b181-9a41-421e-a47c-56325b5db16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74809510-ead7-4abd-85fa-3edbc8c3b6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109b1423-27b2-4f47-a02e-65463349a9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "973f39cd-6663-4979-8112-a335eb23434b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569e208e-f0de-45eb-b98e-fab4c7eeb1b5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd12bcc-dff5-4374-b1cd-c23542281162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183cdeac-92b1-4eef-bb0e-9e73b48745d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec074f8-2ad1-4144-bf43-4ee1875d92cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a6b885d-d033-492c-8b6d-baf76793e07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761bee0e-7c09-4641-857b-dbd8d3d3ea6e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c918c094-c5f7-4baf-b4cd-e5746a5ca775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1acd80-b729-4f00-bba4-ef6fb228dc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0af0f1-8a56-4b70-86fa-78190ea8c416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c34b84d-c1c4-4037-88f1-9d01d5880efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eced3c-0e22-4863-a83c-600fee461433",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dd0864-f3ae-42f1-97cc-9e2e1f618d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48620e7b-c6d7-4c4a-bf1a-41f457f08cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17adaf9f-2552-4b31-9bdd-8be6ce3f2983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c837f6b-c7b6-4879-a9ad-53aa1c8130fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09ecd52-14ae-4968-9650-2b5806040efe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09517da5-9e3b-4191-9fe4-327bf8ac7604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e0217c-d2c8-4332-b939-deb02bb788b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cab40b6-380b-47d5-b4ba-db8bc69ee885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae459af0-2207-4794-9cea-20f9fbb0f111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21360bb-7a0a-46b4-a0f0-bb69d6891772",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dbbfd8-2c8e-4351-a76e-cbfac7d71683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1cfed4-fa83-470b-ab3c-b19e3743d354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da3421d-c137-4e31-a76e-a0dab63da4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88f4ec9f-01dc-43d8-84be-719c0f738fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fae7091-6b26-4351-9cf2-cff7f94fb667",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4a11f3-6527-43a4-92e1-1a000987c3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38f93f9-a4af-4e39-9f9d-159a285bc269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9b82c5-e48e-4665-bebe-f9b302dfd34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99f18b77-addf-4247-b833-617935cb7276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dad0ec0-356f-4494-9351-a2a80f537416",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb68fed-123a-4513-926c-5593198176f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea79a1e-7a16-4fea-82d0-875a0af93e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8044e4d6-9009-4bca-b8da-254add5521ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f77a904c-23ec-499c-9e7c-b7f493783ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3a019c-e0d9-4531-8653-f1ac38a03094",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73c1c18-0f3f-4d47-ab27-ae68195314d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8824266a-0ce3-4e2f-9cd7-0b3ef6112059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466b325f-3edf-4a90-abd1-5637433d5c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30631ad9-e8d2-4650-a7b4-c3e16b27239f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90904667-1810-455e-8349-be55548beb94",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c9d88c-e4df-4c76-9838-8c1e2f2f954b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e304cfc6-35be-4d88-959f-edb112c3e3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b141e24-6e8f-4789-aaab-c3dc2e465a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8531cf38-244d-49ad-b500-b2d90c33557d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad72425-1372-4b4b-a05e-9ee94acfb9f5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc167824-25bb-4415-9c21-b8579fa21ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98761d66-57b2-46d4-a92c-36ef402ab25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2663017e-6631-4e92-b3c3-d249267407b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d50c3ae9-7b92-4eac-bfe9-02cb899ca0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0544d04-b068-4d59-9ac1-86705141d9e7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c292f82e-5209-4c3e-9cb6-7b1b57539bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88413df3-b703-4e39-abc8-99d45c242ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df09116-8b6f-4870-b5af-230e078d5ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "01644d12-5036-463b-9a96-a46a6a231278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c68a168-ce5b-4d83-bbf6-c7aed3c07eb1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a21255-ad6b-4eaa-a4dd-143c27b037f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f425ff9-63e4-4b67-a495-8ed6ced5bcbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac54801c-3915-4ee9-ac09-a5c33f62d258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b91e18c3-d5a1-4808-8559-d484bdb03f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23de2611-4b41-4532-90a9-825c55813a50",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554dc706-71c8-43b3-9e16-599039c16f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c84697-2bcf-468a-b23d-84914ef94e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08e7329-b5f7-4b26-923a-64ddceb556b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "888f6a81-0346-47cc-892a-c76138f83d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1429b122-1454-4d8f-a2b0-cdd80ce9e292",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17e1862-65f4-48b0-862c-f6e367570a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932da643-24d4-4c47-922c-12bd023c94f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed28a09-06ec-40ba-b1c7-7fb2de94016c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8061ca2f-153f-476f-bcfd-6263c9408a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33bffa9-2088-4fe1-9a71-2b14e564e6f6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd44bf87-8875-497a-939b-5ef5700d9545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7d6e7f-dd49-40f2-b180-cf38b4913012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9055fa-6567-4b81-8dc8-683cafc0afbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52ab51b8-fe88-43e6-8ed6-6c415371a4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0606d038-1cc6-4471-a9ef-336ca7f37c15",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2b1300-65dd-4c3e-85cc-3ee776734862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25ae27c-8a69-4f6c-ad56-4b08f43aa909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279e1ecb-bd1f-4b62-95c2-81fb266f8f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a01751b0-3a23-4bf8-aa99-75086985232b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a85ca5-ecda-46a6-975a-797a419cc7d0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0689a938-1160-4f8c-b1ad-9c9dbeb43a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b027adf-6877-4afc-a010-39ab8b021f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0b4fd1-b3c5-4b3a-9b94-5799737b51e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "acbaa21a-c2ae-4c46-bf92-7d3d8f547c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4528009-1250-4477-8bd5-7034259dedc2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8f3f19-bece-4f1f-808f-cdd35f447014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe671dc5-f006-4e24-87c2-c774baf0e36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd35d2b-592c-43dc-8710-23851a24b4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "699f1044-c077-46b9-b9b9-7bae33990f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fea442-3f6d-4610-bdc2-6ad49a9b1666",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75d7936-2d1f-4a43-943e-7e1c9d96b02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0084e0-8c73-4c94-bd09-76ba0b71897a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f040ec-1306-4047-bf5e-a8698d397d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3c7400-383c-43c0-ab79-10423f6f415f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e390cd-5b2b-4ab1-a81f-67b8b820cb8e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db8b2d1-15f7-41b0-bf70-0dca58b4b776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32530539-76dd-4003-802e-61ac27197155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9815ec5d-2ebc-4c91-a5fa-5ae0460ce728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb36a86-ae9d-4fc3-9624-b11d2e0e708f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb802a99-ef1e-48c2-8f88-9346ca39e719",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dbfdec-c289-4c20-b865-e6c9924f8831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7e107e-8781-41ed-878b-f58953c86386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb4fe58-7632-4eef-9d16-e8458b121fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01a1c580-b3ee-4319-86f5-dba2a20ba2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eba8b5-ccbd-41b9-baee-f8116eea05c5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9679f8ce-b919-47c6-8718-126e9f043fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bb609d-9815-4075-adb2-d35b3f55cb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5292f9-3253-464b-a2b5-d19a59e06a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b81f78f-5f47-4834-8cb0-aea8615dffac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29048dac-9077-438c-aa0e-8132e619cb6a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f0358f-4a4c-420d-aed5-672a236eb3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcad62e-aa16-4898-9bab-c4d6399f027a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02eb914-bbeb-4aed-b9fc-9fb02a2f2150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d63e7b-83c0-4dae-9e0c-97eca832fbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bf7dae-d96b-4129-b06a-8ace14337ffe",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb517bf2-c96d-4c7f-aefc-f1ca9045e02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792b169e-3e3a-4f13-8269-5f725ac702e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783bd923-99a7-4cff-a41c-0f3b503d15f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8651ac13-829e-4015-b919-17524d7714cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253a90be-3ab5-4523-a4be-2f1dd3d2614e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d83c4f-0a82-4841-a897-8e66e06c7e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9d12cb9-7683-4d73-b328-47cec82e832b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612648d8-23f4-4e72-9056-d7a6f8fd95b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c17ebc88-c88e-481f-a39b-4073293b67b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a221ebc0-e190-455a-9007-00c5b00ae010",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265b0edd-50cd-4a98-b229-09389b477a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8f0ba9-63bf-471a-b1bf-2742a153343a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29876bc-d255-46be-8a31-20f5dc107c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5535b9-2970-49f5-9fd4-8660b192a656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d3f458-157f-4c58-ba64-d8c523ab7046",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de29672c-1c4a-4115-8217-b6022c68a6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89238e2-56e6-49ea-b3b6-0f96aa2f9fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6016ee0e-0fcc-4e14-9de0-01a282a69665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a826a5-0818-49a4-b45c-2ebd37ef4249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43eb97e-c450-4aa1-9147-4d13c66612c5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c605c4-3a6d-4891-8a94-99c2b636604d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f43affa-0190-4f98-b2b2-8e17c634f734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2632cd-8b0d-48ad-b5bd-b4a972a67021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbb57da-347b-4a90-80eb-165fef10d605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd24223-8c86-4aa0-9c8d-a3b3f1e8becb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d7a654-9172-456f-885a-fd0a1d95b25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41608743-7a48-49b5-a2c6-422db35ca475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8315988c-65ac-4f8f-8af8-655578c683f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "106162d7-4428-4c05-a2df-6b78af4b1cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411ffeeb-b213-4f6a-b120-c6039cd41a29",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afcc73d-f28d-4f29-8ff3-01fd9d3f9b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a3352c-c4f4-4a30-9f42-515de96b0353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d15431-0a44-424e-b22f-6684979f8f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c0084d-84ff-4f6a-bebe-7d5b411d6599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cf1d53-48a4-4279-94de-c31235be9c12",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345a8626-e8dc-4a09-9ba8-d9353f72ae82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f96ec0b-a692-4f39-9f72-b43733d4e6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6074c64a-7919-4d2a-bd0d-aa8691bdedb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff47879-6ff8-4eaa-8205-dea6e4525b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad883978-34d6-4b3f-b7e9-4208a8b3ba9c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c2326b-ba16-4ab0-9b03-b32e9a1c671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea91e68-be5c-4eb1-ac17-64babc61ec76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e82cd2-12c7-49b6-aeb4-491af8634c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "386f38fd-cdb4-41a5-8831-4f21cc5b512e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f82b0d-7089-4413-b264-8c5a2d425e00",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8c9e52-bd05-4e39-869a-c1b3be8625a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbf15b7-912e-4aa8-95c3-83ec96fd7033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98dfb9a-e7d1-4614-b747-8c56854c256b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e817c3-abf7-4c7b-a91f-fb9bb9a243d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893424c6-d697-4c55-bf37-5f2e88dc0f81",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1535c72c-e978-4ac0-9a4e-669b59729971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68997c4-55a4-4dca-83d2-fd65ba5a2b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e92fff5-faa3-4c92-9045-3595ae0921cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7828c4e5-ef09-4330-ac00-8e3b801c8346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98956ab5-f2a2-4d2a-a1bf-85b3be545d92",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724cd540-ed34-493c-a5ae-0ac4891a93ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80499685-3ab3-4cdd-ac95-da6113b8962d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968fcd22-d32d-453e-864b-5856a62aed5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b50c68-5bb1-48fe-8c79-bfcf1d322545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619fb379-c63e-4ddc-a6e5-35a4954dd6d3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7be12c-3884-44e3-adef-f5223194f459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9569be4-2ea2-45a9-8964-e09ce3b82ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607e3037-752f-4e9f-9e3a-8ec368d599cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5e1379-205e-438f-a4fd-28d1bab4e289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2246ae-5b7c-46c5-a95f-6ff522e3c082",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7d5326-6abe-4baa-a239-35807f882a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b27bf5-b995-4d79-86bc-814de8d3226d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7db113e-0d19-46e8-9375-1c8db9185eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6de5aa-a864-453c-a286-06d749afe864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e1f88e-fda7-4d2b-820d-5cce51fd0957",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c3752d-9689-4046-ae49-662419684d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9a0af3-6730-47de-a539-642120fd769b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9138b2-6a4f-4f28-b0ac-b495e7507d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af9eceb3-d3a3-4b64-a9a6-2ff880a2a9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01737005-7c9c-4403-ab04-65e476b388ac",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76c1d8c-0b5b-4367-9be9-9cada4864ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45aca42b-d1d4-44e0-928a-d95e0089c8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a416f41f-9ef8-4656-bccc-b30c344156ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c847061-dde5-43b6-ad51-f5f8cdff239c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2ef945-92b5-4ba3-8844-5c0fc769a59f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aa8c1d-9c16-4adc-964a-90635613b51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a6ed4b-d9d3-495e-90eb-adf00bdc8dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b389fa4f-114a-4827-98bc-e5e1ed7104aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c68fc3bb-546b-483f-b87f-d05d1474f37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5d25fc-eee8-412a-b2b1-c3c1edb569da",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd01ca0-c2af-4b4a-b709-44d412507305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b70744-437b-48f8-b277-8aa578455c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e01d5e-c4ab-431b-bd6b-6fc8507f4702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2817a63c-a6f1-4f8f-94f6-2a1ac1349a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4079ef65-fa3a-4f3f-bfc1-10d84cc01e2c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9320df25-d6a9-4ffd-b450-bd57e93d1466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbec0f3-84d7-41ad-96c9-42e9711b5f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415888f1-563d-4980-9871-23667bbb478b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aeae591-b2b7-4276-8673-ece45383377f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47705e3c-da09-40b3-9e7f-f1e039f09965",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ecd82b-c14b-446a-86aa-686cb0acda73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57c6dbb-5a89-46f4-acce-65ec4fcaf760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0307ece1-7e2e-4130-82b4-a3026f90389e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab06af10-39eb-4265-89b3-034d3b0ddac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1e5162-1072-40e8-8d86-ee0c001d62a2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c6ed4a-31d0-40c8-92a7-adc5f854dc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6261832-5087-4468-8353-fc904badd920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d647ce6c-7fcd-45f7-bb95-2b2022c79e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0256e23a-5e36-4c2d-8946-15c25caa13ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9626d3c8-9af4-4dfc-a827-6af9bbd765b2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a887e80-82b7-4308-8b6e-bf4d011c74f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf84a652-9df3-45fe-820d-5632a9e49561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26de794-86d5-47d7-84df-323dadde73d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab8fa64-20c2-4f0b-8b71-f663532a62c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24e9238-1573-4fee-94f1-dbfa7ff81fe8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51421cbd-ae62-42fa-9bde-1bac03c57e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b67352-aba5-4d28-bab8-f745b3942ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacfe0f9-fd81-48a0-8721-c0b3a53e2491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db30ca22-eb67-4941-a80a-8656a1095992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da85578-cffd-4454-9804-63b04a2a6fff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc12c9f5-14e2-4f11-a8b8-aa51703b5053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6c1f37-06d3-42eb-93a2-e38ef3ba4feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e090a6d-967c-4f1e-af38-daa29078ebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a1dc3a-e9fc-4095-9be1-9ded1c6efd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77b1a8a-d058-4065-ab36-c77f92b6b63e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d0b9ec-e745-4042-9157-dcef0f53dd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c131798b-73db-4339-b942-45dbe23485ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869df4f3-ed70-49e1-89a6-b204a6247016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15aea4d1-3d6d-46b7-bb48-61a02a8302c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c92541-433f-4ab1-8be1-33b5bc53b926",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90e4d0b-4d33-42f3-b59f-c8dfb1412ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4752ee05-8529-4160-b030-4059a49426b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105de870-e146-459a-827d-358af8f9c82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa06218-c0b9-41a3-b3c8-42acf4b73871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ebc229-be59-4a83-b8e0-680b2be62df1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7218e678-9f44-4dfc-97a5-2fbd251b0251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666e4c80-86fc-4682-822e-85fe1ba05f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163a596b-f794-4cad-ae2d-a01a4adb9350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8dcafe-a6cd-48b9-a326-212f2aba68ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb699bf1-3167-4057-af3d-05dd6080ecee",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6e52bd-53bc-455b-a5b8-feee07c5d68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae74a1f6-144e-4a09-8d63-5b33e6ea60cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848d5b58-3e47-48ba-b87f-b9920fc5af87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "abb3be96-6522-4fe7-b80d-0b91b21fa7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9d7dd7-d399-4912-8065-def098d4126d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a45c7b-4e98-4b83-a59c-e8fa3d96728d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b23d351-be5e-4d46-9a75-46f17c910d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53b3616-3827-4b4e-995c-323358d4e0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "adeb63c2-4bc7-4c26-8e32-5afbf1f60ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e4dcfe-e1fa-4da8-9810-f49aac854b1d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4123ad-43b4-4763-9a2b-4faec9a164e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35133b3-2884-48ad-b8e2-22db7abb9581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1a0622-e685-49be-b5c4-40d5a8dc6f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8857303-1d5e-4d89-baec-6577b14bec7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460d57ad-053a-4a18-a678-105fc4397696",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5eda7b8-43cb-4a49-a4f9-70410c52af32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae3f92e-5d71-4853-a275-1b53b5c18a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6538500-3d15-4006-a53b-1e7a3cf05383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b926dc21-c2d4-4762-b133-fdfb2176bdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f475c8-be7e-4aca-aaf6-f9de74f392d5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c4771b-1804-4cc7-b8a0-2fefc7fabe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6d7e96-9645-4ddf-95f9-1061d04584d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e946ba2e-a537-43f5-b8a4-fefd931d9eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6de272f5-ca73-4c6f-b3c2-bae950cfc0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3731b79a-5033-4934-a13a-dc30b3d800f0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d15bf8a-113a-45ce-a8ed-f142a95364b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d6a884-32be-4774-8df4-1487d6d572ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64995a38-f951-469a-aa9c-2190c779f85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07b57d49-ec67-4704-b1fd-f39e00ffb0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657b4e9c-7f28-484c-9e40-fb026949e327",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50de6c8-6655-48f4-9f0b-74ad4012760d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4488fcb0-b064-4c3f-81d7-c1b812e2190b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c067661f-931b-46fe-a480-837db131303b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0181deb-ffda-46fb-9583-053b4bb0ff07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73a0f22-76ff-4cb4-8c41-dcc0ef071313",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e330de-25ca-40fa-9042-8c8c7fcf0eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93d4689-17a8-42b1-8fbc-df974d190bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041b2e99-fd0e-4cb6-a6fb-09ee750d92b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "02a4f1d9-3825-4df3-91d1-ad6a684cf279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d423482c-2d35-461c-ab3a-3d9bc9f1b20d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459ba5d5-b4b4-47bd-b4af-a8dfcb7d14a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ea4f33-0e56-4ca9-968f-c2097c35c38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133d872c-0023-489d-a5a8-24fab5a36537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1094ab6a-fd7e-4b41-99cb-2ac777c7ab2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955f33a1-5b05-4bba-80fd-0d7013089628",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628d5a99-8eb2-4a64-b6a6-e7340cce9e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84cd2d8-4006-4ae5-8cb3-e7be01b5b734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a484a38-498a-480b-9703-cb7b76b2ff67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d86a953-f161-4bbd-9b3a-f7cd33742772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36efafa-3368-4930-bdd4-185bf9feccd1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e1af2a-c837-4274-ac76-5444a0b93734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9ff30a-af5c-4b92-b110-fae5f85097f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43158ee1-2cdc-4480-9827-a3c69fe0b1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eae9cc1-1e04-4aa3-9a7c-83056950995d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6e0fd6-7893-4c45-9f7a-b0f6e8b4265a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab1e4e3-fe2d-4b74-97d7-26bcbf44413c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc221753-2bda-4a60-a5ba-81cb2f1bd048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617c9ae3-3d2b-4693-97b6-777d20bdeab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a88d5e71-3efc-4c21-9e07-7416bd785e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9a7d6d-9d58-43fd-b471-d2ca49145649",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db29fc1c-356b-406d-b91a-b2166484cb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496bc973-f280-42fc-b36c-a9455ac0b2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df7ce90-99e8-4381-b9b6-02734b1522bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe476a8b-3ff0-43b8-92b3-e206b4967c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf87ca3-2937-4d58-9f25-8c4aad966b4c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23bfbf2-bfb4-4a4b-a8f0-ca8b6986fe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b83759-6470-4951-8039-25596649661f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e254c9-96ec-4be4-bc91-db20e63785c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad3a198-619b-4a8d-8eee-e2e164de1b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d700a9b-1ea0-4d45-a69e-8a986fb673b1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af76ac1e-c6a4-4ad8-8939-01c3742b526a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ecc670-444c-4d61-a030-5e726a020112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc482dcf-8fe4-444d-98a6-a53c132d0b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85529af8-9345-43e4-a65a-19e016c599d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bb873e-11b5-47e2-ada0-03d1b65dd1c6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b064f53-0432-4751-a39a-84d763377884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5834ba-8435-418a-bcb0-25fe72acb7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55edc4a4-3049-448a-9e9f-5e16c748a2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ecb7ff-83b7-4971-8b72-4c07a9c2f9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c911d565-8576-4271-afcf-e6102b906990",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30641f3-c305-48ed-9eb0-dc9d2b4fb25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d59f6b-fd72-431f-ae4a-dbf6720bdd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d3b14d-c33d-424a-b344-40e1a58c0011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9a9d22-7c92-4b72-9143-4e96fd0086a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424521ea-8e3e-4dab-84d3-ed8f0a2ab705",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5439c934-cbe1-4700-be78-0a3eef9b82ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e34545-0f86-460c-bd3f-5897ac9b17da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373cd8f4-7d9d-4923-9f98-ce5da8a8ddcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2423a862-d665-4029-b304-ce5373801253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4998a453-6489-4170-82b5-66bd3ec3e4ff",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dfbe6b-6d04-486a-806b-849d661f7036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cddde4-8737-447c-b62e-dec7b098a136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5f8a2b-6c49-4175-aa85-c360f22d82ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f8e2f2-3908-40ad-a741-5047e159f5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29612540-e718-4e3f-b142-608cf162e149",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f99b11-5427-4e7e-9991-1ca49be1fd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fadbb211-a946-47a5-9d1c-de586764b6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82ef4b1-f57b-40d8-9fe7-f6d0cf6a4963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40951b9b-a01c-4e17-8f7f-ad8cb3c2dc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04472f6d-3378-4705-bbd2-50721891c79d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d785c690-6770-4981-bdf4-db0718e7f8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d05a5d-a81d-49cc-8d48-c0167b4eaa44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c9cff0-656e-43ee-8a4c-7e41f00a395c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13cae2b8-701b-419c-9ff6-677815dcc65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d12772c-7938-436e-b0d9-469352915990",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45878e72-2dce-4685-b390-d9f3e691a432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ff4a7e-c2fe-45db-959e-71c394f5e74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2d46e4-4aab-414c-900e-754cd50a3b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29809cae-c52e-48be-95cc-0f2ee8d3d640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8f9436-7608-472c-a11c-1bcd77185198",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15780155-f87d-4905-912d-5d8b7d48bfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05c1010-491a-403f-815a-953bc4a1a7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b74512-ff50-49af-b27a-e7769b52fc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af6513f5-553f-4cc7-83e1-e566eccd79c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152ddb97-4074-495a-a493-2a7f73c41ddb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9000afa3-3774-47cd-b6fb-a575cad22363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e781408-8cc9-4723-acd1-277bb8d01bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a564c99-e45e-4341-8d1c-5496b8a1ce60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8921eb8-964e-4a2e-a6df-8c3b8680f410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20657430-ceee-4cfb-b3ab-8fd6fdb62bc8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe544b12-1ab3-44d9-9637-9e9e1ee69bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db674800-8460-46ef-9e6a-7860b26408c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f8cab0-cc0e-4453-afb1-090262abae82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31965713-eefc-4f78-864c-2b853a21ffc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828e94c5-1272-4d9f-a2e3-4aeb61b655a4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10d76fb-210f-44a8-9232-4e3330118032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12724569-66f2-45c7-973f-3a02219b1396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4331ca2-f891-486b-ae2a-c817988ff59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c785f5c-c856-44e6-926f-6161bf66d731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dcb150-9b0b-46e7-aa2e-63380b386a91",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac163238-157d-43fa-952c-4be96edcf33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb0f9e1-b7a3-4bb1-be3b-4d0105196321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ac385f-d553-44b8-adcf-11cb0da853df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7782b89-90bb-4504-94cb-e90b0fe928ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a48379-f068-461c-aaad-6de393be26ea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bbe25b-04e1-4dad-9b25-e87c79b2ab95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542936f2-def4-4129-9acb-e1eb82dffd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9709149d-59d5-4ac9-8257-78ab7bc732c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2a1a71-5320-4b03-baae-8bfb4feb417c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a817ccc-1fad-4757-b326-00f5c9486703",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6871ed7-9302-4fea-ac80-f4ec20633600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add82162-86fa-4749-89e1-9da16e2b7c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bd7d03-1b02-4494-a423-1eb16531ebf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a20d2819-c9b7-483b-b705-90749cc342b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfead21-e09b-4681-bfbd-c6e1f7626245",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a068fbbf-026f-4bdc-b4e6-86f5836dd55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2c6075-ef15-4bb9-b002-a3cfc34c4c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f174e646-a4d4-45f6-a1ec-cba4f40f81eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7e65e8-2be3-4fb2-8d0b-78ed23b7c151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cbd9f2-5bcb-40cf-8a70-436a5f11edc6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9acb1be-99ce-4898-bf4b-0c71638b356e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7b1e5e36-1a0e-40bc-9b3b-3c36434e74b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1ed98b-d687-422a-8351-9eedd177cf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbced69-1329-4e26-8103-41187bc624ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a389337b-a964-4828-b136-4bbb0b8049ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74b864f0-ba51-4f78-9408-6ef33054ba6c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff11329-c77d-4984-b718-67141b016f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2791418-e356-4105-81ce-637744a5ed9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a67dcec-05ee-40f6-bfb6-1efedb1adaab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99bfa318-9137-40a0-87e1-f5f8a89cd36a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9afaf40d-c897-4b54-a395-2adfdc349520",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67030d0f-0e59-4d22-8ad4-d327d36fd4be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62f74f41-5985-42cf-992f-332d9e7ee2c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0db176ee-2c8f-4e49-8686-014481ad4597"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c90c9de-17ee-4a2e-bdd7-722fba82402e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1febae7f-8165-4614-bc80-76f4e263fade"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9787fd4c-5170-474a-a5a8-a4be7ebc9928",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95e0f776-4b58-4b9c-a139-7582bc1214b5"
                }
              }
            ]
          },
          {
            "id": "64558d46-2026-4e37-a3d5-690f3eb7369c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36d28c13-9af1-40eb-8983-3234ff9b8226",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fd684f7c-0eef-43af-a741-4f27ad7f50d1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291174d3-6d58-4051-9f3e-f7af194a190d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fff3123d-c44d-4b0b-8053-ba9e914632f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262cfada-cf36-433d-8e89-3d74e3d7013b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b9d8c5-957b-4a17-8a30-762252fa0e33"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f5b713d-554f-4094-8b73-7736ae2916b6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47040ecb-728c-489b-8799-ec9ff48dfd24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e25313a9-7df8-4e04-af5f-09ccacba4734"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ba99bea-341e-41ba-b35a-3f41b094183e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "29c4e261-2e93-4a1e-bb79-2ea21ffcd93f"
                    }
                  }
                ]
              },
              {
                "id": "279f21cf-87a7-4956-b1cc-0127dbd0af60",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04a86c85-0430-47fb-8108-80f127c70bec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "feaf49a3-5b8a-433b-b51d-cd8f4b919909"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a492e2b-fd21-4ac9-91db-91d18f8674d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00509b74-dd0f-4cba-a619-69fb1fc7a5e1"
                    }
                  }
                ]
              },
              {
                "id": "e95165d4-07a2-4954-a2ef-5dcf3d08bfa6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f781c42-cf3e-413d-9fa2-cc44b7258bdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1c30990-4f4b-40cf-a145-e4ca5505f056"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a71491e-47cd-4f72-828f-975515913b45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8eb2795-220f-427c-8fb2-770e140d5fe6"
                    }
                  }
                ]
              },
              {
                "id": "d166ee92-24da-4c22-b186-16927314ecc6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c906c1a7-06c4-4da0-af42-b1517f5cc5c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4812e0f3-01dc-4d78-b468-d2dba28566a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "558997e1-f805-429c-bb84-f44a6b779bcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0b52927b-3421-4ce1-87e2-8457412ef051"
                    }
                  }
                ]
              },
              {
                "id": "f245185c-550e-46d2-ba5f-854b00a55123",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6aa659b4-e685-4fc0-95bb-3ad56ef0c643",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f277f701-2d30-4181-81fc-8dd9019fb633"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fca3c324-3e61-41f6-b90c-228aa7d3b316",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fe40802e-3c33-4cd4-98b0-7d889ca4a8e7"
                    }
                  }
                ]
              },
              {
                "id": "eebcbdb6-cf91-46b8-9d2b-65e35116fddd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c26570ed-772e-4e03-9de4-0868cac40bb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a03fbdf-ae5a-47f3-b51b-589fcb8c0b8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71a7e276-6a41-415a-bc14-beab77703e93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7448798e-54c2-4414-bfdc-c3b16d36ac92"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffef1bcf-5d4a-4e62-bcd6-a8b1486b1bbc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b573074-5b97-47b4-bfdb-93704498bfb6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "501c8fe2-1ecc-4c19-a118-19ddfe976ab8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b8f6cd5-3479-4455-b16f-5b9c06c4d8a7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69c6e6fd-3062-451b-a729-2cfc4fd9fe21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7ae35dca-1937-4740-b9e6-60cf7be927fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2eb7a5f7-13ec-42d1-a928-3503d503ab8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c83ab165-8fd5-4da3-9ecd-91f27bfec99b"
            }
          }
        ]
      },
      {
        "id": "13aa62ac-0404-4ad5-a331-49ade4318cf6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f6fdb895-7712-4707-b34d-1df1d8a65167",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd0ce6fc-1e2b-4a5e-9dbb-12cd0f452c75",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ea212f7-2b16-4654-a572-178923dcb4bb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b77eeb2-273b-493b-9cc3-2b06629b08b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ae609a-c4a2-4c74-a97d-bdd7ad419024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef562c63-aa17-41f0-b51d-dddef6a7435e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6381712f-6505-4c61-b0ba-456331b51981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6d85e4-12f8-4a18-ba09-e658e5df3422",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a82e569-d76d-49c6-b494-bccfa8dc05a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0aa418d-85b5-40e6-8bf2-be7a8e094898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0bd3aa-8b74-425f-b752-d41d32d85a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6dac0e9-4be7-407f-ac90-dcc1d4cbff49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5eed1a7-3515-4dc9-97b4-e6f52d92657e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890e6a31-a2b0-48e2-9820-8d37da8c7f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce68441f-a572-459a-a494-8f67b807e02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dd972e-9307-42d3-ac4c-3050286a0d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb0d6c4-0ab8-45a1-abeb-ee7e3f089075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552bc38e-fb07-4615-8ba6-34734c1d0ea8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ed01d2-16e0-4db4-a84a-0594c3ebb868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081fdb6e-353c-4768-b899-858df87233e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e584ceb7-f837-4262-8073-064f1e7b31e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc054933-8f9d-4791-97bc-8f9b7a281073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572078f8-339f-4c5c-806b-466db65a801b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c14af0-60aa-4747-b169-771030b074cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae055b4-27f1-47b4-a11c-f01e02fbed51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23711c48-495b-472d-a12e-c9d660a5f847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b7f287-5a6f-43d8-a196-aadf098788e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ffcf81-ef58-46a0-8275-b90d8c10a839",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71e7945-5ca6-44d2-b311-3b8163979640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97c911d-15cb-4ac0-b56c-4f9ace4a2521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c285c2f-fd2c-418a-882b-a7dcbc283f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb6d2ca-f684-4345-9f10-ff4613fd7f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef26f936-8936-4a04-8a96-981f62cf54c9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b96f91a-9b44-41a4-b40f-c1d9717b74fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7945e40-7706-4bdf-9079-8d6057805900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327fb987-c429-4fc7-b15d-0ce8c52a04c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cebb1ef1-2ee0-4aa6-a70b-f7e2a30a2635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2cf9f6-76db-4257-b3ff-49bea565a98e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a757f6cc-6c68-4b34-b0a5-7ba669c7a283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b219d8-dc1f-41ce-ad1c-7f67b8bd0fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c680c84-2a33-49b5-ad0f-f9cd66769cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b23fb90-6531-427f-b8e0-a8520b8b8706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c6c786-50f0-48bd-9de8-55ee2a185427",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b64ffd0-d246-4027-a646-ebdec1ad348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f0b965-6823-4abc-a71f-e223dc61653f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e941af-c7a1-4421-a5d5-b77fb2523679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cceedd5-cc86-417c-b7d0-21da161dff6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fa4918-a7ea-46ee-9260-7273a43404dd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70f8f5c-ed99-42d1-86d6-a2fde95c55ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ae860a-5245-4e3d-af23-c84d1a63c1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f54ea3-ee64-41be-9b06-1e8667cbe450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52702350-98a9-477e-a1ed-9609208d9268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568a6961-7c6e-4515-b7e7-e2812ba7c2b3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb591b04-28ab-442c-a11b-d3a09e7e178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47dd8c3-2e1b-4b77-acad-fc30ba20f394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932810d2-4c8d-42cc-9b91-fec7fe03d496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "06805b80-aac4-44ee-be30-00bd5aa86584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b6d69f-8ee3-4030-89aa-144d148f0899",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab872748-0cc2-421b-b63b-7b9fd075854e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a20543a-4d0e-4250-a86f-493b26f455d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e18daa0-a9ba-44a7-bb1c-0a5fcdfd7d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e56b8d3-5979-48a0-ac1c-2390c3da7939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697ae978-8434-43a8-b78c-a9f10e81ec6d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423fb376-f915-4c37-aaa5-67d4e7cc11f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73426108-6631-4de6-9577-47cbae31db26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c028a82-6110-41f7-a8aa-009fc708bbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46009615-760c-4c0c-b0d8-6434da83ef08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f993875-974b-492c-9dfa-1c7277555a95",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a23f8e-b679-4b57-b4fc-18879095fa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a599e617-03dd-4a4d-8e5f-4f82f5a9773d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6a8637-91db-48be-a988-c6e837fd78f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80a9d74-027e-4636-b656-128ff2472e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6118575-88da-4064-b48c-2e24db59a467",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58d2f19-ef6d-406e-b5d1-6e6b525d01a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcab9b7-174b-44b4-bf76-b99b0d9d27b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea4bed0-7db3-4854-8e31-26dca88992e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f2ef3c-4a6d-4605-9db4-dfc2f26b9ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae802d91-73f8-48bc-98f3-616a8bb8a460",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01e52d8-82ac-4d83-844b-8af88e94ac4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d1ab7b-ffd0-4d7a-b51a-cc30b4e204b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2783b31-4a13-4f91-bd11-c7f05bd3440b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "75aed987-7e4d-42a5-8bd3-24ff3d9b27f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ec1c1d-b136-4ecf-a48a-6c8999577868",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a69dbba-80d8-4771-a074-b470274a295a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae3ef32-f19f-436a-9c82-e0fc5e173e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58b6c0d-c4f7-4755-b737-aaa9d881933d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec119985-d1f2-4483-9771-9d19b85baa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19357b66-2996-4025-ad9b-8fb2cab50876",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1b0164-c7f6-448a-82c8-19c843f3ca58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03d1479-6d5b-4e47-82aa-a51f5a5025f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eab2162-9be6-4100-8fa0-cb308714980c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a4be3d-3f5b-49df-9287-f6534b483a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7acbb18-0253-4652-8c23-020a65d6e511",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed0e175-3586-4aa9-ad1c-1b5569897c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ac6dfd-6548-4bcf-a38b-c235b3ad5e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ffa621-2fbc-4861-890c-c8197645f2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8460440e-fca4-4c1c-88ab-6518dee64b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6f6c7d-2971-49d3-b2c0-0d6874c9932e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936d7c69-8144-4315-8ffc-1b2ac25cc703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b1b805-73b3-43c6-bcca-660754203b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11ae22c-eadd-4664-b454-e14343623d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea203d5-5891-46b6-8f69-9a3763888c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8168a5f-4403-4950-84f8-c3a67283fa0f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e469bd3-28b8-466c-a88f-5049614cccea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fad54a0-9a79-4d50-9c18-401d8ccfc9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe11d745-f739-47bd-a6a2-2f0c62fbb8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c40a3305-0423-4740-a346-00e1549d7feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c45234d-1628-4054-a0d0-807a4209150e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dec86db-00fe-4007-afce-934a75c34ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba5ee12-afbb-49be-8482-ba2f7cb2628a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec46554-a0c6-44e8-89dd-72c6c183ff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f71c56a-39f9-4d9f-b586-db209a5bd264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca2f3a9-a5ce-43cd-8b7a-b1d7069d981a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5600af8-8f15-4dd0-a0f8-3e30b5b3d1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debe8306-ad4a-48fe-af7d-16c8bea7a5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9270a61-f44e-4634-aed6-18bc1ff75c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0729b67c-64d1-4908-a81b-8c3ea18794a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bbd6c0-9739-4c8f-bc74-923157c25a78",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ee4572-93fb-42db-84ed-a455ff4b1dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c4d681-2285-490e-9408-87d434dc629a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2543badf-8fed-42a2-8768-3c9ffe6065fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73d86c39-c251-40d8-92c6-9033efe5ddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71c3cf1-f7ad-4164-b1a7-f51a9313020b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136aa809-1d8f-48e4-bcb5-27e05dd8b26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b92d7f9-ff70-40b0-a8b5-a18d69c280d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6977b6-258d-4a3e-bb6e-6073702f9b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "839d5aa0-0174-471a-a9fd-0f3b1b51a754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7457cd30-9317-4b2a-9ed9-9d9fb78cc091",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a4492c-7a75-4bcb-8473-841bf7b5594f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd31d282-be0a-404f-8188-e1179ece1b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227ce84c-86d2-41e5-b219-fd7c754bcff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c917ade-e35b-49de-8d92-bc2f99267c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c474eacf-7d60-4623-aad0-d83e91caf100",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dd8808-cd7c-4032-86a5-211e09387016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5541cd1d-0b4e-446f-85d2-0a1f8448773b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5661589b-4263-4b4a-bdae-a4325a9d2686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7139209a-1c4a-445e-b598-d207d2126054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efebcefb-ce40-492c-bca3-b36eb459bae7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126ca063-f2b0-451b-8bd5-83c3202efbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda1676b-65bb-496a-9a76-82be40e1762b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8b82b8-9541-4137-a879-0d291fc030c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de26f4d-72d1-46fc-828d-41abe2a3fd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9567c565-80d0-4a29-82b3-4c0548f2f212",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c432c53-c942-45f6-8c84-e681233d76f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06500ca-9f69-4bf5-a775-1b49b2c86453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eb0cb7-8709-4181-9ca3-bac1e0848653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a2c05b-3dfe-4718-98fc-da275c8208f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605eb3ea-ae55-459f-a9a0-348c880eeb5c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3487cf2-cd3e-4a01-b09a-4c512c723e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b878576-6913-4d61-80d5-7e4d357db4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e80988-7ddd-4e53-a9bd-f7115920f3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "787a7208-e234-48c8-b0ce-55a26d5b5bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0463bc-ac88-4d99-a525-d45d3dfe0e84",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b776327-6e5c-48dc-801c-af8d2be1dec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afadb7d6-bdf0-47d5-ac5b-c65f1a02be69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd311d83-bef1-4ce3-b1d1-f16c1fdf033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c70824f6-a42d-4f5f-af5b-fd59d532138e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6e25bf-ced6-4740-bfeb-cfe2bbd42cb5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e43c99-bc86-4c2e-97dd-f715615ada16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad3ad2d-439e-4efc-ac9c-d8a248d028e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47251dc5-90ef-493c-b6bc-f0b262f823a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f59671e6-e559-4031-adb4-07b4a33338ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8241a11-902a-4ea1-a7ca-0d98937f6cb9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1a464a-80b0-499f-b94b-e8212186c820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adebf4e-916d-47c5-a5ab-4a99384cd641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a8c43a-2e11-4fa6-9772-df386625e264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feb8bf05-c241-476c-b797-0320a058cc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4818a73d-80cd-4e52-b5d0-a00bd41efdd8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176279f8-6021-4a2e-9e3f-9c9cf71139d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c480d306-ce4c-431a-b7a7-654c17f2833e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771f7be5-09e2-4e02-a41f-e3f5a3e1f351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb6d047-6f00-47d8-b0d7-44473a79e766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e67dd2e-4b33-40bb-9c74-96545a9cda9a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ef9003-6904-478f-ac31-30ed452b73d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62c9715-2942-4976-a689-70f2bcf6fe98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a401897c-16b1-42be-8f86-972b812e8f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1473480-0a56-44a9-8979-548d3c7f5cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634887e3-047c-4e25-b878-baa5179ccde8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a6b7c8-cbf1-41af-835c-9bc0ba83acec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12ea36f-8c3e-47d7-8393-d4872aff4b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fe51d0-a38a-4a3b-82fa-37e189782d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c55352-3ea5-4710-a127-6e1661f870e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5551c1-105c-4557-953b-4f642cd17eaf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161bd83e-b5b6-41cf-b189-e4ff64227951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc6de0f-820a-4727-b41f-063186c0a897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7905fa1-5275-4453-930b-19ef557ea683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee683f9-eeb5-43eb-953d-56fb0bc62856"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b9dedce-da8a-4ad4-8d13-62a7e7780588",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1790b300-7214-4127-8f6a-18f6c61a8eb5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c7c5da-3d3b-460c-bcf1-1d74791d68fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0bd769-3764-4831-8ed5-48031728c0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d74aa3-1a32-47d7-8d66-d9a7e15b6e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95999ed3-cde9-4b5f-a4a1-fbea5c8d8755"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be65f855-5ae7-41da-ad07-53874bcd1f12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "864d9fc2-ac8b-4f48-be9e-d1ff6dad55a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3651d78d-cf56-43d3-99db-35984953a96c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e167769-9127-4699-b276-4c141a300f46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08ea3bdc-8b15-4102-b08b-d3379db3f50a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2b6c3af-6842-42a9-9854-1faf49a787ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f03cd05-7aa2-4b90-8685-270c77a8702c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fbef14e-a8c1-43ef-a8b7-e6ca4dd21b61"
            }
          }
        ]
      },
      {
        "id": "76144e84-89ec-4661-abc1-22cbc3138176",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "351750f3-47f7-4caf-bfe7-c78cd085523c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71c10d6c-0c38-41ec-a058-9cbc818ccfd5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fbc415a7-8ca2-4b06-a2cc-54ec78b4640b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b619f14-84a6-44fd-9247-f745fec4b6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59659485-d739-4255-b49e-960aa1e3188e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ba8370-cb05-436e-91ba-dba83332ad97",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94feb949-1512-416b-8a03-e33360484615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707c4f77-7d4c-457c-8824-ffefc8e72379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9578b8-3f4e-4507-8745-53fab022c1fe",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69370fae-ea74-4c01-af95-7329919ab58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05160a5-e01f-4c37-a653-a2946bf11eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1df4c5d-d54b-4bb6-8fdc-8959668240e9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169931d4-2a7c-4ecc-88ed-24d97c5ceb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246409ea-7f1c-411d-835e-1dabc896e258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a46ab1-c4bd-4309-8596-d103b9b80f95",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445381d1-3632-42ab-9f6c-c745dd7297c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f45b46-dd90-4959-b1c2-503648c800e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e3693f-e245-4863-a4bf-9217ad2a7600",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744f56cd-e7d4-40c3-a3a9-80847ea30b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0465b19-e834-4b79-98c9-6765a9c72682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fc3133-bd3a-4021-bee9-0824610bccd0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840f91b4-a7d5-4394-ab88-8ec8bea2db4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61edb17-bf21-4941-9e8c-5f069a3db090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d3c502-0cab-4702-988c-2a5216d97fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb17387-8bf0-46af-b3d0-a8d39be411b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e94a9b-f578-443f-9635-45d67bba5d8f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7ba438-c658-4084-89d5-2271856aad22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b94360f-7bca-4c48-8e66-7bf3c77b57a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e23c39-d58e-4074-8c7a-ac65fe36e26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54312586-63f1-495f-8d33-e5b6cc9d8612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd589ef-1700-4274-96ec-20449d28c68e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa249c4-c8c1-41db-a837-4fa15e03a599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eccfc6a2-cc02-4e15-9fa0-be3ebf19a787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96c59e4-a3e6-47e4-8b02-53744edd4724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b007ac-8c66-467b-9dc3-90a86fa2af88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712b7cb3-122c-4a3d-9a8c-a265df9788ed",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd3a05c-1683-4cbe-8424-78a43630768e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "531a3f2c-770b-4817-8f55-a2018123edf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdd80d5-bfa0-4e78-b34b-515256eaf13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b748ae-3f13-4301-9feb-75cb4031db9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d132ead0-9155-4fb6-aa76-ffec6db7343c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db13c72f-887c-45c3-be25-e2b4310044e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47996a7b-bfbf-47a2-81cd-bfc818b8ad0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b54852c-fc94-416e-8305-48c257b8edd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3934d96-062c-4c67-b60a-488c79fa181f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158e627b-33ae-4c50-8483-a69778e9aa13",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279623d8-ef1e-4087-bd42-76cb2a070639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acf1573-ed5e-4bc7-a92e-d085c5b1af2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ea9a80-264f-47a8-8f9e-7b085bb67f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5f3abf-39dd-4ff2-b0a3-cb11b168847b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8bcb6f-9710-4cca-a687-f4a3d3403483",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d195dd-078f-4002-81ff-24ce6dc22c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30b88371-ea08-422c-834a-3161532d1580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07c15e3-edc1-4ca6-bd1c-09a0390de916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5ef808-d135-4abb-9408-02da0e08bede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c342ece8-2bc8-4816-9ede-31fe8c23be49",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71fda89-4c21-47b4-a7ce-7acabeb7777d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "017bb292-3785-40c8-95ad-d96889368f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286b6617-3683-476c-8393-13d8d1b3a1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735f4777-28f1-46ef-93c2-782583205272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6387388-bf9b-416b-b760-ea13ff968766",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd7805e-df31-4733-8def-3183a6b30bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f435345b-7a34-4e1a-8c13-fd65c188c118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddd91a3-819b-45f0-9511-9b2bb4c117fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa83168-0700-4f11-98a3-345c966d0f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804f1fe1-048a-4d7d-8895-00ac3ae2ecd1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ac8501-f822-4844-a967-e5e373d29702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6034f8b8-e7c9-4e0d-9df9-66bb36e665bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e47c699-4050-4115-bedb-6bff48a62515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0fec91f-7c64-4d88-8f5a-dee5e0ae747b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7399ba34-be93-4cf6-9de9-3d361bd91146",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe491366-b7ee-4f6d-a1ed-86c4629c8596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893def1b-6fd6-4c28-80e4-f3141bc375c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408a46e7-d874-4b2f-a88e-77364ca5e8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137ed4e2-fbef-4982-8ce9-7c502529f19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f909a8e7-4d51-4eae-9b72-78c6a9003034",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af4cb06-0ff6-4aaf-81f1-693049f53baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee8d78e-9323-40b6-bf3e-0e4f0cc7c5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ffcce0-d8d5-4ada-9a0c-28a935521f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be616b5-94fe-4e53-b8b3-036fd1de437b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1a7809-ea1a-4646-bb96-edd431b1ce7a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ff0a58-8fd0-480d-8d00-2083a5e63e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b0ea23-87a4-4060-a53a-203d5b0d7a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf65126-2e0c-443a-acbe-97543d0a5a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157b60c4-8d96-4a23-819a-a8297c447ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a76e38-f4f2-43be-8226-017d49f69020",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b688701-b1bc-4206-83f7-1cfa95aa8195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237ee0b3-8054-45cd-98be-0cb5fe1e9e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd109bd1-24bb-4f25-9f90-7f5af037fb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767ffd13-93dd-4509-9db1-fe3b8515d61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ff15b8-eb9a-4f38-b5ff-f59f5661f4e8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf2fd08-9cd7-4b63-8c15-8249591032e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5063897-a3f2-4aab-b3dd-ca85c5217089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7428a7b1-7a9d-43ea-858c-5ac422eaae7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cffe33-fdbc-4ff5-a569-ea78a4a6c71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9685f01-d7a5-4f14-8760-39bd9ca48942",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696d739f-015d-4675-ac8a-931e29c76ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771869a2-ce19-4fd6-946f-dfcc4c4584af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6632ed-feb9-41eb-9ba3-4b6820192c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7020afb8-d63c-4c09-aa47-d367b34ba2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199f7e56-08e4-45ed-9af4-101b0793a4b3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847e9887-104a-405a-a17e-7d08e5eefe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ca47ba-e87e-4a2b-83b7-68a09d325998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b63de3f-0f1d-4a67-b0fd-d059ecc9170f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ba08da-7cd1-4699-ab40-eed8f4981bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6979e50-c474-47ee-ae56-ad0e9f2adae7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc05c26a-5100-410e-a54b-74b3bc0e92c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "690b7cfe-c1e7-4f27-b34d-28cab545eeb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385c5cf9-2990-4230-a033-3fdfb444c6cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823b9fc5-4ae2-4cdb-ae20-fbca9ef20dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43475426-9b58-4837-80a3-7c03f7ab7a83",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9282af-8440-45c2-ac78-a5f5c2983f7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba9037a-0d1a-47df-ba9b-0df050ffca6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9c869a-97cd-4cc5-919b-b29011f0f59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30260ba4-6a48-4edd-b893-d2899210476f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92880401-e5d2-4911-8b05-3531750d092b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f83ed55-d7d2-4940-b72e-f04822601d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f910fdb3-42dd-4c30-a813-264b577679b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739936d2-7d72-41fc-a107-506c8a3e8ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5c35db-b755-4fde-9ed1-766c097bc3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5b0922-8285-4715-a4e9-b527da8a508b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74026737-0997-4d3e-8ada-7f31a35ae491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e2dc212-4b89-4966-9162-44457e28a89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfac0d6a-83ab-42a6-a01f-51f6d924de6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555ae114-81ae-432c-aec5-0360143e8f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd090016-13c3-4541-b48e-e6cae88eb1f0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c585420a-fd0f-458f-9404-31aa5309983e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84905113-2545-4517-8b85-625bd10ec036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3159061-1fec-4c94-a28d-320bf288cc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03447d2-1a34-4fea-a56e-1df2b3b55d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b651c138-f618-404f-a22a-242d4e261fa6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20c179a-296d-4b75-bf37-da8f6ec1e087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dcd6134-39ba-4790-bc44-b36b8b56585b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea6ff44-1c54-4121-8f35-1b9641c22446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7074da-d9ff-4193-99c8-d1f8f1cbf447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cbd3a4-2fb5-4ff2-9da6-46e73d6098bb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fe9eef-90f2-4a6b-838a-f89f1226e8d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9931b9-57c5-4784-8409-1bf6b35da807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6ba187-342f-4d19-be89-efa6a66e65c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7c6fb1-2ec5-45dc-802e-a373106e798c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b0ef95-8b40-42ca-8c0f-d0f92414160a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ae0406-73f5-44bf-9c0f-da1cc2aedc09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989b0362-87c7-4be8-af28-9e4b5f3da841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9deb879-130e-4d38-a4bd-6782335ea802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580f8827-32f1-43ec-ba8b-a96c632f0e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bd9717-7a8d-43c0-8027-b83fa2d1daf5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e9ad8c-0912-4113-9e21-f6f9925efd16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21215ad4-7d3d-4c45-b713-826462b77ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce788dc7-1084-4141-924f-3ab3592f0d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42aad4fb-fce3-4fd9-8ecd-a50d02d13a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b9c278-0592-4540-b440-8583e9cc6348",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d8e945-b256-48d9-aea8-40c820d1456e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c10b05cc-78e4-4685-a19b-833233a4d85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc00de8f-b299-4330-9732-44169ebd0eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2ab3a4-139e-4dce-975e-0ecf6365956b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1dc677-2a51-4cf7-9035-104b3eb43ca2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dfcd06-a88a-4fd2-8b80-6dc2448fb580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2bfb24d-dec5-460f-aaf5-c146ff49f145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7801025a-2951-41a6-b525-bb5cdf1c5220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5088336-0e50-48c3-b2b2-9c1738c650db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcb67fd-f05b-46e0-bb0b-f96c17a40108",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe7e096-b398-4f08-b51d-42bf470d61ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7927fb0d-6c68-4d93-b8ec-6e7d37c2db54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccabaedb-8c84-4561-9354-9f83ac0f0417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d54ca7-cf55-473d-bffa-fdbbf87c0080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63942e88-0363-4bab-bb1d-5f6dd66dfb1e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b7c7d8-4f16-4362-9e76-280f12bb73de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c468c607-8cab-4eb4-a25a-8db41a6914fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e8e8b5-48e5-4879-b8da-582d9b7a6f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9a248d-c9de-4360-b049-ecfceb94f071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab814b56-a4f9-43b8-a869-51472ca90ad6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ce319c-0ac1-41d4-8035-17084406c63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9296ae1-10a3-4169-a9a2-aa70d9d67c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35b0a3a-1f38-43a0-bbed-50e27647e511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d90f56-a229-4e9b-800f-129192bdc160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d382af46-2519-4968-941b-ec42e8388a20",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62255e2-d89e-44a1-b881-c6ce984cc8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ece7de8-2e92-47a1-992e-9bada5a4ebaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d43a80-9337-4040-9a5d-e9b7683694f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ead2b0-4801-4361-a577-13944b0ee399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ccd922-5da5-4a56-9ca6-d6e2c8657299",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5604bb7-8e0a-45db-9415-000eecfd48c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbd6e3c-4d29-4c79-8497-e038bd270769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717a42e4-7d08-42a6-890d-3e1ae20cf751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf32c2a-974f-4e95-b515-7e86ae221480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcbc51b-586f-4ce4-9fe5-16c51e13113a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e0a4fa-b213-4859-96fe-d4b45f9210e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b20a1bc-77fd-45cc-b371-c2166503ad39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e203bde-4759-4981-beeb-dc8f0f61f981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac399e8-33e4-4b86-a118-d289ede9db94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f62a2d-db4a-47a2-9ec9-5e4783f81f33",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1c716c-1333-4455-957f-5371bde15dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb71736-f3cc-4c87-bdf6-9798462d59e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da3f189-3e9e-4477-bc0c-32c955bb1d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32120af-4137-4d38-bc6a-0166c6d90c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c1cfcf-7d2d-430b-b4e1-88f9e395f937",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de346b7b-6371-4d90-a77f-eb4ebc3ec1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b2de36-ff6f-4001-8834-981e68c47f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498017bc-53f4-4a6a-a81c-7b026b28c2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574e63d7-6944-488b-9620-966c6671370d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea37f0ab-7a58-4c92-be83-709c1eec1406",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20425e9b-f284-4642-8379-52337c1d42f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc309f9-c1b6-4935-ba4e-5eea34616115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20eda97-ed08-4b3b-b512-b1e75fa0ed47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730a94ef-0f2f-47b6-ba9a-816f1639711e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d506b566-434a-4a3a-b8f4-9cec0b430687",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8a7611-122d-4ff2-972a-0203d8178364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc43839-f036-499e-9472-dcd07b29d3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30717867-384d-4fec-ac0c-2e0f5503c44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c135cb-5775-47dd-b682-361c410e1ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef009a4d-14f7-4389-9e6a-bc7e6fba2976",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba46db0c-d67c-4d43-a0a9-d1ea5380f666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b95ebf-c408-4ee1-92f7-e24c3f4c61f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cede8e97-7cc5-411a-87d4-9907a5bdbabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b1d9ff-9fb4-495a-8d3a-6b5bcb4366a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bb4298-609b-4421-bc7d-84d755dca2e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac08f679-07ee-4d59-a56d-9589bcf83bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e14773-b04c-41d4-88d9-0793127a27ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9d5eb2-d1cd-4d9f-be71-e98c12fb8957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d13cc9-a7df-44e3-8352-40a657afd03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8133e101-c7d9-4110-9739-ca92513afc86",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e8d734-f828-413f-83df-44abc29408f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c357e8-a3d8-4253-aa81-a7f759285049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4612f8-162d-46f4-ba22-6457fa121fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205391ce-9187-4807-9779-670682b48e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbaf976-6c59-4789-b099-71ccc17d1eb7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f23fe93-df67-4650-bc05-13da3f539173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd1817f-e27d-4056-8060-b9d7bac76596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b53d7d7-02dd-4f75-adb9-b927461843c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b39aee1-5007-4771-85c9-195908579b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9ed5c3-31f5-435c-a7af-0d50ddcde2ff",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff81ad2-34da-4d05-a138-fa34b3c7eec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54086bd-b3a7-49f7-b21d-f89279df5787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695e38d6-9659-4d8f-ad8e-640ad7a9ad93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0976b6f7-86ed-4707-8de0-2b1e1839bf2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da39a60-fc09-4940-909f-34855c9840eb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56adcb63-cf2e-49a5-bccc-c2338d836ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50103d79-180c-4cda-961e-10c6e4d37d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a451b5-74a4-4ee6-96a1-52e542a926d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b206c5ff-2d6d-411d-9512-d9317d7b3d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde77e85-2eec-42af-aaee-60b5330445c6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21b6f6c-9227-466d-96d3-9e4d289a89b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015a45fd-173a-4eb8-aa07-2f8fcccabc2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae664bb-2fba-406b-8dc6-12a5b2a03594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123fc571-581a-4083-bf83-f33218e2cca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459cea17-a516-409f-bae7-ebe7f05152b6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07f8512-a248-4490-83ec-364bb2ee9918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db4b89f-811f-4d1d-902c-fedafe7e07db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818fc094-4d46-439d-bcd3-0e80bc34aab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9892b13d-5f8e-43cb-bace-5e8d79a8fea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06e28f1-8a4c-4cbb-b264-6bd37beea484",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d15f478-650a-4add-bbd9-b3b21df257e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318e1424-9505-4c36-aa8b-c7447a1baecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6ba451-f5a8-44e0-bfde-8cd96ab0bfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed089ca-d3da-449c-8574-bedea8584f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5546179f-9b91-4907-82c3-aaa03a970205",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda946e7-130b-4694-8087-929ecfca5d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11925dc-b734-40a4-888b-bd4ff2ebba1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35527894-603e-4260-b61f-b5daaaca9a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b10971b-ac0c-48f8-a60f-09fc33a69e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db34222-89fd-4244-9916-14f4156a0483",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fef3c7-3a88-49e0-9ee5-d6e24038c60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77be238b-3a7b-483f-b71d-7ad48c04a1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e901db-5257-4f84-859c-9962f0c5fe71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdea9c28-5580-456c-a0d6-cf89543f6bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427fafe5-6545-4748-b442-0ec0bc082397",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748ff220-a34b-420b-b916-1f2ec6e77d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2899d79e-bb3b-42f0-b044-64847f32bc1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b03cbc-9ba0-42cc-be7f-af4da68bd5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b801d02e-ba13-49d8-b262-539308e536dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379c5be9-5e3c-490e-b263-37b97eb05886",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe01a777-22d1-42bb-81b2-33d7cae87831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb6f222-7540-4907-84f8-cffc8a538b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eff34c-c643-4527-aa8d-7c26097bd49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318b3eb2-2de2-495c-b2af-f0e9094109e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5726a7-165b-4960-8fa6-e4df58d6bd3c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db50147-5c45-47de-98ee-1bea2aee8412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575570c5-ea89-45bd-b8ca-b4d0445741d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f5a2f3-bc78-4e21-a39d-e4ca16add077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfd74c3-4f2f-4866-9041-99c7596deba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b44cf1-5785-4850-bdcd-330d471438c8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56856bcf-8508-4229-896f-a8d2050a128c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee9f382-da84-4e62-8254-13d6a5b2ce2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc63366-f150-49e7-bef2-91c2bbe2459f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6534ae9b-0734-4701-9749-1502d1d73b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c1963c-d9e5-42d3-b623-3e8a802ca1c2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081c6531-0be2-4e82-ade5-24fc8332454e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab881d8b-51bb-46c6-90c2-3305bb735e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78147b6-8dd9-4559-9c98-e23f7a4d32b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a424863-46f2-4db0-9664-e8d7c8b45cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54927794-5125-450b-81b1-421789926d20",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80af117-9f2c-4f7c-8039-461b4688178d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b68c3f-eb9d-4584-87ce-f5a2c7b0b9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1dca1f-7416-46cb-a7b7-791bf6fac8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83f50b9-2800-42f2-91a9-eed5f448f3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8eae77d-fa49-4ef2-a0ec-e7c78394b3db",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05177c2d-07f7-4145-9d6b-0d0abce29628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbfeb8d-1b9a-4e4a-b6e7-744f26ba3f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb42ee8-9eed-4678-a602-6b49970fe45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa074a24-5ccb-4afb-98ae-be721913a392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1550f2-5068-463b-861a-7e11e5f91dca",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8853031-26df-43a5-96ac-0ca48698b456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c25a02-a658-4100-a796-00ee8d5a2eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4ae132-585b-41a6-80c2-10a670fd9850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f392d159-32bf-436c-9577-b6b21cbee339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b079dd89-a054-4ea6-b6a5-911242886dd7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0998c7e5-4591-4e80-9433-d1409baf52ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c30620-71e9-4243-aa16-7b1e61def54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee5b32a-c186-4837-9436-cd07576334d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b037ee-6e47-426e-ae3b-8cf140abf198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ab0395-b008-49e8-9fce-ae1a76d36eae",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41a3926-6c8e-493b-97ad-a55abda51f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c440c53-7e34-4304-83de-107df7ea60b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54009572-1c5d-4910-81f4-c048128a5450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c7343a-ef3e-4ede-9f00-8905fad35c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30031e9a-3b15-4ef3-b9e4-c8146659d297",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5887be36-777d-4c20-b4b6-eb9782b6c321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb59a9e-e76c-4743-920a-2ced5eb05f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d496a8dd-5cd5-42f6-9b55-aa3de6242135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915336f3-901a-4997-988c-310ad040de98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b339b57-27e8-4cca-aa78-2bfc4acf98e0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8296ebb-f44a-405e-a914-15b0972de305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f495a6da-6d17-4338-86ff-cec40b7e9bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21009f60-7065-4cc8-a49e-777a6004f126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e35a84-8167-4450-9a40-8831bf861afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd03482e-761f-4ca5-8540-31287801de9a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54e5110-703d-4daf-92ba-6072eac6b3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8981385e-319c-4504-b78d-dc1504991591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c7cdff-24dc-4146-a91b-38633726cac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687c8ad6-4120-40ca-bbc7-649543a6a597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350cdbc9-4afe-40e3-b7af-efa60d92404e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0540123-8e36-4080-bd42-cd8f93daf42d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c21b0e5-7437-4a01-956f-a8b48f24608f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff39de4e-e515-48f9-bf68-fc4391447270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dfd5e0-213d-4a8a-98c3-7b70f3cf1383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85977c98-2501-4260-a4e7-ee6c659fab2d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93881068-2348-45cb-b3c5-88fca8f809ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "712a9cfc-1b61-44ae-8269-46c9eaa1f817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6987f741-cb7c-4e30-8630-05793e851456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee1a579-e230-4878-8663-e69d421b6493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cdab62-9c0b-4b17-adec-953a4f10df3a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e753b1f-0fc8-4547-b336-103cda5c2f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "326249f7-f130-482e-b07c-0ff062114dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afac03d-b8fd-4bc1-91ad-bdd59ed280e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fcaace7-beb6-4c28-8957-b0c403ce84b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cf034d-f135-4836-8e60-e60aa8fdfc25",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b01630d-8313-4c07-8f22-93f8c29833d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76bad9ee-c1e6-4f5c-a4a6-11772d9cbb76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3c9c63-4977-4868-a6bf-ef61a9d71e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10451102-3af0-434e-b388-22bc47697674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27f8ba5-5001-44c9-8441-b2d9d5537aa5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b92be6-cdb3-4541-b032-508fe0a64952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d983d4b-ae03-424a-bd88-b7859927bcd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647a3c29-4f2d-4464-b4f9-8eee6a8cbebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3241b1fc-675a-4d7a-b0db-c87759bbe328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93ab499-9671-41d9-86cc-744da00a8aa5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2ec6ed-4c3c-4c36-845e-0439ca94cb61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79869837-385d-419e-a999-c62fb484df04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6629e5da-f8c4-4c21-bc82-ba2ead844019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96ae727-91b2-42bd-9d14-716bb06b8c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3423a503-098c-45ae-9d66-a0f63fcc3eeb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55cde63-2852-4b36-bcb0-b69f67384bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "995f2d6a-5320-49c9-8055-91b19f3ce932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8263fcb1-78e6-472d-9bfe-5eeb0645f8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36916d10-ed33-4f11-b6b2-8bbd55ffc1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d865507-716a-4099-b35b-d63b27a3aef4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f202d1d3-7fe1-4e50-bf7e-6791a3caf045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a4bc8a4-ef8f-4801-9b38-848e8277712a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a293a19c-7670-44d0-a48f-5220cf690b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2ce61e-576a-4d50-9975-fe38406436bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4275363a-c3d9-4f2d-9a04-69e89dd71b93",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf818a1-c640-4bf9-a81c-7431492b332b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30845f22-14dd-4098-83c3-b283ea07205d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab466527-ee0c-41e0-afd8-04bdd4f6b93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7fa105-52e2-4e03-b801-7684855bbd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b04e14-29a9-40f0-ae84-19be818356cf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98817249-a7c2-4470-93dc-706d7e1703c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a9aa331-98ab-40cc-ac5c-06ec547a9b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d28a874-73e0-4a76-92dd-d9b8bc41766f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d9be84-ef78-4083-a459-111b250b9c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f32ce6-0e54-4578-880d-dd4b3f34f0e4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed90f3a-985c-4ab8-81e6-59d18560acbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23de959-07f8-47ea-ac1e-95b867eabf34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7bfd5e-e454-42bf-b42f-faede7e1e6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca27997-f400-49a7-8524-f934b61751be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68f63f3-6230-4ae2-b2f8-5cfbed25743c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d28c9e-9ba9-49e2-8f2f-cc084c83eebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ec334a2-60e3-4d1e-8e18-be63dec91e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e347703-9f8d-4a8d-b28b-3f9f42430bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fae83d4-3662-45c3-a02f-a5c86cba9508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fed4b8f-fd4c-4fa4-88eb-98b143abb818",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e72a728-cd8c-4c0a-b16d-47744ac627dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e437d4c-ada5-43cb-94fc-60d75cedb4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490cbdce-87f7-493b-99c6-866015f36f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937381bf-4a5c-466d-8004-bfd9bdbf239b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2a2051-22af-4019-b4d5-17313cdc2e38",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a0820d-0f13-4dbc-9994-bbcde4da8bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9a8ce8-0d70-4acd-aa71-5a77aa36f32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae3d41e-0690-413f-a620-253ce4bbbeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ac2113-663b-41de-8875-59f1660d89b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0abd471-0ea1-46fe-822f-c9fb7c87a5dc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbccb3b2-f903-408a-933c-36aa5ae65590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "136a5377-2f19-48a0-9218-fcf95d3fc827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6015ec-cffa-48c9-b8c1-ff5a84ccdd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa191aa5-76c0-41df-9944-4e8eee8ef296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627e6bab-3630-4d84-b4d3-20b96c19faa1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c1515e-141a-4b6a-a552-0a2be523701a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a4bb64-c592-4ffc-9c68-62c36833731d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df81566-da2d-4346-bd6b-67e86b1f7f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1902291f-960e-4ada-a03e-06f983ad8a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc61439-d62a-410a-a5f4-0df82731f368",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8a8fe5-7bcd-416b-9629-522a268556a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702fe6ee-6c2a-4087-ab73-a532e92e00fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3d3117-da64-4fd4-a3ef-1249f75c7e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e806c050-49c2-4d76-b628-f090d7ad8db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d08b45-9eb5-4854-ac28-72658d9e93c6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6630dbf-a4e6-4f0c-a0a5-6ad96bfef6d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae14a69-4312-41f1-9df0-034421bcbb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f8c503-d16a-49c3-b1e3-f3c54d2aa27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53660bd1-b96f-4bc4-a8b5-9f89d0231927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f074938f-3b17-4c5f-9fea-7b7e9ea4be9c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93262de2-b6c6-41d1-ae7f-09761f4d72e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f0006f-5406-499c-a6ee-8018e2abcbe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222081ca-9c8d-4edc-a8b6-116be661219f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18816a8f-02d3-4781-9b2d-0392f9e557f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da2f311-c7cf-42e8-82a4-c06c16e6f142",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe26505-df15-4fdb-9ea1-6bc82788abe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22edd60b-2e5d-49f3-a71d-990c64b379bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c99645-d660-4e28-ada5-f92ec9f71699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acfdaa1-cb99-47ee-a192-aa9962ecb0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257ac319-3318-435f-9929-4d8022f44bba",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a481d45-29ee-46f2-9f4a-55b395292eb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec079358-874a-4ad0-ac2f-77f6af3c44a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e400eb-a56e-4b4d-88ae-0ef3b9bd3621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c119775-8234-4e2e-aa99-209362e382ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b8afa4-08af-4dd5-9893-41eeadddd9e9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d89326-a149-41a7-a38f-9deffdbf3a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4efcbb04-e120-4064-87d4-da087385821e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b0bee4-7ff2-41e8-b837-727301907827",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2cbc08-2e39-499f-b955-6380b2d01db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a85caad-62bd-41e7-a524-e8b9cbe97292",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b752df-6a6e-4369-90ea-05b0684a4ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7749c9c5-534e-43fa-a2c8-a6f6dc863119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d888bb2-73ed-4d8d-b90e-c82f0b7dedf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09673825-4346-4ac0-b2d9-b6d05ceeea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403c5f78-68e3-4fae-9ca8-464fbaf87093",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48503df-64a8-45bf-b932-c81ae68a928c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76445db6-ee0e-40e4-b223-a08412829107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fccf0ea-1ba2-4216-928e-f9e2025cdecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cde9307-7c39-4f15-bac9-9768c58230e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e997f31c-ca5a-43a6-97b8-3ba40e787dd0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b00ae64-cc61-4297-9c11-993e57be4617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cd5c493-1c76-4395-88ef-03f6fbf98ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff7ecb2-7d16-4803-a541-47a1535c9c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5866a47-9e68-43ef-be4d-b40e580db111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682a6fd8-8ce4-433e-aa73-97319b773bb0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88043d7-2feb-4c89-8fae-c5b43aa36670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44624db4-3dde-40cd-990e-e13247f2840d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af78c58-6e0a-4e8d-af69-30aec36db165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58f088b-052c-4520-b064-6528ac18b1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea934213-5ac4-4b92-9e29-9f7ffc1cc1f0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407bf412-dfc2-4788-9552-2b326f690d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cfcee3b-0fe6-40e3-949f-ab3106c8f12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c7e79c-6a63-46c5-a90e-88747a418f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13666065-552e-4b56-9204-15d4fd3fa450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ac8a2e-021c-4aa7-b90e-9df8070f5a54",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7551f5-0aeb-434c-9155-34d405d67dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ac5139-85aa-4223-9d29-11a047a06683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1fca4d-35f1-4671-9fce-a19f9d0f3c9f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af917bec-dfa3-40cd-ba14-f51be448ac6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b6ca1a-7781-46b1-affb-88c8635e26a0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f848a6-49a9-4586-b366-64607449c89a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fdfc839-f8b3-45d0-a48d-fb1283eb6af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c70cc93-b960-46b4-9c2f-eed3fb67a52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19bbb69-3452-4cdb-a69d-6b2ae9700092"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0fd2fad-c51a-4982-89c7-1a8297a58784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cb8f2f7-888f-4d69-9ee9-74beb454ae90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "558e20af-b25a-40c5-ab4e-1a7f77903706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "098b454b-52ca-4d73-a0e1-13ac7362b2a7"
                    }
                  }
                ]
              },
              {
                "id": "88036f8b-cb89-448f-9f3b-be0b427980ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0128bf38-8e1b-4d1d-97c1-f6ef8a117eb9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16efca20-cd2c-4b84-bc63-e9c952b4174c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4c1cac29-7e03-46b8-8d17-371652f1d28c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5185f8-8d87-42b9-86d0-721f5afaacd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4e09912-85e1-4d67-8795-ee52643201f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2303a8a7-a3a7-47e5-8ebd-58156fca1083",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "085582cf-96cf-4f43-9083-aec2bcb004d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa33af80-f3a4-48a7-a2fa-501a42079d9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46316fd1-c869-4004-abc5-16388c5f72ad"
                    }
                  }
                ]
              },
              {
                "id": "546179e0-4ef9-4539-9fe3-ad5899b4a61f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2a76013b-a55b-479e-9798-17008b168081",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7fe639-e73b-460b-999e-e43a1bb4c879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "01e2d689-b947-41b3-8e46-c99690611cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a9878f-d371-49c6-90dd-97722c8bbfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff3a91a-109f-4282-8db7-af9237065706"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "78b564ff-50dd-4fbe-8884-eaee76faca57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b209a7d-dfdc-412d-aac1-8fe1b65688b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "048186bd-6465-48ed-aba2-11e55fa3bcc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f28469e8-f74d-4409-9934-f79873a3ef77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75ba49cc-a040-4a72-bdbf-781d601b0ac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f49c2258-646d-4491-9b06-09d2c3c3786f"
                    }
                  }
                ]
              },
              {
                "id": "349d2b68-f743-4616-ae9c-2dd420209cd7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3e5aa9a-cf79-426a-b50b-2cff76d1f176",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d5aae3cb-6495-4cfe-a75b-ce8801184193"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1357e6ab-b21d-4cac-aedd-e2817782c5b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b03244d-78a6-49f6-8094-3f654068880c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aae4056b-26ef-4067-a062-15271ae645bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5a18526e-42ff-4f57-ad5d-b8878f6a47ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c73408d-876e-47fe-9b5f-88cf5ee34fcb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a4039dc-b7e2-4281-8910-ea853911b133"
            }
          }
        ]
      },
      {
        "id": "178cffdb-3dc1-4a57-baa9-b8e6e593eb2c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1c4a87e3-5bed-4182-8e06-b3679176000d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9d7681f-73e6-4bcf-8f52-a6d86a7772d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5801d51-1c9b-42e7-bbfb-8714efc06cba",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ab4670-f29d-4f80-be00-09732d439cae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "918ca519-43f8-417f-9a92-fa7165a2d50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a93843-0a20-4798-98e6-933e862ddaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d73acfdb-68b0-46ac-8cf0-a12e2e70da86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fd34ef7-6714-4ddd-8ea5-fe8027ee37a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53e117e4-0e62-4c56-b0d2-ee4424c3f80f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed852979-9ec2-4cc0-b4bf-681abdc76571",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "678fc260-324f-4b52-82d5-bff52da14a36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8cf8168-39cd-4d97-b0f9-d5bfc2e43d89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "494ee2c2-6797-4365-89de-af77d0768600"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68985b63-7431-4955-9962-274e90d473fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bbc7423-4ffb-4b27-a1ae-e7481bd5ce4f"
            }
          }
        ]
      },
      {
        "id": "0b98cbed-333f-472e-9844-c0b9d899e10f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0e41fbe4-47dd-4750-8c02-e92a86c5f3a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30f02799-603f-4b0e-8d3d-a2fa2c583d72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e559b328-6876-4004-82b5-bccfcd555a1c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b94e81-2b8d-4caf-a9be-f9a38182d28f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5abb506e-819b-4ab6-b3bd-cbbb45c65d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110811bf-a226-46bc-a9bc-cd4f22ddbf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f94f76d-0971-4e22-9546-53af34f7396c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9600e5e8-1f68-4b59-b4b9-accfae73eca1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3a44622-2a0a-426c-8fbd-d87cd4f61599"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb9b9985-0d6e-4534-972a-d4b622070ab3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "089011fc-5edd-423e-8b3b-aaf39565eda1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a3c29fd-ed98-44c1-ae00-f8dc059ef03e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "38ac5b28-b4b3-457b-a4e9-8bbe5f5390a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87e497fb-eb06-484e-ae06-072a9c116d08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57a14bd8-d8ab-4fbc-b856-309f9f98e931"
            }
          }
        ]
      },
      {
        "id": "69a94c27-4380-4ab6-be62-ef51f53c154e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "01ca572c-9342-40d7-aae2-abd39ba7668a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86bd2b41-d769-451c-b1d2-cae7c6430ea1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e85a2f0-cc1d-41f1-a536-ba7a15150880",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b110c4e-0fc8-40a2-9042-c35723ec1ff6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "309c94e9-89d1-4a96-b8d9-53153486a183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6795de8-d50e-4704-8dd7-fac39ad6a583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3253c351-649b-41bc-88c0-3da7549d0b25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5abda30a-4426-4abe-a63b-85acc42a5f9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9594875b-b251-4d5e-9aa5-b0c3905311ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e48de56e-b856-4a33-be76-431c53a99db7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b123bc0-fc12-427b-a99e-82f842256b93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1dfec419-cff4-413a-97f3-7f104cd44df8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "440a0193-38c1-4530-996c-65430e960604"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7821182-6ba9-4515-ab4e-20057c96c051",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6af937dc-6c7c-4b83-b100-f06c62fba4c5"
            }
          }
        ]
      },
      {
        "id": "8ad08a0d-2548-441f-9b82-ebe11607d313",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa5c56af-ba0e-4c31-b1da-22f1f0021d81",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee9f7b66-44f6-4871-bc6d-a7b11cee59ac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ffb2f19a-556b-40bb-baf8-b36c1ef2415f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "150730b5-611d-4f99-82c4-bd312f520e53",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "270f7a52-f4c5-4277-bebf-3a24434f72eb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 107.50793650793649,
      "responseMin": 11,
      "responseMax": 8421,
      "responseSd": 574.1291506995997,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719103272721,
      "completed": 1719103308236
    },
    "executions": [
      {
        "id": "c689afcb-aec9-432f-a003-33bf06421c82",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "42031b4e-4ac3-4088-b555-1150387917c0",
          "httpRequestId": "d364b9b5-8b08-4ad2-b2b6-c37c6e884fe6"
        },
        "item": {
          "id": "c689afcb-aec9-432f-a003-33bf06421c82",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e9b68119-6384-46da-b4c5-e02b156728b3",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "6e573d0b-4bed-4fcb-92d8-f05e06dca5d2",
        "cursor": {
          "ref": "bd37468b-53f3-4970-af3c-d54aaf22e371",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3fc6a378-7745-4db1-908c-e557f0f4ea03"
        },
        "item": {
          "id": "6e573d0b-4bed-4fcb-92d8-f05e06dca5d2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "14bc77a2-3eb9-415a-bcbe-7d30b35ed12e",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "7639f14c-d82e-4357-bd57-2879862efc9f",
        "cursor": {
          "ref": "ba9b1b79-f805-4c20-ac82-3120a016d5ab",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "72b1d22a-9a0d-44a4-b806-a45006c4fb1e"
        },
        "item": {
          "id": "7639f14c-d82e-4357-bd57-2879862efc9f",
          "name": "did_json"
        },
        "response": {
          "id": "a57e70ec-58c4-449e-a65f-a02dc79ff7de",
          "status": "OK",
          "code": 200,
          "responseTime": 323,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1e1af5-58ba-435e-a00f-9b1b0cc78f27",
        "cursor": {
          "ref": "ac5c089b-cd40-49bf-a0fb-f880d4a36c6c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ab44e254-6d81-4c45-9d89-da666df2fb39"
        },
        "item": {
          "id": "ea1e1af5-58ba-435e-a00f-9b1b0cc78f27",
          "name": "did:invalid"
        },
        "response": {
          "id": "855720ed-78ac-40e9-97ea-81aa0a856731",
          "status": "Not Found",
          "code": 404,
          "responseTime": 299,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1e1af5-58ba-435e-a00f-9b1b0cc78f27",
        "cursor": {
          "ref": "ac5c089b-cd40-49bf-a0fb-f880d4a36c6c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ab44e254-6d81-4c45-9d89-da666df2fb39"
        },
        "item": {
          "id": "ea1e1af5-58ba-435e-a00f-9b1b0cc78f27",
          "name": "did:invalid"
        },
        "response": {
          "id": "855720ed-78ac-40e9-97ea-81aa0a856731",
          "status": "Not Found",
          "code": 404,
          "responseTime": 299,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df7a108-48fd-41db-98e4-e3a559fa1f02",
        "cursor": {
          "ref": "ec9131e8-9ce3-411b-a169-871bda2f0202",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b77e0a6b-833a-4238-9ae8-6b2c7b7ce4dc"
        },
        "item": {
          "id": "6df7a108-48fd-41db-98e4-e3a559fa1f02",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "db551936-fef2-42b0-aaef-6d1a7cc5be25",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd004c9e-8bbb-4f59-bd1e-e910b186d5ed",
        "cursor": {
          "ref": "db53b6eb-e481-49ca-b966-b6b90b0cecd1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2793ed02-21a9-43d3-9e92-848973bfe0c3"
        },
        "item": {
          "id": "fd004c9e-8bbb-4f59-bd1e-e910b186d5ed",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "51dd5b4e-79ba-486a-84b0-6c00ace5a674",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acc356d-8580-4f36-ae3c-5b0dfbbac66f",
        "cursor": {
          "ref": "a93fe5b6-9e7c-4b98-b354-f0b0193ddca0",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7af6a70d-5828-45e4-a556-00e773148f9b"
        },
        "item": {
          "id": "0acc356d-8580-4f36-ae3c-5b0dfbbac66f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4bf2733c-d71b-4670-b4fc-c515bcf68b97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6355c58-1847-48a7-a8c8-ff84a95b57d5",
        "cursor": {
          "ref": "5ba4aeb3-6d39-435f-9feb-1e86ea2b8c69",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e65865bf-0fa5-4efe-9d52-6ee8fb210968"
        },
        "item": {
          "id": "b6355c58-1847-48a7-a8c8-ff84a95b57d5",
          "name": "identifiers"
        },
        "response": {
          "id": "6bbbbd8c-25fb-48a7-bd8b-fd707c9ea0cf",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39d1664-6339-48e8-9104-1dc891325f54",
        "cursor": {
          "ref": "91672f9c-4247-4e38-8bd9-b122e9b18134",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a1c4658c-8541-4599-a73c-52702cc6e3bd"
        },
        "item": {
          "id": "d39d1664-6339-48e8-9104-1dc891325f54",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "000dbc05-39db-4459-b8aa-8e74f4ad6192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e86348-8ac1-4f47-b00c-ee410e2006e8",
        "cursor": {
          "ref": "5f985dd2-8f79-4df1-bbb7-d7bb9637650d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4ec66bd9-b8fe-4c02-bcca-bb4b38ff153f"
        },
        "item": {
          "id": "b5e86348-8ac1-4f47-b00c-ee410e2006e8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "65116537-456e-449c-86e2-47b81c40ff11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670d4755-a85e-4dfc-b6f3-ebba5052b34d",
        "cursor": {
          "ref": "ebdd238f-959f-495e-810c-7a40591df97e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3a6c1411-b654-45c4-8436-4437a43b718c"
        },
        "item": {
          "id": "670d4755-a85e-4dfc-b6f3-ebba5052b34d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "64dcc2d6-ea63-4487-a7e2-024f5f316f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55344fda-4018-47c4-a896-b4c75983b7c4",
        "cursor": {
          "ref": "120a5abd-1d74-4e7d-bd39-03d6bccc2cdd",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "59b0d091-ec90-4237-a840-f0e1c9ed6110"
        },
        "item": {
          "id": "55344fda-4018-47c4-a896-b4c75983b7c4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "61d85781-072c-48ac-a3e6-b23de2816152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e04b480-183c-4a06-a373-b9ff35d1f0b4",
        "cursor": {
          "ref": "a4b51c0e-5f37-4dc7-bc3e-828e84a4981c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "80398b14-85b7-42cc-b63c-64200ac82507"
        },
        "item": {
          "id": "8e04b480-183c-4a06-a373-b9ff35d1f0b4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ad47d300-628d-41ba-963a-66189f072900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285a0146-7663-4675-80ff-4d004444a5f9",
        "cursor": {
          "ref": "723088a9-89bf-4db7-9bb8-22558beafabf",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8ff5b12c-dabb-48ba-a08d-1dc35cd7f460"
        },
        "item": {
          "id": "285a0146-7663-4675-80ff-4d004444a5f9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "44036153-1546-4fb4-bf53-deb4355555e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f81d65-cd4e-4d02-8915-b4739ab67731",
        "cursor": {
          "ref": "a9e9bb57-2889-46a8-bf5f-f0130eb8ec99",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3cc4ec8c-84df-4559-a82a-8fc80f159c66"
        },
        "item": {
          "id": "20f81d65-cd4e-4d02-8915-b4739ab67731",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "41b0a91e-39d4-401f-a275-12e552a5382d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2850b7-f926-4021-8415-4dde1bd75a56",
        "cursor": {
          "ref": "4cb9c3ba-5093-40d8-806a-5c2799230ebf",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "557e5a06-1427-40c1-8eb3-3ac5b9ffb303"
        },
        "item": {
          "id": "dc2850b7-f926-4021-8415-4dde1bd75a56",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5a47b0a5-52b2-4f82-93b9-0abe938243ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b89381-6772-451c-bf0d-f9b6757fc3ca",
        "cursor": {
          "ref": "0220c202-19f8-41b0-9951-45166d1ab664",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "65c99710-ed83-45a6-addb-43169030c5c5"
        },
        "item": {
          "id": "73b89381-6772-451c-bf0d-f9b6757fc3ca",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "95e4c807-d134-4ded-86a5-f3341db223e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60c4bab-e2e3-4e01-b867-13371cb7b8a3",
        "cursor": {
          "ref": "d89fd0b4-379d-4fef-8498-d3fee0a08801",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "96238c58-aecf-45f7-afef-39a88a89b47e"
        },
        "item": {
          "id": "f60c4bab-e2e3-4e01-b867-13371cb7b8a3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "aebd7738-016f-4f21-aee1-65aeab45701c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97767525-5fc5-4b22-8e4d-7ca07fb962a5",
        "cursor": {
          "ref": "9f23c187-e091-48c3-9b6c-2538506ede84",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "62b2a7d4-d06a-47d1-89a2-850c8d4660b2"
        },
        "item": {
          "id": "97767525-5fc5-4b22-8e4d-7ca07fb962a5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d7cd2dee-29a1-45c9-a11e-aa257ef58c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569e208e-f0de-45eb-b98e-fab4c7eeb1b5",
        "cursor": {
          "ref": "b99ae88a-e749-445a-9858-22bf38148ed4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "088f2c03-d6a7-4a12-989b-b710be2edf76"
        },
        "item": {
          "id": "569e208e-f0de-45eb-b98e-fab4c7eeb1b5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b8af5570-7a4b-477e-adda-e780edf8f9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761bee0e-7c09-4641-857b-dbd8d3d3ea6e",
        "cursor": {
          "ref": "fc401571-18c5-43a5-bdc5-0e159783a697",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5aac4f99-f7dc-4a0a-a8c0-4386c74c7389"
        },
        "item": {
          "id": "761bee0e-7c09-4641-857b-dbd8d3d3ea6e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "28dea6b0-a637-4727-91d3-dbc73de4766b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eced3c-0e22-4863-a83c-600fee461433",
        "cursor": {
          "ref": "f4ddd151-6a62-48aa-9202-4a61ed2d1498",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8492a9ed-1896-43e8-a5a1-d1be43c16deb"
        },
        "item": {
          "id": "26eced3c-0e22-4863-a83c-600fee461433",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8ca54d83-d8ed-4693-a309-9dd597a6a056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09ecd52-14ae-4968-9650-2b5806040efe",
        "cursor": {
          "ref": "91b5e5d2-5ef6-418c-afba-c4b86eb4f8b6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "81c504ea-40dc-4b71-aa91-75795bc9f4b9"
        },
        "item": {
          "id": "b09ecd52-14ae-4968-9650-2b5806040efe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1a3c43fc-fa75-4e4f-9d52-c57b062927ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21360bb-7a0a-46b4-a0f0-bb69d6891772",
        "cursor": {
          "ref": "c27dbbd5-a2d1-476b-9c54-1218d02f006c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "489b0428-aaad-4b37-8f77-5a69ce93a40d"
        },
        "item": {
          "id": "d21360bb-7a0a-46b4-a0f0-bb69d6891772",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8b899811-a3d4-45b4-9b84-3ec01a6c3e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fae7091-6b26-4351-9cf2-cff7f94fb667",
        "cursor": {
          "ref": "5aecf69d-6ced-480d-bd7b-1d8895e0f3e5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b1ed9f80-79c2-44d2-8ee1-81aedd042c09"
        },
        "item": {
          "id": "6fae7091-6b26-4351-9cf2-cff7f94fb667",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "44a0cb9d-424b-483d-a6ea-68d27f3d1108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dad0ec0-356f-4494-9351-a2a80f537416",
        "cursor": {
          "ref": "acf50121-ef0b-4400-a848-45a3fb54945b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4c487300-cc34-428e-b86a-6c15139fd01b"
        },
        "item": {
          "id": "3dad0ec0-356f-4494-9351-a2a80f537416",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "816f755d-5714-4ce2-9431-5d9f5853e8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3a019c-e0d9-4531-8653-f1ac38a03094",
        "cursor": {
          "ref": "b9749ccf-e868-46be-a10d-e1e31c0b9a9b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "518cdc9c-9a00-4c4d-9d2c-b74a844bcd34"
        },
        "item": {
          "id": "1f3a019c-e0d9-4531-8653-f1ac38a03094",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8eef613f-9128-4376-9fad-de723bbe819b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90904667-1810-455e-8349-be55548beb94",
        "cursor": {
          "ref": "61e63388-01a3-479b-beec-21ab8670e01e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "28016cd4-9b40-473c-9bc7-7c18c00d4ec0"
        },
        "item": {
          "id": "90904667-1810-455e-8349-be55548beb94",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c4d4491b-a7f5-4520-bcea-3cb69dc907f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad72425-1372-4b4b-a05e-9ee94acfb9f5",
        "cursor": {
          "ref": "e5c66614-097c-482e-9b81-aebe917845b1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2c9ed403-1984-4907-ab52-4b8abb2bbf94"
        },
        "item": {
          "id": "5ad72425-1372-4b4b-a05e-9ee94acfb9f5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9515127d-998b-4476-b80e-e424e959db53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0544d04-b068-4d59-9ac1-86705141d9e7",
        "cursor": {
          "ref": "ef85a189-f63d-4744-b214-0332a73918b7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2d59d7d7-7974-41b2-a27c-6bcdf43bba52"
        },
        "item": {
          "id": "d0544d04-b068-4d59-9ac1-86705141d9e7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "27aa2379-2aa4-48e6-bf67-6c31fe63cade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c68a168-ce5b-4d83-bbf6-c7aed3c07eb1",
        "cursor": {
          "ref": "13adec91-dc66-4fec-94f6-9182a26e5ad3",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e9532276-d1cb-49c8-9b81-3f5d0b21899e"
        },
        "item": {
          "id": "5c68a168-ce5b-4d83-bbf6-c7aed3c07eb1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1ddf8fbf-ee05-4435-bdc5-73fb56aa31b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23de2611-4b41-4532-90a9-825c55813a50",
        "cursor": {
          "ref": "4394ab79-b448-4eb0-ae36-d3dfda3b3f6e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "300b4bd3-b53b-4081-a418-e3a4d4f32342"
        },
        "item": {
          "id": "23de2611-4b41-4532-90a9-825c55813a50",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "96d6467e-ea1c-4706-9ce7-74285bafdfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1429b122-1454-4d8f-a2b0-cdd80ce9e292",
        "cursor": {
          "ref": "6010e5ad-6ba1-4bf1-a949-227193e28808",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "60476973-59f8-4142-853a-902e2418fd00"
        },
        "item": {
          "id": "1429b122-1454-4d8f-a2b0-cdd80ce9e292",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ae40eaa2-4686-4827-aaa7-79e55289dd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33bffa9-2088-4fe1-9a71-2b14e564e6f6",
        "cursor": {
          "ref": "e8ffcb49-d6e4-43ca-b915-b2cb304708c7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e0980948-eede-4a60-b709-b47b4615a114"
        },
        "item": {
          "id": "b33bffa9-2088-4fe1-9a71-2b14e564e6f6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8b507ec0-e0bb-4519-a4cf-e88a2b5d6746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0606d038-1cc6-4471-a9ef-336ca7f37c15",
        "cursor": {
          "ref": "07ee9349-1f1d-4e68-9ee3-0be1b17e1aab",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "10dd9f8e-aa1e-4b9a-80ac-becd85f16d9d"
        },
        "item": {
          "id": "0606d038-1cc6-4471-a9ef-336ca7f37c15",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8f2c87a9-4cfb-46c8-bc83-98d8d25d4390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a85ca5-ecda-46a6-975a-797a419cc7d0",
        "cursor": {
          "ref": "99036430-6088-4005-a501-2c570c937bf2",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "85552395-807b-4150-afb2-a8faabe48057"
        },
        "item": {
          "id": "61a85ca5-ecda-46a6-975a-797a419cc7d0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "959b5dda-de46-4ebc-91da-a1d2050e8e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4528009-1250-4477-8bd5-7034259dedc2",
        "cursor": {
          "ref": "f3aad25c-0841-4b21-afc4-00f93e4b9784",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c60740f1-1eea-40ea-810e-0409d17ee6b2"
        },
        "item": {
          "id": "f4528009-1250-4477-8bd5-7034259dedc2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9db26f68-32b6-4015-af52-e9353377cb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fea442-3f6d-4610-bdc2-6ad49a9b1666",
        "cursor": {
          "ref": "dfc5a79b-17aa-4094-8974-75f0b47883ec",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c215de33-4579-4866-9fe5-e8afef512773"
        },
        "item": {
          "id": "09fea442-3f6d-4610-bdc2-6ad49a9b1666",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d47aec21-e041-4bdb-8f76-465e2390ec8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e390cd-5b2b-4ab1-a81f-67b8b820cb8e",
        "cursor": {
          "ref": "2b892d74-9427-4f4b-aafe-aba9fe9c9fa0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "01f97ceb-7766-49da-9753-c21d9d42f86f"
        },
        "item": {
          "id": "49e390cd-5b2b-4ab1-a81f-67b8b820cb8e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "647c7b78-570d-4621-9115-aabf430b8c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb802a99-ef1e-48c2-8f88-9346ca39e719",
        "cursor": {
          "ref": "df797eb7-4540-4ac1-9a43-1aa810790f39",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "29ea3ac8-44d1-4942-af56-76a3f8af1de2"
        },
        "item": {
          "id": "bb802a99-ef1e-48c2-8f88-9346ca39e719",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3bd1eb19-ce25-4812-885a-4257ef3207e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eba8b5-ccbd-41b9-baee-f8116eea05c5",
        "cursor": {
          "ref": "c2f01751-11fd-4897-b6b3-1001c30a8c83",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b7b4dd7d-7bb3-4220-8abc-5ccf19c8b9c2"
        },
        "item": {
          "id": "12eba8b5-ccbd-41b9-baee-f8116eea05c5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "58b87a75-e024-4dc1-b757-e50e43bb8932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29048dac-9077-438c-aa0e-8132e619cb6a",
        "cursor": {
          "ref": "38290549-7862-4b3e-b0bf-d0e920177af9",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "477bfe98-6e78-4085-bc64-14133ae4adf7"
        },
        "item": {
          "id": "29048dac-9077-438c-aa0e-8132e619cb6a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a83bceb6-5114-49d3-850c-9627fa290909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bf7dae-d96b-4129-b06a-8ace14337ffe",
        "cursor": {
          "ref": "21b5a1d7-29d9-48a0-bde4-40efc8defe56",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1516dec8-7973-4930-a748-7b77edf5db71"
        },
        "item": {
          "id": "99bf7dae-d96b-4129-b06a-8ace14337ffe",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b9000eaa-b9d1-4818-ace7-6bcf97249607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253a90be-3ab5-4523-a4be-2f1dd3d2614e",
        "cursor": {
          "ref": "5e58f66c-4597-4884-996f-defdbf566cd8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c04f011b-8b15-4a26-bb29-ae0a44a7d63b"
        },
        "item": {
          "id": "253a90be-3ab5-4523-a4be-2f1dd3d2614e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "18808fff-0840-4957-8cae-c9b9f395ecec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a221ebc0-e190-455a-9007-00c5b00ae010",
        "cursor": {
          "ref": "ff1f8c21-32c3-4c5b-8206-c23cacb18af8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "13b813ff-b8e6-4012-8868-b5ef46fe564f"
        },
        "item": {
          "id": "a221ebc0-e190-455a-9007-00c5b00ae010",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a5b220d0-b725-4dfe-add4-a743b8e30af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d3f458-157f-4c58-ba64-d8c523ab7046",
        "cursor": {
          "ref": "d648c708-ab5e-44eb-ab68-1d783bc9a053",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "516c47b0-1560-4a41-9afb-094612d82a85"
        },
        "item": {
          "id": "f0d3f458-157f-4c58-ba64-d8c523ab7046",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9dbd4fcc-e7fb-4a9f-9aa0-f079830ffeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43eb97e-c450-4aa1-9147-4d13c66612c5",
        "cursor": {
          "ref": "b9d37977-4279-41e9-b04c-002b08214257",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "98de98f4-eec9-4c9d-b5a8-8e20db8aa569"
        },
        "item": {
          "id": "c43eb97e-c450-4aa1-9147-4d13c66612c5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "367038a7-d069-488e-8d25-e0e6c977db81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd24223-8c86-4aa0-9c8d-a3b3f1e8becb",
        "cursor": {
          "ref": "933c3449-889b-46ee-a5a3-d68c41aa605f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b69f11e3-727f-4031-bf48-d8f50bb867b8"
        },
        "item": {
          "id": "7fd24223-8c86-4aa0-9c8d-a3b3f1e8becb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e3ba9bf1-a117-4558-9dd4-1861a306fde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411ffeeb-b213-4f6a-b120-c6039cd41a29",
        "cursor": {
          "ref": "776888f0-3b4a-4e7c-a7d3-4e935a4bbcf6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5ef4d6cc-4362-4fc5-a933-ef838367ba75"
        },
        "item": {
          "id": "411ffeeb-b213-4f6a-b120-c6039cd41a29",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8abe131b-f128-4499-b6f6-db876e91f77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cf1d53-48a4-4279-94de-c31235be9c12",
        "cursor": {
          "ref": "f94512ce-f4d4-4a10-b71c-a7c0a332b9d4",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "82570cf9-fc00-419d-a2a4-d2433c34edcb"
        },
        "item": {
          "id": "27cf1d53-48a4-4279-94de-c31235be9c12",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "09723af4-2b22-4d0f-a0d0-539d75047cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad883978-34d6-4b3f-b7e9-4208a8b3ba9c",
        "cursor": {
          "ref": "d4f8bd89-ae5c-4bfb-ba42-7fee3e6e130c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ccf9e647-b59d-4fad-ada3-5095641a9770"
        },
        "item": {
          "id": "ad883978-34d6-4b3f-b7e9-4208a8b3ba9c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b73098e2-5e31-4dfc-81f6-48bf444f26ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f82b0d-7089-4413-b264-8c5a2d425e00",
        "cursor": {
          "ref": "696f40d1-4694-4a56-b06a-04eb4e9fe691",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "489791cc-4e90-490a-83a0-25f1d0a5352b"
        },
        "item": {
          "id": "91f82b0d-7089-4413-b264-8c5a2d425e00",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "731946fc-8eab-4363-ae2a-e1dacbe38d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893424c6-d697-4c55-bf37-5f2e88dc0f81",
        "cursor": {
          "ref": "3194581c-9822-4cca-a81a-7f5d6205f0af",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4282f591-75f0-4774-be3b-677e6ad670b8"
        },
        "item": {
          "id": "893424c6-d697-4c55-bf37-5f2e88dc0f81",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "56bf9f2f-5afe-4a0b-b903-9d137c558e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98956ab5-f2a2-4d2a-a1bf-85b3be545d92",
        "cursor": {
          "ref": "85173f1d-b850-4948-a9eb-e96c2d94983d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "09464166-4f83-4d3c-8a78-00b2c03d2640"
        },
        "item": {
          "id": "98956ab5-f2a2-4d2a-a1bf-85b3be545d92",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7b5ad6b9-37b1-4bd1-b9a7-f024d0397f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619fb379-c63e-4ddc-a6e5-35a4954dd6d3",
        "cursor": {
          "ref": "00f14b2c-d746-41e6-9876-9ea70766af33",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3e6a9818-53fa-4970-a7c8-ea9cf5110e67"
        },
        "item": {
          "id": "619fb379-c63e-4ddc-a6e5-35a4954dd6d3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e9e6bbd5-ce36-48d9-8768-5570c34aab8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2246ae-5b7c-46c5-a95f-6ff522e3c082",
        "cursor": {
          "ref": "53637eef-13d0-4aee-8cc5-29678ed40768",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e5a93602-7758-4033-b457-ce03c91574f0"
        },
        "item": {
          "id": "0a2246ae-5b7c-46c5-a95f-6ff522e3c082",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "df6288d4-affd-4a19-bdb3-741f8e7bdabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e1f88e-fda7-4d2b-820d-5cce51fd0957",
        "cursor": {
          "ref": "14bfacf6-24c3-44ef-b6f7-2a1c5749974f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d47689e4-ae05-45fc-a2e6-5875d447110a"
        },
        "item": {
          "id": "b7e1f88e-fda7-4d2b-820d-5cce51fd0957",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7e9c4685-6ae8-4f06-bdde-d532c24097c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01737005-7c9c-4403-ab04-65e476b388ac",
        "cursor": {
          "ref": "16387987-9551-434b-a306-b00e85e62495",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fefc5f79-d418-4343-8b06-720f7022450f"
        },
        "item": {
          "id": "01737005-7c9c-4403-ab04-65e476b388ac",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e22e120f-3bdb-4030-8549-5893e7736aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2ef945-92b5-4ba3-8844-5c0fc769a59f",
        "cursor": {
          "ref": "a9de82a8-3270-47a9-919a-887e7458db3f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "54d304a6-df50-4505-8115-a39a2dc3ee31"
        },
        "item": {
          "id": "2e2ef945-92b5-4ba3-8844-5c0fc769a59f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5f13d97b-1d76-4901-95a0-8e82bd14f45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5d25fc-eee8-412a-b2b1-c3c1edb569da",
        "cursor": {
          "ref": "451e60ab-6472-480c-a33f-252e400da3a0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "15d79619-2eb8-4188-959e-f9875b9f7419"
        },
        "item": {
          "id": "2c5d25fc-eee8-412a-b2b1-c3c1edb569da",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b4581c1c-1907-47ea-811a-c06f27552741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4079ef65-fa3a-4f3f-bfc1-10d84cc01e2c",
        "cursor": {
          "ref": "c4e48d6c-4114-44ec-a18b-662ed1c04aad",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "543b0512-7a08-4c37-b395-a498715a4f05"
        },
        "item": {
          "id": "4079ef65-fa3a-4f3f-bfc1-10d84cc01e2c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b8fca4d9-77b7-4980-8b88-e84207dafcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47705e3c-da09-40b3-9e7f-f1e039f09965",
        "cursor": {
          "ref": "cb47b972-1513-44a0-ad5d-754fb06d3fd8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cebbe276-fd9c-4d2a-92e6-a7447e55ad23"
        },
        "item": {
          "id": "47705e3c-da09-40b3-9e7f-f1e039f09965",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b15acece-0fbf-4744-afdf-e58ce2ad9d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1e5162-1072-40e8-8d86-ee0c001d62a2",
        "cursor": {
          "ref": "3574700a-ac55-4042-83d5-5a1016ca27c0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "af17c2ba-8391-4f6f-82d7-e869027effdc"
        },
        "item": {
          "id": "ea1e5162-1072-40e8-8d86-ee0c001d62a2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0434721c-6984-46b0-8cf5-7638c9050628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9626d3c8-9af4-4dfc-a827-6af9bbd765b2",
        "cursor": {
          "ref": "73920930-2f84-4291-9926-99b121291ac8",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "603c3e76-0294-4f5e-97a5-5b6b754f85b7"
        },
        "item": {
          "id": "9626d3c8-9af4-4dfc-a827-6af9bbd765b2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5a654b2d-5d8a-414c-8b93-236743bfb661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24e9238-1573-4fee-94f1-dbfa7ff81fe8",
        "cursor": {
          "ref": "8a927351-a7e2-4834-9bf5-e343723df82b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ae621333-4b4a-468d-9286-3098a5322fdd"
        },
        "item": {
          "id": "e24e9238-1573-4fee-94f1-dbfa7ff81fe8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8e3eaa06-5d2a-40dd-8d25-9620dd8b406c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da85578-cffd-4454-9804-63b04a2a6fff",
        "cursor": {
          "ref": "ebf13300-d6fc-44de-b8e2-2f99562f170b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1532def3-a5f9-4a9a-b9a9-fe891b66943b"
        },
        "item": {
          "id": "0da85578-cffd-4454-9804-63b04a2a6fff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "89c6e977-aac5-44b5-99e8-9204d7f917ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77b1a8a-d058-4065-ab36-c77f92b6b63e",
        "cursor": {
          "ref": "9a150c67-0963-421b-b81b-d6ccc9a01e9e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f5c53aec-7db8-4122-98e0-9d829f76619e"
        },
        "item": {
          "id": "b77b1a8a-d058-4065-ab36-c77f92b6b63e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ed4669aa-b207-4753-a108-8f0559395045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c92541-433f-4ab1-8be1-33b5bc53b926",
        "cursor": {
          "ref": "3ed287e1-620b-46ac-b993-e856ff3c211c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cda8c50d-fc65-4548-9f6c-e2fc53231eaa"
        },
        "item": {
          "id": "75c92541-433f-4ab1-8be1-33b5bc53b926",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "43628fec-235b-426c-9646-8c7a97a6202d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ebc229-be59-4a83-b8e0-680b2be62df1",
        "cursor": {
          "ref": "71602065-a966-48f4-86f5-fe22bc86f2fb",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "68da1946-0fc8-4315-b411-41687cdc03f8"
        },
        "item": {
          "id": "12ebc229-be59-4a83-b8e0-680b2be62df1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e0a25602-4d72-4c20-996a-396eb8c661f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb699bf1-3167-4057-af3d-05dd6080ecee",
        "cursor": {
          "ref": "d77b31e3-cf2d-4d33-8d6f-e4014c3cfa86",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0c430ad1-63d3-4b58-9cb8-70e5bf1c3473"
        },
        "item": {
          "id": "cb699bf1-3167-4057-af3d-05dd6080ecee",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a6f28006-997a-4bcf-9d53-ad4135ea2cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9d7dd7-d399-4912-8065-def098d4126d",
        "cursor": {
          "ref": "1d634417-920c-4b67-8ea0-ce1be07281b7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b5af38c2-8dd8-4f16-b6b8-6d2e60eb1b0c"
        },
        "item": {
          "id": "de9d7dd7-d399-4912-8065-def098d4126d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "87ace24a-a89a-4e40-8302-2afde2a7520e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e4dcfe-e1fa-4da8-9810-f49aac854b1d",
        "cursor": {
          "ref": "bbc9a72d-e36c-47dd-9290-f920f99b02c3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "132f9b49-f057-4189-97eb-c71cef998c61"
        },
        "item": {
          "id": "06e4dcfe-e1fa-4da8-9810-f49aac854b1d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b5cdf3ba-4f03-48f6-9d9a-b1a98a8fb679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460d57ad-053a-4a18-a678-105fc4397696",
        "cursor": {
          "ref": "0fb99f98-d331-4dd0-a6e6-454488d0c7e5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "65218471-8e54-4d5c-8b4f-1fe64b7a8673"
        },
        "item": {
          "id": "460d57ad-053a-4a18-a678-105fc4397696",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0cd3c1a7-33b9-485e-bc76-a5821c9e43e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f475c8-be7e-4aca-aaf6-f9de74f392d5",
        "cursor": {
          "ref": "c261f41e-c6a0-440f-8f27-9014ba29430a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "29379fbe-dcaf-4455-8781-95e96f177839"
        },
        "item": {
          "id": "b3f475c8-be7e-4aca-aaf6-f9de74f392d5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7375a05e-c71f-423a-878a-0cf5dccceeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3731b79a-5033-4934-a13a-dc30b3d800f0",
        "cursor": {
          "ref": "68658771-3f24-46db-8791-24eab92e5972",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "344e13ae-4d1d-4036-bd5a-dd1bdc9faeb2"
        },
        "item": {
          "id": "3731b79a-5033-4934-a13a-dc30b3d800f0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fb3af825-0012-4968-b232-32a4603bb38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657b4e9c-7f28-484c-9e40-fb026949e327",
        "cursor": {
          "ref": "94f4dcc0-0177-43f6-96f5-bdf60b2bb774",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7f58cf37-ef40-42e7-b2ef-4a011bfdb330"
        },
        "item": {
          "id": "657b4e9c-7f28-484c-9e40-fb026949e327",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1e2958ef-2979-4f6e-a629-4e93f9283669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73a0f22-76ff-4cb4-8c41-dcc0ef071313",
        "cursor": {
          "ref": "b5470d19-1f60-475d-9f09-e1a92418bc02",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4d12df95-c669-4862-8926-1a47348b44ce"
        },
        "item": {
          "id": "f73a0f22-76ff-4cb4-8c41-dcc0ef071313",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e3961456-50fe-404c-b869-8b907352c2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d423482c-2d35-461c-ab3a-3d9bc9f1b20d",
        "cursor": {
          "ref": "c9da35e7-cad3-4eb7-8771-4c48b9f4dba5",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "91eefb13-e462-4dba-8c7e-025fed282fee"
        },
        "item": {
          "id": "d423482c-2d35-461c-ab3a-3d9bc9f1b20d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "600cfc1e-dc7d-4fe7-a8aa-4732abd1ba37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955f33a1-5b05-4bba-80fd-0d7013089628",
        "cursor": {
          "ref": "e7894594-eedd-4e0d-bcc0-44e8a8396d67",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "298b4d2d-4495-42e8-b66f-d7cda8c5eff1"
        },
        "item": {
          "id": "955f33a1-5b05-4bba-80fd-0d7013089628",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0add2711-f540-46d9-86ba-bb4baaca32fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36efafa-3368-4930-bdd4-185bf9feccd1",
        "cursor": {
          "ref": "f6f33cd7-61e9-40f9-b181-16da2ff60619",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b2545cc4-4a71-4710-8c3a-3c8cf8fcbada"
        },
        "item": {
          "id": "d36efafa-3368-4930-bdd4-185bf9feccd1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c7cb4496-7632-46cb-8228-a9ff1802069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6e0fd6-7893-4c45-9f7a-b0f6e8b4265a",
        "cursor": {
          "ref": "597cae57-6279-4f01-aeae-1e84125598ab",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3c068bb7-c6ad-4c57-b750-b6b94779c686"
        },
        "item": {
          "id": "7f6e0fd6-7893-4c45-9f7a-b0f6e8b4265a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5a68e7f7-a5f6-4d80-bf26-37d241b07bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9a7d6d-9d58-43fd-b471-d2ca49145649",
        "cursor": {
          "ref": "f9e3e104-1bf8-43ba-8b24-985e49c27e6c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a1118cf5-8a1b-4fd0-b961-3f994f50bb51"
        },
        "item": {
          "id": "9f9a7d6d-9d58-43fd-b471-d2ca49145649",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "04c6f009-33e3-49d3-8f0d-fdd3c6283106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf87ca3-2937-4d58-9f25-8c4aad966b4c",
        "cursor": {
          "ref": "cc1c34d8-0978-46f9-97ed-f24b12038708",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "04bd423a-e077-4ddd-8f73-c892e36cf077"
        },
        "item": {
          "id": "fcf87ca3-2937-4d58-9f25-8c4aad966b4c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "60cded2d-18b7-4e9b-be7f-f5b833ced6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d700a9b-1ea0-4d45-a69e-8a986fb673b1",
        "cursor": {
          "ref": "8050f0b8-06cb-4b68-b63f-53eec5a8d744",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1e86248c-f143-4f47-8262-7a7cdace447c"
        },
        "item": {
          "id": "5d700a9b-1ea0-4d45-a69e-8a986fb673b1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3d7660d8-9973-4cdc-98cb-94e939379af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bb873e-11b5-47e2-ada0-03d1b65dd1c6",
        "cursor": {
          "ref": "92f39013-271c-4a0e-ae5d-64805ece8675",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e8396ce5-2a7b-4759-8d11-714809cf5be6"
        },
        "item": {
          "id": "a5bb873e-11b5-47e2-ada0-03d1b65dd1c6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3c73a87b-9f94-4330-ab1a-ec281cd454d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c911d565-8576-4271-afcf-e6102b906990",
        "cursor": {
          "ref": "1e005e8f-a5a3-4d93-bab8-686c8c819d04",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "85aaaab7-e604-419c-9e36-ebdf60813be0"
        },
        "item": {
          "id": "c911d565-8576-4271-afcf-e6102b906990",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a26fb943-ab92-474a-9a5a-48495fa7464b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424521ea-8e3e-4dab-84d3-ed8f0a2ab705",
        "cursor": {
          "ref": "e16fcdf4-731d-47df-ac4d-d3c6fd5632b6",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3b1033a8-c812-452b-9f4b-7486a6924382"
        },
        "item": {
          "id": "424521ea-8e3e-4dab-84d3-ed8f0a2ab705",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e426d0f2-a5aa-4882-aee2-b01b4dd4b11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4998a453-6489-4170-82b5-66bd3ec3e4ff",
        "cursor": {
          "ref": "1fcdb04d-e919-4988-8da0-3f696a38ba8c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "26b4468b-c514-4582-a997-3fce7859c90b"
        },
        "item": {
          "id": "4998a453-6489-4170-82b5-66bd3ec3e4ff",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4222fbb6-5fbe-42b0-a74e-cbf78f7bf673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29612540-e718-4e3f-b142-608cf162e149",
        "cursor": {
          "ref": "ef208ab5-79f8-478a-bbc7-3cad97085868",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b033c10e-9806-444a-8966-a1e5b151a8c9"
        },
        "item": {
          "id": "29612540-e718-4e3f-b142-608cf162e149",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "24615167-236a-4ecf-8441-63083a5dca71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04472f6d-3378-4705-bbd2-50721891c79d",
        "cursor": {
          "ref": "f8fec08b-cfe2-49b9-90f2-76bc69d4cf3f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3a1b8c60-88dd-49d6-9cb4-e1b79fd65160"
        },
        "item": {
          "id": "04472f6d-3378-4705-bbd2-50721891c79d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "55832c7f-c96f-474c-ba78-85c35eaf671a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d12772c-7938-436e-b0d9-469352915990",
        "cursor": {
          "ref": "81e7e42c-e0e7-464a-8d90-38b71c2eba4f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a860ebb9-357a-4daf-95ed-8ec95c25ab13"
        },
        "item": {
          "id": "1d12772c-7938-436e-b0d9-469352915990",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a7d7dbdd-7995-4156-b510-dd2b3d8a0306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8f9436-7608-472c-a11c-1bcd77185198",
        "cursor": {
          "ref": "2e4190dc-bdfb-4ffd-aa06-f49fdd7f3497",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "854f4ea8-657c-4c3e-a80c-cb7acd436f6c"
        },
        "item": {
          "id": "2d8f9436-7608-472c-a11c-1bcd77185198",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "34a479a2-7519-4345-b340-25cff16bcd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152ddb97-4074-495a-a493-2a7f73c41ddb",
        "cursor": {
          "ref": "15ef5cfd-dd23-46c9-9023-0dc8cbf82458",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5dd9ab78-ffbe-47ea-896f-ace1b64711d6"
        },
        "item": {
          "id": "152ddb97-4074-495a-a493-2a7f73c41ddb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "678acbcc-2c62-4b0d-845a-7ac4135f13a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20657430-ceee-4cfb-b3ab-8fd6fdb62bc8",
        "cursor": {
          "ref": "be666804-49c8-47ac-b022-ecdca1287f72",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5843f71d-462f-47c5-ba35-776619d2e685"
        },
        "item": {
          "id": "20657430-ceee-4cfb-b3ab-8fd6fdb62bc8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6c38f74b-97d2-4bc3-83a0-def87c645cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828e94c5-1272-4d9f-a2e3-4aeb61b655a4",
        "cursor": {
          "ref": "d65f9eac-efab-4f8d-aa15-5ce9ba4322e7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2456ab2a-15d1-4b97-a18a-f9ce63733d74"
        },
        "item": {
          "id": "828e94c5-1272-4d9f-a2e3-4aeb61b655a4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5b12e033-d710-4e6d-8a1e-8691f118c0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dcb150-9b0b-46e7-aa2e-63380b386a91",
        "cursor": {
          "ref": "3169eed9-e73f-4264-bd85-17eda879a004",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "045df270-dfd8-4f02-8a5b-7515c3af3d56"
        },
        "item": {
          "id": "c5dcb150-9b0b-46e7-aa2e-63380b386a91",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a09812fa-3938-46a4-908f-b731e4c3a18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a48379-f068-461c-aaad-6de393be26ea",
        "cursor": {
          "ref": "e0f8a80f-410e-49bc-813e-b8429daf1f65",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "34ef2fa7-aca6-4fb1-8504-51ad8b5cba3d"
        },
        "item": {
          "id": "25a48379-f068-461c-aaad-6de393be26ea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2b520bc7-703c-46ee-ba00-0f02b9b3edbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a817ccc-1fad-4757-b326-00f5c9486703",
        "cursor": {
          "ref": "b74c7670-21f3-4451-8eb8-41b967387e9a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "33ef104a-1929-4cf6-871f-28e6450b0715"
        },
        "item": {
          "id": "1a817ccc-1fad-4757-b326-00f5c9486703",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "aa3ec9e5-956e-49e3-9c50-53150b137398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfead21-e09b-4681-bfbd-c6e1f7626245",
        "cursor": {
          "ref": "6533600a-880c-4fa5-89ef-42c148b0306e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "28f0cc37-874c-4bb0-bdd7-96bcdd62ccb9"
        },
        "item": {
          "id": "fdfead21-e09b-4681-bfbd-c6e1f7626245",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9fb3a1e4-60c8-4a56-b852-8b5d09d8cdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cbd9f2-5bcb-40cf-8a70-436a5f11edc6",
        "cursor": {
          "ref": "6ce0513e-ac32-47c4-acb7-fa7cc0e1d570",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ba565626-1066-49de-bdab-da48f59d514c"
        },
        "item": {
          "id": "c5cbd9f2-5bcb-40cf-8a70-436a5f11edc6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e3159dd2-14c2-4760-9892-ecfbcfee9050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b864f0-ba51-4f78-9408-6ef33054ba6c",
        "cursor": {
          "ref": "cdd9e245-6112-4ef5-8dc6-7899fac71a95",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "72171210-09ab-4dcc-9961-2a7b2ff7a0ce"
        },
        "item": {
          "id": "74b864f0-ba51-4f78-9408-6ef33054ba6c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d071a965-24f4-4df1-aeb5-3548faddb642",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd684f7c-0eef-43af-a741-4f27ad7f50d1",
        "cursor": {
          "ref": "a5243800-928f-4ce4-8f99-7207773e536d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7244a635-d577-4967-97dc-c9f505aad372"
        },
        "item": {
          "id": "fd684f7c-0eef-43af-a741-4f27ad7f50d1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "be6277a6-f78a-4ed3-bb18-9a5895cc4b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1f5b713d-554f-4094-8b73-7736ae2916b6",
        "cursor": {
          "ref": "f325dbda-669c-49fc-823f-33786e585091",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e93a20b8-660e-44ab-86d8-5ba936136b00"
        },
        "item": {
          "id": "1f5b713d-554f-4094-8b73-7736ae2916b6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e55e49b0-42f8-457b-b32a-f80639ab473d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "279f21cf-87a7-4956-b1cc-0127dbd0af60",
        "cursor": {
          "ref": "4e8769f1-7518-406f-bd79-7230d64afdc1",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f26ec3ff-2a3d-4dda-969b-47f5ef5a1c5e"
        },
        "item": {
          "id": "279f21cf-87a7-4956-b1cc-0127dbd0af60",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f5c20ea8-de89-42f0-ba23-6aafdb0125a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e95165d4-07a2-4954-a2ef-5dcf3d08bfa6",
        "cursor": {
          "ref": "a8420d5b-278e-43d8-95d2-e39d189c265d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1bb1ce95-ff65-4641-af6d-454a293a4df1"
        },
        "item": {
          "id": "e95165d4-07a2-4954-a2ef-5dcf3d08bfa6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "07200aeb-b5b7-472f-922b-d7ee88a74d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d166ee92-24da-4c22-b186-16927314ecc6",
        "cursor": {
          "ref": "501d498c-4d9c-4e60-8061-5eeca1265598",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a971c787-8639-44af-9c04-c556812f6655"
        },
        "item": {
          "id": "d166ee92-24da-4c22-b186-16927314ecc6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ccb9852a-658a-434c-a1af-6b8a7c2b45ca",
          "status": "Created",
          "code": 201,
          "responseTime": 8421,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f245185c-550e-46d2-ba5f-854b00a55123",
        "cursor": {
          "ref": "c5e887fc-dc3f-46ad-97ba-eb6ade2033a8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "275503c8-e519-4a3d-bc64-0ae7e64ef126"
        },
        "item": {
          "id": "f245185c-550e-46d2-ba5f-854b00a55123",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1086bdce-c91b-44c8-a71f-9874583fd016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "eebcbdb6-cf91-46b8-9d2b-65e35116fddd",
        "cursor": {
          "ref": "9e0f2509-1533-47c3-b910-af32f6f24ec6",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a566aec2-e189-4d6d-87d9-c8a5a4da080e"
        },
        "item": {
          "id": "eebcbdb6-cf91-46b8-9d2b-65e35116fddd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a9074d7a-8bbb-47c0-95be-d3619d9e1cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2ea212f7-2b16-4654-a572-178923dcb4bb",
        "cursor": {
          "ref": "3f99fc30-7a03-487b-b50a-2b4f402ce9ce",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "95b19d3f-85a1-4103-9128-5041c0776aa0"
        },
        "item": {
          "id": "2ea212f7-2b16-4654-a572-178923dcb4bb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c7e5dcb5-e847-4962-90bf-9b4cfba631ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6d85e4-12f8-4a18-ba09-e658e5df3422",
        "cursor": {
          "ref": "eb248d97-f2bb-4daf-b1b5-d873b2747891",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "77503f5b-ee07-4b84-9949-ac1018a840a8"
        },
        "item": {
          "id": "8c6d85e4-12f8-4a18-ba09-e658e5df3422",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4e5b06bf-73a2-4a7a-b999-2f954937d703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eed1a7-3515-4dc9-97b4-e6f52d92657e",
        "cursor": {
          "ref": "6ee2554e-c881-4e36-9e93-29982df3f4c3",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "485e14ce-634c-46f3-8f49-72b7b24f62f1"
        },
        "item": {
          "id": "e5eed1a7-3515-4dc9-97b4-e6f52d92657e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8bb6d39c-1374-4cca-b229-ba8e930790aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552bc38e-fb07-4615-8ba6-34734c1d0ea8",
        "cursor": {
          "ref": "1e22fa31-0258-428a-9784-f6bd2f498cfe",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c7253b19-de03-43d9-95a9-50d5eabe52b9"
        },
        "item": {
          "id": "552bc38e-fb07-4615-8ba6-34734c1d0ea8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cbb9909e-e150-463f-91c0-12621257dbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572078f8-339f-4c5c-806b-466db65a801b",
        "cursor": {
          "ref": "00070170-cde7-4e41-a468-254ba03f8e38",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e931df15-7f65-43cb-994e-d286895f11ce"
        },
        "item": {
          "id": "572078f8-339f-4c5c-806b-466db65a801b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aab467f4-90f7-4458-bf9e-d9a16330a0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ffcf81-ef58-46a0-8275-b90d8c10a839",
        "cursor": {
          "ref": "e49a172c-61af-44bf-ad4b-3f545f091179",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f0c17a57-51fa-43e7-a5f1-956e2a55407e"
        },
        "item": {
          "id": "10ffcf81-ef58-46a0-8275-b90d8c10a839",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b6bf96ec-0009-4ef4-9497-10164e2deb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef26f936-8936-4a04-8a96-981f62cf54c9",
        "cursor": {
          "ref": "772c4982-4dd2-4ed4-8516-8761b4aedac7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "331933cd-0e0a-4a28-93d9-227e30c2fff3"
        },
        "item": {
          "id": "ef26f936-8936-4a04-8a96-981f62cf54c9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "353cf220-b8f8-4d45-88bb-744f40cdc1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2cf9f6-76db-4257-b3ff-49bea565a98e",
        "cursor": {
          "ref": "ea90d31e-c0bb-4ea4-9f9d-67ed20a2b553",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d60e7141-0a9e-48eb-9cdd-fceb8709a69a"
        },
        "item": {
          "id": "ed2cf9f6-76db-4257-b3ff-49bea565a98e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "028290ed-491a-49ce-b4d6-ef3b22d47d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c6c786-50f0-48bd-9de8-55ee2a185427",
        "cursor": {
          "ref": "0751e4cc-6747-4516-a664-e88540d7821a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "01bd95c9-8e35-4052-a4a8-fb86ad04115b"
        },
        "item": {
          "id": "f0c6c786-50f0-48bd-9de8-55ee2a185427",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ff6744e8-7f88-417d-a230-8cf637780a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fa4918-a7ea-46ee-9260-7273a43404dd",
        "cursor": {
          "ref": "6465c1f1-0912-41a8-9595-0bbbe0acf481",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7caed1b5-f542-4906-bd4a-23528c4e0477"
        },
        "item": {
          "id": "16fa4918-a7ea-46ee-9260-7273a43404dd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1b104b0b-dc76-4649-9b58-6837af9c38e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568a6961-7c6e-4515-b7e7-e2812ba7c2b3",
        "cursor": {
          "ref": "a0fbe495-827e-4459-adda-5223f5938a7a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ebb617be-1817-4092-a7c2-86ad5d2dabc5"
        },
        "item": {
          "id": "568a6961-7c6e-4515-b7e7-e2812ba7c2b3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1ec7ff58-4f09-4deb-81ec-28f4d4b7f08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b6d69f-8ee3-4030-89aa-144d148f0899",
        "cursor": {
          "ref": "ffcfcc91-408c-4f36-93e9-17cc7cff66b3",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4dd0e5a9-23fd-43fb-bb97-681af4d84636"
        },
        "item": {
          "id": "11b6d69f-8ee3-4030-89aa-144d148f0899",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a13390a4-5cfc-4ee5-ac20-a5c8e137899e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697ae978-8434-43a8-b78c-a9f10e81ec6d",
        "cursor": {
          "ref": "5ff51737-04b5-4477-8d0f-2b96477a0a0e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e69014d3-dcd6-4866-8a2d-ba1c50838912"
        },
        "item": {
          "id": "697ae978-8434-43a8-b78c-a9f10e81ec6d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "30f7ad7b-102d-46ad-beeb-a5b719584c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f993875-974b-492c-9dfa-1c7277555a95",
        "cursor": {
          "ref": "3230a6a5-f1ba-467e-b74f-6c0d800897de",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4bfc5633-e6db-4d50-834e-0281a309ffa8"
        },
        "item": {
          "id": "6f993875-974b-492c-9dfa-1c7277555a95",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f39072dc-1968-448c-87d2-e4f533bbadcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6118575-88da-4064-b48c-2e24db59a467",
        "cursor": {
          "ref": "8ebe877e-18fa-4ddd-b610-31ba05e7ae87",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7e19180b-dbfb-49d0-a6af-463d5c2c2b4a"
        },
        "item": {
          "id": "d6118575-88da-4064-b48c-2e24db59a467",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a680fdcb-93c9-4f0d-935e-cdc38912e12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae802d91-73f8-48bc-98f3-616a8bb8a460",
        "cursor": {
          "ref": "9145452e-5170-4b14-8eba-439a8d666c2e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c2aea6bc-0409-4608-9c6c-d653fd759764"
        },
        "item": {
          "id": "ae802d91-73f8-48bc-98f3-616a8bb8a460",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "905f62e1-4672-4cf5-9e36-d996a9f9020c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ec1c1d-b136-4ecf-a48a-6c8999577868",
        "cursor": {
          "ref": "9b0ce7cb-16cd-4516-82d4-b639cce7f50b",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "82871c7b-d4ca-45d5-938e-86cf4268a2d6"
        },
        "item": {
          "id": "36ec1c1d-b136-4ecf-a48a-6c8999577868",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "915c912f-c40b-4d04-be6a-3bf0fe884fc3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "19357b66-2996-4025-ad9b-8fb2cab50876",
        "cursor": {
          "ref": "11f82ca8-f273-4415-b950-04cbf88192c5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7f2623c1-a907-4690-aa89-50234d0385ae"
        },
        "item": {
          "id": "19357b66-2996-4025-ad9b-8fb2cab50876",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "daedc445-f71c-453a-8a28-b79904e98f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7acbb18-0253-4652-8c23-020a65d6e511",
        "cursor": {
          "ref": "c8db2875-a5c1-4704-ba56-ef13abbe6d10",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0cdd31e7-f03a-4143-8065-2416ce8f80c7"
        },
        "item": {
          "id": "d7acbb18-0253-4652-8c23-020a65d6e511",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e4c79cbe-78d6-4050-a37f-99066e74030d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6f6c7d-2971-49d3-b2c0-0d6874c9932e",
        "cursor": {
          "ref": "aac3c787-0dfd-4021-8cf8-11f0eaeedab4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b41810f6-7f66-4585-895d-5f801ed45700"
        },
        "item": {
          "id": "8c6f6c7d-2971-49d3-b2c0-0d6874c9932e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f7ecb3c5-3caf-48c4-91ae-45a1f30647c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8168a5f-4403-4950-84f8-c3a67283fa0f",
        "cursor": {
          "ref": "875887eb-1ec9-4560-87b6-4bcad066fad3",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d8ed43ba-79e1-4fc4-93c9-f5fba908ca6a"
        },
        "item": {
          "id": "d8168a5f-4403-4950-84f8-c3a67283fa0f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8eed3ad8-5f1e-4c29-aabd-a6fc75fcb31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c45234d-1628-4054-a0d0-807a4209150e",
        "cursor": {
          "ref": "04e837d4-817c-4fba-b42f-24575cabd7cc",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dfce06e2-dea8-403e-8724-5371734efcf3"
        },
        "item": {
          "id": "2c45234d-1628-4054-a0d0-807a4209150e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2f7c1313-52c5-4375-bd2c-94f8b00ec627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca2f3a9-a5ce-43cd-8b7a-b1d7069d981a",
        "cursor": {
          "ref": "edd3fd9c-e3d2-4f0e-8291-2ff43697486f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "60741818-0bd6-4854-a2b2-216d751f0345"
        },
        "item": {
          "id": "7ca2f3a9-a5ce-43cd-8b7a-b1d7069d981a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ecf9e286-0122-4564-93a6-cf880510d61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bbd6c0-9739-4c8f-bc74-923157c25a78",
        "cursor": {
          "ref": "90139232-2b0f-4a4b-9843-d16909c5a787",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e3028353-391b-4ece-8e28-bb2177c0742b"
        },
        "item": {
          "id": "f2bbd6c0-9739-4c8f-bc74-923157c25a78",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "84a8512b-de54-4268-92fa-e3877da436a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71c3cf1-f7ad-4164-b1a7-f51a9313020b",
        "cursor": {
          "ref": "f901b9b3-74e5-40bb-a047-5eba3eaaab28",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bcf473e3-27a0-425a-8d81-cf2e4defe044"
        },
        "item": {
          "id": "c71c3cf1-f7ad-4164-b1a7-f51a9313020b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d450f2b9-822a-478f-91ec-c0466f28ed33",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "7457cd30-9317-4b2a-9ed9-9d9fb78cc091",
        "cursor": {
          "ref": "528ef071-d881-4934-8cf8-8da2c888f65b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0dc8b4cc-c82b-464a-96ed-638d14b26b91"
        },
        "item": {
          "id": "7457cd30-9317-4b2a-9ed9-9d9fb78cc091",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3c8e10e7-a6fc-466c-b061-55588678c09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c474eacf-7d60-4623-aad0-d83e91caf100",
        "cursor": {
          "ref": "d0e81983-1327-4d8b-b73c-d916dd0a05a1",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2b536f31-bf4f-4d9f-951a-b6a8796f66cb"
        },
        "item": {
          "id": "c474eacf-7d60-4623-aad0-d83e91caf100",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c1ee7f01-befb-4fd5-bf14-03c0edaadd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efebcefb-ce40-492c-bca3-b36eb459bae7",
        "cursor": {
          "ref": "6a3b617e-bbde-4cc1-bb2b-61e55bf6b35d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0fb07dc1-3ef2-4cf6-a3e9-8c3bf58eccc6"
        },
        "item": {
          "id": "efebcefb-ce40-492c-bca3-b36eb459bae7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "42efe8f4-0422-41dc-9347-c9ab6489e6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9567c565-80d0-4a29-82b3-4c0548f2f212",
        "cursor": {
          "ref": "5f63441e-35af-4456-a43e-1ff0c70f1af3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0ab5f918-6ae5-4054-ab57-30f8ced5e153"
        },
        "item": {
          "id": "9567c565-80d0-4a29-82b3-4c0548f2f212",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "99c8ad24-05e3-4d27-b756-e996a7988933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605eb3ea-ae55-459f-a9a0-348c880eeb5c",
        "cursor": {
          "ref": "ac9f7058-c57d-4198-9356-4744bbc2e02f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b0791d80-f47a-4c87-8fbb-6d3a0837b111"
        },
        "item": {
          "id": "605eb3ea-ae55-459f-a9a0-348c880eeb5c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d6d3a5db-5a33-453e-83c8-207ca3a2eda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0463bc-ac88-4d99-a525-d45d3dfe0e84",
        "cursor": {
          "ref": "2d1b9b6d-db3f-49ec-9a04-1ffe77bc34cb",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2f9b2a25-feec-4953-a32f-41e5fd09fb74"
        },
        "item": {
          "id": "fd0463bc-ac88-4d99-a525-d45d3dfe0e84",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4b62d41d-ee01-4d60-af15-f737a6787740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6e25bf-ced6-4740-bfeb-cfe2bbd42cb5",
        "cursor": {
          "ref": "d0ea3cc4-1297-411a-bc6f-a5b8f3f58e84",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "64614685-0936-4351-a129-24ce552036b5"
        },
        "item": {
          "id": "bc6e25bf-ced6-4740-bfeb-cfe2bbd42cb5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1ee64193-6289-4827-a293-c4c59c64b2f1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "e8241a11-902a-4ea1-a7ca-0d98937f6cb9",
        "cursor": {
          "ref": "2c229703-c4a0-4b1e-a5ad-e62200bfecd3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1d5b07b2-6d98-47cf-9a0c-91c06cdc2f74"
        },
        "item": {
          "id": "e8241a11-902a-4ea1-a7ca-0d98937f6cb9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "411f5d76-864d-4292-98dd-1928970d055d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "4818a73d-80cd-4e52-b5d0-a00bd41efdd8",
        "cursor": {
          "ref": "e939bd10-2a21-40f5-93b4-b8181ce66e7b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "43ba1653-1c53-43ce-b746-b374f164d862"
        },
        "item": {
          "id": "4818a73d-80cd-4e52-b5d0-a00bd41efdd8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bad40727-7327-4ab8-aaa0-9f0b35bf11fd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "3e67dd2e-4b33-40bb-9c74-96545a9cda9a",
        "cursor": {
          "ref": "c4d0c3e1-7e3d-4629-93cc-842f0abccfc8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c1aafe33-ec58-4aea-8ee5-6da0f74b594d"
        },
        "item": {
          "id": "3e67dd2e-4b33-40bb-9c74-96545a9cda9a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "18d93922-8163-473e-bb37-581029cca144",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "634887e3-047c-4e25-b878-baa5179ccde8",
        "cursor": {
          "ref": "c3662cc2-b1de-4a68-91d2-7350b7619e97",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1e524b11-923d-4403-9887-922cd5b9d18e"
        },
        "item": {
          "id": "634887e3-047c-4e25-b878-baa5179ccde8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9a97104c-b143-4b89-b38d-d6c293fb1a34",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "7c5551c1-105c-4557-953b-4f642cd17eaf",
        "cursor": {
          "ref": "e78f00c9-bfa6-4dc8-8be4-e889f018da55",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c9e5e47c-c540-4174-a7a6-ffe99a6f26c6"
        },
        "item": {
          "id": "7c5551c1-105c-4557-953b-4f642cd17eaf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3b246787-e2ef-4f15-88e5-bdbac4263e97",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 55,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "1790b300-7214-4127-8f6a-18f6c61a8eb5",
        "cursor": {
          "ref": "ebe25eb1-b5ba-489e-b09f-57a8d5c688a6",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1126c4c7-63f8-4e37-8676-4d15f8b0643c"
        },
        "item": {
          "id": "1790b300-7214-4127-8f6a-18f6c61a8eb5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4698b0b6-cead-4bf1-a514-f9a93dda3ba7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc415a7-8ca2-4b06-a2cc-54ec78b4640b",
        "cursor": {
          "ref": "e9fe0c51-960b-4b1e-a99b-7d0e8e5e0086",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1384c38d-1650-4225-96e1-d7443d615c5a"
        },
        "item": {
          "id": "fbc415a7-8ca2-4b06-a2cc-54ec78b4640b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4f251a7d-c2de-466e-875b-00537034f741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ba8370-cb05-436e-91ba-dba83332ad97",
        "cursor": {
          "ref": "fb17490b-5d6a-45cb-b8db-39fdc3eac55b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9438fbff-bd4c-4e48-afcd-01e383cf40b7"
        },
        "item": {
          "id": "e0ba8370-cb05-436e-91ba-dba83332ad97",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "02a902fa-b23c-48ce-847d-7f96d2a31302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9578b8-3f4e-4507-8745-53fab022c1fe",
        "cursor": {
          "ref": "c08c2d90-989e-488c-9dc0-15dcf5fe559d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d15f6855-5155-46c7-8157-d2b36377951b"
        },
        "item": {
          "id": "6a9578b8-3f4e-4507-8745-53fab022c1fe",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "987d692a-0e65-4cc4-8fd5-00d4c9ce9a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1df4c5d-d54b-4bb6-8fdc-8959668240e9",
        "cursor": {
          "ref": "191ce899-33ac-4f4a-bfd2-376b98d11777",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "daab487b-e2e8-4f3f-9fa5-8532206fb7f7"
        },
        "item": {
          "id": "f1df4c5d-d54b-4bb6-8fdc-8959668240e9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6c8a1e4d-85de-4103-9627-7aa12ba093c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a46ab1-c4bd-4309-8596-d103b9b80f95",
        "cursor": {
          "ref": "3d1645e5-0309-421a-8171-6fe90a6ad6f2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bd3b2768-4203-421d-a6af-ae37b6cea744"
        },
        "item": {
          "id": "50a46ab1-c4bd-4309-8596-d103b9b80f95",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0c79059a-e243-4e91-b39d-cc59179e34e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e3693f-e245-4863-a4bf-9217ad2a7600",
        "cursor": {
          "ref": "82832bce-4d71-49e6-91ce-dc8479682d03",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "580c8d2f-c573-406b-b601-c1ec7326b3d6"
        },
        "item": {
          "id": "a8e3693f-e245-4863-a4bf-9217ad2a7600",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eb20be71-69cd-4169-8e54-4e5d1ff45c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fc3133-bd3a-4021-bee9-0824610bccd0",
        "cursor": {
          "ref": "b9f44022-9a64-4a64-9d95-808e10334973",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aceaecac-e9a5-4555-943d-577fc7ad1c3c"
        },
        "item": {
          "id": "e2fc3133-bd3a-4021-bee9-0824610bccd0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e68c6c47-98a1-4a26-a455-a1dbcd1603b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e94a9b-f578-443f-9635-45d67bba5d8f",
        "cursor": {
          "ref": "fd5cf5a5-cd20-42cb-9fb6-e8c99799e037",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d6c74129-22f8-4100-b2f0-82757383ec1d"
        },
        "item": {
          "id": "a5e94a9b-f578-443f-9635-45d67bba5d8f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "afcc1f12-bc34-4c20-9d89-91720f9538c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd589ef-1700-4274-96ec-20449d28c68e",
        "cursor": {
          "ref": "806249a6-45f8-4cf5-a48a-aadb788b61db",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4b2fafed-81b2-4c74-9493-69a5512170d3"
        },
        "item": {
          "id": "6dd589ef-1700-4274-96ec-20449d28c68e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "25683aa4-0b88-4a01-8bd7-8ef4ef394011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712b7cb3-122c-4a3d-9a8c-a265df9788ed",
        "cursor": {
          "ref": "2f9967e1-1e36-4970-898a-3ed80a10a3cc",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cb00d095-bdd4-4da9-8477-611ac7cce4d5"
        },
        "item": {
          "id": "712b7cb3-122c-4a3d-9a8c-a265df9788ed",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b233ecfb-82c0-41b3-9776-1bce0fe5a46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d132ead0-9155-4fb6-aa76-ffec6db7343c",
        "cursor": {
          "ref": "b61eaa95-7d90-4225-a4cc-721f074ac401",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aee18cd3-b284-4ede-b0ec-53419ace6c51"
        },
        "item": {
          "id": "d132ead0-9155-4fb6-aa76-ffec6db7343c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "74eaa68c-6ea6-4f4f-a147-8ffe7ebdf4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158e627b-33ae-4c50-8483-a69778e9aa13",
        "cursor": {
          "ref": "b21ad3de-2b22-460d-ac64-342d04602cb7",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2b7098ee-42d2-4dc6-99f6-36bce78da17c"
        },
        "item": {
          "id": "158e627b-33ae-4c50-8483-a69778e9aa13",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2f10581b-9cc0-4749-9744-c7953859c973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8bcb6f-9710-4cca-a687-f4a3d3403483",
        "cursor": {
          "ref": "04479748-354c-4374-af03-71272030ffcd",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ce56022e-4f9c-4bcd-a614-d25f9b90d18f"
        },
        "item": {
          "id": "2a8bcb6f-9710-4cca-a687-f4a3d3403483",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "96b12f55-4dcb-4cf1-979f-359f7bfb5263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c342ece8-2bc8-4816-9ede-31fe8c23be49",
        "cursor": {
          "ref": "7b2ee4e8-b5ac-4315-833e-7ada3569d198",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "585bb506-7496-48b3-a187-d68fdd203dea"
        },
        "item": {
          "id": "c342ece8-2bc8-4816-9ede-31fe8c23be49",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7cb98343-2e7e-4f4a-90b7-80a4bff33e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6387388-bf9b-416b-b760-ea13ff968766",
        "cursor": {
          "ref": "da8c31d7-8c6f-4c33-bd2c-7e3d09b173b1",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6e9f3037-dff5-4c30-b7ab-f3d22b815afd"
        },
        "item": {
          "id": "b6387388-bf9b-416b-b760-ea13ff968766",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0a7a229a-1633-43bf-9044-5371f54bb286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804f1fe1-048a-4d7d-8895-00ac3ae2ecd1",
        "cursor": {
          "ref": "2d810831-4e7f-4922-9ce4-407ad273f822",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "54b0d142-5e3b-42d4-ad4c-9c76158cecaf"
        },
        "item": {
          "id": "804f1fe1-048a-4d7d-8895-00ac3ae2ecd1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c25c48a2-c254-4cd7-b988-a2f0bf96e49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7399ba34-be93-4cf6-9de9-3d361bd91146",
        "cursor": {
          "ref": "74edf4c3-3257-40a7-aa28-789a0cbe0cda",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6b06337b-1b18-4cf1-9cf8-7be20cc678c5"
        },
        "item": {
          "id": "7399ba34-be93-4cf6-9de9-3d361bd91146",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8bfedabc-feb5-4de6-81ac-3276a009605f",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "f909a8e7-4d51-4eae-9b72-78c6a9003034",
        "cursor": {
          "ref": "1bb7d61b-2f16-409b-b4ed-b6545f6f43b8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9008ad1a-fa14-4e21-8170-9b7cb98bb150"
        },
        "item": {
          "id": "f909a8e7-4d51-4eae-9b72-78c6a9003034",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a2313825-4ee2-45de-8b18-01b078f25fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1a7809-ea1a-4646-bb96-edd431b1ce7a",
        "cursor": {
          "ref": "509b9d97-dec4-402b-b129-da90c0a71fe2",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "674868a6-1e3b-4e41-9f6b-4043ca780d8b"
        },
        "item": {
          "id": "dc1a7809-ea1a-4646-bb96-edd431b1ce7a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dab554cf-03e4-4396-b9bc-9268b6aeaf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a76e38-f4f2-43be-8226-017d49f69020",
        "cursor": {
          "ref": "49dc38ed-36f8-4586-823f-022cb5119197",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0271c8f2-da7d-48c7-90cd-4a132c719ffc"
        },
        "item": {
          "id": "76a76e38-f4f2-43be-8226-017d49f69020",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "439e5435-d257-4c2b-9b34-4b0a6854e735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ff15b8-eb9a-4f38-b5ff-f59f5661f4e8",
        "cursor": {
          "ref": "d8a000f5-4277-4dab-8f09-05217f633f5b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7971f15d-c279-4d41-80c9-2a464b98a597"
        },
        "item": {
          "id": "17ff15b8-eb9a-4f38-b5ff-f59f5661f4e8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9a3eed5d-725e-4578-a3d6-31767e66f1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9685f01-d7a5-4f14-8760-39bd9ca48942",
        "cursor": {
          "ref": "feb6ac57-1316-4394-a62c-f999a399208f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "42b7a530-6ff9-46ea-a308-47100be72094"
        },
        "item": {
          "id": "b9685f01-d7a5-4f14-8760-39bd9ca48942",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "82436025-bb1a-4e33-997c-e9d1ab87933e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199f7e56-08e4-45ed-9af4-101b0793a4b3",
        "cursor": {
          "ref": "ba679804-73e6-4ae3-b173-7f4ee56178e6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c684f8b7-dd98-488c-b747-07b0e2602e51"
        },
        "item": {
          "id": "199f7e56-08e4-45ed-9af4-101b0793a4b3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a1ff35a0-6f7a-4e4c-9034-52aaa26acf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6979e50-c474-47ee-ae56-ad0e9f2adae7",
        "cursor": {
          "ref": "c6c28653-faca-4bc6-b21c-7f181e3f6c40",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2a66eef2-c476-48c5-9302-0f8ac8c2b307"
        },
        "item": {
          "id": "f6979e50-c474-47ee-ae56-ad0e9f2adae7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4aa987e5-3683-454e-a01d-29d7e77cadd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43475426-9b58-4837-80a3-7c03f7ab7a83",
        "cursor": {
          "ref": "b0dc04b2-02f9-4e00-a05f-93848264f488",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1df8d5a6-8ee9-4b30-8590-d3ae1af0f733"
        },
        "item": {
          "id": "43475426-9b58-4837-80a3-7c03f7ab7a83",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b90559d1-4459-43b7-91b3-cee650de3c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92880401-e5d2-4911-8b05-3531750d092b",
        "cursor": {
          "ref": "a23aaf38-9e25-40cb-ac4e-b1afbbcb17f6",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "14b4fa3b-85af-4be7-a7c2-c52adb5451c6"
        },
        "item": {
          "id": "92880401-e5d2-4911-8b05-3531750d092b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fea1dd34-8562-4ce7-97a4-087ba9ae77e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5b0922-8285-4715-a4e9-b527da8a508b",
        "cursor": {
          "ref": "ac95775b-aeaa-407d-887f-ff83a952a2dd",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "89704c04-c8a3-49b0-98bc-0aa5ad15115e"
        },
        "item": {
          "id": "3c5b0922-8285-4715-a4e9-b527da8a508b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d43bbdce-0a44-4158-b79f-6f01281022f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd090016-13c3-4541-b48e-e6cae88eb1f0",
        "cursor": {
          "ref": "e7fa6990-ec62-441d-b746-0645ae6ebdad",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "671feb4a-65a6-4e8f-99d5-b1f57fc1373d"
        },
        "item": {
          "id": "bd090016-13c3-4541-b48e-e6cae88eb1f0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6127dbce-a772-4a7f-be4e-03ab3980d56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b651c138-f618-404f-a22a-242d4e261fa6",
        "cursor": {
          "ref": "4c8e1864-482e-4ffb-9263-1e3f52d7b412",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e5e65f56-303e-4a3f-b96a-bffd5a473557"
        },
        "item": {
          "id": "b651c138-f618-404f-a22a-242d4e261fa6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "81b2d1d2-9ac9-4426-bd17-2bd640429ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cbd3a4-2fb5-4ff2-9da6-46e73d6098bb",
        "cursor": {
          "ref": "189184d7-93ea-48dc-a62e-fea00693d896",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "49ba2ff7-62b7-4bec-aeef-d38d44834b38"
        },
        "item": {
          "id": "05cbd3a4-2fb5-4ff2-9da6-46e73d6098bb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4f3f0606-0026-47af-b77e-cf7aa72c48fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b0ef95-8b40-42ca-8c0f-d0f92414160a",
        "cursor": {
          "ref": "19824b6d-d6ec-4d15-ae95-f77761ae4119",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c4d5259e-aaab-49e4-94a6-35843df0dbbe"
        },
        "item": {
          "id": "f8b0ef95-8b40-42ca-8c0f-d0f92414160a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7aea2f91-ddb6-4409-8a54-3bd85f00f0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bd9717-7a8d-43c0-8027-b83fa2d1daf5",
        "cursor": {
          "ref": "6c602cff-e6f6-47a3-8a68-e15ba1f25ac8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9922d212-9861-4762-acf0-e34cb7f6a55f"
        },
        "item": {
          "id": "f0bd9717-7a8d-43c0-8027-b83fa2d1daf5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "44d4a1da-114d-439a-b18b-127f3aa34b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b9c278-0592-4540-b440-8583e9cc6348",
        "cursor": {
          "ref": "762e5cce-180a-495a-8c30-1884705c86ab",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f95e9659-d8c6-4d74-9efb-75d021aae8a1"
        },
        "item": {
          "id": "14b9c278-0592-4540-b440-8583e9cc6348",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "03a4fd0f-352c-4953-ab88-120f0dc20aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1dc677-2a51-4cf7-9035-104b3eb43ca2",
        "cursor": {
          "ref": "78b1d408-ccae-4032-b56f-559a09427dc0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e13aee44-0f48-4e24-a18e-efff78b70749"
        },
        "item": {
          "id": "1a1dc677-2a51-4cf7-9035-104b3eb43ca2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "859a5582-c471-4bed-8314-7e52ca6eec15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcb67fd-f05b-46e0-bb0b-f96c17a40108",
        "cursor": {
          "ref": "9a2ac8f0-af95-4690-9e92-6d56cf9117c0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5de4d5af-7a86-4577-aa74-fd67acb48bc5"
        },
        "item": {
          "id": "7fcb67fd-f05b-46e0-bb0b-f96c17a40108",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5eb742c7-2ee3-44b6-b264-794df06c8421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63942e88-0363-4bab-bb1d-5f6dd66dfb1e",
        "cursor": {
          "ref": "f9947ac9-b2b7-4178-a00c-1be52fed4d55",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8090626d-94a7-412c-a125-dedb066c2d46"
        },
        "item": {
          "id": "63942e88-0363-4bab-bb1d-5f6dd66dfb1e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "63319be5-a66f-45ae-94c6-d8bc00dd3a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab814b56-a4f9-43b8-a869-51472ca90ad6",
        "cursor": {
          "ref": "bbfbb809-2584-4295-b72d-9bc916da7eed",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "60788532-df33-47ff-b077-70f0c70cd0de"
        },
        "item": {
          "id": "ab814b56-a4f9-43b8-a869-51472ca90ad6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "26419b73-e897-41e5-a1b7-f87b7d63ea15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d382af46-2519-4968-941b-ec42e8388a20",
        "cursor": {
          "ref": "ac6263ae-e342-4f7c-9bc7-4abb6b7f92af",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e1c98d8b-5d26-4c70-a0b4-0f29a7eb11b8"
        },
        "item": {
          "id": "d382af46-2519-4968-941b-ec42e8388a20",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "64f5dd9f-825d-4e6a-8f5c-c869e21b2191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ccd922-5da5-4a56-9ca6-d6e2c8657299",
        "cursor": {
          "ref": "7a827c6b-fb5e-4641-90af-849660680b4a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4d3bbe59-2ea2-41b5-9fcf-0c10ab068822"
        },
        "item": {
          "id": "36ccd922-5da5-4a56-9ca6-d6e2c8657299",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5f482381-5212-461a-87d8-5388c20d88a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcbc51b-586f-4ce4-9fe5-16c51e13113a",
        "cursor": {
          "ref": "9846e4fc-6d61-4942-b636-02a37178691e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "05f38939-b464-4999-91f7-ff8b3e6a0301"
        },
        "item": {
          "id": "2bcbc51b-586f-4ce4-9fe5-16c51e13113a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c94cb56b-ee90-4894-a65c-b6f09920781e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f62a2d-db4a-47a2-9ec9-5e4783f81f33",
        "cursor": {
          "ref": "2b029539-48a3-4fe6-bdc6-67c6ed59566d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2414fc72-efc5-4d8f-99eb-f2cebccb6d9e"
        },
        "item": {
          "id": "10f62a2d-db4a-47a2-9ec9-5e4783f81f33",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "21fd565c-f6f9-478e-b6e6-31cadae964d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c1cfcf-7d2d-430b-b4e1-88f9e395f937",
        "cursor": {
          "ref": "518d96f3-1c26-4d57-bf35-f452510e3fdd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8c42c861-3bed-4a0a-aea1-1e5949612bcd"
        },
        "item": {
          "id": "05c1cfcf-7d2d-430b-b4e1-88f9e395f937",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "03dc964c-fb75-4f3d-8b95-f17d971748f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea37f0ab-7a58-4c92-be83-709c1eec1406",
        "cursor": {
          "ref": "bb8022d5-1ea6-4597-8337-61ad49813522",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3812833d-b7b4-4f78-a0e4-26cc3a03ec0d"
        },
        "item": {
          "id": "ea37f0ab-7a58-4c92-be83-709c1eec1406",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c6589a42-2c54-4691-9f81-611ba98b5151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d506b566-434a-4a3a-b8f4-9cec0b430687",
        "cursor": {
          "ref": "679809ce-5176-4725-bb90-864f2bf42075",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "734ff2f1-7233-4a4c-9dcf-6a6efe831984"
        },
        "item": {
          "id": "d506b566-434a-4a3a-b8f4-9cec0b430687",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "52b020a1-6a28-4fda-b526-3ede88f5458c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef009a4d-14f7-4389-9e6a-bc7e6fba2976",
        "cursor": {
          "ref": "09db83dc-a145-4467-b9ae-7ed27f8fa458",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2929ae8f-ba62-45f4-8267-0f0eb8285a48"
        },
        "item": {
          "id": "ef009a4d-14f7-4389-9e6a-bc7e6fba2976",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0712d71b-30cb-4a75-b56c-2bd3681b9abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bb4298-609b-4421-bc7d-84d755dca2e0",
        "cursor": {
          "ref": "a4f5b39b-d531-4db7-81c0-45cdd4af85b1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4a2de2c7-5d1c-4e89-9d32-256cd28631cf"
        },
        "item": {
          "id": "10bb4298-609b-4421-bc7d-84d755dca2e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "248ae423-fa4c-4420-abfd-010ca192335f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8133e101-c7d9-4110-9739-ca92513afc86",
        "cursor": {
          "ref": "2c247d34-60a2-4942-be00-4f7687863544",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5d82e461-6051-497b-9805-4f29578438f1"
        },
        "item": {
          "id": "8133e101-c7d9-4110-9739-ca92513afc86",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "552f85c0-f0dc-4055-a11c-e80bd786c728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbaf976-6c59-4789-b099-71ccc17d1eb7",
        "cursor": {
          "ref": "d9b15c87-dd16-4c76-bbf2-d29f43be943f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0a8a8e52-ea99-4717-b63f-be1d7354209b"
        },
        "item": {
          "id": "7cbaf976-6c59-4789-b099-71ccc17d1eb7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3d786e53-b051-487d-99dc-91dba6cef9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9ed5c3-31f5-435c-a7af-0d50ddcde2ff",
        "cursor": {
          "ref": "555d35c3-c6d9-486b-8061-bec924cf6e19",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f62cad05-2e24-4968-b27b-e311e5ff0139"
        },
        "item": {
          "id": "bd9ed5c3-31f5-435c-a7af-0d50ddcde2ff",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cd1a67ea-d0b5-4a4c-bfe9-fdc4189065e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da39a60-fc09-4940-909f-34855c9840eb",
        "cursor": {
          "ref": "9da94091-9b69-4e5e-9f82-3d22f09b1bf1",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4202880c-233f-4ac8-811c-f8025b539978"
        },
        "item": {
          "id": "5da39a60-fc09-4940-909f-34855c9840eb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3884c8dc-085a-44d3-bf62-f1b34014a9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde77e85-2eec-42af-aaee-60b5330445c6",
        "cursor": {
          "ref": "12cba1e9-c26b-4758-aa26-c0750e61e4e3",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d700b1a2-c0ea-456a-88c5-d6d2b4a4f8b8"
        },
        "item": {
          "id": "fde77e85-2eec-42af-aaee-60b5330445c6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "65771798-f35e-4dbc-aa83-56714c3054b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459cea17-a516-409f-bae7-ebe7f05152b6",
        "cursor": {
          "ref": "5847a48f-ed9a-47b9-9ee1-986a5a556223",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "14374376-d6d0-4377-8664-b18899bd7484"
        },
        "item": {
          "id": "459cea17-a516-409f-bae7-ebe7f05152b6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "af911e47-5c2e-4fc4-9bef-d9d201d4669e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06e28f1-8a4c-4cbb-b264-6bd37beea484",
        "cursor": {
          "ref": "3d9aa833-7366-4098-8ffd-b1768ea15857",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7167ad76-80a5-465f-a73e-66a41fa7b689"
        },
        "item": {
          "id": "c06e28f1-8a4c-4cbb-b264-6bd37beea484",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a3769679-5023-4a75-b4cb-cb87bade5adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5546179f-9b91-4907-82c3-aaa03a970205",
        "cursor": {
          "ref": "707fbfe4-c85d-4a38-85d9-664276890ff2",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c3da4920-af17-4eec-ab47-455146bf7278"
        },
        "item": {
          "id": "5546179f-9b91-4907-82c3-aaa03a970205",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2fd8e2a6-1c54-4e02-b4bb-55098c92a711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db34222-89fd-4244-9916-14f4156a0483",
        "cursor": {
          "ref": "1a253b5f-a52a-42c9-b803-05f54bd3582d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a4897110-ff55-43f7-a6e8-f5cc8431641e"
        },
        "item": {
          "id": "0db34222-89fd-4244-9916-14f4156a0483",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a41024fe-8b76-4e90-bea9-823f2badb4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427fafe5-6545-4748-b442-0ec0bc082397",
        "cursor": {
          "ref": "a01b8e54-03bb-423d-8c05-12f42fb68f11",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dc8f31cd-4708-4512-9f77-118e5e55dc13"
        },
        "item": {
          "id": "427fafe5-6545-4748-b442-0ec0bc082397",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6e5b8aa4-f3da-444c-bca8-3dab5be51091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379c5be9-5e3c-490e-b263-37b97eb05886",
        "cursor": {
          "ref": "76c4d884-90a3-4610-8da3-3c7f81ecb3bd",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b82280a0-feec-4241-9ac5-365c0168baeb"
        },
        "item": {
          "id": "379c5be9-5e3c-490e-b263-37b97eb05886",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5057a8b8-9129-40ad-bb47-1393632d34e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5726a7-165b-4960-8fa6-e4df58d6bd3c",
        "cursor": {
          "ref": "83b37b6e-0444-47b4-89d7-c14dcc71a29f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9948b0d7-419b-4918-8e18-5a900faac379"
        },
        "item": {
          "id": "9c5726a7-165b-4960-8fa6-e4df58d6bd3c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c8f1f859-3d33-4ad3-b3d2-3f1aec7fc190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b44cf1-5785-4850-bdcd-330d471438c8",
        "cursor": {
          "ref": "d0ec48fc-4496-408f-aa31-c79b7325f33d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c8b6bef5-911a-4a17-ad50-62aa79484b12"
        },
        "item": {
          "id": "a0b44cf1-5785-4850-bdcd-330d471438c8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a4684be5-f7bf-45fa-a53e-5ec5fff8fe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c1963c-d9e5-42d3-b623-3e8a802ca1c2",
        "cursor": {
          "ref": "5c2eeeb5-ca92-4dc7-b156-08e29f31e658",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "826c2570-a3af-4e54-a8a2-7aeec9764734"
        },
        "item": {
          "id": "e1c1963c-d9e5-42d3-b623-3e8a802ca1c2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1892d476-598f-460c-9421-5b167e510433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54927794-5125-450b-81b1-421789926d20",
        "cursor": {
          "ref": "4634171a-0d0a-4e21-a4b5-4c937b6f9da8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8d0644d4-a94e-49ce-9b77-c21948971163"
        },
        "item": {
          "id": "54927794-5125-450b-81b1-421789926d20",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "02dfa1e0-4415-4564-945e-2c787d57dfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8eae77d-fa49-4ef2-a0ec-e7c78394b3db",
        "cursor": {
          "ref": "8c94c0f1-72d7-40d9-9b26-260309de945f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cb3dc5d6-9abf-4acb-859e-dae2c21d5c9e"
        },
        "item": {
          "id": "d8eae77d-fa49-4ef2-a0ec-e7c78394b3db",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9f2e5fc7-ae58-46ae-aba9-0ef918aa8670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1550f2-5068-463b-861a-7e11e5f91dca",
        "cursor": {
          "ref": "7b16c206-dbfb-47c1-a15e-8e561e704ec0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4a101ce8-c69f-4b87-8f6e-a3a6e2b2c32a"
        },
        "item": {
          "id": "dd1550f2-5068-463b-861a-7e11e5f91dca",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ed6c46ff-2949-4410-92e1-3dcedb19e153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b079dd89-a054-4ea6-b6a5-911242886dd7",
        "cursor": {
          "ref": "79ec8715-4f10-4420-9d8c-3e6706e12eff",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8f4cbd8a-0821-4bf2-a300-733dd4001c25"
        },
        "item": {
          "id": "b079dd89-a054-4ea6-b6a5-911242886dd7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "92f2f20c-1228-4fcc-9724-18d04930f050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ab0395-b008-49e8-9fce-ae1a76d36eae",
        "cursor": {
          "ref": "bc13940b-48ec-4d5d-846a-531b13653e1c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1474c38f-c7fb-4ee0-8630-3f34db3492ff"
        },
        "item": {
          "id": "f5ab0395-b008-49e8-9fce-ae1a76d36eae",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2a91c23a-85bd-4de1-9e1c-a9f048956131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30031e9a-3b15-4ef3-b9e4-c8146659d297",
        "cursor": {
          "ref": "63c27a49-adfa-4414-9e55-8a19fe0bb018",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ff021db2-b3eb-4986-a020-c00ad80e466d"
        },
        "item": {
          "id": "30031e9a-3b15-4ef3-b9e4-c8146659d297",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e3e3a81f-011f-40f1-837d-753d1e76967f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b339b57-27e8-4cca-aa78-2bfc4acf98e0",
        "cursor": {
          "ref": "81b5ba1e-f9b9-43ff-9af4-a85982c63579",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "26e4dde0-18a8-41a3-9e84-f64331309ccb"
        },
        "item": {
          "id": "0b339b57-27e8-4cca-aa78-2bfc4acf98e0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7b802dc9-bb2f-4c34-8e7f-ce952e732b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd03482e-761f-4ca5-8540-31287801de9a",
        "cursor": {
          "ref": "c72d3062-0a95-429c-9c26-24a3331893c7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e8fdbdc3-827a-43b4-a6b7-1ddf35f51c6e"
        },
        "item": {
          "id": "dd03482e-761f-4ca5-8540-31287801de9a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "08e84eb3-3cd0-4e07-b30c-ac71d74f256b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350cdbc9-4afe-40e3-b7af-efa60d92404e",
        "cursor": {
          "ref": "a8fe6a58-740b-4742-8744-8fb60b60fabe",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2cc10a33-5dc7-45d8-a838-289b4f31198f"
        },
        "item": {
          "id": "350cdbc9-4afe-40e3-b7af-efa60d92404e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3df763e8-4b9e-4a3b-b001-e257595c35bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85977c98-2501-4260-a4e7-ee6c659fab2d",
        "cursor": {
          "ref": "79847038-f5e5-48e5-a4ab-95862ff0637c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0e4fc262-77fc-4395-9792-9cb43df84bd4"
        },
        "item": {
          "id": "85977c98-2501-4260-a4e7-ee6c659fab2d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a9166c07-cf36-42e1-93ea-b283c29113e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cdab62-9c0b-4b17-adec-953a4f10df3a",
        "cursor": {
          "ref": "3f373dda-d339-4284-b23d-ad7a6bf57244",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d3719f4a-0707-455c-b2dd-5a69126f1010"
        },
        "item": {
          "id": "63cdab62-9c0b-4b17-adec-953a4f10df3a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9e01345f-e29d-4a59-b067-183bd34340f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cf034d-f135-4836-8e60-e60aa8fdfc25",
        "cursor": {
          "ref": "7439bf6b-d64f-42d0-ab8c-0fa2d4cf05da",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e4f666e1-af4c-47a8-9518-03ea539368a1"
        },
        "item": {
          "id": "78cf034d-f135-4836-8e60-e60aa8fdfc25",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7a841f1e-bd6f-4e7e-93d9-b5499856a973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27f8ba5-5001-44c9-8441-b2d9d5537aa5",
        "cursor": {
          "ref": "f5dac8f3-d1d1-4644-aade-5aa47ee72649",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0e2db99a-2768-4e4f-83f3-4b161f36be4b"
        },
        "item": {
          "id": "d27f8ba5-5001-44c9-8441-b2d9d5537aa5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dbd04212-5764-4fea-b55e-0bcf05867f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93ab499-9671-41d9-86cc-744da00a8aa5",
        "cursor": {
          "ref": "d9695aa0-1aed-4688-8181-c75fe6ccd992",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "16cf11ff-bfbb-4448-a2ed-0a2741a8f9da"
        },
        "item": {
          "id": "b93ab499-9671-41d9-86cc-744da00a8aa5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2d57048c-eb74-4a0f-99d6-6a6599ab08f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3423a503-098c-45ae-9d66-a0f63fcc3eeb",
        "cursor": {
          "ref": "df1a1ba0-8a24-42ec-ac5c-1b39653da448",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ddcc298e-c9b4-4cf2-bd3a-121c813db2cd"
        },
        "item": {
          "id": "3423a503-098c-45ae-9d66-a0f63fcc3eeb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cac22dc9-cf96-40cd-93fe-ae1a010bbd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d865507-716a-4099-b35b-d63b27a3aef4",
        "cursor": {
          "ref": "b836de33-e65f-4385-b9e8-eeb8523c3e1d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4f5fec20-90a8-48e8-ad42-79e952fe535a"
        },
        "item": {
          "id": "0d865507-716a-4099-b35b-d63b27a3aef4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5de7f2cc-cf2b-4ddf-9d29-aa668eace326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4275363a-c3d9-4f2d-9a04-69e89dd71b93",
        "cursor": {
          "ref": "3fc864f4-80b4-4804-81b1-d8b2d17122ff",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "888cec7c-6a24-4404-a738-4204f61a9915"
        },
        "item": {
          "id": "4275363a-c3d9-4f2d-9a04-69e89dd71b93",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "01146e52-20cd-4ff7-8e14-6978063d6685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b04e14-29a9-40f0-ae84-19be818356cf",
        "cursor": {
          "ref": "74213072-8b46-40d6-bab4-796dbd31f6f0",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1085b20e-be29-472b-9cf1-c82c1f67efad"
        },
        "item": {
          "id": "64b04e14-29a9-40f0-ae84-19be818356cf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9d8d4763-60ec-4da6-bae2-d74a34ac5f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f32ce6-0e54-4578-880d-dd4b3f34f0e4",
        "cursor": {
          "ref": "64d7f2b6-5a86-4e3f-bfb9-f2fad1a17d84",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9bae9062-b5cc-4786-b177-e6572c5dff62"
        },
        "item": {
          "id": "b2f32ce6-0e54-4578-880d-dd4b3f34f0e4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8c685ee1-ab7f-4e11-8cae-8f190d158234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68f63f3-6230-4ae2-b2f8-5cfbed25743c",
        "cursor": {
          "ref": "787b6177-6dc4-4222-92f3-1e93dec10e77",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1884f9ae-b746-4be9-bb37-902f01d6a5b0"
        },
        "item": {
          "id": "d68f63f3-6230-4ae2-b2f8-5cfbed25743c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b5b415a3-9bb2-4fc0-a044-f2c313230bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fed4b8f-fd4c-4fa4-88eb-98b143abb818",
        "cursor": {
          "ref": "99466cd7-bcee-4311-9da9-0c829eab9cc1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3c254af8-53bc-4819-b4bd-c8474d86af47"
        },
        "item": {
          "id": "1fed4b8f-fd4c-4fa4-88eb-98b143abb818",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f460786f-4b32-4233-b8a4-6447b1a0c5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2a2051-22af-4019-b4d5-17313cdc2e38",
        "cursor": {
          "ref": "e64a9dad-815e-424b-a4ca-70004092b3b4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a84d34e7-2e8d-40ba-a3d4-77e71f505f8b"
        },
        "item": {
          "id": "bc2a2051-22af-4019-b4d5-17313cdc2e38",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "11e5c9aa-0e67-4cce-94d9-c6c65d4521b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0abd471-0ea1-46fe-822f-c9fb7c87a5dc",
        "cursor": {
          "ref": "50acb746-fa7a-4faa-866c-770322608986",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6d7dd200-8bc5-4b6d-aff2-3cf3bf4c4d03"
        },
        "item": {
          "id": "e0abd471-0ea1-46fe-822f-c9fb7c87a5dc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f8dae42a-21d2-4c65-aee9-6dbadbd1f493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627e6bab-3630-4d84-b4d3-20b96c19faa1",
        "cursor": {
          "ref": "8cb0f5d3-8794-47c2-8dd8-b09b577e77a6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "795cf42b-09e8-449a-b2cd-04e192b3df67"
        },
        "item": {
          "id": "627e6bab-3630-4d84-b4d3-20b96c19faa1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d0e60bb5-0e50-4ddd-87f6-8b62e3ec6872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc61439-d62a-410a-a5f4-0df82731f368",
        "cursor": {
          "ref": "ec79e845-b519-46ea-a9c8-9dc6bf59d51a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0a7f6a14-931d-4472-9888-694205463d6b"
        },
        "item": {
          "id": "9cc61439-d62a-410a-a5f4-0df82731f368",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a9112b72-941c-4e2c-929f-4ff2e0fdc94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d08b45-9eb5-4854-ac28-72658d9e93c6",
        "cursor": {
          "ref": "eb68ca4e-a9be-436a-83da-f4c7a67a8ba8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8f9bd1ec-9920-4aeb-81b8-02ec5241fd30"
        },
        "item": {
          "id": "96d08b45-9eb5-4854-ac28-72658d9e93c6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a231b38c-6bb4-45f6-b426-ab1d3915e168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f074938f-3b17-4c5f-9fea-7b7e9ea4be9c",
        "cursor": {
          "ref": "b7ba23bc-03fa-4869-95ca-121af615be30",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fd52234a-72e2-4044-b76a-3362a9c09f7b"
        },
        "item": {
          "id": "f074938f-3b17-4c5f-9fea-7b7e9ea4be9c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ddf67e8c-195f-4d87-89fe-3180298da9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da2f311-c7cf-42e8-82a4-c06c16e6f142",
        "cursor": {
          "ref": "9c05f3c6-43d5-4365-8740-2f646d20b3da",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9ac26512-c0e0-42a6-8e56-c9e72b4c4e90"
        },
        "item": {
          "id": "0da2f311-c7cf-42e8-82a4-c06c16e6f142",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ebd3533e-db60-4112-a61d-42c556791c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257ac319-3318-435f-9929-4d8022f44bba",
        "cursor": {
          "ref": "fbd937c4-d00b-4da6-959f-ee463e83ac32",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6c584232-57b8-4d62-a2a3-0f62024281c3"
        },
        "item": {
          "id": "257ac319-3318-435f-9929-4d8022f44bba",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1122a2b2-7246-4ff6-8f86-5a9af1fe3722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b8afa4-08af-4dd5-9893-41eeadddd9e9",
        "cursor": {
          "ref": "59194bc8-76a0-4ad6-ae09-52f5b9a75646",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b7ad469f-ca26-4230-9b48-e8c4f6b344ec"
        },
        "item": {
          "id": "a2b8afa4-08af-4dd5-9893-41eeadddd9e9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b7d66ccf-2508-4792-a13f-eb7208238630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a85caad-62bd-41e7-a524-e8b9cbe97292",
        "cursor": {
          "ref": "fadac22b-5e92-4520-b193-3f4c2e87df07",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dce514a2-063f-473b-8f3a-972a97ab3dfb"
        },
        "item": {
          "id": "5a85caad-62bd-41e7-a524-e8b9cbe97292",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9a875cea-1497-4a2f-87a9-ef0e1b7119df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403c5f78-68e3-4fae-9ca8-464fbaf87093",
        "cursor": {
          "ref": "be168a0c-7b90-41c9-8c42-c3d79a13cf03",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0ed6d366-6f93-49fa-9ae0-2e86eb22f9ce"
        },
        "item": {
          "id": "403c5f78-68e3-4fae-9ca8-464fbaf87093",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "df93b48b-252d-487d-8a1c-93131af79d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e997f31c-ca5a-43a6-97b8-3ba40e787dd0",
        "cursor": {
          "ref": "0d1ae9fe-ff22-4bc6-8f8e-30b6e0c911e1",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "223ad06f-ece0-4a91-b147-fd5a6ca7c5a3"
        },
        "item": {
          "id": "e997f31c-ca5a-43a6-97b8-3ba40e787dd0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4df9a1e4-abfa-49ba-b4c6-70cc9cf6500b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682a6fd8-8ce4-433e-aa73-97319b773bb0",
        "cursor": {
          "ref": "0b207110-702c-41be-8d3b-005d6f870162",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a457c390-8055-4bca-97e2-86d58b0c9387"
        },
        "item": {
          "id": "682a6fd8-8ce4-433e-aa73-97319b773bb0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ee5e2ba7-1b35-461c-93f4-e0378c73ddd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea934213-5ac4-4b92-9e29-9f7ffc1cc1f0",
        "cursor": {
          "ref": "48f9b6b1-3d51-46c0-86c8-0777191f9cd7",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "59bcf00e-ebcc-4a55-a881-6f9642b6256f"
        },
        "item": {
          "id": "ea934213-5ac4-4b92-9e29-9f7ffc1cc1f0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3a4193bd-aa58-40b9-b877-ded7b3f78dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ac8a2e-021c-4aa7-b90e-9df8070f5a54",
        "cursor": {
          "ref": "97a1ba03-e7c6-4dec-8ff9-3dfaafa64483",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "81b0785a-803f-43ec-9231-9893a7a9c0c3"
        },
        "item": {
          "id": "59ac8a2e-021c-4aa7-b90e-9df8070f5a54",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d0b8e0d9-ed57-4e1f-831f-bf6d3cac55a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b6ca1a-7781-46b1-affb-88c8635e26a0",
        "cursor": {
          "ref": "e662c7eb-0cc6-4e0f-b5f6-5bb44310ecdd",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b2948eaf-fd81-4c71-925f-d9f9f3020f6a"
        },
        "item": {
          "id": "a2b6ca1a-7781-46b1-affb-88c8635e26a0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "89891c51-1f35-46be-b7bf-cac5ed1ca95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0128bf38-8e1b-4d1d-97c1-f6ef8a117eb9",
        "cursor": {
          "ref": "96f7bfa6-c345-4bd2-b3ff-bb1c11724c18",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b1e32de2-a6ae-464d-9d1b-2bb4c86e2d1f"
        },
        "item": {
          "id": "0128bf38-8e1b-4d1d-97c1-f6ef8a117eb9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "800f210f-6dfb-49ec-b36a-7fbddfdb8103",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a76013b-a55b-479e-9798-17008b168081",
        "cursor": {
          "ref": "19f54332-a5bf-46a5-9259-4eba4a039806",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d08f95f2-18ec-489d-9c54-353bc3d05fb4"
        },
        "item": {
          "id": "2a76013b-a55b-479e-9798-17008b168081",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "50eb66a2-2f4f-49f9-9975-5a320226c2be",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b209a7d-dfdc-412d-aac1-8fe1b65688b3",
        "cursor": {
          "ref": "c7128d06-d3f4-44b1-b11a-f1f4e1a9c77d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e74d41f9-e78a-4e68-b8a9-1912866ab8b7"
        },
        "item": {
          "id": "8b209a7d-dfdc-412d-aac1-8fe1b65688b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "53ebaf67-b263-427c-8d76-7e30a23663ec",
          "status": "OK",
          "code": 200,
          "responseTime": 2288,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "349d2b68-f743-4616-ae9c-2dd420209cd7",
        "cursor": {
          "ref": "fffef0a9-5353-47cb-ac01-d5bf8f8bb1da",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "eddb0b0b-bcb9-46fd-a1a9-29171ccb6b13"
        },
        "item": {
          "id": "349d2b68-f743-4616-ae9c-2dd420209cd7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6e2bd58c-fc58-4375-bfa9-8361fb3ae57d",
          "status": "OK",
          "code": 200,
          "responseTime": 2719,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5801d51-1c9b-42e7-bbfb-8714efc06cba",
        "cursor": {
          "ref": "d2bf9b14-44f2-44d7-9f8e-e198ff4887e8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "919e92f7-aff8-46c0-8f30-31cb24445a47"
        },
        "item": {
          "id": "a5801d51-1c9b-42e7-bbfb-8714efc06cba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e557123-8602-4a50-a064-27af9f6c90d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5801d51-1c9b-42e7-bbfb-8714efc06cba",
        "cursor": {
          "ref": "d2bf9b14-44f2-44d7-9f8e-e198ff4887e8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "919e92f7-aff8-46c0-8f30-31cb24445a47"
        },
        "item": {
          "id": "a5801d51-1c9b-42e7-bbfb-8714efc06cba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e557123-8602-4a50-a064-27af9f6c90d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e559b328-6876-4004-82b5-bccfcd555a1c",
        "cursor": {
          "ref": "6f6edb5d-ffae-4aed-a855-1075c12be807",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d927e9b2-2a4e-4c9d-b570-b2dfa7d31bfd"
        },
        "item": {
          "id": "e559b328-6876-4004-82b5-bccfcd555a1c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "74f9e47e-091d-4650-9d37-845d782083b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e85a2f0-cc1d-41f1-a536-ba7a15150880",
        "cursor": {
          "ref": "37db3129-53eb-4ccd-9654-762a2f4c55a2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2f27b3cf-5a91-4f3d-beab-91fd6d677950"
        },
        "item": {
          "id": "5e85a2f0-cc1d-41f1-a536-ba7a15150880",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5fc8432b-ccca-43d3-aef5-fd8545ed988a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}