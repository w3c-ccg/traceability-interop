{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "15901de3-3950-4b41-8a07-4a0c248b2199",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c4e87cf9-5f7a-4cd0-8539-1af3bed40084",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b3f2747-89f2-4c8c-aa11-fef79dca7683",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2f97c820-db6b-4389-a967-b867acbd5b06"
                }
              }
            ]
          },
          {
            "id": "13b726a0-f685-45bf-bc25-68cb856503b4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ca9fea7-1b2a-4f92-9793-5561442675b0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b54872cd-b4d4-460b-8bde-04f34875e9be"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4fd9cfdc-a7a8-45c5-88e9-05e60b2d7625",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5f4cb5b7-9959-4759-8326-477b43359bf5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3ebab4b-a3be-4ce8-953e-0b3094412899",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2227cdb-7808-49db-8a04-5721b14aab69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d4b5afd-7850-451b-899d-fad81b4787e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cafd6a71-3901-40d3-9f45-3c54c783be03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ecbfc5be-64d1-496d-9650-c363f76d6929"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6cda2bee-6082-4d9b-9510-45e9cfc967af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35197a82-c568-4825-a8de-ccd26c18f78f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d53c8402-9ab2-4075-a943-4f7196ae3eea",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e5bd03b0-9d3d-4994-920b-aea1c38af426"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c04ee118-b6dd-4417-b06c-9fe00dfa069b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4d24d23-26b7-4312-9529-c5af224e1adc"
            }
          }
        ]
      },
      {
        "id": "33582785-c985-4bfc-b5b7-7e57fd39b542",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "511b17a8-ef9d-426c-ab9a-d78146dfadb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f098439-e3a1-40ce-b192-7fb316ec82e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "419e10b3-cc3e-4941-ac00-cde145482e36",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a77e2a-b4c2-4fcd-846a-30c4662f3249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8b97fd5-e16c-425e-9fd2-cbd2382d8e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9e3965-6b44-4b66-9f70-e05c9ae73a6a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a89a29-6019-456e-bb38-4a02730977b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b5865b6-18b3-4e6e-8482-d875d464fe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf57bf94-93ec-4e7f-b91c-b9f10c4f9b64",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11acd523-7cb4-4175-8bc7-a35bc98af0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d05a8ff-6622-4072-99c9-0198080cbcfe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cca3d3a4-8339-4dda-bba3-89e8f31b907c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d15ba94-31b6-4be5-960f-aa0acb08c735",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc466d9f-015e-45f6-959a-01ae1a881b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "615b3060-3271-4348-a0db-5ad6c6c18cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850c37c2-28ac-462c-838b-51cff4575fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c7cd7d-3c18-4971-aa18-893ea067727b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6546a7-a7a3-4c75-a0f1-948955a51c42",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9090586d-3994-4146-8d67-5def16d632e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7c09ac8-98ad-4316-95af-28e84b51e151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100ef6e3-aca7-447a-8df7-107e69b59a2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "422ac45b-58ab-46b8-a252-d38d8f69ba11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3eaea370-9d20-49f9-a40a-4af978319fa4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7077529a-229f-4258-a950-4582c7670358",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c582a538-b175-4055-84d8-abfe92c5d590",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "65b14e2a-ff00-4e46-83a1-03cde47bb6d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1f7dbd5-0e5a-44a2-bb29-754be084b2ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "0a797140-6acd-4dc2-939a-559116baf146"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa0ae664-7c8e-4e49-9add-b3cfef0ecf9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59eb2267-77cd-400d-a687-b9fa87e342cd"
            }
          }
        ]
      },
      {
        "id": "56e4ff72-7733-49fb-93a3-e93f213b3d6e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3e000cf9-d856-48a3-9d7e-10354374cae9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5c93d46-1ebe-4f00-96e3-f0be08bf27ed",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9d7de398-e2ae-49a3-bf64-952f6cdb6490",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b47288-d503-492e-941f-1c5846b53c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7dc679-c6ac-4426-b448-dbe558c64952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2804611-98f8-4c65-b5df-5e029abad697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2549d51b-79fc-4d1e-8015-38c5f9363db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8659df-ee0e-47d9-95e5-08d1f9a0919e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b7a40e-1814-41fa-a5e7-044dac53a05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec91a142-ea98-463c-8b7c-cce8cb688663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c380c17-3895-451f-bc7c-d4a0b83a1322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94762c1b-11ee-461c-9938-26ba59636b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7b2b8a-77fa-43c0-9ddc-6d8a353d5151",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b709254-ff93-4598-a57a-492145d89f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89bdbd4-8be7-40d6-8b28-e4e180a2c24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5533c8-6add-4a25-a28e-e180ef42941c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a51e064-c178-484d-a7c9-4a7d36cf9c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64345a57-4e03-47bb-907f-6d26b5e247c9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ea2459-373b-47e3-85dd-6b6a224dbd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7195b4c-d7b9-4ac9-9c47-0606eb0905cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4905b5-55df-4db9-b830-f9a76bb13d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5a85d2e-6ac2-4f9f-9962-85835f5d2090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dc954a-6569-4a40-a278-5d52604506bc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94fb266-b1fe-4d50-a679-65572b2680b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13288903-7319-411f-9ab4-1be54dcf1219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344170ef-4664-40a5-b644-c57a9c8e5bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cd73533-2ade-4e96-abb7-ad93bd982aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddb284b-e19d-438d-9dd6-b711020a5a62",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfeda27-ee17-4a8f-8a2a-b5bec8631559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f54d647-6479-4410-b403-9bf82f53ead5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3830f7-eded-4e3c-beee-89d5437e1e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a191dfb5-ac2a-4227-a824-3ff320fce95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982fdf3f-d811-48a5-ab4f-6dc93c22e8b4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88611a88-def7-4482-ac9b-f952326b444a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9976f297-fbb4-4ad4-84d2-42354c5961db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95041b24-86fe-46b0-96b4-4c6ba0a09892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cf022c2-e116-437e-bb40-2a52f2a1fbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca09c39-136d-4cbe-b6be-9201262cba08",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177805bc-efdd-453b-8b77-7f463f33f9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b42a2d-bcff-4554-b31b-8a7c147b9d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fd148d-c08c-4bc1-81a5-0d677e614636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53fefc9e-4c23-48a3-a69f-2b214dedcd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52533ffe-df19-4062-9022-f5c67c0ffbdc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821d32d1-536e-4477-8976-30dafe13c131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546b4f00-0f3a-4196-a7b8-b9c37d4736d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5d60d5-3a97-4de1-bc68-65a279461db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af838650-312e-46dd-b3a0-7715a1fa8736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9574050-b639-4a11-b859-5a90445b2da4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af75e25-4aa5-4496-8287-f5f5a1843977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d174eb-6e72-4100-9f28-282077742c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d80985-844f-415c-9b80-6a6d4cee16d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11261428-9246-476f-a688-3aef460ee567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02619d56-2f68-43cf-9b88-1e21cd2f956d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f036d1f8-f6b5-4e74-a619-2035ceeef8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a031a99f-9cd7-480b-8b34-672398780e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f6c2be-a300-4e6a-907f-4af9b7e79c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "525e7ad1-8991-49a2-8041-067a38015bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fc161a-89a4-4a73-a36d-548cf4ab455a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d05d080-399e-4b9a-a02f-5d005b9ceebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7058195-ffb7-45ea-8e56-31442a95c3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149aa604-0f19-4bcc-ae6e-a0ea44644441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abe0831b-b185-4e65-bc92-7d46610987fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15f5e81-b170-4a73-84c8-5643968ca451",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8323da-48a4-47be-b12e-94d56a1d5803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c04bfc1-406a-4d33-8e5e-03357ec82a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ceb80b-139b-4f5a-a53f-8112625139fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af92794d-49e4-4dfd-9e5a-ce8e05864312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456ca319-12c0-4e88-b574-97dc4b7ba079",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c7e883-27a1-4ab5-8cfe-07dbd16d251d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e57965b-52d8-46de-9ea3-e201af340b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049e9db6-2aac-42d1-884a-2e7f58328c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b37f5c89-6f35-454c-85d4-e1110668cfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198ad174-495a-4404-a072-5488e51759a8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9c04c6-86d5-404e-ad3f-89cbc57ebe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754dc601-3d4c-4aa8-a0f2-0cc0237011a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74e8ff7-cc45-4e90-8669-a55b5cc2234a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73c73687-cbe0-4364-9ff1-278fe3541498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eb6557-0bda-48e7-8017-eae4736ac40a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b4f7e8-3b34-416e-ae94-d7b3b44464bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae601a43-8afc-463f-b255-2d6f1c1f512e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0360c288-522a-446f-90a8-905ed90a6fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7d583c2-5345-405f-a80c-cbdc7b41b003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9248817a-e316-4979-a781-20119e49bb16",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723d3ce8-e9ae-4697-afeb-58efd1c3576a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd03929c-f82b-431a-a5ce-c4e9b5592585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf01216f-5147-48fe-a58e-24631ce445ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fcf3c3a-46d5-43e0-822f-d24e2153227f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0d6a64-796f-4213-822b-5fe2cbe71dcf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10dcb6b-2191-46a9-bd0e-59857cd18631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e6ca42-a531-4b0b-bb25-e3e04b4c422b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44202226-49d6-4095-919c-64e8050bc07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0953b7a-5b4f-42ea-901e-ef551810e7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695a0c6a-3497-43d4-b260-8b0a48cfb50c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45715ce6-e0d7-4b2d-aea1-88f878258e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327cc7f9-55d5-4fd5-b8fe-828df0ee1dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165d21f7-cef7-4f77-b763-06733530a76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91cc3679-3db7-49fc-9e7a-638be120e34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936f554a-e72a-4534-8786-120ada004edb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceae4a29-6333-47e2-b909-b9c5d62cb614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed3fff2-c17a-4804-9df3-996ba14917bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b53fad-6d31-4c89-ab96-139578b3b89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2ada8a-cdd4-4fc3-bbec-7ce4a0ad1967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8252b8fe-2534-4b44-8ba8-2b9c9a57793e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42ff9c3-2585-4f73-b6d0-41d0f2ee15d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16461acf-fd7a-46e5-a29f-d03604a5fb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28467220-cd8b-49f5-869d-ab047353889f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54201cbe-1dca-4284-9d2c-a4fd86947381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dae767-3281-4812-83b5-f2d6c8a4bcb2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75b1c0f-23cd-4c7f-b148-8e195e9122ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc5af3b-685c-4cef-80b6-2dbdf916e47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335fb805-b7b7-4466-9c85-276a2adb53b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2234d07-9950-4f9a-ab25-eaac63414920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87082636-8adf-4bc1-a59c-4292750fce88",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2ececb-18cb-4597-aab2-c3c2b64cbe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119f2e6f-a8da-47b2-968a-96a25781ba82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3e780c-51fc-481d-a829-b7fb75ce466d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61189c29-6919-4824-8b3a-8f832ff8c348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afc9a11-b5b0-4fad-a66f-3d852f31cb6f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62fcc95-e1b2-4653-aaa2-82f5de7f730c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135e5a91-49a0-45c5-8308-f265d0de5b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dde35a-69de-429d-860f-993b11e7d8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac049b61-31ec-4946-8c89-bd912d7eecd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a419b71e-ab88-48b6-9045-8c5722afff38",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25bc679-3656-4746-afe7-5dd836ce4195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262ead13-aa29-49fb-bba7-553ecb3b77d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7503265c-3c54-491d-8b3c-273b6bbae904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a14d515-9475-4e1d-899c-9700353d76f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3511b036-7d4f-4a3c-818c-8ed49097e973",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6192ab51-751c-49dd-a2bd-4887f869b0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5e6fd9-c69a-4180-994b-480cfcf0ccbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498ec9c0-53e4-4b38-8265-ebbb0fa49882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4023ca9a-a34e-4563-a677-bbd2f08d7df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda8bfcb-18e6-4df4-9d60-b9fc196df0f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0352bc5-a35d-4d5d-bb77-8135f7f817d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3539bd-61ef-4356-9d87-a7defa6dddd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a409686-24b1-4b16-87f5-edf949cb50e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a78672b-cafc-4a03-bdda-98597e5366a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352be743-4471-4e1f-911c-c154bfd260b3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16bf746-de34-449c-9db5-60ee70e11972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823b892c-6b51-487c-b14d-9f984066068c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85cac5c-b854-48ff-ad9d-29ab26d02c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70f1ee07-3365-43ee-90d7-f8f775805ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d579049-5d23-4d40-a982-10225b4ba104",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f5a75e-e539-4cc9-a8fe-603566b468af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33a3958-c7db-4b7d-89cc-7cce624400ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b4c70c-f59e-451e-8069-58edfddfd7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "981e1249-deb8-4376-9bcf-89f97b43f62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe0d7ee-b4af-4a6f-bf08-d8802bdaa266",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599099e0-fec5-4c3a-b526-6bdaea6cfdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda72356-3ae0-4d02-9743-9127af811fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d43776e-db91-4c8e-8ed9-770df3ce3342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb623a16-8793-4035-943c-06bf8b84f2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49925bd-082f-4878-9a75-57f569bb2d77",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e5b72a-b820-426e-bd26-498faa769189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1c6035-2235-4dde-824f-8e99cde0433b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39d3f3f-789e-48a1-bc43-61da5c050c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42378fe3-b321-47c6-b706-1f26af08ffe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20109bd-0e83-4c03-b72c-2a489c80566c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8d5bd1-9131-48e2-acce-df7cf8d99a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22f5ec0-4fe5-4f5b-8742-917608fcf85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf84a3d-1940-49a2-b15a-1ff1362bae5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "264044bf-34c5-4eb7-b03b-3390ca4cb982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8abb131-dabd-4a33-b18d-0d06b5f9471d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b175fe8-4ddf-4a5a-9b38-215db5c50b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aceed990-ecd8-49fe-9439-e6a0842ac03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206c838d-6a72-47a9-9581-f3bb5d70b556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71c72cc2-e444-4b59-b4f1-939207553832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e586b976-1445-4956-8ada-26645c9fc973",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1c0f4b-660c-402f-bb79-e166b4efb9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0c36a0-fca5-403c-a230-6f9aca8fad20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22cec8b-0b77-44d0-8fb8-c10b93bf6fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71b18db4-0247-468f-a2df-57c1209fa325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6f42be-1c7f-461c-87bd-dca17f15dc3c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10515bc-a3c5-4d55-95c0-6571822e535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b167c042-8608-436b-a7f3-52ba3dc7672c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cedad9-afc9-48d5-b64d-b375708ef19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab3a10e-6791-48b0-a491-20c3c9bbd4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83173d63-d57b-43fb-b46b-02c7cd8306de",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182312c7-42a1-476d-bd17-0030c703cedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb3d60fd-aa1f-4465-b410-358d5753e309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aac689-ef92-4297-84a1-0c57b24bfc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6c9f24-2774-4b7c-a672-349837c1ede2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b83975-ff46-47ff-9cea-cdb8b1064eae",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473527a7-ffaf-45f4-bf83-8c6214b08474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8852b245-502e-46a7-b35d-b15c2a91ef8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d983301-d9ee-45ee-83c0-e403d8facb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42c3666d-6e41-409c-8474-e2f92ca40242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d5863f-8a29-4f8f-8566-1d17251d7073",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10961e75-39c7-4f05-8e48-d2b3446e0c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd419bdf-f9e1-4bc1-b630-e104f513ee40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb05610-9450-4e5d-a1fc-df6deafc1212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "31a60534-1b26-4334-ae67-3adbfdc11429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7558ce-10f0-4c36-a2a7-edfb3cafe277",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3df3a36-9ef8-4d84-bb60-3df37e216b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09400b7-40e1-491b-a3ee-6bf205fd43a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64313105-fedb-45e2-940a-7c0be996d840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bbf873-fb86-40e4-b8a8-25a168647711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21625788-75ee-494a-918d-e6fec56a0346",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fcf120-fe79-4772-986c-d769ca0ae1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6b954f-948d-4521-acce-1b0147192aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fcf831-d0fe-44d1-805c-9092a683638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d95ba6d-c11d-4608-b376-4f74a3e62b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb76aeef-a9e8-4172-84de-2be397ed0c96",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807438d6-f4e6-4d97-9357-20ec596b8513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e139b8-60f9-40cc-b7af-b80422fe528e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8b3ff0-c325-471d-9754-0cc3bffc7908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae168ec9-cde6-44bb-9052-b95aa595f665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d912b96-89a8-4201-ba8d-0220e375dd88",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04d90bf-8672-438a-a21d-94e18f06840c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a69330-9585-4f35-820c-6b1ab1a3c023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e635a991-9593-4f2d-ba67-6a77eb736f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "681c8ec5-1db9-4cc1-a58b-cf139c7cf529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b321f4b-83c6-40a6-95c5-f42137514829",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3397a13-30c3-43a7-ae2c-dccd793c03ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e632d4-66fb-42bd-bf24-85a581717ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6c7d01-95d7-4c2f-9477-1f0d2dc57851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "55377eb1-5964-4f6b-abd2-888a98785dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b410e785-cccb-4b22-ae9a-4be366917199",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d7de44-6e65-44c1-b971-7375bbd44291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfa3604-d75c-4076-a0ac-e2665d313551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc75f9f-1da3-4474-9b1d-0197c88d2395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "11c70baf-de3b-4d79-9f5c-8334c0fc5833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4362a6-e12c-4a8a-a2a9-9301d7a6ead4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e775d241-834b-48dd-82c7-4f79dc94a137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503528b2-3338-4d26-890c-da2102274d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38508473-6142-430b-965f-5ece91c1cb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2a4a29-dd78-4ba7-a4da-96e77b947336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63276d07-9d80-4491-95a2-84c0cd5327d0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015c48ff-4e36-451e-8534-ffd2744358bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37243e8-82ab-42d8-bdd5-79b11601c6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea15611-03d7-4557-bba4-3b8fa037d51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "541cf499-5a3b-4aea-8c12-ee74fcc1add5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df7cd2f-086f-4838-827a-a32c865361e3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7690c7da-cb7d-41a7-ab70-c0c9382eabcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71608624-b437-4a61-994b-fab3f4ce11d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31df5b4-55b3-4558-8032-a9a297a5552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12116a83-dc1b-4931-b439-47dcc8654f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47a80b6-31d1-4cc4-88fa-d23162147dbd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c3ef6a-606d-4ffe-a91f-844ff6c0e917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7faec733-6435-4abb-b6ee-a1a6565e5b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0268ee63-a835-438f-950d-69ae5af3248d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a13d2c0f-94bc-4e5a-9e59-3b36a5c40d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257f2f79-9131-4c0b-941e-fea009caa873",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ffedec-8141-4ce3-af9a-8a0c93e1dc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2845bee-ced1-43bc-94a2-0001b775ae1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b65870-f0ed-4b29-95b6-e321a56720c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4def96-76c9-45ff-bb8d-76da1ec390c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d505db01-c1f3-4c41-b662-9a906b022055",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815a2622-ed38-4569-a118-3f7b1ecbf863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad28a25-d380-4e3f-a083-a1082f8a70ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b8a5a4-9baf-4b8c-8cde-3ef4cb72fddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a735b6b4-76eb-40e7-b0e6-70ee074890a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25ace80-0f26-40f2-8ace-75eb351f71fa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2380ded8-f11e-4b2c-a9d7-1328623260f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d5d27c-6af0-4a44-bd52-12b822903144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d29bde3-9272-4604-bf49-6f0afb38d427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f31e573-a8dd-4273-a971-3fe85ec40e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a498c7-36ca-4169-93cc-a7fe9d5ba637",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fc8a43-54bf-4568-a4b5-332d1d9866b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3854287-7296-4d26-8a24-1a9a388427a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262dd644-1c8a-4105-af02-3f84d7f65135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd80993-2289-4539-afaa-d87973a70d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bfc933-194d-45f9-9ec7-325a024c5531",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ebb405-bc81-436c-add5-aa55d05686a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58818e8f-4ca3-4ab6-9f61-7236d8969c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f650834b-917f-435e-b189-a2adc5c701fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93544831-a4a3-4a70-80bf-93050ed8b616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5362c5a2-b9bd-4cbd-bcd6-ad11fab84987",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf47dc5d-8fc0-4710-9bd4-2974c78cf5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371ec0d1-df07-4ace-b3d0-b01257245a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad334af5-32fb-4194-a632-cf0fb694cd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa021e60-7003-41a7-9c4d-5c7b2d0955ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38c6beb-86de-4f1b-a3c7-828c5fabe490",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65d3423-a826-41bc-8346-2096d83b4746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414b6023-abb4-42f3-9e8f-83573d74a911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b0a453-af4e-4e8a-9710-663463c7b39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9e6f4d-2928-4172-9459-8507dc49ea93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aace432-dcc8-4732-a3af-661d2bb39743",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a914af9-5446-475a-986a-9656d297d360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c006e2-a91c-40b7-b84a-12b16fe6fb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89beeb09-f427-4abc-bcfe-c7ce09199b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3f29c5ab-9867-418b-a168-85232ccee9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1ae91d-2a6f-404f-a998-aa71ec0be015",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad30c1b-f3e4-4bdc-b32d-1cc0286bfd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb96b70-e11d-4f9f-a59e-f709be4a4a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ba60a4-8095-4e5c-baed-1211c5dc4cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "66a3b7b1-3da2-4840-9e18-fc55a1c4fb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3079dd-ddfe-4377-a9f0-c272bbd332b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baea6c20-203a-465c-9c8e-6bfcb58ec56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bd5c2f-51cd-49bf-a72c-88e0c659bdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cea9797-c960-4734-9ae8-1c0a824c3c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e648122-a7e9-4107-9bcf-8808635164fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fb0308-7db2-4221-86ef-078a553d8e77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0118889-efbd-4411-935e-b683c919fe19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2563dc84-3da2-44ef-a3ff-77a0d1bf6115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e508c724-72e8-4b49-a3ae-0df58ab5ca37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc119df7-68ff-4ff2-9d8b-2c381bd5556d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df962007-e3a7-47d2-a692-73f56ebc9a03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afcd532-5c0f-4e95-aa96-ec1043cc7df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7322970-536e-4183-8ed5-a6b1f2731952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db92cd7b-01d5-442c-adf3-9f36aca7733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "343a4ba2-992d-4720-b689-6953930589cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2ac278-2c55-4773-af0c-ce785ff6fcbd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac5bb67-15b6-4b3d-902c-a397b99eed96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861720df-2305-43bd-8c4a-1c6bd2f92229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc873eb8-19e8-4a6f-9462-1ad9531333ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "144888e5-a048-4aea-9e19-d5bd31d46af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae619360-02c8-440b-8502-340f6e1aef06",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d232d3-5f66-49dd-92cb-247f4c78c941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c107d6-f36d-4b2f-b9e4-8333b8052c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d273499a-e5ad-4463-a82a-e9f6308458af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1982eac4-0d4b-48cc-85b8-853b8905912a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9fc5b3-ffdb-4f7c-aa8e-88a01f45830d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0379395f-d3d4-4159-a5c4-e5ae7e7c9ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c85e3bc-5dc6-4ce8-8721-f1ed5cf13ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768fcddc-3c61-4200-b78c-b489bc732787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec5eb82-38c5-4a19-9fda-6417d3580b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696a06e1-9628-4436-96d7-a8c4833914cb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243184c8-9c64-46de-a3f5-0435b41fab4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c24cad1-ee6e-45fc-aa51-ab2e0ac56447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df39b313-f084-467b-8791-6aca0d9e281c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9318a72e-4b26-4cef-8669-8e4e228d8296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4e2dfe-6a4a-4b24-bed9-2b081213cdf2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4b01b5-34ae-427f-82ad-59f795627d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d028707c-ba31-4a0b-96e4-38ea113e1350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b755e4dd-d077-4c7e-b8d9-2a78e7cbae15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5261da5f-2102-4a8b-8d6f-40bf2a18a6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a7022a-8a72-48c1-a136-2629689cde09",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a59a8a-2b15-4a55-afa3-80f07ba0a787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c321e3d9-c23f-41d2-aa0f-313692a57ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecb6c1a-df6b-4572-b469-5929e27b854a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfa38bf-229c-4bc4-9d15-36b82a1a2bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072316b9-151a-4e54-9e98-61e6f1e38667",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51addee3-d927-4a39-80eb-b0dcee214cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d433ad-44f3-447b-a2bc-fc8a598cc549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb71902f-967f-4d1a-872e-a868664f0249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc229e6-383d-4e3b-b1b9-c60d10e5b5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839517ff-ca91-46de-9361-e4e83b43f6ff",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c2c7f2-1180-4862-9077-0fbbf0d06f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c950675-05bc-4018-9457-76cb01b5cf5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edc5cc8-f333-434e-916e-86c95f613b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c5e48f-de26-4160-a073-b72ec783bf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a112eaa6-6e43-4561-9535-4b57a614e5ea",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cc999a-d97d-43f6-a5c1-30a129e321fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5789714d-174a-46a9-b545-061eab82e657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0067fd49-1654-4a76-91a9-2b7f14f3a67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1970e746-09da-4484-8294-b00a8df29eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1ed489-acb9-4a10-9142-5aa2a68408a4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e46b987-03eb-4567-a528-89a15aec4c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2cb1ce-270c-45bd-9a4c-7704ebaa4e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fa6dbf-64a4-4d22-a12d-ccb517ed9a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "341c2587-3c84-4e97-b601-b19d3d95e87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6beed0c-9ddb-4e36-9aa3-dd321313b41a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814c5a47-3656-4ea0-b1fb-36eb555b5cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445288a7-ca69-4dbe-98e5-1f1bf3c552f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bf9c0f-a89d-41ed-9659-7f0b62fc0c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef07bff-75de-4143-aabb-c3544461f233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e8abc1-036d-48c5-a3b6-6c7b5075e40e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b73b060-a7ba-4e25-9dca-6178a7c65f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d7391b-aa59-48d0-9161-9e79e2d951a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdfe528-5215-4a07-9a97-53ba4dc775cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4207e05b-ba15-473b-9dce-7805010a9e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7b1e09-d367-4aed-83e3-4ccea46b79fb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ec82c9-e7d7-4cb2-b91f-eb61859081e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5ae37a-0b7e-4fd7-bc07-9b6e6b34a559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1368c7ea-ffa9-46c4-bf17-09e0eb3c0692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb26204-b051-4951-8f48-2814722962f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e649dc0-4838-4e56-90c8-d30874a02ec0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1aa591-229d-4ad3-8c30-2af49cafb1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a478e04-68a5-42ba-be22-fde8c79d0247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7752aa6-8885-44d1-bbea-318177dbd941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31d74e24-ecfa-4dce-882c-853e5722530d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1fb711-63e6-460a-ab34-315242548572",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd467ebb-65ed-4e02-9057-b6bf84ad8d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084602df-1700-4e18-b469-aef09295b5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc9eb0e-4fac-43ff-86d8-6bf3ac26c324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc61d95-341d-4acd-a4a8-37b998086d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db64da0-990c-4e79-a783-224d1c27d2eb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784c4ebb-b6e1-4392-88f3-5856c6956317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4471156c-7633-45ce-a672-cb82f65c42ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea2d9b4-0741-41d4-bd47-db733346ae85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87e02cf2-9449-4cc3-a612-11aa557cbd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9b7415-3cfc-4e92-8d2b-4d4981694e53",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91182ad3-73c9-4e9a-b2ab-fff080bc1d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cbfa83-582f-4163-b24c-2672027812a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4915219f-d47a-4f1e-9900-7fc4f50c672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d91da4b9-41ee-4b11-8a56-5b577e7b7f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e029c6-a16a-4ba5-8a30-6b02faca0119",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4363d5-e3da-4553-b805-d53c9f82d757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7300fa0c-7074-4f27-8ec9-887d09f477de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1244d375-afb4-4ec7-a668-ca4ca62718dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e54c7daa-d330-4e55-8e0a-efabef3405ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df463433-c573-4ff2-b747-92911d98382c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149eb1c8-9959-4374-a5fb-ad1446f37191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b1c50b-fd73-43b9-95c6-eebde68b1256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4008d3-7362-4e92-a194-63483c326ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8826b9c0-73b2-40a4-a993-eb22d83a085a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b6951b-33d6-4dc0-9477-39f77952f83d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba6d7b2-9abc-42de-a08d-7a3330218722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b450b2-aaaa-4f9d-8590-815c5395d316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e26584-1a30-4dfa-afb3-12710a3db303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1e0f6a-ddf1-4e2a-a9f9-fdfc0aaf7be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed08a84-4a0c-4ef3-bc67-a9129043d74e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ad4c61-3601-45ee-aee5-200cac31cb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f5076f-178d-4af9-9b7b-8583a53c6752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ec7c81-3209-4f39-8aa9-8ef98174db5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "649e7a84-556d-45bf-a255-b6b5f14101b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9ecd9b-f5da-4a17-ab90-ba4fcbc703aa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b588a706-b8cd-45e6-9261-fcb0d8184278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784bb006-0063-4aeb-adf2-d6c9828611c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ad2e2f-8217-4dee-a3d1-b9f20197785c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9db46ab-6ecc-452b-8b0f-0a2cded30ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b7c197-cc9d-4cbe-b2de-31d634d9ff93",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300621a4-b3c1-4262-8b21-125720076fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e03ab2d-7402-41ad-8724-75a46276d38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96ebc15-1a2e-47a1-b26b-37c7762483d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da14a4a5-9d52-4a48-8e47-62d2acc177db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f6f123-49c0-4dfb-b4a8-567cdfca239e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea21865-3f54-4a4a-a396-692fca72f3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03c5313-d6b9-4774-be89-893116b322e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4ddcbe-24a2-44bb-9b0e-cce936f69576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "823b9e97-4408-4b48-84ea-5503b62c958f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf76b835-e17e-43c6-963f-67862916f81a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae0a4fe-2f0f-42ce-bf25-e7376f3ced3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011664bc-e38a-4f05-84da-b510c98c69c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4d2c76-fa16-43bb-9a0b-20a31b190769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88dba8fb-445f-4df7-98d9-f7dd6ab889c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058f799a-ed2e-4ef8-aaf6-88937bd4bc24",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c406e27a-7bf9-4b31-a509-2e7f7300dd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636a51d5-a043-4d9b-a390-96748b52210c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54c70f1-a4bb-411f-af86-082ef189a3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb294f4-5f90-4875-a067-f6d6c812baa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f875860-0fb1-4914-a2fb-da8f1670ac8f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e5f6e7-d6a8-407a-8919-81038fded329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76aabd1-678e-45db-9ee8-50aa291cbdeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81776728-a845-44b4-992e-dfb891fd8ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab17e96-84aa-456f-98ac-f393e38fa258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9137f3c4-752c-4c95-8188-b1a7a16c7f57",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a79446-a48e-4a23-bbd1-992e2486f878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32332564-96a8-4f29-b522-c010f465ee0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d85e80-01c9-49df-97a0-5ac9a6f807a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "581f0330-97fb-4f35-b787-41f8c0b79196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f04f5af-651a-4938-87ae-a6fc43bc58c2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8cdbee-76c2-4b71-b129-7fe2154038b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72ee168-ba91-4791-bbea-5971ce9931fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5009ab4-61a4-4972-866b-e0e1e15dc933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c6ce16-afcc-4add-9fa5-246b7afef9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3b4817-b4e5-43dd-b37a-2af91c46c1b1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce03215e-6f6c-42b5-9fed-5dbcd97eb61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6f8f34-e2ac-4233-931e-b439db1d3245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7083ed-337a-4f50-ab58-353261c7281e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0eeae46-b8e0-4e8c-8937-5bfdaf85e143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5022d9-a6dd-44f3-8ce1-4530391a49c1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12ff2fd-b380-4cfd-93df-4fce1bafb73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343416b7-19ce-47aa-8b03-d4bf717872b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d59303-01c6-452c-86ae-d1488ac4fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e459470a-72d2-4881-a3dd-9440d4a6f1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d41088-7f6e-4bcb-bce5-27bdc88e5c95",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb67c23-c54c-4dbd-a4e0-495a71a1526d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "548e3d2b-c586-439d-a7a9-fd9648695409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401a0560-5f20-44da-8e58-79aa04bae639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3172dec8-33fa-4f43-8d40-70f0d0f2749a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f726f334-cb35-4e8b-8da0-e36b3ca63956",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0a189bd-cb4b-4295-809a-72cfd6533fc4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d4bf26-b3d8-45bd-8d63-69b25d1f71ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55227c4c-96eb-4cee-9ee5-5dc29b80a9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1219d918-983b-4aa0-a102-15b0dbe528cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc7ed1f1-19aa-476e-b932-34a5b665829a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da71a09b-76e7-4d96-a27d-7c6a0f9a3259",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40c7c92-4a0e-4397-86a3-df63d21fea14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bc9f81f-b6b0-4295-a02f-f88a76504363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456d34d7-6f72-4600-a34a-da85883664e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b80b44a-97fb-430c-89b8-429b62067445"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18c30584-169a-4be2-a205-45a5d864c5ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "707ffc0a-fa71-4774-8644-d40062d8bfa8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15e65a4b-4517-4d21-8843-2434652e3486",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ee8a1ec-51fd-44f7-86d2-4c9dbf9e951d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b902af32-8f0c-4c47-a21c-8dfa8d134164",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "790ca5aa-fbad-4451-a25d-21bb21cf9ddc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca8c1a1b-f8a0-4b60-ac20-b10523cb90e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea4bfa8b-663a-49a1-aab1-76e3fe414151"
                }
              }
            ]
          },
          {
            "id": "e8aa78ba-30e4-4a73-954d-4ead43f08921",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3bbf5b4f-2658-4d85-90e3-908dbcef315e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6baa5a11-8367-470a-a899-b23ea7c1ce6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d86d6e76-e825-46f3-8778-33e3dd660f7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a69f5efc-079f-4e63-b9b0-146b1949a243",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "419f5ae1-51be-4385-beff-40ee67b3c200"
                    }
                  }
                ]
              },
              {
                "id": "492e9174-c581-4fd2-bbc3-64e1971f518a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "809c6ea7-6126-421e-b091-f9a0c00705d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49715fb2-cf3c-4ad3-9f4d-a091cff6f8b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf6870b9-263e-477b-a814-72623f792fdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03833609-57ec-41fc-98bb-862d1f5d29b4"
                    }
                  }
                ]
              },
              {
                "id": "56304261-4ba9-430f-97f6-cf060df0fbc4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e21b3721-a04b-49db-b1bd-4fb3e7597997",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d805ecaf-05fc-48e5-a5fe-34c52d8c0b81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a81992ec-ae60-4a5d-82bd-deebaa43ff24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "abd1677f-b064-4b29-8334-966d3d9f1183"
                    }
                  }
                ]
              },
              {
                "id": "34ff26bb-8f66-4a57-b4b4-178b6483c4df",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d521e8f-deab-430a-9db3-95ae4b454a87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54da422e-25e3-4ddc-b3db-f452b4b4a858"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dd5e8f6-19d9-43c1-a5da-af376326cd02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3cd9584e-affc-4f39-946d-db7f427ac298"
                    }
                  }
                ]
              },
              {
                "id": "f0d70d77-6e3a-415b-be64-3d66d57f158a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "238d8230-38b3-4e77-85df-21f56c97754e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee862d01-58fd-49b3-a16c-b01c8963a9a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89316468-95b7-43f5-bfa5-31aa32ea8e53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "17cba8c4-f792-417e-a8b6-ea0ab16f2196"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a833f2f3-4441-438b-96ff-6b04de3177b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c8eb3a9-5218-407a-946a-06be799f263c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad291f7c-00f8-471a-bc24-bcd53e16d486",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ca56b88-f0e1-43b0-a64e-130c838190aa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0721141f-132e-4012-9fd5-1ae87ee64e88",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a9e3f48d-9355-480d-ac17-d8f0bb6c6d0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7d64e11-7824-4456-9832-9b9ffcf018b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "545ee1c1-f287-480d-9b44-b605413fd5bb"
            }
          }
        ]
      },
      {
        "id": "616db372-69ae-4d28-bdd0-a514e96bac98",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "84d8b581-5dec-4eae-85fa-80ea5beca4a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57ac5b04-1b73-4c83-9270-5f56fa2317ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82ab72a2-c48d-4138-8841-4375742d1617",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe389897-ab77-4135-8291-f35caadc872e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3d4ded-68d5-4993-9edd-95b3462fd6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da022b6f-1763-4d01-a361-1a8548756253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b835e759-c93b-41e3-8307-5f6ac745d4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c0243c-a85d-4144-8374-bef85fa2f4c2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82702c5-a2ad-4683-92ff-c08ceda549cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d889bb-15c9-47e3-a51c-5a3c5f9ec861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62ba752-8616-44d7-84b7-c23d196dc4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0b15d1-d194-45fc-a61b-fff2921166d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e434fd93-f46b-4140-84a3-f146969f38e2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af23f65-68eb-45b2-831d-5ce34f4db0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0757c6-904f-4d13-915f-fba20cd05f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5421375-650c-467a-83f3-6917672e6cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0557a014-5e5d-499e-afec-4fb82c17a279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1bf776-8c0a-4fb1-abb0-6482c702aaa8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f20aa67-6ec7-443c-912d-df496f702335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed5ac88-b66c-41f7-9209-0f3451bf7055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27000492-b21f-4b8f-8b4e-2935c1e5eb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22b134f-2db4-4d6f-aa49-73834024e7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b1b3c9-0b99-4926-b251-f0bbb2d7e1d3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781c934b-e3e2-4107-9aa0-4bb3d4cd3b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201b39d4-3ecc-42b5-920e-54dd2c18666c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d5f2c8-d44a-4b92-9a84-11b976fd2dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef850de0-8216-4c6b-a0f3-0c82d5190ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad74786-fa65-4179-a981-c70d0d7a6817",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de1fe6d-0f3c-4f2e-b4ed-bffd201f367a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d766fe26-f5e5-4c29-9230-044250a71514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2804a0a9-179e-4824-be3d-f17291fa9ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa379e5-f951-49c5-8c28-2ec5f2f93c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3599d1f-83c8-4a8a-a936-a83883156f03",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fa142e-dc04-4d89-9b5e-62d48604c65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdc2da5-20fd-47c1-89ea-87eb301bdec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5dfb46-bac6-4ec1-9221-7b36a20099f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f49e690-3116-4e8b-a762-ac9f2aa5a43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cece325c-c2fb-41df-924d-54b4ea5f8558",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7ddbf9-ef60-48e0-9bf6-3ad93930ed97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e5e2f7-aa42-461b-8ed1-b8a20a1d5880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e07256-c554-45a2-862a-786b74f12a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a75a9eed-8aea-4047-a4e4-1fecaaf3a06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f3c6c5-e3b2-44b3-803f-5f42ab75428f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559be3e5-b87c-412e-ba0c-6472254cbf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1839c18b-3ea3-4a4d-98f0-c0290f3681cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaae9cf-3c04-4938-845c-cf7301a0293b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7768f60d-3f54-4cac-93b6-b71ea82db21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c009e9c6-2f94-415f-8101-d51a6a9a84dc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd24d489-3b7e-48ef-af37-e9860eb445d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719b5b6c-35c2-4736-b43d-b7e4d40cf2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c488f55a-bd60-4189-8cfd-b36d241680d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12365a50-493c-47ab-bf8d-4c13b65f324c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5669560f-66f1-4564-83d7-1f21da5f7e06",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddfa987-f993-4e9d-a5d2-e873d84a1559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9700cc7b-576b-4641-859c-3742661ef882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452899c3-1bc0-4510-90bd-ecc05c4b2727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2126d9a1-dd62-4417-854a-aa25a25973a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a05698d-0f01-4f50-a3a8-aaa53fe66c2c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b723d8b3-4ab7-4e83-b40b-e0391c7518af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fc7f7a-fcfd-4df1-ba5e-9632c75e1a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2615d3a6-e29a-4aa8-b021-4856ee5b4b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb5c593-749c-468e-908e-47f456b220ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9971dabf-10df-4a87-a31d-a1bdef2d726e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4aa6bd-6898-4b9a-a7dd-239944ac70cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde811d8-cec0-4537-a42e-0689e23025ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71873329-3964-4354-bc5b-efa96c872ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bddca03-b45f-4443-b08e-0ba775351fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd806bdf-1a6a-4ee7-ae9c-d8ad3e97f452",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a526f6a8-0749-4f5e-9393-f4435356da74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6bfa9f-49ba-4e92-8125-45074515290a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41499cf-4282-4e01-97ea-97cc82606b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "de3ffe78-ee21-4937-be5a-7e3d7b21e37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd72687-fcb0-41df-b3ae-df05da3b98bb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdac339b-8d06-48f3-adb3-d9553fae3154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140aefd6-066a-461b-875b-b55439c1861f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a9f6a1-c74b-40a8-8b6a-f585e3844ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2330a4-8dde-4608-80d1-75d4d354ae75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c4182d-a22c-400b-88fe-d091105822e1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a30edf9-02ee-415c-93cd-a3d5bf9c4a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b75593-114f-439d-a0b0-e072bf226300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffafd74f-6ac8-4ce7-a616-20138e0db95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "41afe5e4-69e7-4a5b-bb70-7560e4e280cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fed403-bbd4-41bc-83bb-404fc9a06863",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342fe47f-8558-4134-9e13-47c80153b503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a786e2-9ada-4346-8592-227fc17a9610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8317aebd-c555-4b03-9d86-a5c5a6f331f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d5f87c-f4d3-49f8-b3fa-5a6b5fd7d5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4126a165-b334-459c-8558-f2886a5aef70",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b02830-d5a1-4667-9593-6cfc3abf1b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8811d6e-4853-44a0-b47d-bf7a23b355dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e762e3d-790c-48cd-ba33-431d86e47015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a8c733-2c0f-4d8c-97c7-492947656c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12440ab1-f83c-425e-9567-b751c36236e7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f782bef-0b96-4274-9f3a-b2a9d6c71b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36659310-3f1b-4db0-a543-afd2e24100d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da6d1f5-1e25-42ae-8f8a-81a724ec86cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "072d006b-7429-4ad0-a6d2-91d325f8694a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb0f713-e355-4a20-9850-3ac8c946feee",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f88c088-a364-45aa-b4b8-dd1dcee15752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f7d476-a3e6-4b19-850d-70b16f3cbc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56367e3e-8fb5-44b6-ab07-6e550f9d2485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be394f5f-5550-4582-8901-98287c37d908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9fbef9-ff2a-49cb-b0a7-5b6222e95eb1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ea0e75-94d9-47d2-8ec1-a98907dccac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d038121-a8ea-4f6f-aba2-821f56f7df02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de7e017-a547-4a44-b0f5-4d805c138148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8ed518-51bb-45c2-95ee-529bd75de040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0665c1c-d226-498d-a3d7-f03b07c07aa1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec16d99b-cb86-48b5-b526-11f2081bcb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c0877a-efc2-4f3f-96af-259004477a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06cc12a-e845-4fce-b98c-1e74f90bc65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f64e2d1-e261-42da-aeb6-2d6db408e2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8caf5a-87e7-42b5-a03b-12f4ae64c611",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbef4933-0842-49a6-8bfb-0743a600bb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d21932-3e8b-430a-adbb-f2bbf98f59cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ca281f-dc1b-4640-bff6-df22cb22b38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d25fe4a6-e841-48db-8d94-3fd621436419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d325fb21-34fb-4b17-a209-d492df517786",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeca1467-3f62-4610-a39b-0dafff5951ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33c324c-5e30-4c19-9d8c-45d140b50233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c40d1b-95df-4043-a8a8-04884c14a7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f759c3-6557-4c66-a519-35f95c80bf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12546c5b-9675-4ce5-b10a-b81b4e414fbf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b418013d-77f9-46b1-9a97-00d223a97218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432c8d96-6a21-4484-87ae-dacc524e2ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b588c551-98c4-4754-a8c2-73fcc16cadfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acef100f-8dfb-41c9-9156-1dda1057768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37073aae-c118-457f-8622-09d1147c4f98",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7683b23a-c300-4b6f-90b1-71d4a5e7fa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd4622c-4edd-450a-8d9d-6ace73dbbc07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a27cb6-1ac2-4cba-998c-eb6b59d7e27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1587d5c1-83d3-4c5f-baff-7573cfa0e4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a83cc64-8405-4648-a15f-b1d157081e93",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d6bf7a-324c-43e9-8bd7-e490accf20a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d56e65-77d7-4361-82fd-66d0a83fbe19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1886e903-deea-4100-b353-c3dc0b59139a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6514a9b0-edf1-473c-80fa-9134152fe764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b443b69f-c442-4cdc-a91e-6c9022132fe2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac371dd-a229-4d6e-9610-e1dd345f8eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc09de8-ae5f-48a3-94d5-ca9058d780c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acabc79-8c72-4136-8bb2-254f25b15a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e536c9f-1109-4139-9c50-1488abe5fcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a72da67-1eb7-4b78-9da2-d284f7ce1591",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8f885e-d8e0-4861-bfda-ce99bd943bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa8d1d1-c635-405b-b3e1-ca88168ad296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5626f458-811d-4553-98ca-c3dcb587a398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b5440b-3897-4a66-ad5c-70a0a6234eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656af418-d9f2-4b0f-8d1d-f24d8e707337",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f435cbef-106e-4d45-ae6d-69c48bf67ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a6b64a-0c4f-4201-8a3d-2405fe5f4cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bc178c-2a7f-4b97-868e-fd51ba74f143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "836eaa8c-b3f6-450b-b908-c2e9a7354db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9acb5ed-b064-46cf-bd0a-882081cd8188",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203a6ec0-9ab3-427c-8957-b6c1e0128fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c59bf25-dd98-400d-9055-ad6474882dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0f6be0-dcf4-474c-8e70-b29a8db2ac0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc49b5b-d9d9-432c-8469-32c4e06d014e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014975a9-479b-4a14-8282-17bd27a4b4c1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cf0fed-d1a2-4a97-ba52-ff2101991e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce59156-4e3b-4eb2-8478-b81a9139e199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac2564c-d345-4dd3-bb56-b4321f055f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e24e960-61b5-434c-bd09-0f14cd2af9e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "59820378-c83d-42a3-a91e-486f67d69150",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ffbcf86-5ea4-46dd-bea4-493e746eca0b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc8a92f-d04d-4fc9-807b-e38453eb4eb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d13ace2a-0faa-499e-89c2-fe0d5a92a6a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093f7dfc-fb41-4093-a766-af0e73815e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c17f55b-fe1f-4a76-99a8-bbb946a9dc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1b1038-71a4-4c03-bcbe-757c01064caa",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3bed2a-0473-457a-aafd-30f62b460c60",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c43dc555-6749-4d32-b8c5-216f668666d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6714f762-5f4a-49d4-98a8-f57cd8b5fee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "504b17f8-311f-4c77-a6ea-1dd075f58d02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3893f34-c833-4375-9853-2760da4e0561",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5de1e54b-931f-41fa-a267-da08bbf23908"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0146274b-67aa-4a17-a1af-69a5ab9c75a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "930aa6dd-efea-4cd6-bbdb-8990063decec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea7d3471-cfed-4a45-bffe-8771fdf0cd0a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f7ddf0e-89e6-472d-ac91-c6f4d41c8763"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6587213-f9bf-4643-9d91-fa799ad4bda3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cccbbaab-4fcf-4b65-ab3b-b6da9699dbd9"
            }
          }
        ]
      },
      {
        "id": "2391b538-7964-4845-a57c-cb8162a7e3a2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e255b75c-6794-44bd-98d8-eb8b1442d7db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3ec3381-d583-473a-b245-d4ad797119eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc7f990e-0266-4f58-8ce4-5b4096874c7d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db302502-b7ca-43ca-a837-fc5cd38f44c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf935c1-ff48-413b-af04-289bd06e5aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e51fda-cf8c-444f-982e-60347400d425",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687e0d8b-9cd1-446d-98ec-c281d7724282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f9fd54-a93c-4a64-822d-bb50b33dd95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9d678c-332b-4740-b5fd-0ded3608a48b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc3479d-ac87-4833-8fc1-574fde0395a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddc5ccc-9917-401a-92bf-645fb1c54ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d97912-481c-4efe-9496-6e20a53745af",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f54db41-4b6c-4084-8081-f1ef8bc1ba22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a7e4d4-70a5-40a8-98cd-56c77757d89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd9c9c0-9e17-46b8-ac06-c990581014af",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0e6fb8-debe-4c67-af33-f1bbc2a5d352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6021b859-b4ba-4349-bf74-d542754f93c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6e8e5b-a63c-4152-91a6-4d31e909e710",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3786ad1b-f4e2-4521-93e1-45b4d8874a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84800f5-e827-47f3-a3cd-ab0d27d92b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c840f3c-16fc-4b06-a847-ca6b1d6225d4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417e5861-ff6a-41b7-8623-40b438e54ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14675003-c167-4abd-8603-93c21b84f4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3734174-1539-452d-b974-6bdc320c839c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf5df8f-1da8-4f2c-a454-6a8720990a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b7ed6f-2ea6-46cb-b562-d0f4be4e81c4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c736e466-5462-4349-b705-1d6d629a2ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb93f1b-7795-47f7-8451-180daf51502f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffb99b0-1f67-4612-a816-d7574ca3b638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056c5d39-f066-4167-aae9-7ba6beeb5950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8796af8e-1af9-47f9-aa73-26c2453512b1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3ee100-524f-40c9-b4c5-19ca930aed87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6561203-9be1-4186-b1f5-ed105bfd2756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eab3d12-18d5-4bca-9e06-271254f12129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622f3d30-a5d6-49f9-be8e-67cc81b15ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79e0ac3-ef1f-45f3-8716-29d7fd9bf5c7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628d6324-d720-4c66-a120-74ffc05f2081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b365445a-3c57-4c7f-bd15-d7163da8174c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26df4251-8c90-4139-8584-d56b4bb31ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2714ff-3c83-453f-aea2-cb7dd0d6811a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7198216f-76f7-4481-a979-8e4d9763f530",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c2d153-0e3b-48a8-b610-4274c1d715e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27704f88-7888-40cf-8390-e35428edc14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d4f286-5296-454f-9ffd-949d3aa184c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c6c209-51fc-441d-921c-fcf4d2a92d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c2ccda-d217-4adf-ba07-7a36168d509e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9adb302-87be-4eae-aee8-00e99f7cc28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f782719d-71d9-45e5-a17e-43fce26d3b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8df771e-82d3-43e8-bc81-4131fc40a1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2494e879-0fb6-4fd9-8771-e3f90aaa7c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc1023d-c6a5-450e-abd9-e5da3cafab82",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38147a74-8c73-45bd-8e08-5ce787825039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18e5975-dfd3-4f72-bd3a-4cb89a2396c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9445afa0-40c2-4afa-b211-d5eed1351fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f4a4e6-ad01-4d83-9cf2-a8fbe3bdb2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a54474-0065-4c3f-8cdc-dbdc6e362315",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d3b02c-3dcf-4d73-a4c4-c9cb4df07329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da88d8fb-8132-4156-9ffc-09f1b288c577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a94287-6a5f-4b82-b403-de1485e5cee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873c7ab9-3a04-4b83-843d-e413c8a159d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e63f1dc-fd91-470c-9bae-32794a2bb16c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad928138-f0c5-42dc-a4fa-9fb8090b7037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51fbc9c5-d3e2-48f4-a13f-0189a1189228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632b1121-5bdf-4584-9b5b-2e0507b8e359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4262f7a3-e8c9-4a85-8f2f-6fe0da71ddc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db405f5b-46ad-439d-91d7-53bcde9dd739",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c27413-3af6-4bd0-9986-b4725e3d298c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22fcc547-56ad-4015-b5ec-38b5cf89272b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64a2e5c-6ba2-459e-be34-54fa19db8e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855131e1-2eda-4182-a955-0d6a020cd5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee6b4af-736f-446a-87a4-97a15ed701a8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4d7f32-3cb6-4bfc-b2a3-5cb22745d493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fc37a0-3f52-4229-bc98-79bcce929e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa1fabd-8908-4e21-96bd-30b8b5f69ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86eb07b2-b5d1-4f24-8676-25b6e3017594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f4c76a-6603-459b-b864-9e5d5ce17fc8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b79f26a-a74d-43bb-9e07-edd7790459d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd7017c-48c0-4b93-929a-1f035766ab9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6428cdc-56f8-4af0-b49b-3b2e21b29ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752727fe-b8b4-412d-b9ba-066bbcf3a88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cc0c19-21ea-4b28-bc75-f361e5a5d32e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da42b581-617a-458a-b107-76afd90c3a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593a0dc3-1660-46be-b9be-a794856746a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56b551a-e20f-4ae7-b1ba-446395cbea47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c31e82-2deb-4753-b31b-9cdcd4482cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27683f6c-c662-490a-9c06-1d3c7a16fc8d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292ac3bb-48b0-4af1-a89a-c7c2879aa4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd0ddbf-c274-4c85-9df5-64fc2e683618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b193d631-cbfa-4880-b265-ddb8848586ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164bee2b-ef3f-45d6-a74d-6ae8e65dba39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16256035-dc88-4aa9-b336-ebb833c62fba",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78210dc-b36c-45c3-b964-794689ed8767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f13568-49b9-44e4-9a4d-caa5b9aaa0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1854ce-a234-4e97-a882-9d17f970c70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7df1139-99d5-4871-bcaf-bc5408d39305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80565cf-749f-4fd6-9c3d-79f6e5dca6da",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f21a42b-4edf-4a37-b30d-8b8021ffeebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e3b1e8-dc38-4ed6-861a-04d248ba3cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b4e93d-235e-4c23-9fb2-31d298778815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d857d4db-76c1-4733-91c9-7800751f4b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2866a872-471d-46c4-8bab-227fa6abdeb5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a207f61-eeeb-4e62-af41-d06d563ec7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e6ce4c-51eb-414a-b7c1-2122e6598048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d48df0f-d0fa-4d68-9ad4-e3ce51e9b0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6049f232-7827-43f2-a669-f2e6bb2c51ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233e7f1e-e88c-48cd-aab1-e2647d4f10c5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd85e2d-ae9b-4643-a441-ec40876476c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e810489f-4e12-4fd2-b291-7f0c9065d2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e0fa26-8d67-444e-8b8e-39fbaaedffec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491e7582-a7fb-498f-a5d9-fda1c65f6879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f59fa62-b9fd-49be-9347-040097afc20f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a5048b-ad1e-49e4-811c-bdb700374fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "513b22c3-5bd0-478f-99f6-70e71471cd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ec63e3-93e5-4c55-9cdd-ff30def8f21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a395304-5063-4854-906d-2b30c729fe65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7598153-d62d-4965-ace0-f4130d251e7f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9481074-94a1-45df-89a7-e759b85ec137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5388722a-b455-463e-8947-480f65ab2d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597836f9-36d1-4630-b30e-42215b68bc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126a6aae-0b5a-47ca-a946-ef8ad7a0f482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d993054-d8dd-49ef-a35c-10a7867856aa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ede4cb-5b06-4af4-b9d3-885371053a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46582489-83b0-4dfd-b1d7-06b92882e199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd430f1-5919-48be-a501-af6000d9d143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0990ab8f-3613-4244-920f-d24203e01301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5ee73f-516a-4ff7-949b-5115be117c25",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86973949-adb6-4159-8177-9e4905df4af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2554442f-306d-460f-89da-29005727ff0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e070c761-3e8f-4c83-9dd4-8f96655857c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52318918-0819-4199-be52-8fc8d1913316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf73514-ff6e-45cc-bd0a-48d4ca46d7ae",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6e234d-da3a-40cc-8f9a-aa1a13e25e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f791009f-97fe-42e7-84fe-ee0ce89795c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e7bbeb-fd16-46b4-8cfa-c025163e89a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3c491e-ceb5-4d89-9bf2-b4e9877f1c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd64632-3142-495c-b3b5-a96016b66fed",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16267380-9829-4817-ab72-d1552d00b514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec061da-5050-4a77-bb5e-6581e8d42f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53bfcd7-90c1-4cab-a57e-5fbdb540ae69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055cb4bb-06b5-4b95-baee-f1bc83c9213a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a72f9bb-ec1f-4dda-a2e3-3cafb3584369",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662199f9-c5a7-45b3-846e-963740349d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d25248-c093-47c1-874f-45b298e47bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a190da2-8e53-405b-a48e-cc2af4e64177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6830523f-4a8d-49ae-8de7-66dd0098b5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d810ca33-6177-4c9a-9530-856c7a20de5a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777dde13-5719-40e8-a216-c3ecdb65f1ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cff7d6b-6a5a-4af6-8ffa-7a6cd537eab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a010f5-c512-49f4-a43c-3fa22195e8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b949438d-0ca3-4276-b454-18c97cb7b3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313a9f44-2df1-4562-91e0-8749747368cd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdfbaae-d9b6-417c-b4fe-c84e7bf561e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5286833-5f70-41fd-a37d-09a8e697c207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ed1bdb-df3a-479a-acc1-f7b5320516af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f665300b-3fb6-4257-81a4-09da71743f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52dfee9-9d44-4c1f-912f-9eedebf29e02",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33518a0a-8979-4fd5-bc26-2350d1ced6c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f052e06c-7d91-4947-99ff-d8da818d0790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1d9d28-43f8-4bcd-b3bb-ed024153cb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20a592d-9994-4bad-8b95-4a290481e221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c562c8c-64fe-438f-a405-1d4e3c80371a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f9c6d5-fd2a-4067-bcc0-bba1325c3c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb81c4f-9d57-434c-a906-b47de9e37606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cac992-cd06-41d6-bee0-8a025d8d3bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f366eb-1408-4c10-895c-40c8de2c944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7733e47e-81f8-411b-b03d-6716812da7ab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b559080-9149-4370-a083-89537d676953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1334974-6afb-4cd3-b401-00e3cf00a5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ac86d3-2bbc-4069-a1a1-e87d800698a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec17ae8-4f24-4f6d-a210-1e3578e91091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f81a263-0eac-4d93-aff6-a99b21ab10c1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70cc5c2-c60c-4dca-981e-2c246dc25bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b118633-c28b-4764-8937-e7ca05158478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec5fd36-0dc5-4fb3-baac-0b4b19eef8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c73894-4444-427a-8cbf-0158877cf307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e409eac-799d-4f99-a24c-b43b11d6aedf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6566b867-799e-468d-9d14-d0d41bf60bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3049c025-63e6-4b33-b4ea-4c3308dd582d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfdc82e-7ca6-4a58-bf47-5e0b4126fb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dd9799-7bb4-4972-b35e-8f0b7292cf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5fa6bf-c6e1-4787-90c2-ec1f73b4d323",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc95e06-36e0-47b7-b484-ea4d3e52fcd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0bd135-87b6-484f-88f8-f7b3380bbeb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd0620a-2df1-4af8-8ce2-bdcd6d98da23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d004c3-04ec-464b-a7ba-698616e0ebf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8370f0-15ac-46db-b6d1-5eb2c6641fa7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9416ff5a-40a7-4608-bb01-4f4ea75a78a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa59802-fe76-488f-9967-fff581a1efa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a697ead-afba-4c56-b2a5-fab2b366c263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177de20b-7ea8-49ca-a1e3-648e1019cdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe76087-7bfe-458a-b26f-10518378be4b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181331ef-c0c3-4368-9fa2-a69813355c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5369d5-44e9-4b11-86a0-509e00c2c27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ada02f-10fb-4974-831d-4a109496bda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc981276-9e78-4aa7-bc57-97a000f8211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea4026d-7cab-4029-b960-a6c9c7ba9e87",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c10735-f7b4-4497-aac7-0d8fd17788bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f51830f-6c67-45c9-8065-7c8ad0aa3f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06228c3-bb9b-43bf-8240-b3a440f7a2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15dbecb4-18bc-445f-936c-40888521ad46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baca3eab-e8df-42f1-aa2b-3f6a874a61d2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8629b65b-68d6-4fb9-8cb3-ab5859bb3be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cd4225-b099-432e-b6ff-c9cb47188d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf1955c-4a7a-4737-9ed0-7e470f6fda7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f586f055-bef7-4ba0-8e23-5f525280f30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d225be4-feb4-4d23-b7f4-33ed139b421e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cd4172-7350-41bf-80fc-01364d3e8ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1463da1b-63ba-4857-9e18-992fbb2a69a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1e6cfd-80a4-4970-9fee-c502a551b2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0933878-cf74-4a61-b7a0-f06a7026516a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca6f863-493d-4bde-92d1-9947e922c422",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f593b1d0-0b7a-470e-9dae-0f060900031c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f55643-7c13-4516-b1d0-b1483e1ca5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405e7581-ce75-4380-86a7-93a8ff203fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9281a6-bf23-4356-837f-2e4fe94d6e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f50fdd-2830-46cb-a56a-aa22b3788cc4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ca3350-ba44-4639-b252-b1d10a92fcb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc66e67-7f7d-49c9-8b14-9fa4dfbf4609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb13db4f-7822-4ce5-b3ca-99d4d4547a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10aaea38-063c-4fe7-80cf-1c87aa802b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf826c8-ce0b-4f57-8cb6-b910ac24dd8e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04608a9a-d232-461b-908f-9998acc65609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7c94e9-37a8-4969-a9af-11772920691a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cfba64-9894-488e-8fad-209b9a4eb1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de13511-8780-4360-975c-baa7bd724819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efe1ab2-1f0b-4a0b-babc-d716aed0dc73",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a6d676-a490-4d6f-a12e-c4fb5c88dbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd1a8c0-e5a8-4792-b7c7-197def88d303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36531b4-3772-4a71-82c7-f1e4db2e06ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0702a745-9010-4c2c-9a62-f55ca171d7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f7c271-b56b-466b-a2fd-b7672afb123a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa5a50e-bcec-4dc5-b19e-41e64b1c8efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e091120-0427-478c-9ff5-f38d82edf460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1049f75f-0d03-439c-b65e-f9cf2ac24477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e74c695-e307-4f82-a7cf-2dec374c41ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0adecc-3a76-447e-8f28-d9e52dd7cc85",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fae76e5-5b47-44b4-9717-6692492988ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414efe92-fd50-413f-91c6-9dc2cf112e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a03792-f355-41e1-9047-fafddaef5d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e768f556-b668-44ac-ac53-80ebe80e2d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89d7a3b-c26b-47dd-95f9-bb0c155cd042",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae20754-5be9-42bf-902e-9eee1768addc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9a1312-8121-4a39-b122-247915551073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29daf4bc-3d88-436a-beb0-4dab69633658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947090ae-c7b5-457d-b462-cd221235c65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffdc851-36de-4719-ad23-9fbfcb659c4c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22db79af-4f8a-44de-95ac-7190bbba8546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de275ae0-b6cb-40a5-8cf9-80aed26b6e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b80ee43-4a25-493c-b0e1-6679d74603b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab22d86-67f2-421e-bf2c-76dfa323c6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3fbefc-2478-403d-86e2-888c9cb41db3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889c111e-265c-4d68-8d9c-add3a15f08e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2323aa32-8163-42b0-ad44-8208fc74a236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf9180c-3872-4bf8-b710-63f8436f5213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2b0750-c725-47e0-8673-52112aa0a8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa1a714-7c2b-426e-bf92-b811a2a9c9be",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ba6b42-a684-45db-872f-347d090b81ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e8986d-da56-4c3f-ba82-642b8bbf95a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374cd83a-809a-4fee-a70c-e93c89f14ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19fddb3-1018-4b4a-a38c-71f154aa8282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a445fc-ed13-445b-a78d-aaec0ed760da",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0445eb3-4192-4743-b414-7c190cdeef2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8904c2fa-39bc-4fa7-91b4-91f5d3176a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f543cc3-5674-4cce-ae7c-d8f0d28891df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311e80b1-111d-447c-bef3-fe00aa235aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cb8c71-3946-41f5-9923-0fb473973214",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66b49a8-3af1-4fd7-a728-778e367e903f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedbf418-6858-44df-9dc7-e4f25decf5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a3b892-c157-4f9a-8d74-6f14dcbaae41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb207e7-c59e-42b7-a554-02331f3838e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacf7e1a-36cd-4837-9128-b82f92384c07",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a2f502-d0d2-42c3-86bb-814f2a8e1234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f9c8dd-758c-4d9a-89ee-8d3d3c51f6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5557c6d8-c798-4aef-b802-beef22d73de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59dfd3a5-a329-4eaf-9c9b-6466b2691f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed0d0ab-0c5e-490d-8330-8200aae96af1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee12a73a-aff3-42cc-b93a-3d1f5352f6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b01c591-9638-43c4-9bf8-85a731b3f851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c95846-4add-4952-93ff-27a21623025c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26aa5e7-df8a-451a-b57a-7ce65de0a333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6a29b9-b5ae-4d9e-9e50-1f2177a8a3d4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b175fbc0-7469-48d9-ad07-0c13b8486507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd032e42-2a53-41bf-807b-38805e334152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088fac36-d385-434b-9be5-20befcb8abaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcd1b75-a9b3-44d5-86da-ea553a81a9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a0d02c-0e34-4b8a-85b4-a37bd50b4a79",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1c0b37-6149-4c4e-b6b5-1796df1ca5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ded9df-2128-47f4-9cc3-0885e4515c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30118914-9e0b-4b4b-87d8-11329b7a3d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e14f801-0cdd-41e2-afba-ce2a0b2c8394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75e862d-4aae-48e5-bb07-1d0056c171d8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9004984-d15b-43e9-95a0-fb51f92b809c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3244b897-e8ea-45bc-9b68-ca214510d0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d64eb6-894b-47b8-b6cb-60963cf97887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2ef895-8c95-4e8d-b85f-62b65b395ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481b623e-e620-44d1-b75e-6faf95129af6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bab2c64-d013-4083-8f71-4d9ce31599d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddbc26a-83d6-4199-83b5-44ea3d63acfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fccab78-da4d-4876-9015-20c1ea4bf66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bee711c-2c9f-4b8c-82f6-2a3ab13b61f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5d4a93-ef58-4f2e-b57f-5a6da52109c6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a8ad1c-7f12-46eb-9fd6-7984a8c69a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c4ccb6-802b-412a-a254-50342f4e1d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0406f46-5468-45d7-8a80-32a82dd121cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa3c858-7a95-4c57-b3a1-1c1e77504c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa460e57-a86b-4358-9a6a-39891c22f4f6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c454c0-1101-4b39-94d0-a16d67005174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee079dc-bf8b-4588-87e3-ca71bb91ae64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a0c548-e936-4adc-9400-5ce57dddf9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c154c3-a04b-4731-bdce-6d2d70c2268c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30a6aaf-1f02-4984-a72a-60fe6cc79600",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db3e068-b77f-4c32-babd-488e7f3c5a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d240d60-06c2-498e-ac32-7c3d624cd46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06873f6b-b467-49ae-b0f4-033e8183be37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9160d942-f363-4bb0-b1c1-c056435b7cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db44ce0-3c0c-44c6-880e-28e85428a064",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f418de-3e7a-4a0d-ba62-2abbda66b26b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0093bf-5b08-4916-8815-b0c0567e94da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b60793-0b61-4aa7-bacf-df1e3b95e334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a15d98f-092e-431e-b740-a357a205fa99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeef4fcd-1ac7-484c-8b95-85ac6920e8b4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84218893-6be7-4548-8c37-2998417e52a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3b78b2-e6f8-4bb6-8f53-5b1a3b5bc08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7bd3f7-26cf-454e-b22b-48ba90f0b80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c08b251-1ad9-4646-94f5-697b37b89d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6646b37f-d91c-458c-8627-528c061cd6f1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809ec996-6f71-468a-ad80-9788d88ee88d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ed4d76-d3df-4fce-9a1e-a93d59f88c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eaa9f9-79b7-4140-8b60-96059dc20a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dabe4d1-269a-48a0-b9a5-670e6aa08537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49312f70-b6cc-4477-b5db-c831b9188707",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf75778-96f9-4512-a977-44174b6b776b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213d7e19-884d-4448-bc6e-d5de6ee1f437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa2b0a2-c14f-4429-809e-05f4c5458079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8700cb98-5fe9-4be0-8cc8-41fe78bf520a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f77baf-b42a-4fee-aa78-5da2d19abe7b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13331fba-03a2-4e43-b9a8-1d5f1fcb1a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce15211d-e5c3-4755-a0ca-2043a3dbf10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eaeb52c-71df-49cc-bb86-4c98271191d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0159ad-05a5-4740-b3bd-55db3e3d5114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9b35d8-0456-4345-a441-ec01057f545a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0279a041-5752-44bd-9d52-e3c7ba8d35fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c31ce703-3760-4a6b-bc55-c17d41c6ae0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0950bfba-101d-4e70-8ad0-8b7941a3633b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883e34d5-65df-40c1-a24f-bb4420a16e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0c2cb7-25bd-4918-a29b-3987a51b01b6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a128deb-f7be-4d71-96b2-ab531bc7d0ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "416099f2-bf75-48c2-952b-7fa371f816db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5181483b-41d4-4781-89c7-7390a120f85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4589e968-0abd-4c9c-9fd1-b0a1cccaeb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c525a706-d1fc-43e8-9d0b-567838a8d694",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63d14ec-21d9-44fa-b7d9-dee3bc47df4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96f08a9-e13c-4893-87ea-3ba2431dadac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e33eadb-bf27-4289-b1d4-19c3db83c2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0574d669-8bb3-4f24-b627-06328da8b5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d664df6d-9fcd-4db4-869f-d2c7ba6534ee",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb693c76-92af-49da-ba7f-1f346b39cef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e9c03a0-77cd-4c50-9029-ead66398bfa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c123f5d-1128-42d3-9403-c38371ef9577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87605d43-e3e5-4a40-a80b-52922c334c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92126b9-5187-423f-9618-c31c485d4b97",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64ebdcb-0157-4109-9332-2f973f8bb839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19ee1e9-507d-4953-850c-0204161f114d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74f09a4-a5dc-4bae-8333-2b26ccc3149e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35948c16-4ec5-4c70-bdec-d99d144449ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451a28a5-7ff7-45f7-9dcc-cefb0d7b8bea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae955686-5d08-4c32-a084-8bf64465ba92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2295ff5-76a3-4217-83c2-9c3bd8d538cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584dc75b-8870-4378-9e9f-02513edb87c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff75781-3d93-4e21-85a9-574c92755dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f58725-14f1-4a78-ad97-fe5fa9c5720e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545e402f-9163-46fb-b12f-9b2a43395cf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c28135d-a7f4-416a-99e8-88b3a1ec75c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadacdf6-7503-42c3-82a9-5a137e19bddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab35dde-2936-405f-8d95-8b1bd1d80def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82d9598-ea17-4579-a0da-27f38258db3f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dbe198-54e7-4c4c-a89d-3b7949d09c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dfba6ff-bba9-433b-974a-09d7b4f2f62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060820f5-32a4-416d-a2bd-4bb2751206b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c002a0d-ff6a-4b53-af11-1df92fd1bce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e66f5a-dcd2-40d2-9639-1e33b35e7662",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2354a423-123b-4185-a426-a94436f81bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acdf5181-2a7c-43bb-8e2b-4809d9a96e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617ccccd-2d47-4c3b-8257-1fc3b5beaf74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d9d836-af47-42d0-b5ff-81f8e8697f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073dd5f6-bbe8-4b99-b087-bffb09dc90ac",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb34966f-e9cb-456f-aec7-955b3b7eeb5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c306747d-32d5-4542-bd1b-1c62a288cea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590372e9-4ebb-4c0b-8a72-796fa3bd45ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af6eceb-5bd0-422f-bdc0-1ca40f3e450b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75af3e6c-2307-4c26-9658-d392bffa739d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69092ee-8517-4812-8038-594df17245b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f0f487-a891-470b-b0e0-7d76e2528313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22552e0-6570-486b-b48c-2530617afd6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0c4c63-7a11-47e4-bd3a-e33d5b62e2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a139c6-5b3a-48c1-a21b-30cea4fd6613",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a396a677-31b5-40ce-8a51-e0f5de32339b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d480d87d-d893-4898-b4aa-8034bc2b5861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8f7725-470b-4e42-a714-5c4c444b6d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d237829-f2a9-4c60-9f82-56a9d8f61dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61fc4b6-1025-4313-8840-3676e0129160",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ee5280-0337-451b-85b8-78ff2f1dd113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7b92fbc-746f-4480-b7b4-a9bd7aa44a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a01ffed-6be3-41c6-9354-5eb49b90bdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c9b492-e225-48f6-9a0d-8d1c51148e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d2ae75-91ee-4e26-9407-89fe88789878",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c08f6c0-c52d-4f90-9367-fd09e06e2dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1d9dbc0-a953-4e2e-af71-b21679f366bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fee1d77-40fd-4f73-91b1-476cad72c31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd9b46b-1aa3-43b8-865a-ab4c35849333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6640fdbf-398b-4f49-9d07-3a991551dadf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa58c51-b2ac-4c4b-8db8-49bd2753735f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e150fea2-b99c-4994-8112-c62d12d8778a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ad1757-d431-4c49-a922-40368f493931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5e3426-ac32-444f-9baa-62e620445d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86b7caf-540d-44ab-aab5-b833aef83a0c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533ff18c-f1af-457e-b8a4-9f6acc5ee058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b339910-9cd7-45a5-a777-819c655e7ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7723ba-158a-4437-aef3-9f1bd78e3f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef7c7c9-62b2-4b07-9ab3-11752f48e34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e646094a-6864-4482-a72e-cf1f4f912507",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb45422-4eaa-4764-a639-6ba816af5443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58171789-c71c-429a-95c2-0fda998a0ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f418cd-1f68-44d6-8ead-349fc5cc33a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6133e46a-15fc-429d-b2f7-de2ad69042ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac42d755-802a-492c-adf1-120145fab41e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88447eff-cc64-45e2-8dad-0ba151921853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e389a4a1-576a-4e96-9fb2-08abf14e9581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ba6db6-a3e2-4717-8c99-fa0f17e49685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90eb84d-0312-40eb-b326-99134cc80c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0def4b03-e9cf-4cb2-8fd3-6bc9db55e0b0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf43a2e-2e9d-4129-bb81-bebcbe505338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d6ae4e-0d9e-4fa3-8dfa-cea37cc91adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc96d70-b7ad-4435-8c2b-5629bfddb5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aaefe7d-0f54-4e43-89a2-f5b1c86b16a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277e5ab5-f36d-4532-9039-7a65559f5e68",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c12b41-9bac-4e8a-8045-0f93a4b498bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "097223f2-3d52-4f68-b33f-2183acfe0942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f53e0f-9187-4016-b338-967338bacf62",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4398bb6c-a116-4464-a74f-a6523a6436d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce5f8c7-08ee-4fcd-9179-c9c9346daceb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3307f85-2b49-463a-8f57-da0d864838bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f641da33-5918-4fa5-a323-f67bacc26355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f12784-eda9-4a46-a0e9-1add9f7bc33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67c172f-7e0f-4dad-ad92-345d5170eb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be040754-594b-49d3-9a64-7199e39dfdb5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39723e7d-f484-490e-a1c1-6bf3faff29a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5695bff9-288e-48fc-bfa2-bdc5ac19d2c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dffe25-179f-47ca-a766-991937c954fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187631e0-819a-4a95-8ef6-db0a0b60ec9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bbaba9-9a80-40c7-bf76-50fdf0be3207",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b41e8f-f4da-46e8-80d3-4198cc5370fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0d1f4a-d7f7-492d-97d5-d8bf5cef8579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9d59fe-52aa-4c51-adde-6565bc27f0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56df56e-a031-4e5d-9be5-ef595b60c318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed632fe-4e11-498d-8bb7-a184e1d702d6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78c4c8e-e8a4-43bb-9a51-0d636df2aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d6e209-35fc-4604-ab42-bde619fa3fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf5b8cc-b7e4-4942-a0be-fdf1fc1d2f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af8ce7e-5095-4923-ba88-84b21609ace4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c548adc-6607-4bc1-b504-8e8ab621c57b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bca469d-87a1-4ff8-a68e-0aea96b6d26c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bdd9239-a463-4efd-bb02-008863e306c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e31444-f836-4cd4-bc53-6688dcf0d159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7c6ce9-c369-4d09-b64f-3d06242b4e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aaa5b2-1f9b-4415-b4d0-7f0c298eaad9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe49ae23-2983-4117-bb4c-ae11bf97023b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f9e6418-fb68-46ae-bb49-fe7f76d55436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b949511a-424a-4476-9c7a-546e50c23994",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd912bd-90b2-4e30-873d-6decfb61378a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531a0212-91fb-4fb2-b67f-23a380b490d0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e49ad7-b728-41c4-90a1-3042269e29db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "752fcaee-afe6-4553-b1dd-9799d25fa5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af704622-db3c-4d77-8f7d-7c19443193ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafc2ad3-84e4-46e8-bdef-80bfd6e38fc0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c252c797-ded7-465f-a004-2eabe67da74c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaecef35-8202-4c89-88c2-3fa3be558a57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c9980e4-3728-4d31-9bb4-e41a88c5b224",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "530f9409-7986-4665-9c5a-b96bb8d71528"
                    }
                  }
                ]
              },
              {
                "id": "b74575d7-dee5-45da-a1d5-d150c9220c79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3742ebf-ff17-4e00-b755-55b54911d667",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298e606e-60ed-4a3d-8b3b-f473e5f90ebf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d827060d-9059-4b54-9778-f9f5e210b9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efc778e-0b49-4067-9b51-18631929cd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6c3916e-c25e-4f4d-bbb8-db73d3f34053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79de9c4d-b40d-48fd-baed-b599452b617d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753231de-ee82-420a-906f-94159606303f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d8cc283f-d23f-446e-9900-fe071609a61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20953b2f-0ece-4445-83f0-cbede81e5ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "308dd849-d146-4b03-b5c5-8d5db36a17f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f94be2a8-0b3c-4737-96c1-068a7a51795b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "705056f5-83c3-4099-acaf-02ada7b61523"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e777b81-06df-42da-94a2-7e410feb8ac6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a9c5f88-8fa6-4585-a678-3a12ceadb256"
                    }
                  }
                ]
              },
              {
                "id": "3261015a-e1d1-45d3-9d60-6c8a96244a59",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0f2502d4-0a5f-4c59-8e97-08f600a671c7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5ee7d6-523b-4a8c-b245-c76969cc56e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "23eea8b0-5bd2-43d1-b8ab-76d15df4e9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19d45ce-0eeb-4106-840b-43e179cc7d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321b6910-6e8e-4a4b-99ba-4a74b3b6f730"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba3e3b9e-b620-4674-8eed-299023378234",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b7ba3ec5-2516-4171-b3d9-1fe9db52bd54",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e8cc822-9c76-40ad-8a11-65410493b72f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa227dd9-636e-4e68-aca2-be5747dc81ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4853aeea-6c9b-42b1-83d8-f960c4a74965",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e865a4eb-2763-4c43-b6d3-f3fdbe634fa3"
                    }
                  }
                ]
              },
              {
                "id": "261350c9-35df-4fc1-8d88-c72bb27ad8e8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45175652-6238-49ae-9f1b-1f9dccae958f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "31ec2fe7-9146-489e-87c4-6ab4992f865f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dadc596b-b82f-41a4-817f-72b584e3f47e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4238a42-6565-4fb5-8722-9ef4f9d28eea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b41551b3-10ea-4f42-905e-bfbfcc9b7dd1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7bb6256a-b597-48c3-9493-29f4d377cc91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b758766a-49bb-4b33-8998-5537e39aa163",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64e9694e-9f54-4287-a34c-7ab2de77075f"
            }
          }
        ]
      },
      {
        "id": "1845eef0-9ead-403a-977a-13f929150a18",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b5494369-320c-400a-a0f1-32518535537a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00e34823-a3fa-4a1e-8410-7e2f3b2f879c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "414e1273-9b4d-468b-b1d9-fa12b9439f25",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255d9c2e-e6b8-4f29-83da-e7e0211f7ebe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "89c92e05-317e-4922-b5a0-1710b2a6a2dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d9aa56-c44d-4a5a-859a-41d528a001fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c685b2df-3ffb-4f59-ba13-a767237ee9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240854bc-af48-4f5b-aab0-6d5062157c1a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cef7c6-b39f-4287-ade1-50e69d5d36a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "97d18663-0463-4d8b-9839-d6c4fc32ceba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0519b2e9-c15b-4571-91ba-ccff17025dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3da0a485-e334-4cb5-90d9-ffc2fd469a8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdab40c1-3439-44bd-a205-9f1d9a9d5e06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55db7a3b-4778-4cbc-a8b9-aef8b9f6d486"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecc088c5-898e-4857-8094-7339722876a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7fb1902-dd36-4215-afc7-0c13729c35e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2a4b886-5760-4a2a-a79c-251b72595e7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5f187405-c88c-458c-923a-48c86858f1b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6b03113-ad2d-4105-bef4-3966266314e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33bd7e08-b705-4a20-bb99-34ba29256726"
            }
          }
        ]
      },
      {
        "id": "1cb7b27e-613b-4d46-926f-5884fcf78848",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7e88ce51-00af-484f-b54a-5f470605ecc2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81dffc3e-8378-46d0-9146-1a1c85c20f5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ab53bc3-48b8-4686-8684-21a0efbe4a4d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2d3c24-f73c-4f2a-8e6b-71a81dc6b284",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7e2e560-f262-433c-b33d-8d6df77f44dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01cf3ad-7bb4-4b86-9af0-4a963c72fe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "306fe140-66a9-41ef-aac1-c8de46634bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9ae452-66ad-4f66-bc39-f116ca2844d6",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ed7bca-3348-4071-b8be-253d4a855871",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef429c4-99af-4c68-995a-8042db1f6d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd615cc0-5b59-4fa0-b4db-c7a891f423a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80770bfb-03b6-474a-9a3f-15da01757797"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c307ccf-c1f3-45e7-bb24-56d746568640",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d701e0a-a185-4fe3-ab68-7c1992b16850"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b812fae0-a775-4f3f-82b1-61e92d43547a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53bef991-322d-48ae-8d8a-df7b5ef83cf5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "081d65e5-4c24-4664-af46-c62e9c882ce9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f44f546-763e-4dcd-939e-5f722ef98f82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1571f0a2-02da-48c0-99ed-2ef076d8f4b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efc9dc87-586a-4789-a17d-b6e62513031b"
            }
          }
        ]
      },
      {
        "id": "5dc8cc7a-d0c9-4678-b76e-f747d0669461",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f89f0ada-19be-4d00-932b-855e44754659",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ae5612e-cd6b-4032-8d2f-8cc3260f0aa9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8009e0a9-5b07-4b00-b315-031a567fdb2b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8827af7e-ac2a-4c10-a99e-70e5e9895556",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5280f012-388c-4aaf-8005-c8dfd5ebb4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210e0d5c-fa36-4ee6-bf14-4a34d0c3b13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b57e79c3-e5f9-4af0-9bd4-24925ffdba66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479ff2f6-be93-4dea-9539-c943ced8fdbc",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41af870a-d480-4fca-8c8c-d773e691de27",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d337f73f-3991-43be-b282-bcf93babe52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e484dfd-659a-4285-8911-d263f6c9c036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00163556-486c-41ee-a7a3-2aa9029a8ee4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38ef46f3-dd2c-4fe1-b730-683af96518e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48e9a398-c530-4335-a783-35f858f0a591"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e7eb9bf-2f13-4a05-8236-488b6b1a0a10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0104e3e1-a33d-4914-9599-0463f3c31d96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93dda133-1e0e-4f46-a437-e899fe12cac0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cb81d9b7-0fca-42cf-ad58-09363752df87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b56bec86-6d0f-47f6-b7c3-da8f4e5e3365",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32211528-919a-4bd1-bb49-5b2c6ee276a3"
            }
          }
        ]
      },
      {
        "id": "225636e9-6d15-4046-8059-946bfd193a8e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2cc8eec-7fa7-40e1-a79f-ed61db759e65",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7602693c-86e2-46f1-8560-673afa3f8f26",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "08396d1d-2864-4917-b55c-61b543c139b0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d39b2b96-1750-4e8d-a228-d7e7844ad9f3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "722acfc5-4a33-4902-afdc-40442d7f32a4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 19.559845559845545,
      "responseMin": 9,
      "responseMax": 327,
      "responseSd": 41.48227617961418,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678236184009,
      "completed": 1678236201058
    },
    "executions": [
      {
        "id": "c4e87cf9-5f7a-4cd0-8539-1af3bed40084",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9388b83d-f1bf-41a1-84e8-2ce44e2a58cc",
          "httpRequestId": "bda7b7fd-307c-49fa-9317-0d0f6b0616be"
        },
        "item": {
          "id": "c4e87cf9-5f7a-4cd0-8539-1af3bed40084",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f1048804-77b2-43d9-be31-a798704a3cee",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "13b726a0-f685-45bf-bc25-68cb856503b4",
        "cursor": {
          "ref": "49a9b867-d372-432f-b310-5b72257c1389",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5b9e66bd-5eac-414f-b781-33d421c86f5e"
        },
        "item": {
          "id": "13b726a0-f685-45bf-bc25-68cb856503b4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b61301f0-66c8-4ab6-9ac6-8cea41a11675",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "b3ebab4b-a3be-4ce8-953e-0b3094412899",
        "cursor": {
          "ref": "b7765bb1-236b-4764-95c8-c588eeadad38",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "123758aa-ab5b-41a5-801d-b3b2c88e8670"
        },
        "item": {
          "id": "b3ebab4b-a3be-4ce8-953e-0b3094412899",
          "name": "did_json"
        },
        "response": {
          "id": "277b0a72-dfcf-43fe-9752-f23c45d4a120",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419e10b3-cc3e-4941-ac00-cde145482e36",
        "cursor": {
          "ref": "4ba28a2b-78c0-498c-b97a-c96558921801",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "461240bd-0937-42ab-a8ca-87549175bdc0"
        },
        "item": {
          "id": "419e10b3-cc3e-4941-ac00-cde145482e36",
          "name": "did:invalid"
        },
        "response": {
          "id": "c62d87f4-fd39-4aa0-acb0-431d977883fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419e10b3-cc3e-4941-ac00-cde145482e36",
        "cursor": {
          "ref": "4ba28a2b-78c0-498c-b97a-c96558921801",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "461240bd-0937-42ab-a8ca-87549175bdc0"
        },
        "item": {
          "id": "419e10b3-cc3e-4941-ac00-cde145482e36",
          "name": "did:invalid"
        },
        "response": {
          "id": "c62d87f4-fd39-4aa0-acb0-431d977883fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9e3965-6b44-4b66-9f70-e05c9ae73a6a",
        "cursor": {
          "ref": "dcb8b854-9d2a-4068-8fce-ce3a73680fb9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d3033703-946f-4cab-b09b-46758e32475a"
        },
        "item": {
          "id": "aa9e3965-6b44-4b66-9f70-e05c9ae73a6a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b8e64d04-82c8-4ffe-83d8-de7d6e3ade50",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf57bf94-93ec-4e7f-b91c-b9f10c4f9b64",
        "cursor": {
          "ref": "553bab4a-a785-47dc-9025-c8273890790c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f1f79518-89c0-4a3a-9e05-67a4d7a78cd4"
        },
        "item": {
          "id": "bf57bf94-93ec-4e7f-b91c-b9f10c4f9b64",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "edf8f2d1-ebd8-49b2-847b-961bf2646aea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d15ba94-31b6-4be5-960f-aa0acb08c735",
        "cursor": {
          "ref": "966121a2-a67b-4b13-9d8c-7ffaaa2c51ca",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "be9716ef-1aa2-4bcf-bb59-2d8e51397a42"
        },
        "item": {
          "id": "9d15ba94-31b6-4be5-960f-aa0acb08c735",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3e7f4a80-4730-4210-99aa-4c41e581313a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6546a7-a7a3-4c75-a0f1-948955a51c42",
        "cursor": {
          "ref": "c0dd03d3-d509-4d9b-b1d4-b825cca3a3bf",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9e208585-a07c-42b9-9305-57f30935fc04"
        },
        "item": {
          "id": "ff6546a7-a7a3-4c75-a0f1-948955a51c42",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c4290041-c630-4f87-8ddd-40a7a5d6fdcb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6546a7-a7a3-4c75-a0f1-948955a51c42",
        "cursor": {
          "ref": "c0dd03d3-d509-4d9b-b1d4-b825cca3a3bf",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9e208585-a07c-42b9-9305-57f30935fc04"
        },
        "item": {
          "id": "ff6546a7-a7a3-4c75-a0f1-948955a51c42",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c4290041-c630-4f87-8ddd-40a7a5d6fdcb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7077529a-229f-4258-a950-4582c7670358",
        "cursor": {
          "ref": "745f5fe0-0c72-4a1d-bf4e-9e08ce09a26b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "af6d0e08-e871-49af-8afe-1258834715fd"
        },
        "item": {
          "id": "7077529a-229f-4258-a950-4582c7670358",
          "name": "identifiers"
        },
        "response": {
          "id": "3d840caa-f6cf-4146-9788-116d2adc5961",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7de398-e2ae-49a3-bf64-952f6cdb6490",
        "cursor": {
          "ref": "63f0fbe6-8a4a-4464-9aea-385ad23659aa",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "603b7d79-f8fe-456e-b768-2e000df56598"
        },
        "item": {
          "id": "9d7de398-e2ae-49a3-bf64-952f6cdb6490",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "58e4dade-ccf5-432d-9b21-6232844f1e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7de398-e2ae-49a3-bf64-952f6cdb6490",
        "cursor": {
          "ref": "63f0fbe6-8a4a-4464-9aea-385ad23659aa",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "603b7d79-f8fe-456e-b768-2e000df56598"
        },
        "item": {
          "id": "9d7de398-e2ae-49a3-bf64-952f6cdb6490",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "58e4dade-ccf5-432d-9b21-6232844f1e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8659df-ee0e-47d9-95e5-08d1f9a0919e",
        "cursor": {
          "ref": "2f55e20e-27a6-4ef7-b9dd-c55f429c3f30",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "20098494-36c8-4c88-9465-21a15fa61db0"
        },
        "item": {
          "id": "1f8659df-ee0e-47d9-95e5-08d1f9a0919e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4e232eca-419d-453b-96d4-7f0e1579eb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7b2b8a-77fa-43c0-9ddc-6d8a353d5151",
        "cursor": {
          "ref": "c50d550a-7b6a-47e4-ae98-274c9ede4724",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b44c43b3-17a8-4e8c-8d19-40850a1d9df2"
        },
        "item": {
          "id": "5f7b2b8a-77fa-43c0-9ddc-6d8a353d5151",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "92d62fb4-b824-4cc5-8d23-a7754de57d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64345a57-4e03-47bb-907f-6d26b5e247c9",
        "cursor": {
          "ref": "8e91fe37-387e-4abf-a171-27d177691057",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4761d40e-c21c-4cd0-97f8-3a84e094e37a"
        },
        "item": {
          "id": "64345a57-4e03-47bb-907f-6d26b5e247c9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "74e249b9-4a82-448d-bf51-e5423b6a6b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dc954a-6569-4a40-a278-5d52604506bc",
        "cursor": {
          "ref": "a833f2da-dacb-4306-a151-5dbdb5fb0688",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "95f0624e-01fd-441e-b4db-342ac1e1ddf9"
        },
        "item": {
          "id": "22dc954a-6569-4a40-a278-5d52604506bc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d66b8485-80a7-4a6a-9da8-58ed879ff4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddb284b-e19d-438d-9dd6-b711020a5a62",
        "cursor": {
          "ref": "9b5da925-0b98-4e5e-9b41-6232bdddb195",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a7b02f05-333d-43d2-afb0-96eff2219c21"
        },
        "item": {
          "id": "0ddb284b-e19d-438d-9dd6-b711020a5a62",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7ddff9bc-8cc2-48ac-ace4-af454e7b06f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982fdf3f-d811-48a5-ab4f-6dc93c22e8b4",
        "cursor": {
          "ref": "1a207afd-5fb7-45ef-a9a3-cee891032943",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cf0048b3-ae1b-4f35-815f-702fe75ae955"
        },
        "item": {
          "id": "982fdf3f-d811-48a5-ab4f-6dc93c22e8b4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c118c605-b70f-4f84-8527-ad329f8cc805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca09c39-136d-4cbe-b6be-9201262cba08",
        "cursor": {
          "ref": "980475ef-ff61-4cd2-9a31-071f3123b4cb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5127af64-2b90-45a8-93dd-cccbed564c3c"
        },
        "item": {
          "id": "7ca09c39-136d-4cbe-b6be-9201262cba08",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f800b970-20ed-4712-ad72-30c91a9d4901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52533ffe-df19-4062-9022-f5c67c0ffbdc",
        "cursor": {
          "ref": "69f8d9fb-c0d1-4af6-b5a4-f397b0bc279f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "73346da0-72f0-446b-877f-147230330e8d"
        },
        "item": {
          "id": "52533ffe-df19-4062-9022-f5c67c0ffbdc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5db5f489-be9f-4123-9843-cf1190f3016c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9574050-b639-4a11-b859-5a90445b2da4",
        "cursor": {
          "ref": "930ff321-cd95-4541-b1e4-f9ce654f2a7b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cc48cc53-2be9-4db8-9a2d-ac2d9cb4c3c8"
        },
        "item": {
          "id": "d9574050-b639-4a11-b859-5a90445b2da4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2b047ace-81c2-496e-bc0a-ae7feb6723a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02619d56-2f68-43cf-9b88-1e21cd2f956d",
        "cursor": {
          "ref": "d11b6921-908c-4322-b635-0d51daea7594",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f060b103-80e9-4a0b-bac6-244837953d9f"
        },
        "item": {
          "id": "02619d56-2f68-43cf-9b88-1e21cd2f956d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ce9d8efb-7519-42ac-bd49-e629fd448f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fc161a-89a4-4a73-a36d-548cf4ab455a",
        "cursor": {
          "ref": "3a36f29d-913e-44c2-a833-e9a437768469",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7ddbfaca-d9ef-4655-9114-ffc0ebb0d8fe"
        },
        "item": {
          "id": "56fc161a-89a4-4a73-a36d-548cf4ab455a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bbeb76d5-90b8-4250-bc54-b79d20654026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15f5e81-b170-4a73-84c8-5643968ca451",
        "cursor": {
          "ref": "01d113af-1f51-4958-b3f2-8fb08b5aa0b9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2d369085-fbee-431b-823f-2f10c3ace375"
        },
        "item": {
          "id": "b15f5e81-b170-4a73-84c8-5643968ca451",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ef004f11-4264-48ef-a441-3bb14117469d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456ca319-12c0-4e88-b574-97dc4b7ba079",
        "cursor": {
          "ref": "02bf6be8-09c2-4100-bebd-9b4d37a4f515",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e41746c0-ae53-4659-aafc-22779812991c"
        },
        "item": {
          "id": "456ca319-12c0-4e88-b574-97dc4b7ba079",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "90d82d24-727e-4208-a79b-709e46397c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198ad174-495a-4404-a072-5488e51759a8",
        "cursor": {
          "ref": "b5ac06eb-dc95-412b-b985-2dbdabec6e97",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "48d220ad-bd2d-4361-b393-49a281db0fc8"
        },
        "item": {
          "id": "198ad174-495a-4404-a072-5488e51759a8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9dd9885e-abda-45a1-88c1-36a23c5931ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eb6557-0bda-48e7-8017-eae4736ac40a",
        "cursor": {
          "ref": "94f0c589-8ce6-4885-87c1-11d31581f3e2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9a8aadc3-6192-4f71-9ae2-4dc48d3e5d97"
        },
        "item": {
          "id": "69eb6557-0bda-48e7-8017-eae4736ac40a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a7da8679-ee4e-4178-a3ce-39abb666fc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9248817a-e316-4979-a781-20119e49bb16",
        "cursor": {
          "ref": "b4c48498-d159-4068-ac05-10a5b00e112f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e489da6a-4314-47fa-abbb-8fd80369ec77"
        },
        "item": {
          "id": "9248817a-e316-4979-a781-20119e49bb16",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "090b6cd2-2d02-468f-b20f-ac0e98496b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0d6a64-796f-4213-822b-5fe2cbe71dcf",
        "cursor": {
          "ref": "729687e3-7fb6-414f-bf4b-471aadb98acc",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ffcbd913-6949-451f-8f8b-bfbf946e114d"
        },
        "item": {
          "id": "af0d6a64-796f-4213-822b-5fe2cbe71dcf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2368f094-3dcf-42ff-9b40-83bc37d50af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695a0c6a-3497-43d4-b260-8b0a48cfb50c",
        "cursor": {
          "ref": "a77b5a26-fe6b-4b3a-a524-f6468983267b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ea4b1be4-96c9-4a83-81dc-4a1daca46d90"
        },
        "item": {
          "id": "695a0c6a-3497-43d4-b260-8b0a48cfb50c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ddcc37ca-d513-48e6-8ab4-b3c081e7c6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936f554a-e72a-4534-8786-120ada004edb",
        "cursor": {
          "ref": "0f6f51b9-4b3e-41e2-9a4c-53f9100c4856",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c2d962d7-641e-41cb-b5c0-de92f9c28bfd"
        },
        "item": {
          "id": "936f554a-e72a-4534-8786-120ada004edb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "255aafbc-fb19-4ca7-9ff0-4aca334b2df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8252b8fe-2534-4b44-8ba8-2b9c9a57793e",
        "cursor": {
          "ref": "6fed3428-81d1-4d46-b83a-c91d0a20f227",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ed260028-c1fa-403c-9889-71355eea6aa4"
        },
        "item": {
          "id": "8252b8fe-2534-4b44-8ba8-2b9c9a57793e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "00a132ac-c0c0-405b-a097-1cf04b412e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dae767-3281-4812-83b5-f2d6c8a4bcb2",
        "cursor": {
          "ref": "b7c5118c-847f-44b0-ad21-3602e086dd4a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1417e365-aa3a-445f-a189-57013d4ed9c7"
        },
        "item": {
          "id": "97dae767-3281-4812-83b5-f2d6c8a4bcb2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a31af7c0-590f-4b9b-b230-b7b868744ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87082636-8adf-4bc1-a59c-4292750fce88",
        "cursor": {
          "ref": "51b40a3b-519c-4a77-85d3-b5915c28343b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dc00aa56-3cc5-4a69-8c72-354e756e8541"
        },
        "item": {
          "id": "87082636-8adf-4bc1-a59c-4292750fce88",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fcfc4a01-e427-4344-9915-d0b2c957b029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afc9a11-b5b0-4fad-a66f-3d852f31cb6f",
        "cursor": {
          "ref": "1a438174-4e02-4a2b-8fc7-0e3274287242",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "864706c8-d258-4ae0-beb8-ebf5a6bab5f8"
        },
        "item": {
          "id": "9afc9a11-b5b0-4fad-a66f-3d852f31cb6f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "aa36ce5a-2c92-4207-93c9-a97168e72805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a419b71e-ab88-48b6-9045-8c5722afff38",
        "cursor": {
          "ref": "99db4f5a-d174-439b-8be3-70f688194b81",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a3c39951-7227-4e8b-b378-cce51a7fd032"
        },
        "item": {
          "id": "a419b71e-ab88-48b6-9045-8c5722afff38",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fa8be2fa-dec9-46cb-b5e1-ffa69f78ff80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3511b036-7d4f-4a3c-818c-8ed49097e973",
        "cursor": {
          "ref": "1892fe49-6cb2-4423-addd-b4a243f8c63d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bfd89829-cae3-4f03-940c-34a54e8313ae"
        },
        "item": {
          "id": "3511b036-7d4f-4a3c-818c-8ed49097e973",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1ceb914d-b356-4e27-9a13-3df2c97a000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda8bfcb-18e6-4df4-9d60-b9fc196df0f7",
        "cursor": {
          "ref": "3ad8cc47-8858-421a-bf35-9823f412c417",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3c8e73bc-36df-4fae-9317-5bb8550ecb1b"
        },
        "item": {
          "id": "bda8bfcb-18e6-4df4-9d60-b9fc196df0f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9ac14781-1dd8-4736-9eb7-06b7192c857b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352be743-4471-4e1f-911c-c154bfd260b3",
        "cursor": {
          "ref": "6d3babc1-719e-44ea-b48f-d0dfed197be3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d23cc6b6-5113-47a5-bb5e-bb99b09e97f6"
        },
        "item": {
          "id": "352be743-4471-4e1f-911c-c154bfd260b3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "32b9ea97-6471-4881-b8a7-86a424bef17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d579049-5d23-4d40-a982-10225b4ba104",
        "cursor": {
          "ref": "7a483dfd-8087-47e4-8db6-4bbd514a0c43",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8afc2ef4-543f-4d79-bb56-17faeee94039"
        },
        "item": {
          "id": "0d579049-5d23-4d40-a982-10225b4ba104",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "223125b8-1e16-4170-9007-ff075d621594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe0d7ee-b4af-4a6f-bf08-d8802bdaa266",
        "cursor": {
          "ref": "1732aba6-de49-495d-a140-a5b49b73b07e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dc490bba-9f47-4b6a-b28d-f2bffbc58668"
        },
        "item": {
          "id": "cfe0d7ee-b4af-4a6f-bf08-d8802bdaa266",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "27b515c7-75af-4495-82a8-071ff0a0e4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49925bd-082f-4878-9a75-57f569bb2d77",
        "cursor": {
          "ref": "c9d7e11b-7536-4b3c-a34f-a72d88d32445",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ac833a25-dfb9-47f9-93a3-e48d70a282e0"
        },
        "item": {
          "id": "a49925bd-082f-4878-9a75-57f569bb2d77",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6099ccbb-a0a6-4df4-9b01-aa45f8ec3984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20109bd-0e83-4c03-b72c-2a489c80566c",
        "cursor": {
          "ref": "edbc63ba-5e06-49bc-9c4c-32958b7ecc2f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "780f4c7f-b201-4db8-97a9-b1301f6eb1cf"
        },
        "item": {
          "id": "d20109bd-0e83-4c03-b72c-2a489c80566c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "83092f20-e417-464f-8923-14df00970955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8abb131-dabd-4a33-b18d-0d06b5f9471d",
        "cursor": {
          "ref": "0f75018d-eb88-4ecb-9747-a198ac3beefe",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "28096afe-9f5a-49ad-9c59-f7ddfb8f7ccb"
        },
        "item": {
          "id": "b8abb131-dabd-4a33-b18d-0d06b5f9471d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3fefea7a-1ad1-446f-9576-84cbbabfa9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e586b976-1445-4956-8ada-26645c9fc973",
        "cursor": {
          "ref": "c49acf4b-4f39-44c2-985b-dc79ef66fb8d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d1cd103c-d967-4e50-9184-0b731bbf4717"
        },
        "item": {
          "id": "e586b976-1445-4956-8ada-26645c9fc973",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b3873e9b-8084-48a4-8a95-85225df71eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6f42be-1c7f-461c-87bd-dca17f15dc3c",
        "cursor": {
          "ref": "8c8221a2-bc5b-4862-a1b6-5c4bc9a1f8bf",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ccee918d-bd5f-4365-ae52-e17610a696da"
        },
        "item": {
          "id": "6e6f42be-1c7f-461c-87bd-dca17f15dc3c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ff3ff08d-4755-482e-bdba-ddaf28b9d9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83173d63-d57b-43fb-b46b-02c7cd8306de",
        "cursor": {
          "ref": "8962f2d7-2ba4-4716-bb52-46611806703f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "706cd578-2f96-4fb3-97bc-8e3efa9674b9"
        },
        "item": {
          "id": "83173d63-d57b-43fb-b46b-02c7cd8306de",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d67310ff-04de-499b-a785-4b2d2e604a11",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b83975-ff46-47ff-9cea-cdb8b1064eae",
        "cursor": {
          "ref": "837f9c75-bfa1-4329-9dbc-1b79e60d1f27",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0951f68b-5951-4f03-8328-95e385e60aca"
        },
        "item": {
          "id": "d2b83975-ff46-47ff-9cea-cdb8b1064eae",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5310fd50-4255-4d31-afb8-338ee9699673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d5863f-8a29-4f8f-8566-1d17251d7073",
        "cursor": {
          "ref": "4a7fe7b5-eb3c-43fd-a5a2-a558db2baaa6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8f03e716-139e-4c73-b7cd-074cdf9410a9"
        },
        "item": {
          "id": "13d5863f-8a29-4f8f-8566-1d17251d7073",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5d4ab330-6127-4098-b7d5-bc2ebda23869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7558ce-10f0-4c36-a2a7-edfb3cafe277",
        "cursor": {
          "ref": "55112509-1a00-411c-8e5b-633c6eafc4dd",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "493068c5-bf7b-4b91-b65a-eb08a91120e5"
        },
        "item": {
          "id": "0f7558ce-10f0-4c36-a2a7-edfb3cafe277",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7ed2170e-bc87-42cb-b000-326a89814c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21625788-75ee-494a-918d-e6fec56a0346",
        "cursor": {
          "ref": "91831da1-671d-4c02-966f-24a730a9d53d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5fb8c28f-e45e-4d06-9f46-270f9b2c4bd0"
        },
        "item": {
          "id": "21625788-75ee-494a-918d-e6fec56a0346",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "33505e0f-4499-4b27-9a7d-39a0deb80368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb76aeef-a9e8-4172-84de-2be397ed0c96",
        "cursor": {
          "ref": "d53084b7-9a46-4a81-9cd1-5e48066ddf28",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "605681fc-5909-45ad-8f62-504975014398"
        },
        "item": {
          "id": "eb76aeef-a9e8-4172-84de-2be397ed0c96",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cb4384e9-8b95-4dbb-acee-fdeec1ffa1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d912b96-89a8-4201-ba8d-0220e375dd88",
        "cursor": {
          "ref": "c350c943-e888-4e23-9de4-6e3739668d42",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1495e704-be73-40e8-80b1-f0fb25cc161b"
        },
        "item": {
          "id": "9d912b96-89a8-4201-ba8d-0220e375dd88",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "46302a05-6431-4c5b-a6ce-09b4ab35098e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b321f4b-83c6-40a6-95c5-f42137514829",
        "cursor": {
          "ref": "eb1f6dc9-b66c-4b5d-9111-29f438e65292",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cb1d2826-6656-4e2f-8f46-8c08542ac5b0"
        },
        "item": {
          "id": "6b321f4b-83c6-40a6-95c5-f42137514829",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dccb6402-5dac-4da1-b7c8-03e2fb8877d4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b410e785-cccb-4b22-ae9a-4be366917199",
        "cursor": {
          "ref": "8b40b8af-1949-44fe-a029-7511572a57c1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "37b32dfb-a150-47e6-a4c4-90368ac426b8"
        },
        "item": {
          "id": "b410e785-cccb-4b22-ae9a-4be366917199",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f3ea3df2-ba38-4b82-9098-26bf593e205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4362a6-e12c-4a8a-a2a9-9301d7a6ead4",
        "cursor": {
          "ref": "30a08c4f-f9a1-421d-ba13-5033e8d1fdf7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f134681d-27aa-42aa-8a79-0896c06d4089"
        },
        "item": {
          "id": "bb4362a6-e12c-4a8a-a2a9-9301d7a6ead4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "840a763c-8de7-40e3-925e-c0a7c718fcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63276d07-9d80-4491-95a2-84c0cd5327d0",
        "cursor": {
          "ref": "a9af9094-c4fe-4eab-8458-5b090b2af1bd",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e72af9a5-77f1-4e0f-8da9-b5a5f63cae10"
        },
        "item": {
          "id": "63276d07-9d80-4491-95a2-84c0cd5327d0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "52cced0d-33ff-41d2-ba64-fb51f65b590b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df7cd2f-086f-4838-827a-a32c865361e3",
        "cursor": {
          "ref": "68695080-33c5-429f-b37e-318d0b405a05",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1f2fca72-3d73-4ef5-a4a1-1e5749b4779b"
        },
        "item": {
          "id": "6df7cd2f-086f-4838-827a-a32c865361e3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2ab97aa7-49ea-41fe-9cde-c0892e736ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47a80b6-31d1-4cc4-88fa-d23162147dbd",
        "cursor": {
          "ref": "d231d0e1-b375-4110-a12b-3160b6150c70",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "20522dec-4bc0-445b-99b9-5b2404d438a1"
        },
        "item": {
          "id": "f47a80b6-31d1-4cc4-88fa-d23162147dbd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "35246c4f-2e0f-4b42-bdc2-10af4daa59d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257f2f79-9131-4c0b-941e-fea009caa873",
        "cursor": {
          "ref": "9cc0b060-c064-4a5e-8790-58f8bc9f7888",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7a645b2d-cb5f-4880-9578-47911712e011"
        },
        "item": {
          "id": "257f2f79-9131-4c0b-941e-fea009caa873",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "db14331c-3f9f-4167-8566-82d837fd8885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d505db01-c1f3-4c41-b662-9a906b022055",
        "cursor": {
          "ref": "408a2e5e-2ef3-407e-8e39-54b9500bdba8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "aba5adc6-b884-4478-a3c2-7ff596a11f15"
        },
        "item": {
          "id": "d505db01-c1f3-4c41-b662-9a906b022055",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "06996bc6-9b65-4da4-b8a8-b272c0480778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25ace80-0f26-40f2-8ace-75eb351f71fa",
        "cursor": {
          "ref": "6abc9be4-97c0-48f3-8ca2-963c73ca8cbc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ad10cbfc-0769-43d6-8e73-cc95f61fd20c"
        },
        "item": {
          "id": "f25ace80-0f26-40f2-8ace-75eb351f71fa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f145499a-24c3-4b44-900a-338dd65fe195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a498c7-36ca-4169-93cc-a7fe9d5ba637",
        "cursor": {
          "ref": "ea3ccec9-1747-4c42-9903-96c4cf8deb03",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5ec9a5cb-2ec7-4369-99bf-a917d1b0947c"
        },
        "item": {
          "id": "28a498c7-36ca-4169-93cc-a7fe9d5ba637",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6916321e-1a6d-47c7-b4b3-87087d011222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bfc933-194d-45f9-9ec7-325a024c5531",
        "cursor": {
          "ref": "1a2cff07-f96a-4786-ad67-857fc71da3c6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "73a9aa42-c8cf-49b8-9cbf-b4a6c09b80e6"
        },
        "item": {
          "id": "67bfc933-194d-45f9-9ec7-325a024c5531",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "020f8b22-58cf-41bb-a251-8016419e76c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5362c5a2-b9bd-4cbd-bcd6-ad11fab84987",
        "cursor": {
          "ref": "f01cc5cd-b438-4119-996c-8f8469dce30a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "47f22d5a-1c34-49fd-9cb2-bbd1325ac4b5"
        },
        "item": {
          "id": "5362c5a2-b9bd-4cbd-bcd6-ad11fab84987",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1b70f2a6-f278-4bd6-a46b-3d7ce5e38206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38c6beb-86de-4f1b-a3c7-828c5fabe490",
        "cursor": {
          "ref": "684850dd-430e-41d5-a4e3-98d596601741",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ebb0e611-f5f5-422d-92c6-da738a213df7"
        },
        "item": {
          "id": "e38c6beb-86de-4f1b-a3c7-828c5fabe490",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d254da13-78f8-4398-b126-9abdb237f24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aace432-dcc8-4732-a3af-661d2bb39743",
        "cursor": {
          "ref": "fbd85389-cd4a-4858-b1d5-d90de81f60a9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "94621150-13d0-48cd-ae03-33a5a62eb651"
        },
        "item": {
          "id": "1aace432-dcc8-4732-a3af-661d2bb39743",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "87c5f6b8-4418-4ea9-813f-1092e603dccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1ae91d-2a6f-404f-a998-aa71ec0be015",
        "cursor": {
          "ref": "e8f712af-9bff-4d91-bc78-ba4b9cda51a2",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "22c32e90-bdbe-4403-9fc4-6ba67c1558b7"
        },
        "item": {
          "id": "6e1ae91d-2a6f-404f-a998-aa71ec0be015",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "45abef88-a4bd-4925-a3d0-d310ac0b0575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3079dd-ddfe-4377-a9f0-c272bbd332b4",
        "cursor": {
          "ref": "e5dd66e9-b863-4f77-83b8-82e616a2da1d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2d297365-088e-4131-9401-a0aff82e619f"
        },
        "item": {
          "id": "cf3079dd-ddfe-4377-a9f0-c272bbd332b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6141079b-72d1-4228-87ac-e32bf1a8fb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fb0308-7db2-4221-86ef-078a553d8e77",
        "cursor": {
          "ref": "dba7557b-947b-45f4-9759-0c99ba9aa29e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0d310ebc-19a3-41a8-b638-fa212010d1d5"
        },
        "item": {
          "id": "33fb0308-7db2-4221-86ef-078a553d8e77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "35afebe5-98bb-40d3-8b3b-293a67563837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df962007-e3a7-47d2-a692-73f56ebc9a03",
        "cursor": {
          "ref": "831b9d72-841a-4117-acdd-b7b9f9b54d4d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5ec13fa3-1086-4857-b4d8-cbb86e4b535d"
        },
        "item": {
          "id": "df962007-e3a7-47d2-a692-73f56ebc9a03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5063b1e8-934f-427e-bff2-667ff5e15f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2ac278-2c55-4773-af0c-ce785ff6fcbd",
        "cursor": {
          "ref": "98400f7e-45d6-4792-b5e2-48625c8f9876",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "42ad406c-0a31-4e49-a6b0-378ff11e7312"
        },
        "item": {
          "id": "9b2ac278-2c55-4773-af0c-ce785ff6fcbd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4c5afe67-e61b-47b3-9d96-1b32bca5ae9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae619360-02c8-440b-8502-340f6e1aef06",
        "cursor": {
          "ref": "ffed8d7b-6b24-4cfc-a146-5ce0d7e96052",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "30590f85-fbbd-450c-888f-fd57ab95d6d1"
        },
        "item": {
          "id": "ae619360-02c8-440b-8502-340f6e1aef06",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6d2e42ab-1361-4448-8518-8f47f67ef4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9fc5b3-ffdb-4f7c-aa8e-88a01f45830d",
        "cursor": {
          "ref": "51265441-ac0f-4888-a1a5-9bcad6c66940",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "48069116-e569-4fff-853e-dba5e66c0438"
        },
        "item": {
          "id": "1c9fc5b3-ffdb-4f7c-aa8e-88a01f45830d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f8fe1c30-5c04-463d-bcea-cdf9acdb274a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696a06e1-9628-4436-96d7-a8c4833914cb",
        "cursor": {
          "ref": "c71b90ed-d7a8-4324-b4e0-6d1ab4bc4710",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "95409e7b-ac21-43ab-8657-bdeaa8e0df78"
        },
        "item": {
          "id": "696a06e1-9628-4436-96d7-a8c4833914cb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "79fb8ee0-eb9d-406f-8379-9cd15e02e43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4e2dfe-6a4a-4b24-bed9-2b081213cdf2",
        "cursor": {
          "ref": "84d1917c-5c29-48a8-a999-35260b90ad9f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "af166090-e1bd-44fa-8452-330d163141d2"
        },
        "item": {
          "id": "cd4e2dfe-6a4a-4b24-bed9-2b081213cdf2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0eb04d12-43e9-45d0-bff5-f3329bc322af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a7022a-8a72-48c1-a136-2629689cde09",
        "cursor": {
          "ref": "f4b27f8e-df32-4bda-a568-6214ed7e2027",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6a0380fe-cec6-4f5a-b0f0-ffcb612af630"
        },
        "item": {
          "id": "f4a7022a-8a72-48c1-a136-2629689cde09",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6d28025a-9e7b-4b69-8a43-06e4e3dfb8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072316b9-151a-4e54-9e98-61e6f1e38667",
        "cursor": {
          "ref": "baf76271-5a86-42c0-bbdc-8328059020ed",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e5f7bb2d-d685-4656-8383-a59bf7207d0b"
        },
        "item": {
          "id": "072316b9-151a-4e54-9e98-61e6f1e38667",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "14a013bd-b1e5-4287-8abc-8235c1b05d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839517ff-ca91-46de-9361-e4e83b43f6ff",
        "cursor": {
          "ref": "a5f9f447-e02d-477f-92d3-e61a72296f2f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fe69339d-1d54-4e9b-b2d9-bb6b247f4ab2"
        },
        "item": {
          "id": "839517ff-ca91-46de-9361-e4e83b43f6ff",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3564b77e-fcac-48ce-a6c0-12a6a90451dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a112eaa6-6e43-4561-9535-4b57a614e5ea",
        "cursor": {
          "ref": "716d1d72-a377-455f-8c19-abd85740d55b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8960c7e7-5fac-4eb5-b248-5692dbce278c"
        },
        "item": {
          "id": "a112eaa6-6e43-4561-9535-4b57a614e5ea",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "930ab96c-94db-43a4-8d02-b7bd84897d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1ed489-acb9-4a10-9142-5aa2a68408a4",
        "cursor": {
          "ref": "9ad7c3b2-7088-4f88-abd0-8b0b40611824",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9c8e282b-3a37-4042-9984-9ce73b20d4c0"
        },
        "item": {
          "id": "cd1ed489-acb9-4a10-9142-5aa2a68408a4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "05e20422-f597-452c-8c8b-b6de52a513d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6beed0c-9ddb-4e36-9aa3-dd321313b41a",
        "cursor": {
          "ref": "5933bd81-e66f-45eb-a171-f4a3a4a157dd",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99914ba5-431b-4d1e-b206-88e531678bd6"
        },
        "item": {
          "id": "b6beed0c-9ddb-4e36-9aa3-dd321313b41a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "627b7c5d-6c1a-42c8-a49f-eb1ba24e45d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e8abc1-036d-48c5-a3b6-6c7b5075e40e",
        "cursor": {
          "ref": "b7c45e15-ded5-4e17-afd5-8e67be68d297",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a87efdda-fb55-4768-a525-531c915ce946"
        },
        "item": {
          "id": "86e8abc1-036d-48c5-a3b6-6c7b5075e40e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f0cb7c64-e7ec-4f6d-8336-341492d50fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7b1e09-d367-4aed-83e3-4ccea46b79fb",
        "cursor": {
          "ref": "e506e17a-56e6-40bd-9c2a-5c651a5741dd",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d49b640a-7c8d-4d34-9db5-f47d8c0191af"
        },
        "item": {
          "id": "bb7b1e09-d367-4aed-83e3-4ccea46b79fb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "73067085-5e05-4204-9e85-9ad37c3f597b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e649dc0-4838-4e56-90c8-d30874a02ec0",
        "cursor": {
          "ref": "845405e4-5be8-4977-beb4-835aea6b91e0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1ca48fa9-62e3-4044-ba32-6db2c61efa45"
        },
        "item": {
          "id": "2e649dc0-4838-4e56-90c8-d30874a02ec0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0f482f51-fefe-46f4-8a8b-94e9b5850fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1fb711-63e6-460a-ab34-315242548572",
        "cursor": {
          "ref": "3ce3c8b6-6fb7-4cf0-8b82-b8fcd392675c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fe5ccbd4-add0-460f-be6b-b8334a6a3058"
        },
        "item": {
          "id": "cb1fb711-63e6-460a-ab34-315242548572",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d540bfbf-f461-4fd4-932e-b5e37982cac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db64da0-990c-4e79-a783-224d1c27d2eb",
        "cursor": {
          "ref": "1e9e917a-0755-4b1d-98e7-c30de46eff02",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "41baecbf-e8e3-49dc-aaf1-56662f133667"
        },
        "item": {
          "id": "0db64da0-990c-4e79-a783-224d1c27d2eb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e3985739-b741-44dc-a165-779f042ddeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9b7415-3cfc-4e92-8d2b-4d4981694e53",
        "cursor": {
          "ref": "b7e211da-b88e-40a8-a038-050acb0a9e2e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4cc36eb2-f72a-4388-8fc6-c7b1dcfa2e23"
        },
        "item": {
          "id": "8f9b7415-3cfc-4e92-8d2b-4d4981694e53",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "170fa81b-0220-428d-8dd9-7def7fca3b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e029c6-a16a-4ba5-8a30-6b02faca0119",
        "cursor": {
          "ref": "f7f0b0eb-9083-4566-8c8b-b4841c90cd20",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d4524992-60c5-46af-9d68-c60aa45f2694"
        },
        "item": {
          "id": "58e029c6-a16a-4ba5-8a30-6b02faca0119",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "28a05082-29bc-4524-b4c6-520b2033a273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df463433-c573-4ff2-b747-92911d98382c",
        "cursor": {
          "ref": "dae1c5ed-1623-4b43-83ce-e315ff5f4132",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e77a4aec-2aea-4eaa-998d-fb467749b5b9"
        },
        "item": {
          "id": "df463433-c573-4ff2-b747-92911d98382c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "92ee1f07-19c5-4d8c-a29a-7ca2a8e6a241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b6951b-33d6-4dc0-9477-39f77952f83d",
        "cursor": {
          "ref": "0a3db7f3-41f8-4612-9cb7-0ee036a6e68b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "10625e76-25a8-423f-82bf-ba5ea015084c"
        },
        "item": {
          "id": "94b6951b-33d6-4dc0-9477-39f77952f83d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "60c5cb33-4e81-4569-8c2b-ffddf9cf16d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed08a84-4a0c-4ef3-bc67-a9129043d74e",
        "cursor": {
          "ref": "ee255402-0d61-4310-9be6-2949d65a7781",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ea84d5a2-a123-4480-9f91-029ea1c8cf6e"
        },
        "item": {
          "id": "4ed08a84-4a0c-4ef3-bc67-a9129043d74e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bb3c4715-e621-45d9-8369-358ade5c2512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9ecd9b-f5da-4a17-ab90-ba4fcbc703aa",
        "cursor": {
          "ref": "7bc0e5fb-02c4-4cff-a308-37058461f9a1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2f789916-122e-49b9-a68e-a21b7adda325"
        },
        "item": {
          "id": "4c9ecd9b-f5da-4a17-ab90-ba4fcbc703aa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a5c2fff3-fc68-4df1-9a97-7ae57d3ac307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b7c197-cc9d-4cbe-b2de-31d634d9ff93",
        "cursor": {
          "ref": "32203760-5973-486e-8bb8-af72c62de9b3",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e2687eaf-0acf-4023-b0db-b0fdb4b47d15"
        },
        "item": {
          "id": "26b7c197-cc9d-4cbe-b2de-31d634d9ff93",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c6ac8866-87b5-4fed-af40-127178117b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f6f123-49c0-4dfb-b4a8-567cdfca239e",
        "cursor": {
          "ref": "4c66cbd8-8059-4a54-8fdc-bf531ddacd1d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "213bb2b8-e0ed-43c8-a1be-39c9ab7e996f"
        },
        "item": {
          "id": "07f6f123-49c0-4dfb-b4a8-567cdfca239e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "961833f4-24c3-461b-9ddc-d97a9ddda0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf76b835-e17e-43c6-963f-67862916f81a",
        "cursor": {
          "ref": "15a6fb96-4ca9-44df-9077-2a3301572e4b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "06c19e40-8698-4d6d-a404-d8b408bc21fa"
        },
        "item": {
          "id": "cf76b835-e17e-43c6-963f-67862916f81a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "33dd0d1d-78e1-46ab-9c45-4ec13c91508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058f799a-ed2e-4ef8-aaf6-88937bd4bc24",
        "cursor": {
          "ref": "c87f03c0-09bc-40af-8cd7-720ed41b05c8",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "271351b0-d045-4ae0-a45a-adb949591a2c"
        },
        "item": {
          "id": "058f799a-ed2e-4ef8-aaf6-88937bd4bc24",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7f6f3dfb-c1e7-4152-bf4d-4b76a51dddc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f875860-0fb1-4914-a2fb-da8f1670ac8f",
        "cursor": {
          "ref": "dc7c8eca-a337-4684-839e-2a5f361ce484",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d9fac700-4a3e-40c5-808b-891f23c49cb4"
        },
        "item": {
          "id": "2f875860-0fb1-4914-a2fb-da8f1670ac8f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2490ce18-0720-474f-a0c0-fa9be4edd427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9137f3c4-752c-4c95-8188-b1a7a16c7f57",
        "cursor": {
          "ref": "53bdb60f-d511-46a6-9116-5836aa8c1cd6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "33c62c17-3d93-478c-9aba-539b92f70b84"
        },
        "item": {
          "id": "9137f3c4-752c-4c95-8188-b1a7a16c7f57",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "37c0e99b-c684-4f81-86df-0d57623671a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f04f5af-651a-4938-87ae-a6fc43bc58c2",
        "cursor": {
          "ref": "840bb822-79ce-4be1-9475-68085f49d7c5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a14d491d-d40b-425a-a603-210ad8196fec"
        },
        "item": {
          "id": "7f04f5af-651a-4938-87ae-a6fc43bc58c2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ae92f716-ce64-43e1-aef7-ee0aa08132e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3b4817-b4e5-43dd-b37a-2af91c46c1b1",
        "cursor": {
          "ref": "ec99bbb5-275a-464e-8903-c7f59ae0859c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "de62ccfb-94ee-4084-a6ad-d7bbc650371c"
        },
        "item": {
          "id": "3a3b4817-b4e5-43dd-b37a-2af91c46c1b1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "049b870a-5e11-4a26-8ad8-e016144c7dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5022d9-a6dd-44f3-8ce1-4530391a49c1",
        "cursor": {
          "ref": "e9ba78e8-3648-4290-8c35-5a3e27acefd6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e4f8c985-9956-4e40-8cde-6beb71103c22"
        },
        "item": {
          "id": "1a5022d9-a6dd-44f3-8ce1-4530391a49c1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7fadc2e7-1ac4-48b2-ab5f-13e7311da186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d41088-7f6e-4bcb-bce5-27bdc88e5c95",
        "cursor": {
          "ref": "02d8e04f-e8f6-43dc-9f24-0a5db9c0399b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "727b4d00-325d-49a2-8dcf-71df819c30cd"
        },
        "item": {
          "id": "c8d41088-7f6e-4bcb-bce5-27bdc88e5c95",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d3fd1cf0-d656-47e2-8b15-66b4c86dcddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a189bd-cb4b-4295-809a-72cfd6533fc4",
        "cursor": {
          "ref": "942e931c-6a0b-402c-82e1-f6dbfac728c0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "df265fde-67e2-4347-8070-f973439d20fc"
        },
        "item": {
          "id": "f0a189bd-cb4b-4295-809a-72cfd6533fc4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "66c7f3fb-b4e1-4264-b48b-7358ca87b787",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da71a09b-76e7-4d96-a27d-7c6a0f9a3259",
        "cursor": {
          "ref": "539daa21-51ce-4ccc-b339-165de5024b92",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "30bb4cc0-7858-40c6-93cf-983876021db3"
        },
        "item": {
          "id": "da71a09b-76e7-4d96-a27d-7c6a0f9a3259",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "73f2cb55-173c-455a-b246-e1387bce28f5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 61,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbf5b4f-2658-4d85-90e3-908dbcef315e",
        "cursor": {
          "ref": "f8bb385a-5102-49f6-9598-3e2186597bc9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "532a0db8-b60f-437c-a971-d2878cc85c5a"
        },
        "item": {
          "id": "3bbf5b4f-2658-4d85-90e3-908dbcef315e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d0484e80-3f1d-447c-8bb1-c71e8f92a552",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "492e9174-c581-4fd2-bbc3-64e1971f518a",
        "cursor": {
          "ref": "584bca52-1ec2-4ffa-bc40-d4dac88c887f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fbbbeaf9-0d5d-4e68-90de-1f3888e306ed"
        },
        "item": {
          "id": "492e9174-c581-4fd2-bbc3-64e1971f518a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "adc82625-74d7-48e1-823d-5b573dafccc1",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "56304261-4ba9-430f-97f6-cf060df0fbc4",
        "cursor": {
          "ref": "16eee7a1-88a7-4874-bdb5-48e09e12ffc2",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "10ff4bff-3b95-4c09-8ca4-108628d8d6ae"
        },
        "item": {
          "id": "56304261-4ba9-430f-97f6-cf060df0fbc4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0fc8caec-f624-41e2-8dd6-923a43c60945",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ff26bb-8f66-4a57-b4b4-178b6483c4df",
        "cursor": {
          "ref": "86245714-aab6-436e-b564-cfbbf1da18c4",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e5915cff-f006-4a3b-aae1-351b3d58fef7"
        },
        "item": {
          "id": "34ff26bb-8f66-4a57-b4b4-178b6483c4df",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b969a85a-3486-4f19-ae3e-96a4e72a10fc",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 852
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d70d77-6e3a-415b-be64-3d66d57f158a",
        "cursor": {
          "ref": "04f6aac8-ff9a-4b53-b66c-f658f00b1ae3",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "29e14ad1-b551-425c-b6b7-54f4d86a1913"
        },
        "item": {
          "id": "f0d70d77-6e3a-415b-be64-3d66d57f158a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ac824361-5361-445e-9120-6f0ba72be290",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ab72a2-c48d-4138-8841-4375742d1617",
        "cursor": {
          "ref": "20e4cb2b-5b2e-4948-a311-6e6d8d68c3b4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "87667314-d73c-4914-8622-5d3b6186007d"
        },
        "item": {
          "id": "82ab72a2-c48d-4138-8841-4375742d1617",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fa5f4e46-b7c6-41a4-867d-f0cd22a879e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ab72a2-c48d-4138-8841-4375742d1617",
        "cursor": {
          "ref": "20e4cb2b-5b2e-4948-a311-6e6d8d68c3b4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "87667314-d73c-4914-8622-5d3b6186007d"
        },
        "item": {
          "id": "82ab72a2-c48d-4138-8841-4375742d1617",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fa5f4e46-b7c6-41a4-867d-f0cd22a879e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c0243c-a85d-4144-8374-bef85fa2f4c2",
        "cursor": {
          "ref": "06ad2e6f-6c93-4496-b873-4ae34a67523b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f8a05f75-e200-42f7-a170-106e66917a42"
        },
        "item": {
          "id": "e3c0243c-a85d-4144-8374-bef85fa2f4c2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "38c5c577-b2df-4329-854e-10b528ea6c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e434fd93-f46b-4140-84a3-f146969f38e2",
        "cursor": {
          "ref": "413326a1-62ee-46ed-ab15-f955eb6f8f44",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d40954ce-28e5-4217-abc4-e6429d294b10"
        },
        "item": {
          "id": "e434fd93-f46b-4140-84a3-f146969f38e2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5946a90b-923e-41e7-9c64-af03d24b2471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1bf776-8c0a-4fb1-abb0-6482c702aaa8",
        "cursor": {
          "ref": "0e85c001-0917-43e0-bb03-5b7269a01245",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a080cbf9-835c-44bc-93d1-802a4afd4170"
        },
        "item": {
          "id": "3f1bf776-8c0a-4fb1-abb0-6482c702aaa8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dc94d9c2-7a8d-4a61-a5ce-25d16aa07e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b1b3c9-0b99-4926-b251-f0bbb2d7e1d3",
        "cursor": {
          "ref": "5b6afd4e-a458-4fce-b65a-1b853c229052",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ecb97130-1973-471c-aed1-e7fe2d679dc0"
        },
        "item": {
          "id": "72b1b3c9-0b99-4926-b251-f0bbb2d7e1d3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3a549361-828f-4e19-b24f-7ccd4124bb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad74786-fa65-4179-a981-c70d0d7a6817",
        "cursor": {
          "ref": "6cc5fd4a-d5f7-4455-86c9-97b12df31f89",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0c864e4c-a961-4825-b953-adcf8a385645"
        },
        "item": {
          "id": "9ad74786-fa65-4179-a981-c70d0d7a6817",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "108dcea5-8a67-4fa2-8b44-ff117143467a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3599d1f-83c8-4a8a-a936-a83883156f03",
        "cursor": {
          "ref": "ffd4a20a-9412-4c7a-8b2d-dec4fe1df561",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9901d9d7-2c0c-4dc0-ae9a-f8aefefa79ae"
        },
        "item": {
          "id": "a3599d1f-83c8-4a8a-a936-a83883156f03",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2e54c588-b4b1-4ebf-aba7-400ffaaee8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cece325c-c2fb-41df-924d-54b4ea5f8558",
        "cursor": {
          "ref": "73f6e4a5-3792-454e-a784-59cecc213326",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9a0aac2d-5eac-4e06-89b9-1a8d0dbd2dc6"
        },
        "item": {
          "id": "cece325c-c2fb-41df-924d-54b4ea5f8558",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5613a2ae-9305-4ca3-9f12-f0fa6b289303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f3c6c5-e3b2-44b3-803f-5f42ab75428f",
        "cursor": {
          "ref": "3d9bb7e3-bbe4-437b-a558-386172824041",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ad5cfccc-2a1c-4611-b1c6-888468661ea1"
        },
        "item": {
          "id": "07f3c6c5-e3b2-44b3-803f-5f42ab75428f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "60cd1b3a-a50f-491b-88c5-6d5e144a5334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c009e9c6-2f94-415f-8101-d51a6a9a84dc",
        "cursor": {
          "ref": "d50c47b8-5152-4549-bd24-99236a8bf931",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7170a9f3-a89b-4ffc-be43-850c8991d733"
        },
        "item": {
          "id": "c009e9c6-2f94-415f-8101-d51a6a9a84dc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e8706f2c-5e1b-45cd-80d6-607a7352bc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5669560f-66f1-4564-83d7-1f21da5f7e06",
        "cursor": {
          "ref": "be5263b9-55a5-4d58-83f5-f83b175bbae1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c9f6c63d-b985-4e4b-b212-b9146d5f0a84"
        },
        "item": {
          "id": "5669560f-66f1-4564-83d7-1f21da5f7e06",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "999c8510-6914-43a6-9cf5-042cd19938b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a05698d-0f01-4f50-a3a8-aaa53fe66c2c",
        "cursor": {
          "ref": "27b89541-a747-4b0f-b7c2-1b1ea18bb8a7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fafa5be0-9a10-4676-9af1-3ee7b5b3a8c5"
        },
        "item": {
          "id": "1a05698d-0f01-4f50-a3a8-aaa53fe66c2c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "372a3b3b-619a-49e9-8b76-89eadfcd5a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9971dabf-10df-4a87-a31d-a1bdef2d726e",
        "cursor": {
          "ref": "3b818939-7416-4a7f-81df-d1e542942390",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "64db7ea2-da20-4af3-862e-a16a42efd847"
        },
        "item": {
          "id": "9971dabf-10df-4a87-a31d-a1bdef2d726e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7392c9a3-e95f-4464-ac91-63b738a1a53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd806bdf-1a6a-4ee7-ae9c-d8ad3e97f452",
        "cursor": {
          "ref": "104aa5fe-e012-4444-bd7e-705e2932dd1c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6d975055-e02f-4d10-a4d2-095da4fce4c1"
        },
        "item": {
          "id": "fd806bdf-1a6a-4ee7-ae9c-d8ad3e97f452",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8cab4956-8074-4261-8d37-9621e3958b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd72687-fcb0-41df-b3ae-df05da3b98bb",
        "cursor": {
          "ref": "5713a442-c175-4d79-99e3-69f17195e9ec",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "955ee3e6-3b9f-4750-ae3d-aa5997b8bb37"
        },
        "item": {
          "id": "2bd72687-fcb0-41df-b3ae-df05da3b98bb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3b84252b-19ae-4b7f-88d6-c6c4be7d4730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c4182d-a22c-400b-88fe-d091105822e1",
        "cursor": {
          "ref": "5c2ffa75-a80c-4eac-a4b3-4b8a92016fe2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "343a39dc-d1d5-447b-a79a-ca684b2625fd"
        },
        "item": {
          "id": "59c4182d-a22c-400b-88fe-d091105822e1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c2e908f4-0ed3-4e3b-af7d-2e07aa41bc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fed403-bbd4-41bc-83bb-404fc9a06863",
        "cursor": {
          "ref": "bb6cea49-e268-4ee5-a935-7ee3842ee9c5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2b2f2e40-4815-49cd-a28a-c31da20a0f97"
        },
        "item": {
          "id": "63fed403-bbd4-41bc-83bb-404fc9a06863",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "85296257-310c-4773-bc5d-9d1a9df214ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4126a165-b334-459c-8558-f2886a5aef70",
        "cursor": {
          "ref": "f15d3867-48f3-4597-a7ce-6933126d70f8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a0d7ae26-7a8c-4c1b-aaa0-3e7cbbe7442f"
        },
        "item": {
          "id": "4126a165-b334-459c-8558-f2886a5aef70",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2f91a7a7-4585-49f6-b2d4-a024b83e61df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12440ab1-f83c-425e-9567-b751c36236e7",
        "cursor": {
          "ref": "33c76575-8c0b-4e55-bd51-e970a1e61827",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fe1088b2-a1bf-49cd-8ddf-c97034f115e1"
        },
        "item": {
          "id": "12440ab1-f83c-425e-9567-b751c36236e7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7ff9003c-e5f9-4549-9779-ff4e6f424463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb0f713-e355-4a20-9850-3ac8c946feee",
        "cursor": {
          "ref": "ea30276d-2fb9-4e64-8f62-7179fe4fff87",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1e2f5447-deb4-4b3c-a832-14df1a21ef7a"
        },
        "item": {
          "id": "ccb0f713-e355-4a20-9850-3ac8c946feee",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d747d95b-5802-47b2-91aa-4f2c6898a72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9fbef9-ff2a-49cb-b0a7-5b6222e95eb1",
        "cursor": {
          "ref": "7f2d2da8-396c-4f4a-a5fd-71777c447e3d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ab982fb1-6782-4014-b370-f111efc76020"
        },
        "item": {
          "id": "1f9fbef9-ff2a-49cb-b0a7-5b6222e95eb1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "94767783-c574-4c69-908b-d5de4e5676e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0665c1c-d226-498d-a3d7-f03b07c07aa1",
        "cursor": {
          "ref": "eff3684d-fc14-40b0-ae61-ad3f962ca44c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "45aeab2a-41b3-4353-92b1-a0bb10dcac9e"
        },
        "item": {
          "id": "a0665c1c-d226-498d-a3d7-f03b07c07aa1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "75700a6d-5c43-460c-9236-d6be3d07bca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8caf5a-87e7-42b5-a03b-12f4ae64c611",
        "cursor": {
          "ref": "def7efd6-896c-483e-b25b-19cf1a39ef35",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a9dafc90-4293-4b65-ba5b-66c2530894ff"
        },
        "item": {
          "id": "ad8caf5a-87e7-42b5-a03b-12f4ae64c611",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "742f40bb-e79b-4915-83a4-9272ce55b842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d325fb21-34fb-4b17-a209-d492df517786",
        "cursor": {
          "ref": "a6351ba1-6391-4dd5-bceb-282a7ade7704",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2fefe1d6-f4ae-4370-a49c-4fb814ad1733"
        },
        "item": {
          "id": "d325fb21-34fb-4b17-a209-d492df517786",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3ac93a05-d60d-47a6-8644-e4be85c5ebb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12546c5b-9675-4ce5-b10a-b81b4e414fbf",
        "cursor": {
          "ref": "ee207a75-3dc3-4d40-bf0c-45bba0d18b17",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8332f9f4-089b-4d7e-97ad-2907cf6d3d17"
        },
        "item": {
          "id": "12546c5b-9675-4ce5-b10a-b81b4e414fbf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "919f21be-bbeb-47ec-9fae-7f63892d081a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37073aae-c118-457f-8622-09d1147c4f98",
        "cursor": {
          "ref": "5d88e48b-6d76-4ca1-8661-c393055e9e1c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9f92c896-8a5c-417e-8e5a-e439050b5665"
        },
        "item": {
          "id": "37073aae-c118-457f-8622-09d1147c4f98",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "67725242-d5de-4765-8e73-21c8bebc4916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a83cc64-8405-4648-a15f-b1d157081e93",
        "cursor": {
          "ref": "9cc5e2a3-feea-4c83-aea4-a073fc445838",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fdd37484-2160-412a-8fde-412b23f3e0b5"
        },
        "item": {
          "id": "8a83cc64-8405-4648-a15f-b1d157081e93",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f97c63ba-6db5-4283-b11b-7a59e982c7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b443b69f-c442-4cdc-a91e-6c9022132fe2",
        "cursor": {
          "ref": "bacc11b9-2aa7-46de-86c7-f3a42d92be48",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "601fed61-e4dc-4d9a-8580-da6dcb39f7a5"
        },
        "item": {
          "id": "b443b69f-c442-4cdc-a91e-6c9022132fe2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5f802638-1f18-49c7-ac54-9c7e5da2b616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a72da67-1eb7-4b78-9da2-d284f7ce1591",
        "cursor": {
          "ref": "d4dfd563-7860-436a-8c1f-e56438b4bfa5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9d5687be-00fe-49fe-8ce7-6935ae78c789"
        },
        "item": {
          "id": "5a72da67-1eb7-4b78-9da2-d284f7ce1591",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6a64a72a-4f39-416e-9b0c-bf21c7b94368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656af418-d9f2-4b0f-8d1d-f24d8e707337",
        "cursor": {
          "ref": "73abad4a-247f-41e8-ad29-08547d2fd6de",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "80dc37dd-15b7-43c9-8565-8a758a0f1cef"
        },
        "item": {
          "id": "656af418-d9f2-4b0f-8d1d-f24d8e707337",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1120c1cb-7583-4309-a585-764a0e909815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9acb5ed-b064-46cf-bd0a-882081cd8188",
        "cursor": {
          "ref": "dc4bb584-b01d-4e82-98f9-db05fff73259",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f7b6eda7-fa8c-4884-896c-4f82d9ba62f0"
        },
        "item": {
          "id": "b9acb5ed-b064-46cf-bd0a-882081cd8188",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c850736f-ac4b-439a-b8ce-cd18f21b2ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014975a9-479b-4a14-8282-17bd27a4b4c1",
        "cursor": {
          "ref": "0557a3fd-0df1-4eb6-b554-db96dd680678",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "daacc635-e8c4-4c52-929d-aa1e302bd35d"
        },
        "item": {
          "id": "014975a9-479b-4a14-8282-17bd27a4b4c1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e3ed5342-4151-40ac-9987-faa9bcefb5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffbcf86-5ea4-46dd-bea4-493e746eca0b",
        "cursor": {
          "ref": "703a1ed9-9370-4c97-bf4a-b722b5c25349",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c3f7f08b-5939-4767-a784-d0f293104433"
        },
        "item": {
          "id": "8ffbcf86-5ea4-46dd-bea4-493e746eca0b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ad39e324-60a4-44e6-9c47-a75896eb8f60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1b1038-71a4-4c03-bcbe-757c01064caa",
        "cursor": {
          "ref": "653644f7-9591-4f0d-9dd4-b8d415ca74eb",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "90a22b78-91f0-4403-aaa9-19f30a2bc6f1"
        },
        "item": {
          "id": "fc1b1038-71a4-4c03-bcbe-757c01064caa",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4a8e90e4-fbd3-414c-8119-4dd8f9a9adfc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7f990e-0266-4f58-8ce4-5b4096874c7d",
        "cursor": {
          "ref": "ea373a5e-2aca-4ea0-adda-94750a039ce1",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "62a3a952-498f-4e01-8e78-760747c4d97d"
        },
        "item": {
          "id": "bc7f990e-0266-4f58-8ce4-5b4096874c7d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bb82069c-f72b-45bc-9c47-2426aff216b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7f990e-0266-4f58-8ce4-5b4096874c7d",
        "cursor": {
          "ref": "ea373a5e-2aca-4ea0-adda-94750a039ce1",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "62a3a952-498f-4e01-8e78-760747c4d97d"
        },
        "item": {
          "id": "bc7f990e-0266-4f58-8ce4-5b4096874c7d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bb82069c-f72b-45bc-9c47-2426aff216b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e51fda-cf8c-444f-982e-60347400d425",
        "cursor": {
          "ref": "15a1f41e-1cc9-4851-b0b6-b617f224f9e0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4a626300-26d3-4cd8-b6e4-b6b495b944a2"
        },
        "item": {
          "id": "e2e51fda-cf8c-444f-982e-60347400d425",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b2a4683a-29d3-4e7a-aab6-3bda1f5ab885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9d678c-332b-4740-b5fd-0ded3608a48b",
        "cursor": {
          "ref": "1fe6a5c0-d62e-44d3-90f9-6ca62199af39",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6a2c0031-ce08-439a-90d0-5ac87110b5ac"
        },
        "item": {
          "id": "4f9d678c-332b-4740-b5fd-0ded3608a48b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cd5bbcfd-4b59-4b5b-a605-b1a6c2a5308d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d97912-481c-4efe-9496-6e20a53745af",
        "cursor": {
          "ref": "00981c3f-ccf9-4887-869c-9dfa8d3b10f8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ad20f053-4233-45d6-b8c1-734d54afee74"
        },
        "item": {
          "id": "34d97912-481c-4efe-9496-6e20a53745af",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6bc0edd6-8418-465a-adf7-fd94475cb70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd9c9c0-9e17-46b8-ac06-c990581014af",
        "cursor": {
          "ref": "97ed63b5-5b86-4dbd-96ac-0677b45979f6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f26163c2-1f9d-4c92-891f-2806c238d266"
        },
        "item": {
          "id": "8bd9c9c0-9e17-46b8-ac06-c990581014af",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6d204ebb-27d5-4f8d-a207-c790d67582d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6e8e5b-a63c-4152-91a6-4d31e909e710",
        "cursor": {
          "ref": "41589838-d419-437c-822f-1c5bb1d9ad2b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "731d7def-a1a7-4c60-92f9-2333c5d771c9"
        },
        "item": {
          "id": "8c6e8e5b-a63c-4152-91a6-4d31e909e710",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "791df543-735d-464c-bc1c-fca783bda69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c840f3c-16fc-4b06-a847-ca6b1d6225d4",
        "cursor": {
          "ref": "0cd0e4c5-7d37-4e1a-b8bb-25be21e4ddf0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "191c706b-24ea-4006-b7cf-baaa38c61284"
        },
        "item": {
          "id": "8c840f3c-16fc-4b06-a847-ca6b1d6225d4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9298c3f5-5ff7-484d-9c2d-a3f715950e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b7ed6f-2ea6-46cb-b562-d0f4be4e81c4",
        "cursor": {
          "ref": "a2f797b2-282e-48ea-90c6-3a658ba07e7b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9329a911-d384-4154-ad72-0fa14d519588"
        },
        "item": {
          "id": "94b7ed6f-2ea6-46cb-b562-d0f4be4e81c4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4ae9a5a1-eae7-43d9-9a35-d4dcd426168f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8796af8e-1af9-47f9-aa73-26c2453512b1",
        "cursor": {
          "ref": "387fefa6-8e31-4f1b-9fd0-aa24a3aa13f2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "82751960-486f-4020-94a1-28c0ba0b6917"
        },
        "item": {
          "id": "8796af8e-1af9-47f9-aa73-26c2453512b1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "74eb6f4a-df11-4d8f-b896-d9d9d1f286c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79e0ac3-ef1f-45f3-8716-29d7fd9bf5c7",
        "cursor": {
          "ref": "e0f20eda-f594-4c99-bace-0bf024156c94",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8cad9ba2-80a7-4738-ad19-9ba755d47808"
        },
        "item": {
          "id": "e79e0ac3-ef1f-45f3-8716-29d7fd9bf5c7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6eaf67c3-b569-461a-88cb-81c2aacaee6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7198216f-76f7-4481-a979-8e4d9763f530",
        "cursor": {
          "ref": "865a086b-d968-4301-8722-8134c3f51484",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "365f6283-e47a-4182-ad41-46c0fc4aa2b6"
        },
        "item": {
          "id": "7198216f-76f7-4481-a979-8e4d9763f530",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8a589012-a37d-4a74-9165-0bcf4fa4bacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c2ccda-d217-4adf-ba07-7a36168d509e",
        "cursor": {
          "ref": "04182b46-c578-479e-a14c-1bd075f14daf",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "70ca9ddb-2d6c-4081-b073-360fcf43a3a5"
        },
        "item": {
          "id": "42c2ccda-d217-4adf-ba07-7a36168d509e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4a12fada-3c0b-4076-9d66-9d321f43df83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc1023d-c6a5-450e-abd9-e5da3cafab82",
        "cursor": {
          "ref": "6254d7c6-ca42-4549-a30b-8a55cbc8010a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "df67c1f3-294f-4df4-8460-64c2d2a2c775"
        },
        "item": {
          "id": "3dc1023d-c6a5-450e-abd9-e5da3cafab82",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "40812dbd-74ae-41bf-aebf-1d1db6cd84ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a54474-0065-4c3f-8cdc-dbdc6e362315",
        "cursor": {
          "ref": "0f154dcd-0e1d-4c15-abd1-856f0f6acd7f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e4187984-56ac-46ad-85c7-5fb802137dc5"
        },
        "item": {
          "id": "e9a54474-0065-4c3f-8cdc-dbdc6e362315",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ce4b511b-81ed-4e30-9337-b3c50cbba171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e63f1dc-fd91-470c-9bae-32794a2bb16c",
        "cursor": {
          "ref": "405dbc2c-304e-4337-8a9a-dab1b5b274d1",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9c9f3bf4-bae3-4c5f-8856-cdb28da1a38a"
        },
        "item": {
          "id": "7e63f1dc-fd91-470c-9bae-32794a2bb16c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0219da3f-38ad-47bc-a313-5a47de982add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db405f5b-46ad-439d-91d7-53bcde9dd739",
        "cursor": {
          "ref": "34f22a9a-b41f-4c4f-98b5-6a86e4d787c4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ee961e3c-fd93-4573-b310-a4a59d31fc3c"
        },
        "item": {
          "id": "db405f5b-46ad-439d-91d7-53bcde9dd739",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f8565744-bba6-4e2a-99c8-385edc7e495c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee6b4af-736f-446a-87a4-97a15ed701a8",
        "cursor": {
          "ref": "a8ef8ba3-a333-4252-8795-ee087d876125",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a944a2b0-5fe7-4591-8369-ef4d86a9f6fe"
        },
        "item": {
          "id": "5ee6b4af-736f-446a-87a4-97a15ed701a8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d5d54bda-81a2-49a4-ab47-85dee4628183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f4c76a-6603-459b-b864-9e5d5ce17fc8",
        "cursor": {
          "ref": "6c3577a3-487e-4f27-9d9e-41c055065596",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4a26fc68-3194-4dfe-8388-3afd0db0fa37"
        },
        "item": {
          "id": "62f4c76a-6603-459b-b864-9e5d5ce17fc8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5a5292ca-6f9e-4367-81c9-04efcc4a7366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cc0c19-21ea-4b28-bc75-f361e5a5d32e",
        "cursor": {
          "ref": "a3cfa718-2171-4787-b412-a2ed2314531b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bcc33487-8afc-49b3-a3cb-0b6c228ea098"
        },
        "item": {
          "id": "89cc0c19-21ea-4b28-bc75-f361e5a5d32e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5d9447da-bc33-4c0b-bf74-5c5615a1cf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27683f6c-c662-490a-9c06-1d3c7a16fc8d",
        "cursor": {
          "ref": "b1049cdd-a27a-43c0-be60-73af3c5fc375",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "be6c54d3-0a6f-40ef-a150-3ed75d579906"
        },
        "item": {
          "id": "27683f6c-c662-490a-9c06-1d3c7a16fc8d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "16c9a44c-d9b8-4796-ae61-1e4ea52a6d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16256035-dc88-4aa9-b336-ebb833c62fba",
        "cursor": {
          "ref": "1e9c55fe-528b-4e05-b99f-5b5cf87f6a46",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9bb312bc-eeb2-48de-af21-15d951802549"
        },
        "item": {
          "id": "16256035-dc88-4aa9-b336-ebb833c62fba",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ade37fd1-06f3-436b-9484-71fda877393e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80565cf-749f-4fd6-9c3d-79f6e5dca6da",
        "cursor": {
          "ref": "2d6e8d09-3ba9-4007-a49a-e5f0d963b953",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a27b45b9-18d3-4bbb-ad4f-9b78a91a1e79"
        },
        "item": {
          "id": "f80565cf-749f-4fd6-9c3d-79f6e5dca6da",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fa655ce8-e2d4-4fae-991b-b9f91353419f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2866a872-471d-46c4-8bab-227fa6abdeb5",
        "cursor": {
          "ref": "6733209d-1ade-45e0-8465-f3649d34acf4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "38f1a716-5f6a-4c5d-9b81-e3f463a43151"
        },
        "item": {
          "id": "2866a872-471d-46c4-8bab-227fa6abdeb5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "95ecccf4-28b8-4cf0-a1f3-54c1fd61d6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233e7f1e-e88c-48cd-aab1-e2647d4f10c5",
        "cursor": {
          "ref": "f50969b4-8295-4b23-a479-c74516c020da",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f582fd91-5513-43fc-a8d4-137890c76b67"
        },
        "item": {
          "id": "233e7f1e-e88c-48cd-aab1-e2647d4f10c5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "de18a687-3280-447e-bf9d-ccc8265edcb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f59fa62-b9fd-49be-9347-040097afc20f",
        "cursor": {
          "ref": "5084e18b-5802-454a-b567-ee3609a74eba",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ea85016a-0c54-4bac-b828-691f634ffd0b"
        },
        "item": {
          "id": "4f59fa62-b9fd-49be-9347-040097afc20f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "08d93929-5182-4b40-93a3-c383028400f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7598153-d62d-4965-ace0-f4130d251e7f",
        "cursor": {
          "ref": "aed92a34-c060-4b72-bf7f-f54764dc2688",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "401e1c82-bd05-41cd-af91-60fc8e11d12d"
        },
        "item": {
          "id": "f7598153-d62d-4965-ace0-f4130d251e7f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2a6a457b-28c8-45a3-9838-e0b3bb0d7630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d993054-d8dd-49ef-a35c-10a7867856aa",
        "cursor": {
          "ref": "fadca01a-cb1b-4e37-bd92-bbf9bbc3cb7a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "efbe3a01-3f64-4773-a37c-7bec6025b9e9"
        },
        "item": {
          "id": "9d993054-d8dd-49ef-a35c-10a7867856aa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "123c69f8-7d54-4196-8b62-4f207245b8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5ee73f-516a-4ff7-949b-5115be117c25",
        "cursor": {
          "ref": "c575dc7a-ca1c-4e01-839a-927423e52fdc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c221d69a-9c42-471b-b4af-006c2f06f3bf"
        },
        "item": {
          "id": "0a5ee73f-516a-4ff7-949b-5115be117c25",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "543c9d55-7ec7-442e-8ae5-c542e636bac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf73514-ff6e-45cc-bd0a-48d4ca46d7ae",
        "cursor": {
          "ref": "5e397863-a3c3-4b77-90a2-cd71195557e0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2a8509e7-1626-43ed-8601-1816d336a732"
        },
        "item": {
          "id": "bdf73514-ff6e-45cc-bd0a-48d4ca46d7ae",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5cb780e6-a0e3-4970-a9db-daf6c093a4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd64632-3142-495c-b3b5-a96016b66fed",
        "cursor": {
          "ref": "4711c006-0bbe-47ca-9001-0129fa1637cf",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9ca317eb-fbba-455d-bccc-ec11139b5ebc"
        },
        "item": {
          "id": "3dd64632-3142-495c-b3b5-a96016b66fed",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "51db47c8-a192-4c24-a904-3ab37835fbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a72f9bb-ec1f-4dda-a2e3-3cafb3584369",
        "cursor": {
          "ref": "72272517-ae3b-43e7-ad87-1f0ea604d11e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7666fd8b-11b9-4500-9848-d820e8e3c14c"
        },
        "item": {
          "id": "4a72f9bb-ec1f-4dda-a2e3-3cafb3584369",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a3fa1663-ea43-4b74-a3c0-aa2ba05a0552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d810ca33-6177-4c9a-9530-856c7a20de5a",
        "cursor": {
          "ref": "bdfbceb8-e19e-41a8-974c-a0dd58d5c30e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c92c90ff-1056-4c1c-931f-fa6f9d17f89f"
        },
        "item": {
          "id": "d810ca33-6177-4c9a-9530-856c7a20de5a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a377adfe-b888-456b-997d-db96a8aeffff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313a9f44-2df1-4562-91e0-8749747368cd",
        "cursor": {
          "ref": "2fd750b2-b983-45bc-995e-ddf8a80239fa",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7dd85848-f8c1-4ff1-848c-a826ab64e0df"
        },
        "item": {
          "id": "313a9f44-2df1-4562-91e0-8749747368cd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6e0786d9-2073-48a5-ab4c-803cc35b50a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52dfee9-9d44-4c1f-912f-9eedebf29e02",
        "cursor": {
          "ref": "ca1575e6-90ee-4880-a5c1-11dea78f2fc0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4e17d9eb-c387-4a1e-8e02-3ae734032b00"
        },
        "item": {
          "id": "b52dfee9-9d44-4c1f-912f-9eedebf29e02",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "05eb86e6-f737-45ed-be88-6d6e02883368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c562c8c-64fe-438f-a405-1d4e3c80371a",
        "cursor": {
          "ref": "54922e9f-daa5-4185-a998-987fa44af784",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "35903121-5251-4a66-84e5-f30ecfb21447"
        },
        "item": {
          "id": "8c562c8c-64fe-438f-a405-1d4e3c80371a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5f700641-21cc-43de-87d5-041a2ce48c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7733e47e-81f8-411b-b03d-6716812da7ab",
        "cursor": {
          "ref": "0e142d4b-b513-4c60-bd0b-48f0df3cf140",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "74724f32-7703-4a7a-b9c4-d5b874d74b0a"
        },
        "item": {
          "id": "7733e47e-81f8-411b-b03d-6716812da7ab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "21984404-b5d7-4ff7-a823-76abb73d7bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f81a263-0eac-4d93-aff6-a99b21ab10c1",
        "cursor": {
          "ref": "29033754-f531-4c8c-a354-01161c9c0a3e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6f3eacb2-2e55-4b07-84c9-8a68140715f4"
        },
        "item": {
          "id": "0f81a263-0eac-4d93-aff6-a99b21ab10c1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b1b462a5-46fb-4bc2-aead-4fba6cdd3fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e409eac-799d-4f99-a24c-b43b11d6aedf",
        "cursor": {
          "ref": "4311ef07-87de-48ae-b4e1-607ddf301dd7",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "796303bd-0e60-47b7-900f-b48db6bbd4c9"
        },
        "item": {
          "id": "1e409eac-799d-4f99-a24c-b43b11d6aedf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "09604dd8-5008-492e-b559-48b347a6a03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5fa6bf-c6e1-4787-90c2-ec1f73b4d323",
        "cursor": {
          "ref": "91ea107a-76b5-42db-9eb3-2d9ab8cd779f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3554bfdd-3743-4d43-8f88-3bc0bbba1b31"
        },
        "item": {
          "id": "5c5fa6bf-c6e1-4787-90c2-ec1f73b4d323",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e9a8dc84-1ddf-427b-aee3-c9a29851e548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8370f0-15ac-46db-b6d1-5eb2c6641fa7",
        "cursor": {
          "ref": "cf70ae3a-f8c7-4106-addb-41154bea37de",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4f1bdb9d-a209-4e11-a5b5-abb528b2b866"
        },
        "item": {
          "id": "2a8370f0-15ac-46db-b6d1-5eb2c6641fa7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "644358c2-1560-420a-91e0-219a5f0acdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe76087-7bfe-458a-b26f-10518378be4b",
        "cursor": {
          "ref": "69e0b81a-39dc-422f-8bc9-8128fc849aa0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2be7452b-4095-4d5f-a84c-c4935be7b3b1"
        },
        "item": {
          "id": "afe76087-7bfe-458a-b26f-10518378be4b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7ba6f700-6ea9-4116-9161-4c1f6cc5b1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea4026d-7cab-4029-b960-a6c9c7ba9e87",
        "cursor": {
          "ref": "6c8147a3-f450-40d5-aa00-47154e7ad7ee",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d26089e6-9957-481e-9cce-34bd10d0bf29"
        },
        "item": {
          "id": "7ea4026d-7cab-4029-b960-a6c9c7ba9e87",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f0495aa8-c0a2-4354-bc40-23547c6e5781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baca3eab-e8df-42f1-aa2b-3f6a874a61d2",
        "cursor": {
          "ref": "d2f291a8-8150-4d82-a1a4-a610c144455c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9bd68852-2f4d-47b3-ab7e-141b24de1e83"
        },
        "item": {
          "id": "baca3eab-e8df-42f1-aa2b-3f6a874a61d2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9484c224-8676-4395-868b-eb0c669446d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d225be4-feb4-4d23-b7f4-33ed139b421e",
        "cursor": {
          "ref": "673aaa02-8a52-4e09-8d62-058ebd9d0387",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "24f2c896-5483-4868-8930-23507971ca18"
        },
        "item": {
          "id": "3d225be4-feb4-4d23-b7f4-33ed139b421e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "97f99510-35c5-4988-ba70-f5ce355167fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca6f863-493d-4bde-92d1-9947e922c422",
        "cursor": {
          "ref": "0fbe624f-5ea8-4866-999b-48237a960728",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6f701e86-f2b8-4a36-a21f-1b4f61d16272"
        },
        "item": {
          "id": "5ca6f863-493d-4bde-92d1-9947e922c422",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "16abacd5-2a2b-4039-a5bc-2cbb3260e55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f50fdd-2830-46cb-a56a-aa22b3788cc4",
        "cursor": {
          "ref": "80d9eee5-a4e7-4581-b7a3-d4be702c3673",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5e1ed0b5-7755-4d81-9c81-771eb88e285b"
        },
        "item": {
          "id": "f6f50fdd-2830-46cb-a56a-aa22b3788cc4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "56694ba0-53c4-4320-a451-53a89d55cf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf826c8-ce0b-4f57-8cb6-b910ac24dd8e",
        "cursor": {
          "ref": "34050921-c507-400f-a72b-640c82f29b7f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6ee73a06-ddb3-4bb8-b884-8047dbee1985"
        },
        "item": {
          "id": "2cf826c8-ce0b-4f57-8cb6-b910ac24dd8e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fc0cc49f-7116-4c77-911d-fcbdf099c303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efe1ab2-1f0b-4a0b-babc-d716aed0dc73",
        "cursor": {
          "ref": "4066ca9e-27c7-475f-985c-a333f2ff302d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2e72a97f-046e-43bf-825d-1d5ea82b4b85"
        },
        "item": {
          "id": "1efe1ab2-1f0b-4a0b-babc-d716aed0dc73",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3b921fc2-6a73-4f7a-9484-be5c09a9003e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f7c271-b56b-466b-a2fd-b7672afb123a",
        "cursor": {
          "ref": "e593fca1-7b34-41bd-be5b-28f49c65f220",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8c405f68-1f5b-43cf-8acc-36f311d0a2ac"
        },
        "item": {
          "id": "44f7c271-b56b-466b-a2fd-b7672afb123a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7393b6db-6ec7-4819-aa31-21a2cd6a53db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0adecc-3a76-447e-8f28-d9e52dd7cc85",
        "cursor": {
          "ref": "5b47d133-5b14-49e0-b8df-c254975b5546",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a57af9b3-0ffd-4c93-95db-db12006ff36c"
        },
        "item": {
          "id": "ca0adecc-3a76-447e-8f28-d9e52dd7cc85",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1d393cb1-7103-424e-b2ab-d572dab99701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89d7a3b-c26b-47dd-95f9-bb0c155cd042",
        "cursor": {
          "ref": "896b3984-e752-4e8b-a4a6-b16131e84465",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "82331f42-8fbc-47af-986a-c8261538932d"
        },
        "item": {
          "id": "e89d7a3b-c26b-47dd-95f9-bb0c155cd042",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f381fc9d-0773-4464-9d8c-5f94aa3aa254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffdc851-36de-4719-ad23-9fbfcb659c4c",
        "cursor": {
          "ref": "b09e92fa-8594-4cca-bb20-aca97bd42ece",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cfc24444-ca8a-43a8-9871-6fc60254a916"
        },
        "item": {
          "id": "bffdc851-36de-4719-ad23-9fbfcb659c4c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "08763feb-b2aa-493e-b666-2c784bbfce9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3fbefc-2478-403d-86e2-888c9cb41db3",
        "cursor": {
          "ref": "572848b2-025b-4308-8cb5-058d375fdf53",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ac95976f-5be9-4cbc-b192-c2aa60de8623"
        },
        "item": {
          "id": "fb3fbefc-2478-403d-86e2-888c9cb41db3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f09815ab-62b3-4795-8838-67bc5f6494d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa1a714-7c2b-426e-bf92-b811a2a9c9be",
        "cursor": {
          "ref": "be2c810d-0fa1-42c1-89c6-ce7d6205a26b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dc00596b-eba4-4563-abd7-388234431166"
        },
        "item": {
          "id": "2aa1a714-7c2b-426e-bf92-b811a2a9c9be",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "47bb013d-20e9-4d7a-954c-b64d0274ec61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a445fc-ed13-445b-a78d-aaec0ed760da",
        "cursor": {
          "ref": "5a1f3300-9046-4964-b4e3-f04a837e5269",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8b3df27b-df7b-457a-af99-7c62930cb45a"
        },
        "item": {
          "id": "a4a445fc-ed13-445b-a78d-aaec0ed760da",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8cc1018a-a4a8-4b3f-9832-962f62c6b7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cb8c71-3946-41f5-9923-0fb473973214",
        "cursor": {
          "ref": "8a38d0b8-f23b-4f10-b01e-71ff28d9550d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4edd0bb3-7800-4ca3-818f-185d21e83933"
        },
        "item": {
          "id": "78cb8c71-3946-41f5-9923-0fb473973214",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a0c3299c-0e2c-4da1-8b9c-edcb169d1fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacf7e1a-36cd-4837-9128-b82f92384c07",
        "cursor": {
          "ref": "d217e856-0ed0-4b46-b4be-9f6c9eb8aeef",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cce35214-2501-4584-8e2b-7c1158bc3dbc"
        },
        "item": {
          "id": "cacf7e1a-36cd-4837-9128-b82f92384c07",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2c5501f7-61eb-47ba-92a2-22dcc95133b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed0d0ab-0c5e-490d-8330-8200aae96af1",
        "cursor": {
          "ref": "d15b043b-eb04-4ecf-b12d-9feeb938339c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "725f32d4-f9e5-4d4d-b6ec-486492e465fe"
        },
        "item": {
          "id": "bed0d0ab-0c5e-490d-8330-8200aae96af1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "730a9b5d-c2fb-404e-88a0-802dbc486413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6a29b9-b5ae-4d9e-9e50-1f2177a8a3d4",
        "cursor": {
          "ref": "f6bf946d-762e-4eba-a707-0b9cd72dc857",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5ce3350c-3cf1-4576-8a83-96aaeb2c46c8"
        },
        "item": {
          "id": "1d6a29b9-b5ae-4d9e-9e50-1f2177a8a3d4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a5b3a351-49bb-4b3f-9c5f-612ed3bf1e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a0d02c-0e34-4b8a-85b4-a37bd50b4a79",
        "cursor": {
          "ref": "316058f7-6031-4432-8fa9-6cab69980f9b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ddf5cd45-a503-44ea-b2be-7d340c5f2a02"
        },
        "item": {
          "id": "92a0d02c-0e34-4b8a-85b4-a37bd50b4a79",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1088c414-a64c-4140-a113-afaeb4c0b7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75e862d-4aae-48e5-bb07-1d0056c171d8",
        "cursor": {
          "ref": "8c0a5fe2-740a-4b0f-96cf-99963e625806",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "916dfc32-b9ad-4f21-beed-d9777e30b99f"
        },
        "item": {
          "id": "b75e862d-4aae-48e5-bb07-1d0056c171d8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c1831bf8-9dab-45b9-b1f5-e4966a579b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481b623e-e620-44d1-b75e-6faf95129af6",
        "cursor": {
          "ref": "48c3bce5-ac8a-4fa7-83be-dc1f504c123c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3210ce81-6b99-48ce-af9f-c2187a1f04f3"
        },
        "item": {
          "id": "481b623e-e620-44d1-b75e-6faf95129af6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2e58bf98-6b6c-4a4d-9afb-00816363bfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5d4a93-ef58-4f2e-b57f-5a6da52109c6",
        "cursor": {
          "ref": "82ba940b-bffc-4866-a258-fba20c8a67b2",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4e7c5f9e-cf42-4bfd-af08-b217b9d20b52"
        },
        "item": {
          "id": "ef5d4a93-ef58-4f2e-b57f-5a6da52109c6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1ac418a9-7524-4ef9-881d-31b04f312289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa460e57-a86b-4358-9a6a-39891c22f4f6",
        "cursor": {
          "ref": "7df3331b-acdc-4d24-8dee-751c6ebae07a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "76de850d-1b5c-4eca-9f37-83a6db4bebdb"
        },
        "item": {
          "id": "aa460e57-a86b-4358-9a6a-39891c22f4f6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a7281a8d-06b3-418d-b6a2-cf9d79ddf0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30a6aaf-1f02-4984-a72a-60fe6cc79600",
        "cursor": {
          "ref": "b8467859-97ff-42d3-b903-f985b896a9fe",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "df17ce79-3b3c-4124-80d3-2b732c20bcf8"
        },
        "item": {
          "id": "c30a6aaf-1f02-4984-a72a-60fe6cc79600",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d999d669-c845-4a7e-9388-c5483c06de95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db44ce0-3c0c-44c6-880e-28e85428a064",
        "cursor": {
          "ref": "6ecc8865-f085-48b0-80d1-86808196c897",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f68c9825-510f-4695-8191-375c67e9b66f"
        },
        "item": {
          "id": "7db44ce0-3c0c-44c6-880e-28e85428a064",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e195c861-a673-4d02-83a6-ffed79343d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeef4fcd-1ac7-484c-8b95-85ac6920e8b4",
        "cursor": {
          "ref": "f41a23eb-bb63-4966-824e-86302cfbab55",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8beffbe3-b3e4-404d-bde2-98a56a088446"
        },
        "item": {
          "id": "eeef4fcd-1ac7-484c-8b95-85ac6920e8b4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dfdadb0b-316b-4ed2-8308-abded34af463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6646b37f-d91c-458c-8627-528c061cd6f1",
        "cursor": {
          "ref": "56509211-04a3-4bb2-914a-87ff4b9ff2e1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9f5f5b02-f224-4d10-a957-337e49a25fe2"
        },
        "item": {
          "id": "6646b37f-d91c-458c-8627-528c061cd6f1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "30e6be61-9de6-4032-be40-2384e280730a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49312f70-b6cc-4477-b5db-c831b9188707",
        "cursor": {
          "ref": "f02ea025-c4c7-44f7-8b62-c7e45f050260",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ad14851d-dbdf-4f79-a237-7ef02b8dd808"
        },
        "item": {
          "id": "49312f70-b6cc-4477-b5db-c831b9188707",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "982c5dc3-8d55-45df-b7dd-5262c7c8d81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f77baf-b42a-4fee-aa78-5da2d19abe7b",
        "cursor": {
          "ref": "9d712179-5754-4902-a74a-d0d705791672",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6fe2d73d-db8c-4377-a25d-3ae82b61b2bc"
        },
        "item": {
          "id": "21f77baf-b42a-4fee-aa78-5da2d19abe7b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a00aaaf4-506b-4a2d-be45-231906a62a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9b35d8-0456-4345-a441-ec01057f545a",
        "cursor": {
          "ref": "0353fef5-5138-40cb-b4f2-03617e12b3ad",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "65a396e7-73cb-4067-9398-40c7f0748142"
        },
        "item": {
          "id": "6a9b35d8-0456-4345-a441-ec01057f545a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e443b576-049e-4b6e-8393-9164a2b0055d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0c2cb7-25bd-4918-a29b-3987a51b01b6",
        "cursor": {
          "ref": "32814233-9a41-4604-8d88-56211e02ab69",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0c77991d-53f0-4c98-9cea-c108f676adb1"
        },
        "item": {
          "id": "3c0c2cb7-25bd-4918-a29b-3987a51b01b6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8cf03290-468b-4873-bfc0-9e8d6b7e716a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c525a706-d1fc-43e8-9d0b-567838a8d694",
        "cursor": {
          "ref": "d0976c8a-2af0-421e-9b14-c46bc5bbcebb",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ad031bf3-6ebf-4211-b39e-a5eaa5fc181c"
        },
        "item": {
          "id": "c525a706-d1fc-43e8-9d0b-567838a8d694",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2da33523-4920-4aef-b5f3-578fb2e559a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d664df6d-9fcd-4db4-869f-d2c7ba6534ee",
        "cursor": {
          "ref": "59c3483d-26b1-407d-90b8-15a4b8065660",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "95f9491a-cdec-44ee-9dc2-c8c4b9156a93"
        },
        "item": {
          "id": "d664df6d-9fcd-4db4-869f-d2c7ba6534ee",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c5cc2937-63fe-44f0-9c5c-da2ca91accf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92126b9-5187-423f-9618-c31c485d4b97",
        "cursor": {
          "ref": "903c7975-525f-4ca9-be8f-0962a698d0bd",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e1390462-ed44-4ae4-b47d-a3fe0fea6f1f"
        },
        "item": {
          "id": "b92126b9-5187-423f-9618-c31c485d4b97",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3f361f8b-ef96-4257-be44-42bd90d5ca44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451a28a5-7ff7-45f7-9dcc-cefb0d7b8bea",
        "cursor": {
          "ref": "19ff95e4-578c-4dfd-af26-89f234c20549",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c9978362-9edc-46f2-b8dd-f1e1e42418e0"
        },
        "item": {
          "id": "451a28a5-7ff7-45f7-9dcc-cefb0d7b8bea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8eac4781-336c-401e-b3a2-4740cfb8b8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f58725-14f1-4a78-ad97-fe5fa9c5720e",
        "cursor": {
          "ref": "6ba769b4-6d09-430b-acd4-f94155aee948",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "04366cb2-e0dc-45b5-8160-131dedaf26a8"
        },
        "item": {
          "id": "f5f58725-14f1-4a78-ad97-fe5fa9c5720e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a9189a27-4e85-4c59-b440-95d7fc302ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82d9598-ea17-4579-a0da-27f38258db3f",
        "cursor": {
          "ref": "f4961a8b-198c-458a-824a-c6a436bee7d2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "64fe495c-3717-4c7a-a440-1fbdc7f4395b"
        },
        "item": {
          "id": "f82d9598-ea17-4579-a0da-27f38258db3f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5ad6d535-3d5b-4e1b-9c28-d788b2f297fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e66f5a-dcd2-40d2-9639-1e33b35e7662",
        "cursor": {
          "ref": "30316f18-bac3-45c1-8c28-acc02c8e41e7",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2e0411aa-f83b-412d-ac07-3c48ba9c17f1"
        },
        "item": {
          "id": "76e66f5a-dcd2-40d2-9639-1e33b35e7662",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "895636f0-6b9b-4825-98a4-08f67bfdaf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073dd5f6-bbe8-4b99-b087-bffb09dc90ac",
        "cursor": {
          "ref": "213dcec0-831a-4523-9eec-5f119dfcbf23",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d2277042-f332-458d-893a-93a4a8793184"
        },
        "item": {
          "id": "073dd5f6-bbe8-4b99-b087-bffb09dc90ac",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c39148cf-0dd7-4c61-b577-43b799eba1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75af3e6c-2307-4c26-9658-d392bffa739d",
        "cursor": {
          "ref": "717065e2-58c1-41ad-8b1a-f4ebb77be2aa",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1911d038-70b2-44d1-bce0-962704ae97a3"
        },
        "item": {
          "id": "75af3e6c-2307-4c26-9658-d392bffa739d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6f95595d-4607-4d06-a961-bf8fe6f1f04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a139c6-5b3a-48c1-a21b-30cea4fd6613",
        "cursor": {
          "ref": "301b8e51-b86a-477b-8500-1a6b55a2eab8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5cbedf2d-0ec5-479b-a122-daa139fdb918"
        },
        "item": {
          "id": "18a139c6-5b3a-48c1-a21b-30cea4fd6613",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d1cddb42-10b4-4216-8af3-cb4c34cf490f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61fc4b6-1025-4313-8840-3676e0129160",
        "cursor": {
          "ref": "1966c01a-3100-47d1-a9d3-2bb02133fabe",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "38bac5df-c4be-432d-8a1a-1a2d930f8d1f"
        },
        "item": {
          "id": "e61fc4b6-1025-4313-8840-3676e0129160",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2da78c32-8b5b-4f09-aee1-ef2fd54ac440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d2ae75-91ee-4e26-9407-89fe88789878",
        "cursor": {
          "ref": "9d546c56-fd0b-425e-92b7-c4e59f460f5c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f1ad607f-1427-4a88-9ab6-fef248209261"
        },
        "item": {
          "id": "58d2ae75-91ee-4e26-9407-89fe88789878",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0b5cb493-02c3-4cf8-a38a-29307abe4d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6640fdbf-398b-4f49-9d07-3a991551dadf",
        "cursor": {
          "ref": "2f70fe6e-b320-40eb-aa95-475ee50f4149",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a0c5b0a1-9112-40fd-ad20-5ff7466bcd8f"
        },
        "item": {
          "id": "6640fdbf-398b-4f49-9d07-3a991551dadf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b5dedbc8-3e27-4e3a-9fbd-f58ae1ecdeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86b7caf-540d-44ab-aab5-b833aef83a0c",
        "cursor": {
          "ref": "d9915f73-dec8-458d-acc4-a3f71ae03caa",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "128e8ebd-750e-4552-83d7-b4667128b26d"
        },
        "item": {
          "id": "d86b7caf-540d-44ab-aab5-b833aef83a0c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cdce4fe2-0315-46be-af0b-1b046cad1fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e646094a-6864-4482-a72e-cf1f4f912507",
        "cursor": {
          "ref": "381d5f95-6ca8-4a99-a171-912717fd7302",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "93d7269d-0b4b-4534-bcf2-7b1c8713ade4"
        },
        "item": {
          "id": "e646094a-6864-4482-a72e-cf1f4f912507",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "302c95ff-4fd4-4f61-b5c0-ec7a1e020537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac42d755-802a-492c-adf1-120145fab41e",
        "cursor": {
          "ref": "d96d242c-b8b0-4045-bd0e-2278f1ff970a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "94fdaddf-0094-4a9a-9602-ca9990f4f076"
        },
        "item": {
          "id": "ac42d755-802a-492c-adf1-120145fab41e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "64e1697c-0892-4d89-bdd5-ebbd9da0a856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0def4b03-e9cf-4cb2-8fd3-6bc9db55e0b0",
        "cursor": {
          "ref": "496d1a51-28fc-4fec-9918-b9371bf3b668",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cac2dab6-04b3-4393-99bb-8bde1128c6b3"
        },
        "item": {
          "id": "0def4b03-e9cf-4cb2-8fd3-6bc9db55e0b0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4653dbc5-3f85-4c8f-91ce-ee7ab80d7d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277e5ab5-f36d-4532-9039-7a65559f5e68",
        "cursor": {
          "ref": "5b6e8d6c-e77a-4c71-955f-3a59740d7b24",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "de5e6976-5dd2-4bae-a712-98cfea099f8f"
        },
        "item": {
          "id": "277e5ab5-f36d-4532-9039-7a65559f5e68",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a3550f02-ac70-4c7b-8205-e84715a599a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce5f8c7-08ee-4fcd-9179-c9c9346daceb",
        "cursor": {
          "ref": "542bb6ba-ebf0-42f7-883f-ac33f62837b6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "611fbd7f-f2b2-4201-ba6c-c4774fad7ce1"
        },
        "item": {
          "id": "9ce5f8c7-08ee-4fcd-9179-c9c9346daceb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f985786b-3e79-4980-b650-664a7bfdf51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be040754-594b-49d3-9a64-7199e39dfdb5",
        "cursor": {
          "ref": "8c0bd33c-a6a2-4ba2-9820-55373e7b9409",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "00377e7b-8512-4364-93ab-16a16fdd5f3f"
        },
        "item": {
          "id": "be040754-594b-49d3-9a64-7199e39dfdb5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e12e32f6-27c2-4a13-96bc-73028bc6debd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bbaba9-9a80-40c7-bf76-50fdf0be3207",
        "cursor": {
          "ref": "ba025ad1-119e-4030-86e6-a0531335de9e",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "32b197a2-baab-41c1-aa06-e528ee8555c6"
        },
        "item": {
          "id": "01bbaba9-9a80-40c7-bf76-50fdf0be3207",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "39ffdf9b-f695-44f2-834a-229be383b125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed632fe-4e11-498d-8bb7-a184e1d702d6",
        "cursor": {
          "ref": "975d66a3-7a9e-4763-8cd9-d183791d86db",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b7c23422-6446-4c66-9059-33bbddd9bef5"
        },
        "item": {
          "id": "8ed632fe-4e11-498d-8bb7-a184e1d702d6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ec5c1bc8-cf23-46bf-9411-6fca8c4a7527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c548adc-6607-4bc1-b504-8e8ab621c57b",
        "cursor": {
          "ref": "7434b9c4-50c2-42da-9981-7747a8f6a758",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "79bfa4e1-afdb-40c8-a9cf-65ee7c131a49"
        },
        "item": {
          "id": "0c548adc-6607-4bc1-b504-8e8ab621c57b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "14b6fdf0-1909-4692-b629-99013f0f4f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aaa5b2-1f9b-4415-b4d0-7f0c298eaad9",
        "cursor": {
          "ref": "dc86b08e-ee51-4b59-884b-b683b560c187",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ccc4a1d2-3a15-44ac-92af-97f212889659"
        },
        "item": {
          "id": "03aaa5b2-1f9b-4415-b4d0-7f0c298eaad9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "39eb761b-ab20-4c28-ac2a-6c7ca69ede74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531a0212-91fb-4fb2-b67f-23a380b490d0",
        "cursor": {
          "ref": "a5d295c8-150c-42e9-b78c-d5617d975122",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "016521b7-7aa7-4fb0-a0b8-48cd3e9df054"
        },
        "item": {
          "id": "531a0212-91fb-4fb2-b67f-23a380b490d0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cf9cfbfe-c031-46d7-a1fb-27dbc5467fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3742ebf-ff17-4e00-b755-55b54911d667",
        "cursor": {
          "ref": "61e4db71-3d8f-43ce-918a-4c07c274d3f2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "03eed9c2-45f2-4d71-9bce-3a337207200f"
        },
        "item": {
          "id": "f3742ebf-ff17-4e00-b755-55b54911d667",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "01d95814-a7ce-4dd4-8dba-87a16049318d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79de9c4d-b40d-48fd-baed-b599452b617d",
        "cursor": {
          "ref": "2dd8f114-9443-40da-b01c-23eddfc2d8a8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "976dd32a-70a4-4fb3-b1eb-324c103cedbf"
        },
        "item": {
          "id": "79de9c4d-b40d-48fd-baed-b599452b617d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "b18124ab-743d-4f4d-8945-545e6d274a55",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2502d4-0a5f-4c59-8e97-08f600a671c7",
        "cursor": {
          "ref": "dcc7537f-7dea-4f83-8260-b1d6d997d04e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b09e1273-3f35-4807-9ee7-c496f4ca42e0"
        },
        "item": {
          "id": "0f2502d4-0a5f-4c59-8e97-08f600a671c7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0276126c-d497-4a24-a415-002b87948d11",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ba3ec5-2516-4171-b3d9-1fe9db52bd54",
        "cursor": {
          "ref": "8fd00838-762e-4517-b719-66ea4462a33c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1825d6ad-1946-4a67-bb92-541eda88ce5e"
        },
        "item": {
          "id": "b7ba3ec5-2516-4171-b3d9-1fe9db52bd54",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6d9711c3-1a20-4e17-8153-dc10447d4cdb",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "261350c9-35df-4fc1-8d88-c72bb27ad8e8",
        "cursor": {
          "ref": "6f6e80f5-4e59-4a33-ac44-7e5f3ed5ea05",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "73300cc3-b8cb-4326-838f-36d213a780f6"
        },
        "item": {
          "id": "261350c9-35df-4fc1-8d88-c72bb27ad8e8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "88123893-3fd1-4c28-bc99-e25f93808de7",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "414e1273-9b4d-468b-b1d9-fa12b9439f25",
        "cursor": {
          "ref": "bc925f9e-d7d3-45ce-a2fa-e99841cc479c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9519dffa-b17b-4279-b20e-b87f6f0a61ae"
        },
        "item": {
          "id": "414e1273-9b4d-468b-b1d9-fa12b9439f25",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b14f4f5d-be5e-4df9-9732-609cd0908cd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414e1273-9b4d-468b-b1d9-fa12b9439f25",
        "cursor": {
          "ref": "bc925f9e-d7d3-45ce-a2fa-e99841cc479c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9519dffa-b17b-4279-b20e-b87f6f0a61ae"
        },
        "item": {
          "id": "414e1273-9b4d-468b-b1d9-fa12b9439f25",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b14f4f5d-be5e-4df9-9732-609cd0908cd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414e1273-9b4d-468b-b1d9-fa12b9439f25",
        "cursor": {
          "ref": "bc925f9e-d7d3-45ce-a2fa-e99841cc479c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9519dffa-b17b-4279-b20e-b87f6f0a61ae"
        },
        "item": {
          "id": "414e1273-9b4d-468b-b1d9-fa12b9439f25",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b14f4f5d-be5e-4df9-9732-609cd0908cd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240854bc-af48-4f5b-aab0-6d5062157c1a",
        "cursor": {
          "ref": "d84938fb-996c-4950-adf3-1c7972fce422",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7e6fcedc-8c24-4896-a7ea-420bca5f2969"
        },
        "item": {
          "id": "240854bc-af48-4f5b-aab0-6d5062157c1a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "71e2faf5-1be7-4b81-9209-9cb70d6bb334",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab53bc3-48b8-4686-8684-21a0efbe4a4d",
        "cursor": {
          "ref": "97a97f79-436a-4b7a-902a-b9cf752c9aa6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1f55f1bc-47f5-4e8f-b587-84c9f867bcb2"
        },
        "item": {
          "id": "3ab53bc3-48b8-4686-8684-21a0efbe4a4d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0f34e9aa-7748-43cf-b094-546f3ef27540",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab53bc3-48b8-4686-8684-21a0efbe4a4d",
        "cursor": {
          "ref": "97a97f79-436a-4b7a-902a-b9cf752c9aa6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1f55f1bc-47f5-4e8f-b587-84c9f867bcb2"
        },
        "item": {
          "id": "3ab53bc3-48b8-4686-8684-21a0efbe4a4d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0f34e9aa-7748-43cf-b094-546f3ef27540",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9ae452-66ad-4f66-bc39-f116ca2844d6",
        "cursor": {
          "ref": "9eae1d5d-2520-4a56-977f-95a78b087b3a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fe195848-89ce-4d80-b101-1a5f008a288b"
        },
        "item": {
          "id": "bb9ae452-66ad-4f66-bc39-f116ca2844d6",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ca034a57-34e2-45b7-b843-e1de2ad570c6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8009e0a9-5b07-4b00-b315-031a567fdb2b",
        "cursor": {
          "ref": "5383f948-375d-46a7-b8de-7c148cdea21b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "618699bf-b4bd-4329-aec0-a59021903fef"
        },
        "item": {
          "id": "8009e0a9-5b07-4b00-b315-031a567fdb2b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e111fe69-af8f-4539-9b8e-afc4e5a193f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8009e0a9-5b07-4b00-b315-031a567fdb2b",
        "cursor": {
          "ref": "5383f948-375d-46a7-b8de-7c148cdea21b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "618699bf-b4bd-4329-aec0-a59021903fef"
        },
        "item": {
          "id": "8009e0a9-5b07-4b00-b315-031a567fdb2b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e111fe69-af8f-4539-9b8e-afc4e5a193f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479ff2f6-be93-4dea-9539-c943ced8fdbc",
        "cursor": {
          "ref": "5e8e1806-1b63-4c2e-9fae-c2f5cbf81ccf",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cb649214-8294-4672-9b56-368d34a16de9"
        },
        "item": {
          "id": "479ff2f6-be93-4dea-9539-c943ced8fdbc",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "cdf65f9f-5554-499e-a644-39bee2f47038",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}