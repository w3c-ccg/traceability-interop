{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "33754631-b396-4d00-badd-130a19fdd426",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9e1ab867-7839-41c6-abef-7ac6e590aca8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd7968f8-7107-49fb-abfa-bf9e946c7fd3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7042aa47-708b-493b-92ce-d6dfc2fcbd2c"
                }
              }
            ]
          },
          {
            "id": "a96dfac1-9d5c-4380-a780-1739933984c8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e29bc16-edd1-4b81-9ae6-6302cec22309",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "58dea87f-2084-4676-a131-80cedfec5ea2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cf5d3ba2-f38c-40fa-9a47-9b6d6ae0feff",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4e888d10-2d8c-4e77-90d8-c3115d539fd7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25731943-9537-41be-8080-0719793d579f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e425fee-a5b9-4e4c-b89e-0a81441097ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d51b0ed8-f679-4465-8b70-8c42b1aa2652"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43cf52ab-ce4f-4159-b8ff-e0d3e0126293",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2a2cae3-5b0c-4f9a-b61d-727c0684ba02"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c16f4400-6181-4af5-aeec-3e1092463202",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c335ed3c-1934-4d1a-b71c-ae517d9ad3f9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1372a1ae-d7af-4522-9489-2b20fe704e83",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "828001a7-828f-4de7-88d6-b7d6315c613b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54b4f32d-1890-48df-94bc-68339efd4da2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41429c0f-3efa-4a65-bef5-67fe571e1509"
            }
          }
        ]
      },
      {
        "id": "6cf564c9-9561-4c69-bc7e-0036c2dce751",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bb943478-1277-42ca-a982-da6a0a7a571f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8b75541-9423-4658-8cbc-288517316400",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "105fac63-d387-40ea-ba72-aca02cc80116",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7736fa7f-4567-4a73-8236-f288db00d04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed8487e4-dc0b-4bb3-9f19-4f6811efa91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4c671b-25b0-4a05-af56-69ca58bdf441",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e45a4a7-856c-4d38-8419-dd6345490541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fabac3b7-a590-4a27-a098-c2f7f61be508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92916207-5bde-466c-910b-49bd187aeab3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2240b24-1c31-4267-90d4-ea95e42dc79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33d0b397-8326-4a9a-83bd-45bc70040510"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37fa51a0-3b6a-4278-8c32-0d13a0b6aaca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de76f4d5-54ad-4f47-bc83-51b6f8e84045",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cff054-77e6-40e2-94fc-9426d650fae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9f504f8-9149-48cc-8dbe-42949c865168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3d2a0b-8bfe-4b14-8eaa-1a55dea37634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dfc193-2a74-4a4d-84d5-353d0e5cdeb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0a72e35b-d0fc-4fe8-9b54-de48757c8a90",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4bbf8819-ced1-4d01-8359-8c6dff0fcdae",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c08d849a-87e7-4b2a-a8a3-4ffcf674df30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e329dd5b-01a6-4f38-abd3-c534936b470d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13132974-0ce8-416c-9ed0-d58354ccfb3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9ad69646-7274-405e-9c4e-c783a8fa7691"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df498e38-a61e-4e77-af44-0fee750c0e6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb967e8c-6c16-4cc6-8fa4-527bda33f3cc"
            }
          }
        ]
      },
      {
        "id": "54e2e6bc-6271-47a2-a268-07aebb190cdd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b65c85a9-e2e7-4b69-828d-45568a4aa98b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94d00cbd-0247-4bd4-96d9-056231527be5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1002c545-e1af-4b0c-979e-065fe1110262",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c355c471-bfc1-4af9-914e-b3a857526648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60211abb-6deb-4af1-8fe8-39161d035d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7821a8-51dc-48f0-8f0e-f2540f5fca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0529619b-1864-4663-b20a-d7fc0bab070c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a0ac75-9877-4ccd-ad34-42f6e74dfab8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f896b7a1-ec1e-48fa-91ed-97923a7e2f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a66be5-70df-41d7-8ef6-418a015bf9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0c5ffd-f8e2-4422-b3df-908409e05362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f93596a1-0699-4810-969e-40146de9a0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0155a782-ce2e-4e66-afe6-5699977c2fb6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa66d0b-2b7c-4e5c-875d-4f558f3def22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74259f70-e6dd-4e89-98b9-5d91c4423530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1feaa988-3105-449a-bc49-d24fb4798581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db471490-0258-41f2-9cf9-a0286b7a51cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24e779d-51c2-4cf2-93f6-ffa5cdf38d20",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68332a39-3d2d-4472-9b1b-66b7e84c3f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd5187c-0006-4880-b6bf-490d2c707e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4a8cf9-86db-4a63-ade4-25ab52df6013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26e81123-4729-4e89-abf5-55bc294805e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140ec106-5982-4439-b2dc-0e2fcb1050c1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cdda71-bd9f-46e9-95e7-dc23dd2ece9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e27c3c8-821f-4657-aa2b-1ecbd0cdb131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71433e2-6c82-4c85-bc7c-ce882a36bce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6336adda-d005-4c33-80e4-3cbc4d0674c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff5c8d8-2019-4699-88d6-0bc97092b502",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc50fb7-fc54-4520-a030-4cfe4049e000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963c8254-65bd-4882-9c8d-57655becfabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64300fed-4394-4b51-abb7-9093243b4fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0124a6d2-1167-48df-8ff8-6f6bec0ab1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddabdf3-2757-4361-9444-efa1861a5873",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba51555-d234-4c72-b050-33b3c95f91df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7188c15e-5917-4aaf-a66a-2a8b7dcb45d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b13c083-210e-4b1e-bafe-fa4ef13ce80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e75eced-ae4d-4615-abf4-b17b8aa6351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97347fa7-848a-4410-a9b3-c315f5849e89",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78e076a-f6b9-49ff-8fb6-e85f6d0eec77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73ed754-1a0e-4f59-8d2f-2caf62449951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01f934b-40fa-4f8e-9249-61c68825e1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "640a4b48-b79f-4c25-9d97-4ce2dcb73ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e33d8ac-d0ed-40dc-a6e5-37dc87c0322c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069e273f-1b11-4d00-a179-a4ec060e1b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba85af3-693c-4b22-b706-58a68818a30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c18bfa2-5ded-488b-bee6-b9a2e0a32648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e1b9012-d8cc-4d3e-ba50-6a3e9d8fe7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e523bf-9aa6-4da7-a4fb-8585ef984be1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc29144a-3634-469b-b3d3-5e755f49c75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca0e948-e235-4905-8f3c-3e93e0a7ee77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d58cc3-a3f8-4590-9ccd-13bf8200ebbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3303db7b-0889-4b7e-9ed0-49c94fb5d9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6ff580-b315-4b64-8f38-c949f7df896c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76108207-57e3-4422-b16f-47851f4d33e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560c8599-8970-488a-9de2-6e7c38371dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e568fec-611c-40f4-8e8f-5499de20cb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3152cba8-621c-429e-b503-c01fe30a0b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d401764-2cca-4fff-8d27-91001ee63a2d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c7e8d5-00dd-4956-88d2-2a958bad9c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8683bd-80b7-4588-b246-7b4122ab7870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85251413-cc18-4fa6-8421-115f20aca0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3f540b0-1909-440b-88b8-dae71c9c9897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218ac0c6-f716-4bf8-8cb4-300a01a08c04",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a611d912-626b-438c-90da-51295174287f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a032941-5b87-41a0-8d09-113d226955ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20887ce4-bb65-455c-b8bd-d260e7745ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4f6b5d9-1c7a-47a6-8d3c-1ae1484a507b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9670d309-897b-40ab-a1dd-9705b6cdeb13",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a960cb66-8e91-49ea-b66d-1094f4b9a68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b468ab-9171-42ce-b09d-85c65e9def71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a3eb49-6382-4b75-9e70-54d4ec187a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c42df10f-af2d-468a-bc5d-2be54339ca9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af60344a-a1d2-476f-b7c0-2d4aab7c6520",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7d5764-65d7-48e7-bb99-8bdb30ffe12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d5c549-83b6-4a55-bf51-b337526ed746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45409109-6d6b-49b4-9719-9a2ed737c280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "546337f5-82c1-4d26-b12c-ef1347faf2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e522894-20e1-49ac-94fc-5fcbf8ba8f07",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55763d8d-8518-49e0-8393-229ae4c8a377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835a023c-3556-445c-86de-5cbed4208a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4be47dd-4874-44c0-a800-af128085cb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e11c30be-89b7-4216-a448-799ba0b619f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecf1e0f-7c9d-4965-8b26-3c2b90729764",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc836414-10df-47f2-9adb-77a8cd177bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4f4547-f9af-4d09-bea6-3fd791e81596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1eebc59-42ac-44af-a4a4-106c83232ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c2b63fd-285a-4590-a763-ae687a70a27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94c7b8d-db8e-4f33-9275-2e6f4c37c4ab",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f6f772-afa4-4970-b6a7-9092ece20a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05f4b9f-3afc-49dc-a27e-54b977492ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b13f94-a883-4280-ae89-7d72a29b26fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b88ea7d-4c41-4edf-9497-fa52bd0da8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7584f6-2248-490d-93c1-8d8d2e53f913",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95d2ab5-f376-4b2a-b004-99f0b3e0fed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3259f581-57ff-47b3-b08f-052449768a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93aca25c-14d6-47fc-92b0-3b321e7ab0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "003ebb82-bd90-4d88-9116-d3c3b3957ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4811a0-99b5-4afc-9477-e76cd470a91f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b22779-31c2-4e18-8c5e-bd8e12adf283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4804f27-fb66-41f0-9f95-f6a7e16edf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11081669-e592-4a20-8afe-fc60a20ba6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "915a665a-9379-4c58-9933-96f4b4315fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3b0eb3-6685-4305-81b4-2f227f793bba",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16b759a-f3b5-4d84-8497-8a380a384de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63e3db7-2bc5-48f0-b0b7-c52a52d118d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5333f388-7232-499d-b2f1-176bb20cc5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5688506e-3a10-4652-aa9e-b3cff5fd79b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5881fcf0-62ef-4940-89e3-53de3df9daac",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3e9f52-d1be-4cfd-8876-b95d64cdcf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35c6816-f8b5-4166-abc2-558136c6ec77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f7b91e-990f-4a8f-a83a-b1cc7e3d0fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8af616-7c63-48a2-a260-8b429064bba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7706808-9a07-4377-aab4-1c21ca4d1e71",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35448110-c65b-4c9b-b397-87cb714ef363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcb0a6d-c51c-4a5d-af46-194c3398ca34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dd5484-6157-4779-b279-78f70d855ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27da743e-39aa-42f2-aa8d-f544f43ae70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d928aa38-3f99-45c3-9cb1-74ff45b18243",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dfd8b4-8b34-4462-b525-62d936f5e1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a656b2f-d355-4c3b-ab08-d237b9fe4855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e8d6de-2155-4741-b4ba-a8eff9ed0294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1c3987-a7ce-44d1-9a2b-25e0730eee25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6675cf3-c76d-4485-af4a-4aa358e14cb3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a37496-0d42-46ff-a95a-a4482f198b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f38947-58e0-49b3-808a-7a4576b62ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831a7617-a5d6-4794-a675-b3bd2c32e724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b47525-a2c1-4382-aa20-b83df1cc461d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82c4137-5f38-4d89-822b-8ec9e0ef9e37",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133e8d41-00ab-435a-9b29-ac2eb36662f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31bb9974-dd15-4016-865a-4347eb518f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08f29f6-4118-4a90-a146-8823d8c96e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b29e7c-5930-4326-a7e0-092be6679dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23299547-81d8-49fa-9578-85b5a1d8599e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988e022c-15ea-4761-bd96-a5d636ff8f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bd7a03-e84f-4cfa-b091-71e84b13e4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ed81f0-beeb-459f-9b6f-4fcb77ca6ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07a9fc9-fe23-4eaa-9d33-7ea66c91b760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71041364-14ae-4bad-ae94-1c5148d403f3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcee83be-f1ee-487f-8579-cec136451f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3371e6f6-6437-4664-b74e-599a8c19a6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c87173-658c-4acf-8cc7-be5e1e4412ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39dc4aea-6fca-4147-9fca-f780a099062f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8850dc83-aaac-4f07-bcb7-082bd09359cd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ec70be-9d36-4206-8abe-466b83fe04a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c872298-7c33-441f-98f2-cdf202a1fafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0fd3bc-75bb-43d4-bd4a-2939056ed989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8565bd41-aa74-4251-be6d-6443c6be527a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52234d5d-8fb0-4f37-baa4-2c376230ea8d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aed51e0-f1d8-4776-981c-26d4a17486fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9707d64-bf5e-491f-8b10-b4aecbc5b549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4e7d25-eb88-4e67-ac9f-3fe4bc1c0fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3134348d-2065-4ec4-88d9-b53693cbc44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0641c54a-45c1-40dc-a528-37e2885da649",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d71cc57-b8c3-41a3-aced-6f15c3a9e1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b99583-991a-44ec-85ae-9099039ca7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32292692-99aa-41c8-b634-1bfd9e7a2f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d34b76-7eba-45d6-bc74-4618b4c1cb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955c2074-3e8b-4152-877e-833e909203ee",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e408cc-fc17-4520-a846-3bcf144d4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3a0f97-bb46-4b62-85e0-51ee16f2f616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701ac0ea-eb34-4ad8-bc43-7a07685d68e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5223afb9-34c9-46e8-8507-6ad7b9e9318f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ab0f31-c12d-4aee-8a00-8e4575c910a0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0f3e53-050d-4a10-84d8-0013a0148cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6058e5-80ab-49a3-b829-40da8e6952ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a431864b-fb0c-4dc3-9198-7b71f16240d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90866a78-f523-4be3-8f4f-b9410e3dcf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0bac49-834d-4d7e-8f0c-5e637e267344",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e55c6f-0b9c-4c35-9782-e249e20ddb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208fd950-f693-4404-8033-594b92e76aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc975879-d890-498c-99ea-5dd75733a2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "964ee2d9-04a2-4610-8fd3-7c8d507064ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d37ecdd-8c70-4305-8a6e-39edeec9eadf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ee157e-6d8a-4234-b837-0a5c1f3a062d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb31837-47d0-4838-96d7-d1b4a559a581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb70b07-62db-4fb5-915b-729d7c2d80f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "84b4a079-c9c8-4c41-900e-f46120116054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54673139-2aeb-4027-afc0-0eb6f1de55d6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69290ff6-8110-4de9-ba4f-5a29331644ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0631ce97-8f2c-4dcb-b014-e37cb45d3c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c024baea-d826-4cd1-8d80-35f893462764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e0149b-50e6-4ae7-bd5b-8c5aebcd1303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98046ab1-ad7e-4502-9c73-addb4ac7db1c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611d4b2f-e246-4229-98e1-04b43ee05b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e9fd53-467c-4fc2-be41-1455c09030b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8b527d-4672-4274-b988-b2f4163caea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b435d6de-91a1-485b-8531-b2f9390ae4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fa66d4-7847-431a-994c-905334f59c70",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2916c5e8-3efb-46a8-b390-90b9a812fd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a04143-9e03-4c73-bd65-ad29ab8eea72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3190885f-5696-4f02-9627-872245c08f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7453c798-abe6-4f55-bedd-ddd7a7e50c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5f51ce-1a9e-48bb-af73-c21ba620f792",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc0d7fe-2421-497a-802c-7768a21d5804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf69bc8-a6f4-4f77-8969-f7943721d2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f02e2e-f512-4e70-9487-78f30acd6a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96e027bf-785c-43c1-a6cd-3759a41a6496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9efd13-7a8d-449c-be47-fb17efdc145a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a627565d-23b5-4e21-8070-c519c843355e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64b5e67-187f-4fc3-8e0a-87ae14da579d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eb48d9-a32c-4848-83d7-890434bc92c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dda22b01-a02a-49ab-aa42-9bdc6e7a4cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908686d1-3770-403b-8f66-5fc99b04ec3e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6179f14-d49b-473f-8630-603d2917f320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cf97bc-4a8c-4bb4-a9aa-a617ce4507e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98afd9f-071a-4efb-bbaf-bc52ca1b4d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c633efaf-b8b7-4468-bbc9-f4f4fa9693b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62b33fb-917a-4a56-97cc-5e335ec54f79",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48eab0c-39cc-4ba5-a71c-23e7d09ecd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60dd8bdd-5b5a-4ff3-b3e3-ccd05a74487d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030d4fa6-c86c-45ed-8f47-c5ab4a89796b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f507ec16-cb5e-4544-af0b-ce9816428d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c668e1-2cad-458b-8978-af01a9e3c238",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea5180a-f27a-41ca-8b1a-ed74352e9101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe78a5f9-abb2-40a2-9a93-c4a365d743b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85adc980-f430-488b-a643-b83c30b4ce7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b077821-39d9-4e74-8ca2-e591aa6379b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaeee4e-a1a6-4e92-a35c-c483279c9e3e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5988ad52-82ca-4c04-9d0c-ecb123bb2281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38052df3-6f24-49b8-97f9-78b739761c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17577c8-c663-4527-bbdd-c7eb52591a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e11639f8-dbc4-4500-a235-ea320be1de3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe549857-7b0c-45ab-a81a-d30b99e06274",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd20b03d-acae-4076-8869-c987ead42fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bb4662-bda6-46ad-b51f-9ffb4dcc90d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55861c74-d06e-4d45-9996-bc0415ee88a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6b5823-2851-4325-a2a4-e8ff4e136705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c555ffe-22f8-433c-a8fa-043fa24d0207",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788256c0-1b4c-4410-8573-b36f18afb3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b390a3-e50c-4480-a20a-761be1712bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26345936-14b7-4e10-be2b-dde3c746c4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ca5e13-1f6e-415e-91d5-a9e3d53e7508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff0971b-4403-4c72-b8ea-ec2a1d120eee",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0013bc7b-6317-4081-a95f-9f40d01d2d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8b0f1c-407b-4f68-9723-9d217d3e1afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace3444b-ec50-43fb-ae4c-38ebdbbf94fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90eb0148-ff8a-4f89-9459-3f473bed2920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9d302a-87f8-4de4-adab-32dbed6a345d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a0f0d4-e9e0-4763-a8a4-ffbc8b1ec720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8c67a8-598f-4b26-8551-8df67bd2aab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcecf54-806a-4df1-b85a-e17b684a57dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1697250d-c311-4423-856b-151e81b59251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcae08f-6651-4fc7-bca2-4167ae85e869",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967780c8-bd85-4934-b0db-882170730b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97265673-325f-4c16-a55c-7edd154baa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc67474a-27b5-416a-9fea-07a3cd38392a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d59231a-9a50-4e93-af77-897afa9fc7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9241daa-f1ca-4aef-89c7-7da273ecdf90",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9a2918-7cb3-4aad-8ade-97406398ee6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6cf544-a175-4436-b0ce-955f847919d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6e9515-b78a-4f75-9de9-46d036df4578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e11ec8d-53d3-463e-b29e-e4d97f48e1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44207d25-8076-4c84-8d9c-d26fe9458571",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4d70e4-4bba-4aef-bc1e-e1a70236b41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedf74e6-3e62-414e-be5d-b4daf1640d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603ef459-3abf-43e0-a4a2-39b41c0d12a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a33bfc6-f283-4541-921b-173ba3bdd1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f778db4-a71f-4f41-b8f9-6f742ab4513e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb957cb-fd75-4f5c-b272-d7353140f065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362c8223-0054-4ff5-8d42-8208ac93121b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42e6205-9ae9-463a-b310-bdb4954aa5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83506efb-ab74-489b-be7e-79c3d9fb6e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91cba8b-8c13-4838-8d0c-ede3a18b5d63",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0b6981-3551-4807-9475-2b700f3ef559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b07bdfd-c901-4224-abee-b51b15da649e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0270ec56-d817-49db-af94-615bfadaf33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85653f6a-a860-44ae-bb90-c34c0269890d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596c32bc-2aeb-4bd7-8953-e539c3ba9d8c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5511e9b-1b27-4db6-ada7-5a1add318898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e5ec69-846c-4ae8-ae06-ffe23f235829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3770b2cf-e6da-499f-ac49-aa1f3bbea174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41146e06-e11b-4514-9c85-13e7cf3d042e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eee081-3140-4f31-bcad-162e981482a8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a512eca-8db5-43a4-8184-ecbebf6e1fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f806aee-03ab-4578-b141-b57a82dbd3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c45b2d-0aa6-43cd-b1ac-bb15f207f5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba57ca8-f094-40c4-933b-56329526fff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b14782c-1ded-4fd7-a194-c3731481a1db",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d6e62d-ad10-4599-96d3-03060822d370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6127b4f6-3495-4eb7-bb37-b581e7ecec7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c978dc-510f-4975-a469-cd4d56f8a22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbbbd2e-6fea-477d-976d-35eca911703b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b50ac5-c5b3-4c67-9438-18ce3ea1a9c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d55c69d-d069-4acf-bd33-435383cf531f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c35ef2-5dfa-4616-96fb-725ae40e08d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ddf52a-c23b-4306-b852-06b21af5575b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d4cece-e711-4498-9271-6e1cfe472c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8f2050-c250-4532-8dca-41e8a8c8a645",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f8cc75-985e-42e4-888f-03cf3d98b3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d474b1-9d76-4b4e-826e-89ba50103df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a5e9b8-b8fd-40b8-99bd-e8c553e369dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cfa2fa-be76-4ce3-a453-abdcf804534d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de22b894-aa41-47e0-9535-3316ef977a4f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef9ac9b-9764-45f4-8a1c-c19832122b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751ac8c9-102b-4807-b9ba-4f88a6d4da0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37846f80-429b-4fd5-8d0f-d561986f16f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8502f90-5f57-4a72-9409-6f774247c802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d441963b-615b-496d-8833-358ac68383bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3c940c-b372-4f50-a993-caae3bf4562f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c7a2cf-2b06-4c5e-88f7-8d28dcb62679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a65910-7c2b-4c3d-a94d-9a76bc81ffed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb6e9bd-5717-477d-9383-bf6e5e431a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a695844-0223-462d-9fdb-9a58a635b7db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7d1d7d-e570-4aac-9c45-29b079033618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194023d9-6470-4a21-b514-b3fd7d4edf54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11929ff-b328-4007-b02c-c4f730ac5231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "272d36ec-cb55-48ec-834b-ded739224161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925ca9c4-a52b-41b7-a0c0-3a102e818e56",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ee3a8a-8e62-4f04-997d-0fbce419c2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dda3720-ffdc-4701-9371-2b36bb3a27a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d9e292-84a1-4651-9af3-bbfe2d50328c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "19870f4b-5907-4d9d-8a16-f881a181ece0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ce6d8c-9bbd-488c-b7a2-1c5d614cd056",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e9e294-c451-42a3-9752-a3ae59b9c8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01004cb1-7989-4bff-ac77-294d32b8cf89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daad7d3-63a8-4a93-877e-48f709599406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c7d57e-b52a-49b5-abee-c22266318b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738950fe-4263-47f4-9eb4-c91f2f67300b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a1a7df-496c-4e9f-b89a-e7cad6398dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b598a6-ea49-4040-8887-a1b1d431a595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90560c4e-7d8a-407c-ba9f-da79c3c32709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24049c5d-9c47-4d5e-be75-2da947b84c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4d7748-6b2b-4f4a-baf5-e375f276f704",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcba42c-751a-47bf-8deb-1e9ffa44dd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b1871b-505a-4802-ba62-b656111d9a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbe5e4f-c9b5-4eb9-8230-3d5a64001909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d42602a-74e2-4ae1-a83f-56475e6bcbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb55ee2-ef2c-4ba5-bd52-49fcc3ded9b7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744ec45e-a1b9-4c88-95b3-9bfb7633779b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f11313-7ac4-44a3-b6be-37868afa9c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bb27f3-9090-4c59-b5c8-fc16597446a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c40474-a045-49a6-88c4-9f51675a7ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55971619-6200-4bf4-9566-a0ce56dbadda",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dd8184-ac7c-4cad-8cda-aea0a75360f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42133fa1-a0cd-479b-a296-08a46fc92b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f51a76-4f0c-4d19-b454-51a0583beb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b659fd12-4686-480e-a45b-82c85d9b0fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3afe39-3764-40ba-8c73-8181b672c7ea",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c3139e-f5e7-45a3-9a6c-ccb57e546530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8d78f2-896b-4a23-9881-1248ba9d97df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14b5f23-b452-4e34-b795-72e419bfaef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "32a678dc-0301-434b-91c4-53527d86badc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dc6390-44a1-4295-af93-6c613c519573",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1b319c-4b59-4ced-be4e-24e21e4aa4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c90e14-820f-4831-a433-16b77efa713f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f76095-70fc-4d5e-9254-e13755768a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c2afa3-a384-429a-97d8-e378ef6f10d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd7c6ef-337c-4f4a-9529-8927d360ab56",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d860603-1bd4-412e-bde1-b45f68225b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c40067-d787-4155-a2d9-d4472a1cd158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce56eb9-5165-4ad4-bf1b-3a41dfebed8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a595f634-7ebd-4d23-b700-eaa674a897ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63ec171-3ec8-4f6f-aa3e-37fed6c1d928",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafde1ca-61bf-4b32-b951-94dec84b1c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ee14d3-d0ee-4f6c-968f-93e2d7aacf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d23856-a532-4317-8ec8-b3425e032f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0df3ba24-d8dc-4473-b3d7-e7fa6ad9a869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3892a55-d10b-41d4-94dd-79fb7aad7b10",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef4ee9e-2f69-4798-91a9-6f55f23430da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89625b9-f960-4a20-92d5-4bbe468e5e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc472f2-6807-4f9b-8134-16f19cc44360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20e502f-8740-4369-a93f-0c14adeeb766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbd7e68-3a17-4859-8a75-3690e5708482",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393e6318-7573-43c6-98aa-c45b153e3cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca6be1e-d77f-4c9e-99cf-964cddbc86ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ffd94d-da2c-474c-bd02-e0b132682f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0777a4fc-f057-4f64-9071-d80612de8ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7149973b-eb05-4943-982d-d46fa770d76e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c745df5d-ed23-49c2-bb60-e245b2209e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6757eaaa-991b-469e-a046-176ed5270540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7126502-eed7-493d-af00-f628d430f522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47994e2a-a8e8-4276-895c-c8c9f31580db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f10ff9-0568-4dd5-93e7-b1aef51f0855",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2c428b-5813-4752-ac27-9a2e137e0faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5670f28-6013-4111-9a91-9ec55859ce13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1182975b-a481-4ed9-afbc-3d324975edbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4456f0cd-8c83-4680-a090-50dc4c294ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d98f6f-63bb-498c-8ff6-c2a2551c939a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fedfc71-a7cd-4966-8968-f35a8ab868ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500f2ebd-32af-4d24-b40f-1bd7e3c746ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347fd719-8542-43c4-aa1e-0c12a555f0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "951f4d4b-9cb5-4b54-82a2-8cde1cdaa98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea32da1-04c3-4099-854d-1fe9dcaa9281",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717c6183-34e6-4576-9682-872e6c1790ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c60fd1-5cd2-4683-abca-23939be05156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51435456-86a5-4fda-95db-08ddc54476d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d91eb139-f0cb-4275-b97e-ec23ff4d4f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20d5b5e-3070-4868-b815-68b0a5b48201",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093625a6-d115-4d39-a6b7-587286be691e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90f42d7-ce3e-4f2f-a53d-1a8952c4b00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a49f58-b20b-4f03-a96b-52ec71d386bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa4b050-02b6-40ec-94ca-eab51003a6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb566f6-644b-4a63-b399-7b96d22994f9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546999dd-22ed-4c5e-b6c3-61b2bf9c7ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82394d9-192f-4202-96d1-8ca55572ba43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4fc2d3-33c7-48d2-bcff-17dad8f01fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bea5a27-4024-401d-bd5f-736675233086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a71b4a8-7fde-4906-bd19-97c57ab3272e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6158056-5423-4df6-b826-883c70ff6c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d722cf59-934c-4895-b301-420a903874dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f59ccfa-2995-403e-b03f-a9e056ee205f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab15b06-bb2b-49da-9d3f-c15d8aa452d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f957e46f-0351-41cf-9abc-916eb9c3aa9e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ecbe55-0db9-4ddb-909f-349a1b37d2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b15d12-7ae6-4e7a-9b86-e49c7050e188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e44f2d1-0a66-4d08-b051-1cb92914101c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a077c79d-7d47-46e9-b5ab-4a9dcd1167af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289050a6-a652-4e71-bddd-c92639effd3d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319ee1f7-7e1b-46bf-9351-7c852485a21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c443533-a290-4476-8ae3-e5baabf37871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f092b153-7bbb-4c35-a69c-a7dfad6b1a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3b4549-4592-4261-b055-e126951eaa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12952b03-6f43-4b7b-8085-3725da3cb744",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208a4bb1-550d-434f-a1f5-13558a28c3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d07bda-5d33-4057-b85d-c63704b96101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acc05e9-3c22-4d36-a48c-f6810339865b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a529b8aa-14a6-4dcd-8984-cc702ef97316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792453c6-1f9c-44f4-b6ee-3ffb514a61cf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d85e57-9fa1-4b53-b1e5-b19ed6fb6dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9cfe0d-19cf-4be2-9ea0-2c82da403949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519cd29f-f6b2-430b-840e-78daffc24098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbdf31b-b03d-440e-b5c7-fb01306d2d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dd8962-4304-48e1-9d58-db886a8c69f0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1c71ac-fb23-474d-ad1e-efc017c3d974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1ec8f7-0b9f-4252-a8b9-8ed118ebab41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0c1a20-93f5-43e6-89be-da84bde23fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed65ef9-a0c0-4d9b-b013-2132af24c7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7380311-cc63-44ec-ae87-21501e635c0d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36965769-6320-4cbb-9dcc-15f52f2941f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24cacc00-8a38-4148-9e2d-d4c9663280b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d722349c-96ff-4b59-8c20-e434d38605d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4cfd75-9fff-4e57-9f54-c05968b205af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1b9c6a-1ae0-4770-b6a3-0b3dd543d13a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d466cb48-55e3-4bd0-b8f7-0d56a1e97436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca7780c-f30b-489e-9276-89ca989709f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c45a27-1a88-4672-aa83-9c26cb15d9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e73fcc4-1359-4752-be73-01321125087f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c36f1a-7d6e-47c8-bb14-186f2f4a99f9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f00387-68c8-4f6c-bf63-75f290b7137f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10eb6524-bbc9-4593-9f36-298f7e83df65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f97e98-afeb-4138-b226-b77f74a03fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "081cd1ed-a956-412e-8752-8f07f654606e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6a29ef-6f1a-4bd5-973c-fac5a94a5d31",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19980fb2-06ad-45cf-b88f-691b9ff43e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c797dcf-b664-48a1-bd8a-9c4bc351e363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dff4672-7b03-407e-bcaa-1e07adba00f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5dcede-9a4f-4820-a27f-fb02d21c285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ef673a-550e-49b6-bfc5-8473433661be",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2eb435-5b87-4c6e-a962-d530c39f78a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf09b23-15e1-4523-ae49-ab46e5b19c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06281fa5-2e76-458d-bb01-7dbe21936456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f2d2a7-4f5b-4702-be50-361c04b07aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782474ad-8975-4d80-9c32-de4d632831eb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353e31ac-118a-493a-abb2-50e6a9483011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faae04a4-3a73-4903-b952-9125b22be6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506c5ca4-ce37-4732-94f3-981df4fa5eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c211b1f-2b88-460f-be98-046bf53f1346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324a4514-b318-4b01-b1ca-bda73cdadaa0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1966327-4f8c-49ee-a88e-bcaf8efe97c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a0ec98a-b9f2-46fe-9ae0-024b7c57237d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91601aca-73de-4fb5-a111-885cc3e61444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "26bf2d4c-8c51-4de9-8c63-748f1b5163e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70c04db3-b6ee-4c70-b353-ab362be1f0c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34959e92-90c7-4d35-9223-f3085619dc0b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1471dbca-3a4d-4f37-bbbc-aa2903ec8405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "711ee78d-f4cd-410e-b085-6c5537ada5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab57e655-ba91-4304-b2d3-18f6077521dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "961ae661-4b99-437e-b4a8-413ee846a799"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9767d1b1-5ff1-40c4-ae54-8e213c0795d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bad8f395-2330-4e28-995e-bafc81d09c01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bda1805-17e1-4615-b1f6-191714ae5843",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c86a2e5b-d5d8-43da-a67a-4c9e021bb850"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65899e6c-951f-40de-9ac5-d67ebc4f9e6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a432262-7028-415e-bd49-ce393f6f1b89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c08b6795-8bd8-4d41-9306-929fc1f8ce79",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03c93883-52bc-4214-aabe-158bdb472a15"
                }
              }
            ]
          },
          {
            "id": "3d0e63ca-f521-4f5c-8227-ac88fb8d458d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca9642b0-1830-4cd8-9649-55ec87731092",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fc93fd20-2cf3-4526-b5bd-3bee2ebb1cfc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d867ba00-15a7-4f65-8317-f3edd616261f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "353af0ec-128b-4dc3-91bb-2fe98c79a00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46074561-6fde-4ef8-b2ba-e9672e7653c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf84f1a-5fa1-4bbe-b14b-06aefeeb54f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b2f8462a-0b21-4d70-9cba-cc89a841e50a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "145e18ab-b4e5-4809-8ccb-2957a8c3ac18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6c233a3-00c0-438e-96db-686407c75aec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d320d7f1-a20a-4446-8d5f-688d1205231e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc614885-cf19-45de-94fe-95d404ca161b"
                    }
                  }
                ]
              },
              {
                "id": "7f5db647-514b-455a-bc02-b35a6adea578",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb367da8-eb16-4359-b155-071c3741a635",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b41b510-b26c-4dad-962c-73540d34c22d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f6546d7-37bf-4b8e-9932-480ccab689b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d72e7fec-a0f7-41c1-b7a6-eb0f271c4f28"
                    }
                  }
                ]
              },
              {
                "id": "764a4568-1932-46e1-9e41-d1806166bab8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5a33c62-46a1-45f2-8aa4-b23e501280cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81642ea4-34d9-44e4-a14b-2bc88315eec9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "155dc610-50e8-4864-bc12-0eb5981c3b70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71fd0ac1-d8e0-45ab-8f97-1e160fcd5276"
                    }
                  }
                ]
              },
              {
                "id": "c03c5429-7635-4d3a-bb55-9f00215a5809",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdbbe859-8140-4597-840e-cbbb2e91364e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1603611f-11f2-464a-a376-9eea27d12db4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33ee62e8-4854-4c63-a018-b9884eef48ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "765c6afb-fa4e-41bf-8022-a12b04a44a78"
                    }
                  }
                ]
              },
              {
                "id": "b1ab2686-1077-4b27-a786-a28533ba9138",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d33fbcf-458e-43dd-9c3b-5324ccd7f008",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81ce9da7-f262-44a0-845e-07b87b53f6f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e4e4940-e44c-41b2-abd5-f6580e241f1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "af9cd3d0-8d7a-4f62-b94c-cc99002470e0"
                    }
                  }
                ]
              },
              {
                "id": "b7adb52d-98b3-4afe-95d4-16f4ea7b451f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37c91683-89dd-4e57-9365-0ce4fc597a6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2db831c4-d2ed-4de0-8c02-40bbf342acfc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "386bf119-0839-4cb3-83dc-85230fbc8132",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e169b34c-894a-40c5-ba71-81d528addc18"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "786abf08-3204-46f2-a711-1203818226ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7940875-e8bc-4d6f-bbb6-d1363874c671"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ec841d6-6967-4166-bd25-c80bc96c4259",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a506b3e3-2139-4347-90ee-618fa2f0c11d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12810b8f-1be6-4114-ba46-0880cfbef6a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4967258b-d2b3-4365-beb1-8350f4eb4ef1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d1a2686-4ed0-4618-92d8-3191dda8c5d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e656032b-ce7f-4ac1-9cab-af611269b509"
            }
          }
        ]
      },
      {
        "id": "7ffb8646-5794-4352-9471-1576b200406f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "61d80c70-9360-4b02-b937-08814e6861c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1bf824b-46bc-4a70-9ac9-2b1ef26dffe9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96248c8b-2d75-4434-8241-3741f35cfba3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbf3549-cb67-43ed-9147-54539917469a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bfe718-8817-49a4-bf57-da1587943470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df7e98f-3cc2-46fd-815a-f722bd235eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d7c2e5-1339-4268-8939-aff6806e48af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4797a0a-00db-44c5-9609-db5b59fc9239",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b3cf89-d272-4e4e-b73b-525de8f6fb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af421f98-54ba-4813-823d-10be93dc8d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d2c3c5-c434-48f9-87a4-bcf24dea066b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "120bf5de-6a7f-48f3-a325-119acfa6485e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3d0e63-a297-4334-a86f-f34fbe207866",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff304ea7-aa23-4a6f-8a93-aa41f0886a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d29312-347d-433d-9fc9-0597efbe33f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c4e5b3-d30b-40ff-8951-c3ec4b5495f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a32821-e4f1-4ad1-aef4-5ea288b38e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9831d292-e279-48f2-bec1-2cbc7f3c34bc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c355a42-b85d-46ae-8c20-0b2f53e84ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f67e07-52a0-475a-b4ba-6ee5f827812e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089f09da-0733-45eb-967c-b3bf283c6b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0da04009-ddbc-49a5-af5f-fe254dbf7994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ed18d7-29ed-4193-a29e-72ba62564410",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e9fbc5-2509-43f5-b725-af45fd12ffa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083829ef-1fb1-42c4-9628-c96d6f94e975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3960dc8b-8900-4afc-9314-08cbf1d6e2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da5f755-2898-4a4b-b566-9631edd96b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1072b6-0e71-42de-9766-631d5bbc8b20",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf09896-5ecb-4abe-8d37-e0230ca5f0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54395f45-e80a-498c-87be-7650635fa3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20585448-e0fe-4e1c-b45f-fbe2123a0d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10ba7b2f-e559-4c21-a5fd-5775b9558f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab576c2-db64-469c-a8a8-b0e41e7c7eea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdf3bb1-2c15-4aea-b665-9aff39260ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c154177f-a707-44cf-b5f8-c78d2e538a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1347f2f-9214-4f54-bf02-2ce4508f5fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1960fe4c-f625-4e6b-b534-ce535a3ec746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bc4aff-1cbf-48a6-81f8-ad31d2ff13fe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da02b867-16e9-49e6-add1-ed810f6afddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9b54f2-1439-4ca1-a138-d431dcb82e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99741e9-df18-4b6b-a04e-47e087f7e138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0279049-ce95-4bfc-968b-8bcebef37374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a492dda-154b-4f14-af63-0a82a51123ca",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ea5a9a-b323-44b0-a778-b478e253324d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a6f20f-c1e9-4dbb-a6c6-c18c489df4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d466e8-70c8-4273-aa38-2669a843358b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "373c2515-e580-4d84-855c-919e626b85eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c117711-f4be-45cd-90ea-e50cf9ec5069",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b879b6da-6def-402f-930e-497cfbcb1419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb7affd-9ec4-4d92-a49b-b60b0eb3e9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aabbaa-440f-4cc9-8e1a-5ec8ff519b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1263f1-9a65-4b0c-b305-57e10e45233b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58f3772-9522-44e9-8cb0-91e325d92659",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572defa3-bd7b-4270-bfe1-e252dd674041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee23e6f5-0094-4f18-bf13-c5720ae619d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bac516c-10f7-4c71-8412-424991505a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1398ac8d-e017-44a1-bcd6-8e96349c5fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0717cc-6351-4593-82e6-52937c9c3d79",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d24a1a4-52f2-4a7f-95df-1b5572b0e758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0317116-f880-4e3b-8c14-fbf4c35ec7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773ab25d-ff77-467d-9e99-1da133420634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd1f5fe-7b9e-4ae4-8b76-2cd9e9659796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85f9586-ecf8-4320-b6e6-badd823085e6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ffe2b7-844e-460d-a529-57d09618a05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af728099-fdf3-4588-b2d6-78ff92f167f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307dffa6-2058-4ca0-90fb-1a10b8c41383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "756b8e31-27fb-40ce-9e0f-e8d502ffb587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeecde7-4135-46b7-80c5-43c99ba02390",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7f36f3-4f8f-41f0-b9de-c18a75372822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a751ae2-e502-44f2-8e88-733c5517a855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612dcffe-b1b1-488c-92a1-181349b8c87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdad81a7-e991-4675-ab26-3a11e643b569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b9ab61-3dfc-4f94-b4ed-5d51ba4dd65d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf75504-84b9-4f8a-80c1-f04eca18d9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f5758c-0471-426b-aa7a-c22f19df933c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9984cd93-9d01-4adc-ab9b-c6a2e9fd2a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5a831a-b527-422c-9cbf-4d3f1a259104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c2a85f-a736-4c84-b9b5-5a5936498ebd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf8f17d-802b-45f3-bc87-f959881a960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5514bf-9f31-4772-8ba8-fd8906d40291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17205ae7-63af-467e-9781-60183b76828b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ce775e-b7c8-4976-b897-cf06952dc389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efac9b4-7fbb-4519-8907-4fcf9a398485",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33243a0-ab4e-4eed-80a1-63be3d16c895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c006a3a-6da0-4186-a475-432f479f313b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0fe6b5-4594-4e7e-a835-42b3266b65de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d3dcd0-3d13-4a63-a4fe-2527d273dcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553c213e-a3fc-48e8-a7ee-234ece05ce74",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607dd145-7916-44aa-b198-8977b6b2f2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bafab95-dd42-437e-8462-888daba45139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592f21a1-d704-4b5c-aba8-484c7a6aa13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bbb4f0-3282-4808-86ae-30cb04a0d35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b48d39-57ea-402e-b880-c6620f476170",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4177f7e8-91f9-414f-844d-74e4710aa65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d764e72a-cc20-463f-87f7-69397f74b4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40391334-5563-40e4-99ce-9c4561237a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a17be6-b829-47bf-9311-3211f135d79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211543cd-2e7c-426b-b191-9cd4bdfc9bd4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0ba137-49f2-434c-9c3a-e86b04049814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a402f33-20f1-435a-a062-ebd14aefa8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec9da4c-4e80-41f0-8dcf-585c90779204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f55138a2-24f5-4f4e-95af-22847d75bec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcee19f-0a88-4217-85e9-00dbf8fc347f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141c8ccb-9d47-4928-b0ff-8354d1a70701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fe4e81-a1d8-422d-9977-f1d5d7c79171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ef0121-90d2-45cf-9c36-017d0cb07438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce20f20c-a40f-4a23-b814-ec937f61818f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ca6bf7-43f9-4635-bee6-fa6d6f3f4562",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397d8045-99c5-482b-a761-aedbce5bb99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176553ae-6a45-4b44-8904-19174aa589dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad106f3a-119d-4cc6-b419-92e8924352a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c55a333-7753-4c26-ab69-6825c4a2709a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8701a8a8-5be7-4dca-bb3e-e01cf73d07ff",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2088e85-0479-4be5-aed6-175ac1fc9b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a41cc7-2573-4fb6-b853-3e8fab7a25ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c00c027-59c8-4e0d-bf35-fbf2e79ed95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45098f3d-e6a0-4d33-899f-4183b264e2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60a6ef4-32ed-4099-8c5f-ef39cce54261",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fef824-7f51-441c-bfb1-8fd3c9e37ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d972c65-5058-4388-9bf9-d28ae631a121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b498d9d5-4112-418a-8c3f-28fab5e002b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a239fe1c-433b-4360-96ab-69b7138c5729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be847bef-3b1b-45ab-afb9-9c3317ffa70d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11024f05-6858-40c2-9581-15491166e7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e91ab0-1ba5-4298-8243-9d92589ade1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db746882-43ac-400f-9b26-57905f2f6d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3f040a-b454-4954-8185-b8c5d9b8ccef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2fea51-43e4-4925-8d80-98c1ddd64622",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba48028c-17d8-4d88-beb8-d6faece6dcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6334fc-417a-4a0c-a16b-52920abbbcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d9a1c0-1943-45ae-acfc-a3649c6e4320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12fad402-f05c-47ac-84af-1ea59c2df5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dc1ea9-9b60-4a16-8cf1-fe05a4d40fcf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff5869e-f948-45c1-9b89-3dbe39790b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fbc47a-e134-4403-be97-bad3b05b7c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b83cf5-a067-4216-98cb-5e87b188b1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "191d952d-0034-4af3-a0b3-f15afc15bdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154895d4-fc04-407a-8550-0347e57012ef",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f645c68-cf4c-4a38-9b58-b61775208902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11516a2c-a4f4-4fe6-8059-e90ac4269acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aca45be-8c9a-4a96-9077-6bf23ed35ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e087e1-344e-4ef1-8ded-cea1ff63e0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e79d6f-1151-4ba0-a926-17821a18e712",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c45fbd2-1a24-4bd2-afd8-494a7eae3782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42ce26e-a499-4b1e-883b-1821decbeebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212aa0f6-561e-41b8-9835-77b56ea01921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "962fbf2b-efa7-4b89-b562-bbe10b105ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72ad654-942c-47eb-9e81-134edcd5fb36",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16c76ad-b525-4bf2-b993-de48ca01ebbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f58972e-e832-47dd-8430-1c53d43cda24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531a0b05-380a-4830-93aa-99ce23e6ff43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c793da7-3583-4a85-ac95-4c467e2ba071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdcd9c3-9356-4e88-ae9d-4ce62a26d9db",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6326e4b5-1b5f-41af-b54e-1beabfaf8d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9255cb4b-082f-46b7-9bd6-9414e6832e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06e25d2-665f-4aea-b5af-2d51bfc44fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70da2e27-6944-4b19-ae37-89ef7b8d1c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aad141f-73f1-43a7-a809-a41e9d6d9b84",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f42722-89ca-4e74-b6a8-b7e78021bd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65e90f2-f432-4f69-b913-812a533c4570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34df312b-8441-4d8d-9700-37254dec67ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10faddd5-a3af-487d-ba63-ee99724177ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98ca2f51-48f8-44cf-bb18-976cc0abe01b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2b6e9e7-708c-4585-bdb4-f539eabe249d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a8e117-2beb-4114-8239-00a29efd9e86",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8e47d420-8253-40c2-8d46-5be8fd0dddce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e52bf0a-3cbe-4cc8-aa29-0f7b29032dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88ff1bbe-b0f9-48ca-8719-dcef60aefb5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8717d42e-c093-4e30-a34b-e52885871545",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31821f25-6e12-42e1-96bd-2eb6a2cfc193"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea9b4d9a-74a4-4bb1-8806-a25bb166cdc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cfcd5bc-c950-4d21-a983-bb1f90b0546a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7a5ba35-c227-4ac3-8da4-a42a108328b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc205dfa-e409-48f1-a49c-e14a15ef6d8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4deb30d1-efe3-4a7d-b89f-621a2b5350d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3909672-0bfb-4374-80e2-b8e069a8c511"
            }
          }
        ]
      },
      {
        "id": "8c4d45d9-7c87-43f9-bd05-a4a96da3444b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6616b8b9-7127-4252-a497-84f17930e9e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0569425-4198-426a-863d-a86c07c28cfd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef845013-a30c-43c6-8a98-2d354dcdbe3d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99330e0-c975-4f94-941e-a75550f2c05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abb8c0f-297f-4405-b9f9-1b1ac2c8fba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1fb80f-594a-4cb2-bbc3-13b7158c4fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d30f52f6-1d1e-4a65-87e4-d515b43e7d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ae90ec-c7c2-48b0-bedc-500813458d1a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aae7775-aaf8-4291-a50c-7e2171bb1679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f4f1bf-2531-485a-9ab2-23bb44bd950f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a8a5bb-8579-4b62-8e2b-ea2addc30dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed984903-4f66-48d8-ba52-563375982e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f86decd-3cc9-481d-a05b-5d5183323d47",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bed4118-cf9e-454e-8a7c-65b38773fd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9189bf-2b17-446e-93df-5ef786fe909e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1013ad0-ff8c-4c89-91f3-70843e3555fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22037078-f6b9-4407-9241-88e79d35b694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4dc6cf-de21-4198-805e-ea4a24226b3b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1f1ac5-fb53-4983-bcbc-0a3625b9af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89d9d4b-9924-4b41-8b2d-d803c726004f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b9e4f8-2d3f-470c-931f-c0c8fd9ff9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee24e14d-6a6d-4b7b-ba44-87c88458757d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d054cc2-b362-4d31-bf5c-55679bd066ad",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6668f838-b5be-4c8e-8cc5-2048a21cbdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048160af-0d65-493a-b58a-122cbea11729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ea9ab0-f843-469e-9e21-df804275bf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3603bd-ced2-4b87-8822-f209a1915452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524a3432-b52d-425c-b3c6-ae025f1e6829",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdcb06d-a3e4-4fd8-b514-c7f9bcefe80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddac1198-31fd-40c5-a99d-cab59dccaeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7687e625-bcd0-4ddc-9f94-6716a0a47f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e199cb7-3a5d-4ef5-b33d-d8d26b798e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f23352-394a-40e5-9a25-cd7a832ce0fd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea3887b-f3c8-4c2d-9b3e-7817dd4faebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29998896-0247-4dc2-8138-da3214f4d10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aadcf9-c5cb-44b2-af69-61ed225d03ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e68b365-dbb2-46b7-82d0-1cbdc393b35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8359240c-b2c3-49a1-a3f6-e391aa5ec819",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5deb106-392c-4b56-a7b0-a801f525c291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be84d85-ed81-4e39-9da1-99761bb2b8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49358863-fc27-4f53-b209-3d443f6807f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "075f83cf-743a-4bf0-9216-754a2edaee59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c67f7ed-10f4-41bf-ae3e-c7dea82b5226",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629a4846-e70d-4be3-8c14-37791e56a04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4022a270-a5fc-4fa7-8f9c-97045f7e5fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c99550b-223b-4018-ba9c-9c878c003261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2301f5-4a85-4414-a93f-da41858c1844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6d021a-6550-437d-bead-7455188b2b3a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e555809-7b11-4660-8bb8-04a2ff80e9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df1213b-316e-4711-928a-f13673924c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a1aa25-5623-482d-aa02-f244953b0ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b59ba70-02dd-4f69-80ec-78195e04f5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49d1a8f-0c21-473a-89dc-492d9c939201",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11563edb-fa53-4794-af0f-f596255b4da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9855bb6-6d04-4805-9363-ed1be144e934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c077b2-2367-419e-81ba-f6230f6282a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0cbab7-f21d-4aa8-a60b-8ecddd0d12c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb25415-168a-4ac8-8fbf-cf05b6d61bd0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb5e16e-f8a5-429a-9e0d-6084a3dd7450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ae9152-5251-4288-9788-e3ae3f91b8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d0fb22-26f4-42c8-be1b-0cc8b0012b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1023c4b-35e6-49c7-aca9-fbb65fc3bf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e1ab53-f1d4-4c0e-8d10-9516b92ca0a0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39d19c8-ad20-4e5f-a150-f3422906afb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6877aa-12ed-4d8e-a66f-171b6ff7ab6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71187e87-65d3-436b-b7ae-974ba80c278a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d748917-8402-41e3-a82d-c4d19e88795a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1ba5e1-5dcf-476f-bfa0-e22755234290",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e13e73-805b-4519-b432-905fdc1f1a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed76a87-bc75-48b6-9b51-1a2135d905d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca98f93e-628f-4d4b-9c27-9b757a964102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd6ff5f-1eef-4258-97fb-cb659cc41612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777754df-7f14-4f69-bcd8-dbcaec5c318a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114bba77-800c-4c2d-8c19-20f1bfe43386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d482c199-50ed-49da-a20d-94f17a4e47b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a3efbd-4c07-4568-9608-7413378b5a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa7fb63-e98c-44f5-a335-0deb64be8fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9955b490-4e0d-48c7-9b25-010dfa3119d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b5c5e7-7c78-440f-af41-8574e83a31f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0172e4c2-e292-41ac-8bdc-b974957a89de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5c3a14-505e-4b5a-9d87-a02e5c194e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e07948-b07a-4565-95f3-280acf7aa8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e7977b-e150-4f19-a696-56fecdbf1c57",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d6b02f-39ad-44ea-aa00-b8a0189b77fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1331d6e7-b98d-4179-9b43-0c7b74f41b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4581ee5d-3f19-4ba1-b74f-82dc7be65155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8a0086-c81a-4a73-9363-c81775083900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2236e72b-7ba8-4a62-a709-e76b9709e050",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6b7edc-d2c4-498d-870d-252b9cef040d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c663ec9a-e1de-4a3a-abac-45fee88d6c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c44949-118c-4eb7-a12d-2737aa302026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a66c40-12a4-428f-ad9a-6263d72f78ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046e2afe-5868-4a5b-9340-5cfdf25fe114",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b875e10-4490-4795-8ac3-728fbb2ae50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b31cb9-19b7-4c99-8608-de5a0ab22303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdeafe7-428f-49cd-82e3-ab7ead8deb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fb296d-61d9-4ffa-9cb8-8a3b718b549f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c515f6-add0-4502-8973-9ca3cfef1191",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c984cd-230f-4ea0-a468-a92a24862e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2212b7-53e3-4e36-9b57-b6ee7a582780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797f0a48-e312-4264-85ea-395d92d64925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "602af721-83a4-4149-b5a4-e446650af001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6508290-39b1-42f3-b421-b1a17218f3ad",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b355a1a-43f5-46bb-93da-5d063d5bdecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e71d6bb-c110-43c2-ac29-ef30a0b0e767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff679305-7518-47b2-a37a-3f1c3fddf14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8a0c36-6c03-4feb-881a-e319b25f5b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94b9118-aa39-4440-b6e5-08cdb4849a5a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eebaacc-6ac5-45d1-92a3-e760d389ec6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2088fa-224e-4bd7-8975-c218bc04ce35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20ae1ae-fa77-486c-adf4-61ccd58e67fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea8344b-1851-4209-9a00-f6ddb1298d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe75951-74ea-425f-a5e9-ad04f21eece0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dfc24b-64c7-48ae-b5e0-68dd4f40e292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23393ea-b9b2-46a2-ad68-a9b2524aba8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51208ef3-9ea8-47f1-9f70-04c2e9676391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4e3ef4-8dd6-420a-ace6-60f3069df570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d717d9-e79e-4681-89d5-f173192271ee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db95b40-506f-4c33-9121-3c41dfe7d58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c813e726-92cf-4454-aa07-8ff2bc6d8135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee208ce5-13e4-4018-99e9-44367caa8da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37c649b1-0984-4eeb-a39a-2c5dd9d1a77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f4edf1-ef05-4406-8cfa-944a29f43c2f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18238ba-0138-409f-9a07-05aa136e959e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8983c910-e461-4d69-94c8-5c178988c19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e3ac5e-66ac-4dff-a80d-7070163843ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77e3498-0a39-4061-b8e1-ecadbe2f49b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8aa66e3-f2bf-40c5-b6d2-dfcbc82a9777",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9724c676-4aa6-4d30-87c4-380f52e9384a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784cbf6a-0c9e-49eb-ad13-625e869c4948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57e8cf0-c74f-448c-96f4-a02ccb061fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f324b5-5045-449d-b52c-06c9f7d60594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85788caf-dbb0-49d5-9299-541e8ff1c2f0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e81a9f-8b3b-487e-ad97-04787d8717dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18f27e8-f587-42dc-92f8-8835c3571d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc68496f-ffd4-4443-a793-d454ee2939b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9a844b-9f5a-49d8-b662-f602c0f58bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee26793-6f6e-4727-acdf-93ca551cdd03",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95924a43-be22-47c5-b816-3886fb3de2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21d2abe-e7f9-4448-baf7-20db1324557e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56020e20-eece-480f-a87c-30725ff0b98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26f49451-59da-4897-a712-f16b4b644a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f9bc21-9e90-4fa5-8d5e-ccbbb0b7598d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c835a370-d1b7-43c2-ba5c-2e7f79af22cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd318ad-ef5e-4e18-9926-80d8bdbea974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b4fabf-56b0-4164-8ebd-18653fa1ec29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27886354-232d-4c4f-ae6b-4ad7f5b839a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25814b47-18fd-4ac6-9bae-721fc91c5d0e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a2501b-89c0-415e-aec6-83f365fb66e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd18a3d3-4408-4a63-9a11-22ade32bfcd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a620746-549a-4d0f-9785-9678a65743a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60260203-cb9d-4593-9024-c3afb6aa9a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e33205-319f-48f3-a842-6ee33f5f1c1c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7aaa7e2-f4a0-41c2-9749-c3ca55a6f191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36782cd3-b7cb-4037-ae6c-6d78a5d53531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ffdbbc-866a-45a8-881c-e1295aaa017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd695c42-bcb5-4fdd-beee-99b31235bd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908c7c1c-9600-417c-b804-0b81f6a151d4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a67c145-337c-4cd3-9c5b-36567d4e0977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88742834-6fc1-4995-8e9a-e8416e47c438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae600cb-42d3-41cf-bfd6-286d1974de09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "337f312e-bd87-4e65-ace0-a65fc29e0728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fd31f4-4e94-496d-9534-e49b7f06dd34",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f70b826-bd43-4f90-888c-44cf70a1c313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4647b45-9b90-439e-8d9c-dcc62a502d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5f1ffd-29aa-4b75-a88f-1d9c6b987e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d5d8c9-8ed5-4b35-b07a-61549d5ee43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10df9400-cd77-47cf-8dc6-ef7ce255e334",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924b8a18-1344-4d56-ae7d-d97fa02d44fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f1e1b3-ec1d-461d-a7cd-51556ab018ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc85bcb-6288-4003-882c-66c31fd3f5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16acc45c-a181-41d5-9640-8425cd12d677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9220f239-1b56-4362-ae22-2f58fa40c69b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d55c41-ff42-46cc-8ffa-d53517be7867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0445c3-6acb-4cf1-b863-89754bcea3b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc59f8fe-6a73-4d41-8a0d-066cd5e5ec1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bc7fc2-4954-463f-8d08-d29acf066356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a89afb5-a8ed-463c-8c79-efcfc233092f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927a7ee6-46a0-4f33-a5c4-9c9ec0d45cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6814be-b6e2-401f-92cd-5238d9b769c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ee04e-c348-445b-b394-3af5c5ac681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511cae02-8f1e-4444-98a3-28f72b80101e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6462ae1-218b-4900-ada9-cda8ca598231",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466245b4-584c-42f0-a806-ae79a9dbf4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d8c4a4-f8dc-4cd9-a588-f5bfe1401166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2b14b0-3078-4f74-a999-8ff27b9bfd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "801a3e7f-baa8-4edf-90c7-f68b0496a3ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f083b3d-6481-49f2-a955-5e1e3b365203",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "646b4932-ffee-47bf-b740-100333616f15",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ce8470-01f6-4022-a20b-778f51dc38d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ca422860-745d-4b9f-aa3c-37e5649f19d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432825ad-b9a0-4b49-ba85-c3d9fa5930d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a713f1d-e5f0-4ec1-b51e-8ed1b30a0ac5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2d6f231-00c5-41e8-85f7-522ad2e3be19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c74299be-9fa3-44b2-98db-7616cc46154e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "454c412e-1f29-4d64-9974-67d7131edb32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d67f1535-7aab-4839-959a-c10ea15c2957"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eae1260d-4510-454e-8976-cf38843a7a89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ef929e16-684b-41fa-9b15-23cfdd05c312"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edb103a7-391e-4047-a173-9ca78ff9356c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d0216bf-9d11-48d8-9b36-ec87b07d9f07"
            }
          }
        ]
      },
      {
        "id": "64948972-aba9-41a5-afe0-512baaa1c79f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7998c372-6fe7-4273-a2b7-a89f230346a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5efa868a-ed22-4c70-ad26-d3cb9bf108be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "462b4f8f-83bb-4331-a813-67c35faefa7b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b553ab-0a8f-4e6a-9118-0947f20914a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc06c500-a6cc-4e9f-9eed-5831c1250eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d962678b-02a2-47ce-b723-0cb10a7e9aa7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3d5e93-9c35-49f0-bb28-cef8b7a0ff1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f71a6b-1c16-457a-a459-2878193ae9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97824ee-441d-4629-8473-5fd285ab04e8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfc412d-0c13-404a-96ad-ed666bad6eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3382dd-11c2-459f-810b-41e6b1bf2aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb77a8a-4869-42ed-b083-101f29d04bb3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033d9c68-ed1c-4225-bc1b-a5ef3cfe952d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e9c743-6619-49d8-abfc-8161a185c419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752a31cb-5ace-4b13-9651-567fab26a83b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6af986f-fd9f-4889-a15b-24e6b2edcd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4838da-91e5-471c-8843-d6354851ae64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80aa3a3-e37f-4ad3-9511-b9dcf6cd14dc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85790787-a1b7-438c-afca-398c0ff72583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067ed811-3ac5-425f-8273-b81909649777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18523d89-f329-4fc7-b8b0-ec96024a3d55",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4cf126-1c56-45d1-8124-233479f1f5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52523ba2-7eaa-4655-b701-1e1379fea51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc3feac-d9fe-489c-83e3-ded4ad5af859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8377c705-b5fb-4960-8f6f-bcd7dc9be9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ab7f09-87e4-49f4-b2a5-a9a820df8b23",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92958caf-2d9c-4541-8127-45a243c14b17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "469534ce-e338-47be-a49a-7e105245a0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15860ae9-f8ac-404e-ae67-dbfa3f46773d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fe3330-5afb-4350-8b85-264d9379fbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859acca1-28e2-453e-8e94-381ad9d30ae2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997a08aa-1aac-4250-8a95-50c026d34694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2aa5b49-d8c6-4e67-9c36-e0497edf4645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8101b922-c7f1-49f4-8152-931409653319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534f5938-1004-4ead-bccd-6ffbe61e1e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e69d60a-8122-45f0-97a7-9edf9fd335d7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e65579b-44e2-44ff-a255-ae0c325ec2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c182911-1efa-41a2-bee8-e8cef3f20106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b90a629-f92b-489c-90c4-1486e3a0b3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c339ad-db33-4120-8557-fab874cb6c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7967bad-2060-47ea-a713-b68a590bf8e5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae17820-8340-4398-bf7a-3078f8c80dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bae222f-aea2-427d-8a3f-2841f5b7cb58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c13f3b2-9d04-4431-9a7f-e6c72acf87eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e7456a-0057-4250-a003-583c405dd864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a443450-28b4-44d9-bf77-de59b700e0d1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07688573-26c8-4f36-a42d-98a6c0a19305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a921640-7cb7-4f5d-80a8-9d4d4d042718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197db838-37a8-4b6d-bd6a-ffa020b982bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486eac41-be12-4b7d-9fb3-5e9fd0f426b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11bd08e-7b9c-4534-aefa-c600f3ec2730",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c41284-99e4-4985-be0e-7cce4a9832d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754a4901-5132-4d89-81b9-03de8a50f5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50f6970-e60c-4caa-97e0-e8ab79ec82b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7da14d9-b3bc-496e-b916-d5d71abc609f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead0e911-06a6-4714-9d8d-49936af315c4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6063b7fe-910b-4557-bd2a-4c10250c2420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2d38a9f-a1b2-42f3-a332-dd914ffbd40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf7b9d0-163b-4957-806b-141ec8d8f3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1721973b-3996-40bc-b72f-f55ce72c4f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3173f694-33c0-4455-9f32-a38c2206797d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f079cd-a02f-47b9-bfa4-9d6c881bf31f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725ad8e6-3820-419d-984c-02fef58a74d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f22b90-fc57-4cad-96a9-1b2a8bb618d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daceea31-ea2a-4de9-a9a8-43e76fb8ea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7ef7fe-eaf8-4bc5-ba26-3c2e8aa91614",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8150e1f5-be7a-4ca8-993d-02c273a91c09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170d383d-372c-46c6-ba57-2b3b32dfeec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf72729d-1241-42d1-ab99-16bad1aec34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8abcba-b670-4bb8-a99a-7e723558b3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab036a0-e71d-46bb-8c32-de4794c4ffee",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f42c78d-5185-44fd-a737-32accc651414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4b0c94-2098-4377-81ae-242e3207c4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea07782-6e77-4d0e-aeaa-ce4f0cf82aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d32a51-9556-46b6-994b-aeaaf3b0cdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31498ac6-66cd-4fa1-ae45-4d0678decd08",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801e1af1-a5fc-412d-ace9-b8810ca9d78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3be7cc-9b4b-4698-a83c-2d3d0b636cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4af612-3e4c-4e75-ac8c-69225ba084f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbad689b-f698-46a5-af13-519f4a984d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53dc6b3-2915-4006-93cc-2dc2f32caa7a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f7094e-10f8-4f49-a94e-f3a527fef33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c525daf4-dc2a-46a3-9354-b6c89f552374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ddf58a-c084-41e7-9d81-0a1401b9dece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e958111-0fae-425c-a80c-28ba98897d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a55937-d335-4d45-8400-2f8d3bd6a806",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f03d3c7-9910-4923-bd8e-aa56af02c3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6f183b-6298-451b-a53a-54fc066ff16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6142ee7b-beac-4a33-b7a1-c3bf6c37edf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d4d8ad-2838-441b-8d0f-e281e9b3be48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2559b828-cc14-4351-98c6-71b6dc2372f3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fcae38-ad84-4158-a167-a76f5005039f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa57744-a46e-4a7c-b5dc-aec8f646e141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639fa72e-ad98-4aa8-8082-100e82c627e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4ae7cd-655e-455d-a54c-077288d08065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6021ef-c690-4cf7-8fe0-b0a3cc6fce58",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98739c3e-cb93-440d-bb33-c7a0aeeebc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c5a028-6588-43f7-ad98-0a683af661b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdddb90a-311c-4eb5-a144-36611e3ac5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1f2bc6-cf4f-440f-a4ea-8ed4570562c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca22137-a5cd-4834-9395-27e20ae2654f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45953fc-1be0-4174-ae5c-58c2341451c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cab545c-00b5-4717-86cf-623cd9ea7f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8904632-2dce-4874-8511-5a69fa8d6779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846a17e1-8b73-4e3b-abfe-c4045c5d6e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d203b5-6441-4f30-9c5e-9fd9bd3335bd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bba7c6-bc05-4ca9-8945-7ea421aa90da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebeac731-0dda-4f7e-a0b6-10322c99f565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd0daa7-c1f4-4f4c-b3df-99b1af7714e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b07a041-b14d-4f4f-a0ce-416fd721d8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42340324-f402-4273-b25f-434911afe52f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa05a94c-082b-4903-96db-11d3400bce36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19bb9a18-1ffe-4610-a842-8b4752e73c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7671f0-58fc-41d2-a9a8-57f14a167d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced7f07b-97c2-49ff-bfc7-852d7e835c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e52ce9-88dc-4dde-ab3e-586f252ecc95",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5194b5f1-cacf-40aa-9716-320d55fac21f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be0722aa-a1e0-4008-a41a-aca3840ebea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c583d7-b9fd-4fc2-ae11-f431fa345a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec1e6e6-7a93-4d8f-8518-a10ed4f7886e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c19100-8f1b-48a5-bee0-8ea2f392fe35",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4ca3ad-b938-4141-94ab-25a2b60bad39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6145c77-9108-4bc3-8897-e6ec99a225e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2455931f-df4c-418e-b108-d0a1b4b9af29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc73c0a-ff71-4c98-9a01-20c70bcfbd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a8bf0b-0c90-4f98-9e39-8bfcbb537cef",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f114e382-a4a9-423c-b7cd-2fd1a23c320d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16c7325-c4c6-4d31-86b3-b1d02ace88de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0388d216-42ab-46e1-8fbd-d4a598fffdb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd0a307-7a9c-44ad-83cf-a1367c4666ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6248aa26-51f3-47c7-b94c-18d6608ec7e2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147016e0-ec7e-4fd2-b1c5-8c0118a19e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffcb6fc6-bc4c-402b-ab2d-3158b04724b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926d385d-8ceb-4831-b637-512c86f3e303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abc3823-5f6a-4c8b-af36-892af94f5509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10523590-8946-4d7c-ab65-43692f8c029e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dccaa1-0aae-45bc-851d-9a82a4c9ee92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a84c57a-a2cd-4935-8f27-3c5f1f9d2754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65a93b8-c51f-4d21-90a3-52a6558cadf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6ecb35-6f67-44db-b4db-b9654d37d80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0b6dbd-65a1-4e00-85a7-683a2c2b7830",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d7ed0e-19c7-4f1f-99f9-dde6a4391ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fc214f0-5efd-4216-ac9e-df287cbb7f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073e09f1-0470-43cb-93fd-0aa7dc1d2f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8404575-b921-47f1-8c0f-0d8b1798967e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc104583-1391-4173-bee3-58763ff8f988",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acc991d-3acb-4847-86cf-1af240b7e953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4623c4b2-757f-4d22-8477-a54182cd15d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8dea6a-6621-4dcc-821e-0ae1361b2b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99c6cc8-c39c-42bf-8663-250220d3f47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329e6d1b-1d6c-4344-8198-fc459d5b6f27",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf795364-b6c9-4de0-b783-7f52dfcdd20d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d778cc-705c-44cf-92aa-d5fca0eeff4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86beb137-9813-4cd0-a982-7f7623d6f19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24a765d-bc90-4c6a-9f72-580bed45ad99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78165b4-9443-4af7-a6ac-033ac3f11b14",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9085424-246c-4b35-a3ec-e9079480b086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d72b69f-86bf-4210-bb07-95abed09713d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a7aa31-c81f-4b64-9969-246583e3b6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23034520-9761-4b40-9a14-60c391f9a754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f157eb-5a3d-422d-ae1b-054cf1f39b10",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bef8f8-91f5-46a7-b587-8eaa79f1a968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7b572d-60cc-4ee0-86b2-2b43f7d9d5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7e0103-df93-454a-ae50-dbd9648f2ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a481f17d-c669-47f3-be2a-5524f5ce674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58069a9d-5a2b-488c-b0ec-7a252d0a2b02",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3dc748-c9da-478f-b7a1-a04f22bd4be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f246cba-b3ba-4e7d-8b40-6bee5d285c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06856e92-cd4f-420c-a062-b16116765057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bad517c-9f5e-4748-a5ad-74b3afe403d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dec0550-92fa-413e-a7b7-dab923782a9d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfd1568-f600-4062-ad24-2f34d1c82752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820a7180-5229-4de6-a152-21ab2d13740e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c344198-9e5d-4d6b-8c64-81f063823cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7ccd61-9736-4cfe-b8db-1147efb92fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ae295c-d6ed-4161-9c08-51b84fd70a5e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58849ef3-0beb-4486-827c-bc34bf7886b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8233c8-a7c1-41bc-ae3a-e6a5bb31acb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "490463cb-dfe1-45b7-a2c7-5128943c9765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0dcb3c-41fb-477b-a50a-e41a77c657a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a42282-e36b-47e0-bcc0-3087387017f0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f52449-3411-4662-a860-109acf8e422b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da4b8ec-24a1-4bf9-8996-53bd841fdfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bf8999-11b6-4b56-8919-d614559a4303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37f3a3f-a555-4c68-904a-344f8e00ea99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2882d0-8941-4223-8539-cfe3fd900549",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3c80e7-8fef-4b37-b0da-c71ea0583515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fb894c-29d5-42b1-8b0a-bfd0db1c97be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0e8151-1ab4-4306-86cc-88edd6827c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25137993-23c4-4f15-806e-386084074de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c366b9f1-4539-40b2-9da4-45f628d0ead9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24603217-5a2b-46bf-80e1-aab6464f7991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460e7cc9-1af0-472a-8f09-1710a40c8e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeaa8e1-915f-495b-b4ab-82d8728fd56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bf9eff-4ed7-4573-b24e-7936485a5d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f70bf35-e437-4936-b695-0f9ca369dd6a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c83dd7a-0f1f-4642-923a-76881c1fc8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fdc02c-10d6-4185-8bb0-1b0ba04ddd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c668b40-bda4-4e6e-927e-7094e01f5500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13271cda-14f1-4a83-9bd0-e98dc0ef89e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3c70a6-04d6-4523-9285-e802210a4780",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca76b2c-29df-4188-aea1-da46b53a44f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f0ebc0-d8b4-4c83-9f10-ff70374b1f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f9633f-2803-4beb-bd77-73ddc75693a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de271d77-0d04-4179-99c1-3428837c2c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51da33f9-3207-4e88-9399-160e0986e4e2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eea531e-bed6-4f48-a849-222a2a58bb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5381d61f-962c-4cc6-8cd5-e6efa9f2fc08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d26ce29-2313-4f79-ac0c-2926b0b233fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c30eb6-ac86-4804-87a9-e60aa4ece684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48545ffa-044b-4a2f-8b88-28db610c940f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951d5018-2416-4fe2-97d4-3ec1fb27ea73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff0d714-d980-4275-b0b9-0a28c6a96a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd013463-22df-485d-8f9f-a0ddfb8349c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a779564-0948-4e27-9fa0-bb69e57baed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2752d6a6-a692-45f0-ad9a-f05ec4603e8b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563b0787-44ee-4a2f-a7b2-3c9fed2e9846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dc7ec0-96f5-48d2-99ea-43f4a0ce759a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f76378-9e21-439d-8918-512ff0c9e9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba1c8d8-ea98-4c67-bb67-753e6f54ce7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905746be-7228-4be1-ba7a-acf0567de1d7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991f4931-fc22-4c2d-a52d-2a3cb68adda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb77ed3-6ece-4ceb-9077-d0cf5fec272b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d989ca89-acf0-4611-a93e-cf036d614002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608ec211-cec8-47f1-ad86-52ac621c36a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934bf362-4f32-48da-b880-34d2857809ca",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa8c04e-aaac-4348-ae96-ca50ab89d9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3329ab20-f77a-44f1-9f6c-9361d65ea811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f252a5-23a2-41b9-bcf5-14e5e101be8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923d5427-3cd7-487c-8efb-4fbe48466025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a1a2a5-4e45-4c2a-a24f-d2c5bfad187d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730a4548-5d61-4f69-970c-fff88fc20efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef76a0f6-8984-4553-9577-38923c958232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea833b77-cb72-4e9f-b534-8e760dddad74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2f9469-e9d6-4a07-8621-2899cc4501e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700030a2-0d19-4178-b040-6b6f0f7c0ddb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9efd73-0887-4ab2-afd4-c0e64e59b9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5397de4f-2ced-4892-ae46-28683f404289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044daec7-bda0-47b2-b6d8-638f959ddf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988de503-9136-4312-a58b-cec7d83b808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6285e27-8306-42ed-9e18-266d16342329",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe14616-8a65-4443-9d09-e8de67bc21c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c6a0d2-0884-4afa-b5f8-2d28171fee64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c9e4ea-59f6-4427-8863-0be95fdf745e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b31995d-8f1c-4801-b380-ecab7ced61e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299df3ff-6f32-42b9-a715-07455f69b3fb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7caf40e-b294-4595-8378-bccd4432394a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808b42c0-5084-4a08-99fd-7155c589e778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5139b8-3c5d-4402-a64f-fda8164df8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c935dee-6479-4378-ad03-7654de2cfd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db182a10-f67e-4117-85ff-e33224d538e8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5c1990-47d0-4af2-a0f5-2573fa8921fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2809fa1f-927b-4ace-ac50-a9ad34f22f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e70bcda-544c-4d48-bb0b-c53921308082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c7abb3-b89a-4ea2-9442-a8c8c56427dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05df9d6-d268-4d48-8660-ad63070e8d04",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11e6eae-835b-4bc9-9440-6b4a4ce83d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95632ba4-1e65-42e4-9dd5-9041b312a1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8d7cac-1c77-454b-bef5-b8d5c871182a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4423941b-a23a-4a11-a543-e679149abd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850f7f1d-4e0e-4607-a28c-e950a4cb6710",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb14334-af45-4017-be63-35b735e7fed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d366ffb-1562-49bf-9e02-93e3c77d0bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d4d98d-e611-4b95-b4b8-de70343b146d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0646a451-0689-4300-9946-597a507c5c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8702db-af1b-47ae-aa19-039352154724",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05fdb23-fe0a-41e5-899b-fc011048a08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4979a55-91ff-41a6-afb2-4386f6cd2065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5713e099-690b-4698-ae27-22fe2464c9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9060ed-d362-4421-b47d-a98aae7f05f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fadcbe-e84f-4e5c-a4c1-4de7cf9b628c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeb8a92-e35f-4fda-9739-ea0ff830c10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9ce395-8abe-4ca8-ac9b-61c8a6921fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31f0b6b-7502-422c-9c3d-fd916be570b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9178ce6a-e16d-4954-8a5f-f94c8af3fda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6273787a-40e2-4306-8c7c-47cae73afc74",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed643365-16b2-467a-97fe-122c51e0038c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b771b128-2954-43f7-9682-c80a5bbf2758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac2bd36-c288-469c-83d4-d8033b1ea529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057667f5-3a36-49bc-8f7e-b8fce3535704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da870697-b74a-4c66-9936-42fee3fdfb34",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e463d34-ae79-4bed-a9d8-0fcf4a5716d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4b4a71-7727-49a9-919c-4dd20099e818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a4e6bc-d86c-4bf4-8056-7f9111a3af29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e293cb-04b0-42b2-8966-c1884c4eaf11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3cc7d2-379c-4a3e-84d3-6708e5cb3522",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10012251-6353-4f93-aee7-03921e714e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea6d12b-a74b-43da-9639-aae3d1b806c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27038e29-457e-4312-b8da-86540f8c8daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553e308a-e393-499b-9e09-f75b54e09b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baf8ccf-f08a-43ee-b222-cff2597e333a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2712b5d3-88e6-40d1-a384-bae28f18608d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227dc199-0132-48ca-915b-014a4a5737c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d110ad37-1f03-45a9-88c0-7f71740d7248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0377fe15-82bd-4499-bd39-60ea74afce64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f3a01d-491b-4a05-9373-acb4d50ed8d7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f108f49f-3d06-45c9-816d-9af21afe2775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdee858e-c926-4110-9cec-c99d0589ad6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304c15d3-c73d-43ec-b28a-d2a4f6be0d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de07a2f2-fc6e-4c1a-af39-715f56fa9285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4fd6c9-8e04-413e-a0a7-7dc63e30ac5e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c3a272-709e-4948-8e6e-17f1dac8b719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5d2430-61cb-41e7-9ce7-15f98306cdb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788ed232-6867-4fe8-a0ee-1f4b74ebc692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eec3f65-6b8f-4724-8ea8-2b583fed133d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9932ff-4e47-4739-b027-95aa294dd1c2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8370da37-b1cc-4247-a7f3-699c81bf0109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb336c8-4f98-4027-b83c-fc7089e797d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fbaadf-4545-412f-b729-a6f2905ebb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e8b155-fef4-4f69-9361-d23abc9f9c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310501aa-7829-4884-b11e-7a10ec59902e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e290baea-3dc9-4d2c-a67a-facf8958567a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa66006a-15ea-4582-9cb7-1bcb5296c52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078528d1-8aae-4104-870d-25c2e97c1a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2799c84-bdad-4cfd-828f-c09e2b049949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4511b3db-52fa-46a5-b05a-de4a81001b01",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05aa8946-5943-4d20-a532-625390b2b620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e3863f-7910-495a-9974-0f48867a3959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ba62d2-6780-425d-96f6-88f674f360c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac98af4-bd49-4af6-abd2-c3deeadc73f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d167cdd3-c34e-4449-863d-2c1ca43b8aeb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccfc993-dabb-4994-95b6-cc01315dbd10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e3a0ad6-1946-468d-82f3-7e39d8106000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d23d1b-94d3-4925-9c9a-5ec2373ea4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c59828c-b102-441e-a5cb-bd05226f297a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80c11d7-44e7-44a2-b214-9e14e833b0fa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95af5a5d-6568-485a-b828-07eff07613e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b1612d-2e43-4105-a823-ff3836910b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0effd866-90d0-46b7-ba7c-3fcdf80b5835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4202473-d2ad-4241-882e-b3a6e178fe12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621de2eb-3583-4742-acbb-c8a1c58d3f98",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f44bd40-d4c0-4123-b93d-02251de9fb2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fea2f09-1b87-4de0-bed2-2cbe6b71d880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee042465-001d-4bcd-8a55-222653998727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0812f5-5f10-43df-927c-d46e9584543e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7150272-6f10-4b7a-8663-0f81db18893c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507548f8-9517-45a2-8850-f797cf04b082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb563941-8945-421e-9a1a-253d47ac3313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b9ce89-27fe-4243-9252-8aa82a4e289f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0e2644-3dc8-42d2-a160-8222638b3b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcc4552-0184-428f-a22e-7559702e0017",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd514a5-b677-42d9-ab5d-d4b126916d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a35d4af0-9e28-44b2-881f-afc0ec0ae3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45101fe-39a2-49fe-85aa-9492515dc57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36c1a3d-27ab-498d-a256-8234b83d7ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0633f51-52c0-408f-b7b8-50e7309fb53d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e4f724-d1e4-4e7f-9a27-67b4fd83777a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0d6bc1a-ecfe-4625-9736-278728b97249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b087ab-f042-4850-8de7-8dd798d0ed00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ceb72a-9503-466c-b1a2-5b794ce6eff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c04dec-e8e5-431d-abf2-98d27a6e24ab",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0885e26-1e52-4ee9-b64e-9320408917a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bc2404f-43a3-4167-8e1a-03b869570c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ced973-bc53-4041-8f0a-6ef3f9316dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e40666-360b-44df-ba8d-85f78f535624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f5cf15-8c71-466a-a0d7-4414d5a25b49",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85491f32-aa9e-4e34-9e3c-261181246cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b19d393-49a9-47fc-bf1d-d59ea61b3ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb824b89-2c0d-4df3-9a9c-3f11b1cb6c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5eb222-fc33-41b8-8604-22140cbd0688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cd4d8b-5af8-4d2b-ab30-4174189daa63",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1267c150-ae05-43f0-8756-040c99d8395e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07eaebd7-4101-4756-9814-6628a4930489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cbd4ce-5557-47a0-9b07-3326f8abc3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f95aa2-5df3-4147-bccb-389079b270bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d717718f-dcbf-46e7-9e89-bff11ddc730a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c593eb-f683-44a1-8bc3-8d075db38d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25fc6559-8028-4e85-94fc-2051856968dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ea3874-b0d1-46e9-bced-0d112526a419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207278bb-5901-4eb8-b33e-d5a8a2c9508c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbe755f-def7-4f92-b461-1fbb12f02efd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05aa8e6-a071-4324-8bd5-db415def720f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e295f1a2-0d36-4c48-8931-a526ef25506c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58c49e9-f966-479b-9e80-2ad0764d836a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af633ce-e5ae-42d9-aaf1-bd4076020cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd87bc19-5259-4fb3-aa17-2bf45e324057",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d828f15a-6a6b-4714-b680-f52ff62b0415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a98520-60d2-4229-8f38-d1d235b4420c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e70f08-43c0-438d-98b2-038d555b1cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0415aef4-518c-4f74-a829-a5a1a22e1cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2777b2-324f-431a-9667-0d078e935475",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c63314e-d207-4009-9a1d-737bd6eca6c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a5e856-d2fb-4900-b53c-cc3fb8688e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b2e111-8a27-4da5-9e92-24d1eb69a8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4560c7-a703-400d-b482-46bb006501ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f4f756-6d0a-4ee6-83b2-3db958955e2c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7036a7a3-c48c-4ce2-be6b-b38e9523c26b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c6d76a4-cc23-4817-a9b6-7055c90932c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf8ca12-dcc1-422a-ba21-c01e31abe24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2f3c7b-412b-416e-b5d1-1827914c2d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765cbc9f-a5cd-4423-b829-2158966d00eb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed672461-0a62-440c-9233-5d9472caf4a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f503320b-acaf-4857-973d-9b55790842c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bfcfaf-f9e7-41b3-aeaa-1c470649bc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0294b4a-c475-4761-97bc-f2315c3b42a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fb95e3-2384-4f42-a39a-61cdc5d960b6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f866971d-5526-45f4-b219-e5d22d11420b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1deb4d1-cfdf-47ab-b342-0fe89d90233e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c34603-a18a-4fdd-8203-8fa786887ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e365f4e7-7f0f-466e-98ff-8b1f562e2480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36104111-7fdb-4a7c-8e26-38ccfd00cf80",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11da926e-f4e4-4e1a-a397-870b834bb210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79be378c-c7ba-4ad3-9548-aacc692cf7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50f4079-e56c-41ca-99c7-ac13aeaa3677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1849714c-ca01-4af2-b8c9-9eb78f9696ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0a9135-21a1-4604-97fe-182cd796959e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7863fdcc-4feb-4a60-bdd6-4b69fbcbd32d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ee9d85-11ce-460a-ab52-a6f0b6da4227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559259fa-e4fe-4815-a43c-4051c69ab2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed926e7-b248-4844-a74a-02b08892d9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b4b6a5-6f2a-4762-958e-0049b97aec30",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f4a7dc-09ab-4156-88d6-2d1fbcd5292a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a6fc10b-e562-482b-babb-db657fcd5ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54a644a-2996-4482-9751-2cde7afa1754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3cf40c-3fa5-45c8-a1bd-6ebeadb3f137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380eed2b-2860-49a7-bc2c-e8ce4824d357",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a159233d-4500-4904-9880-d6669a51fd81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7653f6-1145-48e0-86b3-12a2756aaebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fd4991-b4a4-4bda-8592-e028ec9323ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca391ecb-f779-4598-895b-08fc820e235c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e865f171-98ac-4eb6-8d83-ae22fb253e0c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f29845-073a-4ec8-b46f-4e8e738024c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03c1f6f4-b293-4595-b737-43cecfd17c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2227860-1594-47b3-996e-520450e269a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1be950-49de-4a59-b85d-8a016fb80e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c504d78-6760-4835-be0d-5479333b008a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d59da7-e214-4be4-a6e1-7335e51f31a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d0c705-e64c-4c14-ab70-8ca95a1e195e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa21cd8-bc4c-422e-9bbb-212520a118e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02376b73-a5d8-4662-b350-6c35a5935b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ce5848-b0d1-4aae-950f-37707dde8261",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f709f4-13b1-44e9-963e-3f5a6636c8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d63b15-139c-47da-b6b3-4ed636fb5168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4e9827-9ea1-41c0-8992-344c51168755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bb1af8-40c4-4db9-87db-e1a684146cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63360e0b-91a7-4fca-8678-61475e9f5ced",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c382a81-adfe-4c8d-9e6a-34b1920cefc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d8145f-59fd-4028-b17b-251ed2890e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be93f7ee-4f53-470a-8e8d-66559a8d6e84",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05eaa4b5-11af-4a29-9c01-68e28edd701a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67662f6-64cb-4b6b-b507-8e5c2e360d0c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ca5843-be9d-4c72-9347-8ce508a35a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e86a2a4-dc91-4a9b-bd62-857b1e3d9baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde63f62-af00-47d3-afa7-229cd1313b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6c56b1-1406-4aba-9a14-89540444d6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ddb252-244d-4268-82aa-ce44a0d50c65",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9022d919-d630-43e1-b22c-8209436043b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1c0763b-f24f-45f7-84ea-dd1fa415a079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa00f1e-3a44-4cd1-b001-02f3b2edcd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd96b59-9a72-47ae-9770-248fcb7dde88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3577fc21-ab87-4619-bba9-9e9445df1e32",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a94da7-2325-4e2f-a265-1e8a4f505450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305a665b-5ab0-4e7c-9bed-6eeda5d73c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d44412b-deef-46c5-aa58-5689e2b5e799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e03139-91b0-47fb-b6c1-3370b0c3ab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fa8f83-a0b2-40d4-af3c-d5344bd7a78c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1460f99-3c86-4efc-868c-5e41cee2e12d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7422ac40-cb8a-4de1-8d17-ed77c0e7921e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151dad9e-f017-42cd-936c-a2f4df0d4750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ead3d1-1eb9-4abc-8b1e-1ddf1db366ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e107e0e-5bed-4000-beb6-40154910067f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1bf51e-37a0-4394-8584-2f2101aea880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "923ccfab-dfe0-400e-80d8-7643e4f93ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb12b25-eefb-4766-abf6-3599a9ef5bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37876e8d-bc08-4864-89c7-de0b5b5f3895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e145da-a2d7-40eb-96c0-f6da96b553b4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46be7bd2-13f6-403f-b211-3eddcd1a7a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e513c54-cd39-4704-8839-16d416594232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc210da-1e99-4b4d-87e4-642a2619ea33",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38af1133-db38-4cbe-9455-6e6731bbdfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bcc99f-b973-4d44-9af3-e9b5aa288f00",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbec882-5047-43dd-a0f5-6c3ac9d1a653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69abdb0f-7cc6-4a62-84fb-50c92358cf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8e0644-7774-4da8-8082-412073f7c729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547737f5-b6be-4f68-8860-956afab9d4ea"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff88f31f-cad1-4a49-823e-dbc10914d1db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bbb7c28-88ef-427b-83cb-95d7bcba3f9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f68f875-1182-4296-8e38-4ebe81cad023",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bb9fcdb-624f-4113-aa77-c8c74e5155bf"
                    }
                  }
                ]
              },
              {
                "id": "7d24b8d1-3cf0-4a94-b819-53ec9064eda2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6f0abb6-7b88-47fe-bed3-10efa4ecb54c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9602b92f-663b-4b56-8dee-fd2d7f58ab42",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "474c2c1e-7e40-4ad5-a3f3-fd2cb927460b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380e1c26-86f2-4476-8fc6-e0fa33616010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5c991b7-bf5a-4efa-8ccd-69dd3cba9211"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fe1cf8b-15ec-490e-9eed-f43b238a9393",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86264884-c535-4d1f-b356-cce4a2a448c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c76d38ed-7ee4-4cee-aa36-6549a648d39d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25b62634-f4cf-497c-b547-7abf4d35b2cf"
                    }
                  }
                ]
              },
              {
                "id": "7e6c361d-b4b2-4141-825f-017956a1cb3f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e8c70bc9-aba7-4dbf-9468-7887b9913133",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe78eaf-33bb-4ba0-92a5-f6b3e3f3cab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "25787782-4885-49bb-94a5-85d8d1ab8af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fb0589-e955-4bb6-b3a6-499e273ef77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eccd7ad-5d39-4d48-a72d-4efa1f692ed3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b6a78dd7-f8db-4671-85a0-1818f0211b06",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd45c2bb-5dce-439c-ac59-12d0aca870b2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf865f17-03c6-4660-836d-3ab6c5892dd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5ee278a5-e6f0-42b5-af92-040ff4195594"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed38334c-4afc-484f-914f-e579ec87f005",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c8d3fbc-c4e4-4593-bce7-d17271fafb9c"
                    }
                  }
                ]
              },
              {
                "id": "b502cc4f-7443-4eb1-bee6-51384deef30e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "167470d5-df8e-4d3a-a043-e28269fc0f8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5e004d54-ae0c-4747-9cea-b6f57ee7880b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5687374c-f18c-418e-bc81-c9cbb8c33527",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0615dcf6-77e5-4c35-a2e1-4bfaa11dad67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddc8a28a-f7f6-4588-a7af-90db10d9c3e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4f0fb1e4-3fa2-4c71-8f4f-b4f2f5ceeffc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56d0c963-b12d-48e8-8b3a-719d7e62b2f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42b4f491-a311-4a87-b49c-88dac4f98391"
            }
          }
        ]
      },
      {
        "id": "6303906e-1fb3-4efe-ad14-0b361c56ea6e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "35c71944-2b7f-412a-9d60-ffde74ba499a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aba91b60-a34c-49fe-843d-981e837352d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ff21e5c-8031-4198-8c3f-4bce76affaad",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e44eb5-2d7e-4585-9727-8734e87a3a7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9d758f0f-2d7d-41bb-998d-17a861d7b165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23f90c4-d57b-49ac-bf0e-520583102f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efee896e-ec80-4b31-94d2-513b6684d9e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c9c516d-d9d3-4906-959b-d2cb3daec281",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "980d0734-bb28-4787-84cf-692e0d19f218"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c550c9b8-fb86-4221-a566-f4f757f9aa3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24e4dae3-7fe7-4435-9e4c-6e836fa101b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc344f85-f565-468b-82e0-1e87ac27af4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "59bda762-299e-495b-91f7-c83481a0b130"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b86456d3-5a0d-4b82-8693-e79bf5416fde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2db2092-3f46-435d-8bbc-a4e56cd30d29"
            }
          }
        ]
      },
      {
        "id": "97eda7ad-126b-4e9b-acdd-4a53e0d2ca9e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "910254ac-92ba-4cc2-ade3-5f249978fb9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d6028e9-0481-49ae-9683-c5aa29979c22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a1e8a47-8283-466c-b1c8-208bf6f86bd7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2be8ae5-c37a-4e89-b007-22ff891bdcf3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e60d7b6-411e-47cf-9e68-1f6a43692f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef8a1fc-c603-4f66-a439-2034d54df119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17e7927a-58fb-4069-a8ff-3ee009e99b24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66f0349c-a62c-4a75-8183-62e23d857345",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e35affe0-9f94-4bf2-a035-c5fc6fb52954"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20183ee2-2214-4fc2-8fba-2e21f3460b78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6320b28-d468-4191-a9a5-5cc9c7d05fbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53ab3c42-01b5-4eee-8aa1-bd5b592bcd81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b425dc15-281c-4e96-8a33-643d70559441"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee3bc508-cba3-42bd-bdb6-e608d6fdb100",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "490149d7-305e-4dd5-8a21-0e8e7cd99e75"
            }
          }
        ]
      },
      {
        "id": "21960a59-5528-449b-aeaf-bbe2123c2a21",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "431b7112-1bf3-40c9-952e-993457ca983b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbd7706f-2dec-4b79-a195-6aa65c498787",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dcb53789-289e-4eb7-a2c8-1771d15fd77e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef52b2c-cb05-4f87-9af8-8d31bd232340",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08815f31-9a95-4500-aed2-f2a2ff4f1de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabdf762-0641-4db6-bb1c-7f66ef718957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f590bb9c-2c5c-498c-b14b-2bd180f8a39c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05642b69-0ebe-4801-8cb9-44d61805a0f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "474358e4-c694-4ea5-82e2-9b9036219e34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c066123-906b-4da3-9a51-7dbe25f7f4c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80d6b048-7e98-4d40-9c8b-e70813eca6f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ee91a29-2736-4039-9200-0b498d9e393a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e29348f2-e1a6-4449-a787-5c6cd411ec97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95efabea-acf8-40b7-87e6-cec1944dc908",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3819464f-36ba-4002-b70e-852a65a81336"
            }
          }
        ]
      },
      {
        "id": "614ec493-6ba7-4ea8-a54a-596f40095cea",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d79cf9c2-c78d-495d-ae25-262fc7ac9a17",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b814d37-1688-4d95-8e58-581d301699a5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "63fbd3d1-9467-42f2-9fee-3a3a0f5a2978",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8c942da-bc37-4a58-85d4-9d8e0c54f446",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f361dc1-8688-4b3f-9e6c-8d77db4e916d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 86.66315789473681,
      "responseMin": 7,
      "responseMax": 5330,
      "responseSd": 411.63041532192204,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698194006148,
      "completed": 1698194042948
    },
    "executions": [
      {
        "id": "9e1ab867-7839-41c6-abef-7ac6e590aca8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f352eb93-d422-45a8-99ed-077f749ece22",
          "httpRequestId": "e6f29cf1-1258-444f-ab54-f3c05ce66f2e"
        },
        "item": {
          "id": "9e1ab867-7839-41c6-abef-7ac6e590aca8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cde32b86-bfe6-4fea-91fb-e0de8ce6430c",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "a96dfac1-9d5c-4380-a780-1739933984c8",
        "cursor": {
          "ref": "a127c89f-f638-4a47-b473-e3bf1f8a498d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "117abea3-7ccd-4e21-930d-baf77b994b05"
        },
        "item": {
          "id": "a96dfac1-9d5c-4380-a780-1739933984c8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c2d23a38-d9e7-4378-a621-0f717a0d5488",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "25731943-9537-41be-8080-0719793d579f",
        "cursor": {
          "ref": "45a613cc-d61d-44e7-a502-03256df71ea2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8f0ffa82-aecc-4a18-92cc-728231333454"
        },
        "item": {
          "id": "25731943-9537-41be-8080-0719793d579f",
          "name": "did_json"
        },
        "response": {
          "id": "4174c75c-349c-4716-b374-7e68be520af5",
          "status": "OK",
          "code": 200,
          "responseTime": 246,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105fac63-d387-40ea-ba72-aca02cc80116",
        "cursor": {
          "ref": "e9c075ce-4de2-475d-bcb8-9fed14d00492",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "55f88623-b5f5-433a-96ff-f23bb05a80b5"
        },
        "item": {
          "id": "105fac63-d387-40ea-ba72-aca02cc80116",
          "name": "did:invalid"
        },
        "response": {
          "id": "8ff83bb4-3b44-49f1-aca8-7370b1604495",
          "status": "Not Found",
          "code": 404,
          "responseTime": 648,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105fac63-d387-40ea-ba72-aca02cc80116",
        "cursor": {
          "ref": "e9c075ce-4de2-475d-bcb8-9fed14d00492",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "55f88623-b5f5-433a-96ff-f23bb05a80b5"
        },
        "item": {
          "id": "105fac63-d387-40ea-ba72-aca02cc80116",
          "name": "did:invalid"
        },
        "response": {
          "id": "8ff83bb4-3b44-49f1-aca8-7370b1604495",
          "status": "Not Found",
          "code": 404,
          "responseTime": 648,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4c671b-25b0-4a05-af56-69ca58bdf441",
        "cursor": {
          "ref": "e246eb5d-5da8-456f-841a-c0417e2c56bc",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "61f99c46-0888-45a6-ada2-d38ecef17a26"
        },
        "item": {
          "id": "dc4c671b-25b0-4a05-af56-69ca58bdf441",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "88f83286-6cf9-4eda-af49-d9379ab861b0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92916207-5bde-466c-910b-49bd187aeab3",
        "cursor": {
          "ref": "3ea6b454-ac56-44da-8f15-a878ffadda79",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6ce8d5fb-c91d-4ee5-b8b9-41bb5052c5c4"
        },
        "item": {
          "id": "92916207-5bde-466c-910b-49bd187aeab3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "75c7d1ea-444e-4c2d-a5af-56946d084273",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de76f4d5-54ad-4f47-bc83-51b6f8e84045",
        "cursor": {
          "ref": "a684906c-98cd-4726-911d-c6863b6f3abe",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f5c823f8-f5a8-4ebe-81e7-b4418d9ed1d7"
        },
        "item": {
          "id": "de76f4d5-54ad-4f47-bc83-51b6f8e84045",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "505a5e66-6a05-48d2-bee2-9d5f6afe3b4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbf8819-ced1-4d01-8359-8c6dff0fcdae",
        "cursor": {
          "ref": "66e5df03-e05f-4495-8372-4f1029054b35",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9304e8ab-703c-4bf9-8450-f5a6a2d09850"
        },
        "item": {
          "id": "4bbf8819-ced1-4d01-8359-8c6dff0fcdae",
          "name": "identifiers"
        },
        "response": {
          "id": "98bd4fb9-c7d4-4868-8780-05bde344c048",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1002c545-e1af-4b0c-979e-065fe1110262",
        "cursor": {
          "ref": "18928bd9-2652-41af-9dbd-3845951e94d7",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1a2841b6-82d5-4682-aef1-6d5b84384799"
        },
        "item": {
          "id": "1002c545-e1af-4b0c-979e-065fe1110262",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "39799c8a-76a3-44f2-a74a-ae359768b3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a0ac75-9877-4ccd-ad34-42f6e74dfab8",
        "cursor": {
          "ref": "763ea236-bb26-4be7-86f3-b2144405659c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e838faf2-7a2d-4046-8697-cc3d3243a433"
        },
        "item": {
          "id": "07a0ac75-9877-4ccd-ad34-42f6e74dfab8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "431647a8-3993-4cf5-8459-0298c63d569d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0155a782-ce2e-4e66-afe6-5699977c2fb6",
        "cursor": {
          "ref": "f92e62aa-bbcd-41aa-9f0b-2329cb9339ed",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0b7adbd2-4663-43a1-9b99-85e56bce85e6"
        },
        "item": {
          "id": "0155a782-ce2e-4e66-afe6-5699977c2fb6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "328f4c51-8361-43f3-845a-8f8646459076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24e779d-51c2-4cf2-93f6-ffa5cdf38d20",
        "cursor": {
          "ref": "dc305ce8-5f24-4e70-b45d-7cf10b38cd91",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cfd5934f-1d8c-4165-a93d-cb29f1bc15dc"
        },
        "item": {
          "id": "f24e779d-51c2-4cf2-93f6-ffa5cdf38d20",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1e6e86bf-9e49-4220-88d7-25506a174d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140ec106-5982-4439-b2dc-0e2fcb1050c1",
        "cursor": {
          "ref": "412ceb96-2ddc-4c43-9fe9-94c85c52739a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0a5863e5-9634-4016-8700-793119001062"
        },
        "item": {
          "id": "140ec106-5982-4439-b2dc-0e2fcb1050c1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6b0df059-4f2c-4d4e-9533-f97acecceaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff5c8d8-2019-4699-88d6-0bc97092b502",
        "cursor": {
          "ref": "afbe82eb-bfd1-4b04-bbde-675399833b89",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a7ad9c56-3841-4142-a2e3-6488e850aff8"
        },
        "item": {
          "id": "cff5c8d8-2019-4699-88d6-0bc97092b502",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ecc3f4e0-f3c7-4c79-b687-b085120e9963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddabdf3-2757-4361-9444-efa1861a5873",
        "cursor": {
          "ref": "80eec188-c31e-4409-a2f0-34f2ddfb9186",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aff1d66f-7ea3-4ede-a055-9b5a492ffc26"
        },
        "item": {
          "id": "8ddabdf3-2757-4361-9444-efa1861a5873",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7a96a9d0-9554-4f5d-b020-731d5487decb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97347fa7-848a-4410-a9b3-c315f5849e89",
        "cursor": {
          "ref": "f0da072f-763a-495d-9dca-c30db8500ab0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "31e20a9b-0228-444b-b3c5-ac63e58d1114"
        },
        "item": {
          "id": "97347fa7-848a-4410-a9b3-c315f5849e89",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e960f83e-30a1-4015-8ea9-149ce0256c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e33d8ac-d0ed-40dc-a6e5-37dc87c0322c",
        "cursor": {
          "ref": "cbb06fc5-cd7d-4617-83e5-c935f667ed7d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "51ddb6d7-afc8-42f3-84da-10b2f298c6f6"
        },
        "item": {
          "id": "8e33d8ac-d0ed-40dc-a6e5-37dc87c0322c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4a659e49-8f71-4e31-95e3-cc8eddb615a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e523bf-9aa6-4da7-a4fb-8585ef984be1",
        "cursor": {
          "ref": "09af0769-1c4a-456e-a840-6cce1773c5d9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "02f90712-5e35-4e09-a437-ca94cc4b6f3d"
        },
        "item": {
          "id": "65e523bf-9aa6-4da7-a4fb-8585ef984be1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5d21df6b-63ec-41ce-ba14-5bf52352ae88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6ff580-b315-4b64-8f38-c949f7df896c",
        "cursor": {
          "ref": "565fd37a-7104-43aa-93b2-64bee9996aec",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "30ff67b2-e313-4db6-9470-04c528d887cf"
        },
        "item": {
          "id": "2a6ff580-b315-4b64-8f38-c949f7df896c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fe6ab71f-d1e4-4881-b5a5-8445faf8ca7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d401764-2cca-4fff-8d27-91001ee63a2d",
        "cursor": {
          "ref": "ac4387e4-a41c-401d-b151-60c537d7edb9",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6cbe6b34-c19e-4d26-89fb-7ef0da8ac038"
        },
        "item": {
          "id": "3d401764-2cca-4fff-8d27-91001ee63a2d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "27d6cb9f-90ce-42a7-8ed7-a7d9b49c773c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218ac0c6-f716-4bf8-8cb4-300a01a08c04",
        "cursor": {
          "ref": "d199cad4-1e20-4a12-93c2-7181fb5f93a6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9145a912-049e-4a35-a44b-959af186d2f5"
        },
        "item": {
          "id": "218ac0c6-f716-4bf8-8cb4-300a01a08c04",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "de6e0ad0-0d61-4995-bccb-bbf02a429d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9670d309-897b-40ab-a1dd-9705b6cdeb13",
        "cursor": {
          "ref": "ff8adb30-9385-4735-a0d5-164cb62dfeed",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "898b952a-2b1f-4083-bf6b-b811979af4a8"
        },
        "item": {
          "id": "9670d309-897b-40ab-a1dd-9705b6cdeb13",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cd58a495-7606-458c-bda8-19acfb88b1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af60344a-a1d2-476f-b7c0-2d4aab7c6520",
        "cursor": {
          "ref": "8c5a93ae-c502-4942-8468-922d3469607a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "45eed342-24b4-4dbf-b8f0-f4fbf8da0572"
        },
        "item": {
          "id": "af60344a-a1d2-476f-b7c0-2d4aab7c6520",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a5cad9da-5b6c-4105-b0da-ed1390b5f0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e522894-20e1-49ac-94fc-5fcbf8ba8f07",
        "cursor": {
          "ref": "d54b038f-8c4f-48d4-aff1-069c7391aa4f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b580ddb0-ffb9-4c42-b4d6-62ae1b79f8ea"
        },
        "item": {
          "id": "3e522894-20e1-49ac-94fc-5fcbf8ba8f07",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a239223b-027a-4b25-b90c-e67d13cea4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecf1e0f-7c9d-4965-8b26-3c2b90729764",
        "cursor": {
          "ref": "2fad45ed-eb73-4421-b2ac-a550413cf445",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "019f3c46-282f-474f-8b19-0e749495e5c1"
        },
        "item": {
          "id": "cecf1e0f-7c9d-4965-8b26-3c2b90729764",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cf17441b-e3cc-4c84-8008-35dd0c81c995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94c7b8d-db8e-4f33-9275-2e6f4c37c4ab",
        "cursor": {
          "ref": "1d8db215-ce60-4185-b35d-0eb86e7ce13c",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "512708c0-a2da-4446-b3ce-6c73b4477e10"
        },
        "item": {
          "id": "e94c7b8d-db8e-4f33-9275-2e6f4c37c4ab",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fbfa42c8-26cd-4898-afcb-24b416a2c9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7584f6-2248-490d-93c1-8d8d2e53f913",
        "cursor": {
          "ref": "5a279d95-fcf8-4744-8296-8f86eb5155f2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fa43dfa8-4b84-4709-b743-8e988f35619a"
        },
        "item": {
          "id": "fb7584f6-2248-490d-93c1-8d8d2e53f913",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d334ac5c-1861-49b5-bab4-1fe5bd0bdb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4811a0-99b5-4afc-9477-e76cd470a91f",
        "cursor": {
          "ref": "1046deab-a2c4-4841-8a46-3bc83dd76e6b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "04211b3d-7d1c-42f3-bf7d-7c3040b3b992"
        },
        "item": {
          "id": "0f4811a0-99b5-4afc-9477-e76cd470a91f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cbc95b2d-cc73-45c4-94cc-ec84eb595fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3b0eb3-6685-4305-81b4-2f227f793bba",
        "cursor": {
          "ref": "7a2025d6-8852-4d60-ba45-d9fd22e46f5e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8a73bcd7-c3d0-413e-978a-c0f7c3d25758"
        },
        "item": {
          "id": "da3b0eb3-6685-4305-81b4-2f227f793bba",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0cf1c552-c9cf-42cf-8585-ca67d42cc797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5881fcf0-62ef-4940-89e3-53de3df9daac",
        "cursor": {
          "ref": "d90e38f6-cb29-472e-b8a3-d52390e66779",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ee09d39a-516b-4498-bdf0-d1c348d625ac"
        },
        "item": {
          "id": "5881fcf0-62ef-4940-89e3-53de3df9daac",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dda6b66a-5028-4cf6-9c22-6e3693d931f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7706808-9a07-4377-aab4-1c21ca4d1e71",
        "cursor": {
          "ref": "931aed49-0c92-4567-b997-8d7356da8fa1",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ed119a4f-645b-4bec-aa15-e8771905cb57"
        },
        "item": {
          "id": "c7706808-9a07-4377-aab4-1c21ca4d1e71",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "23c868c2-f44d-4a42-a836-5977f23168ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d928aa38-3f99-45c3-9cb1-74ff45b18243",
        "cursor": {
          "ref": "92a05eb7-28a5-40ca-9151-93f8fbee7155",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7fb0608f-142b-4355-b0d5-d5d7693a1184"
        },
        "item": {
          "id": "d928aa38-3f99-45c3-9cb1-74ff45b18243",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7c6c7a5c-3550-487c-8f74-78682db46a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6675cf3-c76d-4485-af4a-4aa358e14cb3",
        "cursor": {
          "ref": "05cc7d7e-705b-433d-9482-d306b16787ad",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "39ae1ac2-bdde-4513-92ec-1789ae468b8a"
        },
        "item": {
          "id": "b6675cf3-c76d-4485-af4a-4aa358e14cb3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ee5b830a-bb62-4feb-bcc6-56a698a0b4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82c4137-5f38-4d89-822b-8ec9e0ef9e37",
        "cursor": {
          "ref": "87996102-3c6c-40b5-b6bd-267390ea46f3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2d411905-0e3b-43c8-b483-6b2d951bd24e"
        },
        "item": {
          "id": "d82c4137-5f38-4d89-822b-8ec9e0ef9e37",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2cc5b3f7-4aa0-484d-bbc1-168d5deb6fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23299547-81d8-49fa-9578-85b5a1d8599e",
        "cursor": {
          "ref": "b88c0bb0-dea9-4a71-be6a-d1b14cea0e16",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3cec4265-6f88-4d1a-b1eb-047a695d814f"
        },
        "item": {
          "id": "23299547-81d8-49fa-9578-85b5a1d8599e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "14711d1b-ab21-4a59-8d2f-2911f33f8213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71041364-14ae-4bad-ae94-1c5148d403f3",
        "cursor": {
          "ref": "27846757-fa76-4a9e-b3f2-410c7ab76420",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0371ebef-53e9-499b-9646-b155d6f36563"
        },
        "item": {
          "id": "71041364-14ae-4bad-ae94-1c5148d403f3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d63695c2-5d03-4634-8023-e3aabbcd615d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8850dc83-aaac-4f07-bcb7-082bd09359cd",
        "cursor": {
          "ref": "a4061dde-afaa-4224-bcf2-1d4f8e2bb8ed",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "da1f2c00-1d2c-493d-806d-6c6202b2119b"
        },
        "item": {
          "id": "8850dc83-aaac-4f07-bcb7-082bd09359cd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6fad0aad-92a7-401c-925d-d0801b7e17af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52234d5d-8fb0-4f37-baa4-2c376230ea8d",
        "cursor": {
          "ref": "8ed74e77-49ae-4b7e-a78b-4c5b4d864f55",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "42fae280-2bb4-4dba-aad2-e0af812a88db"
        },
        "item": {
          "id": "52234d5d-8fb0-4f37-baa4-2c376230ea8d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ff4bdeb4-2c7e-44af-9b84-91f691f68127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0641c54a-45c1-40dc-a528-37e2885da649",
        "cursor": {
          "ref": "b1d2d9c5-0fe6-4b9e-9a48-fb56e0f95e60",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "59102e38-1f5c-422c-b2c9-ab5a7a36d70f"
        },
        "item": {
          "id": "0641c54a-45c1-40dc-a528-37e2885da649",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9e7328e0-bd52-4f0f-b8a0-ff6563af14a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955c2074-3e8b-4152-877e-833e909203ee",
        "cursor": {
          "ref": "08eca4e8-91b5-4db5-aadd-5eacff50479c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "10b4c873-b2bf-4604-aca1-4e18004b8a2f"
        },
        "item": {
          "id": "955c2074-3e8b-4152-877e-833e909203ee",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "330b2fed-51a5-4361-ad19-f193f2aa349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ab0f31-c12d-4aee-8a00-8e4575c910a0",
        "cursor": {
          "ref": "ae47af7b-312c-41d8-b4ed-a32d8caa1441",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2a757649-7879-4df4-9972-9bc14e6e9d23"
        },
        "item": {
          "id": "61ab0f31-c12d-4aee-8a00-8e4575c910a0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c965ee3f-c103-4928-b28c-82b0bb2b7695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0bac49-834d-4d7e-8f0c-5e637e267344",
        "cursor": {
          "ref": "635adaf2-8a87-4557-82e4-cd63d8442b17",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "35389aff-810c-4e86-846e-8a37b1129cab"
        },
        "item": {
          "id": "1a0bac49-834d-4d7e-8f0c-5e637e267344",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1c3e8c75-e11e-48bb-a6a6-588fa8591718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d37ecdd-8c70-4305-8a6e-39edeec9eadf",
        "cursor": {
          "ref": "d51d196a-0193-4846-bfd2-032b04cc6b2c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8ae6c344-fb98-4289-bff6-4f190288f0e3"
        },
        "item": {
          "id": "7d37ecdd-8c70-4305-8a6e-39edeec9eadf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e1b7f639-9c59-424d-8c68-ec6a12fa1d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54673139-2aeb-4027-afc0-0eb6f1de55d6",
        "cursor": {
          "ref": "15ce77c2-14c4-455c-aee0-a1eb8cd68614",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "05547e0d-22ba-464a-8cd1-29c567407ca8"
        },
        "item": {
          "id": "54673139-2aeb-4027-afc0-0eb6f1de55d6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8c60db3d-0d8e-41e4-8724-031d7ec50222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98046ab1-ad7e-4502-9c73-addb4ac7db1c",
        "cursor": {
          "ref": "edd454ed-7d5f-4ee2-92f6-e0369fa2b321",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3d3120f3-3195-4476-83c1-bb02336255e9"
        },
        "item": {
          "id": "98046ab1-ad7e-4502-9c73-addb4ac7db1c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c2604d8d-ea6d-43c3-aaf4-545c18ac4e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fa66d4-7847-431a-994c-905334f59c70",
        "cursor": {
          "ref": "f934aba4-054d-4c5f-aeb2-f1b61251e137",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2d74a37d-8664-411e-9cbb-d6ea5606489b"
        },
        "item": {
          "id": "90fa66d4-7847-431a-994c-905334f59c70",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4b69f501-d552-47e5-81d4-0578daf5cb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5f51ce-1a9e-48bb-af73-c21ba620f792",
        "cursor": {
          "ref": "8ff9f201-0c5e-4ba1-965f-ae959a1c79c4",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4be44b6c-0b68-4990-b195-7c4e556c9de8"
        },
        "item": {
          "id": "4b5f51ce-1a9e-48bb-af73-c21ba620f792",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "153f8187-f45e-45da-b68b-83578200087e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9efd13-7a8d-449c-be47-fb17efdc145a",
        "cursor": {
          "ref": "b369556c-2ee3-462e-9563-5cf08868fd4a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "02eb5250-d4b2-4660-9c80-13f6bedf1d16"
        },
        "item": {
          "id": "9a9efd13-7a8d-449c-be47-fb17efdc145a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "567a2494-fd95-45fc-9a5a-b4cb6f494448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908686d1-3770-403b-8f66-5fc99b04ec3e",
        "cursor": {
          "ref": "4a5cf046-c77d-41b6-94e0-e66b36dd838f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1c97319c-01d7-4cc1-9402-768f25d2ee37"
        },
        "item": {
          "id": "908686d1-3770-403b-8f66-5fc99b04ec3e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "aa19e147-26d5-4fcb-bcab-00f7b1399f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62b33fb-917a-4a56-97cc-5e335ec54f79",
        "cursor": {
          "ref": "e3eb1ca2-3796-42f7-b102-f8aa2f6f161e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0564b5dc-d4c9-4f06-8c9c-f95679f9b2c5"
        },
        "item": {
          "id": "c62b33fb-917a-4a56-97cc-5e335ec54f79",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "02da90b0-7bf3-4544-b95d-a539272f7059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c668e1-2cad-458b-8978-af01a9e3c238",
        "cursor": {
          "ref": "cae4e5fd-35d0-4290-a110-6a00f0f656d8",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6eaa29f2-c554-4a2d-b6fc-cb1c8de86e26"
        },
        "item": {
          "id": "17c668e1-2cad-458b-8978-af01a9e3c238",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5e0b45ad-b34c-4759-b544-eb2b7d33beeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaeee4e-a1a6-4e92-a35c-c483279c9e3e",
        "cursor": {
          "ref": "06be011a-cb06-46a6-bce8-023aa2e9146b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1940c751-e9bc-4f4d-824e-8cd9b0e834b0"
        },
        "item": {
          "id": "1eaeee4e-a1a6-4e92-a35c-c483279c9e3e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "69dc2bc2-53ee-45bb-8ad0-c993ab091de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe549857-7b0c-45ab-a81a-d30b99e06274",
        "cursor": {
          "ref": "0597310d-4c0d-401c-9f83-f9111b84cb36",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "89c74255-b367-40a3-8d4d-530d810d900c"
        },
        "item": {
          "id": "fe549857-7b0c-45ab-a81a-d30b99e06274",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9f0e65f6-4fee-4c9f-b80d-01ce084ffc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c555ffe-22f8-433c-a8fa-043fa24d0207",
        "cursor": {
          "ref": "3966582e-96d6-4830-bd5d-b8741bb67761",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4222bfdb-70a7-4b15-82ea-07ae3d3892cc"
        },
        "item": {
          "id": "4c555ffe-22f8-433c-a8fa-043fa24d0207",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "13ca44fb-c6f7-4b16-9e61-1c1fa0f5c84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff0971b-4403-4c72-b8ea-ec2a1d120eee",
        "cursor": {
          "ref": "adfd845a-2386-4891-92f5-5f583d19adbc",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "07c1f384-a889-4602-bf3c-7d3311796bf1"
        },
        "item": {
          "id": "9ff0971b-4403-4c72-b8ea-ec2a1d120eee",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6a9fd10d-3f55-49c0-9329-5b45f974bd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9d302a-87f8-4de4-adab-32dbed6a345d",
        "cursor": {
          "ref": "14e65203-db52-40ae-84e1-0071b002aec3",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "325327d9-aa9b-486d-ad98-7381ef7003c1"
        },
        "item": {
          "id": "dd9d302a-87f8-4de4-adab-32dbed6a345d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "471b42c4-bce6-486c-9e7c-09f0860f7d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcae08f-6651-4fc7-bca2-4167ae85e869",
        "cursor": {
          "ref": "87663393-1620-4521-8a99-a5412ef00c97",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6e05b2a5-8048-4826-8ee8-6fe3b4806826"
        },
        "item": {
          "id": "cbcae08f-6651-4fc7-bca2-4167ae85e869",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c60a4bb7-7a18-4041-92b3-2ba7e6867a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9241daa-f1ca-4aef-89c7-7da273ecdf90",
        "cursor": {
          "ref": "654677cb-e843-46b5-aea8-da34daa777b4",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "af0fa9de-079e-419f-85a8-d569de10ab99"
        },
        "item": {
          "id": "e9241daa-f1ca-4aef-89c7-7da273ecdf90",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4110abbb-61d5-4509-bc8c-5ce9890e867b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44207d25-8076-4c84-8d9c-d26fe9458571",
        "cursor": {
          "ref": "805e246f-0138-4737-a7b3-dd77eacb4742",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cd4e622c-4114-4989-b043-96cc554b4cc2"
        },
        "item": {
          "id": "44207d25-8076-4c84-8d9c-d26fe9458571",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "747c5a5d-7148-4e5c-b308-ef341df1edf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f778db4-a71f-4f41-b8f9-6f742ab4513e",
        "cursor": {
          "ref": "0daf8f98-f243-464c-b332-ce64b8164598",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "56e51806-3736-402f-89b0-8377bd346ae2"
        },
        "item": {
          "id": "3f778db4-a71f-4f41-b8f9-6f742ab4513e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "961949f7-745a-4311-8381-2b9c882384a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91cba8b-8c13-4838-8d0c-ede3a18b5d63",
        "cursor": {
          "ref": "c47571c1-862e-40ba-b304-83307952bb2d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "117fb59c-7d13-4abf-b9cd-8f6ba182ccc1"
        },
        "item": {
          "id": "c91cba8b-8c13-4838-8d0c-ede3a18b5d63",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f24eff36-4d69-4144-a341-2bd4ef9913ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596c32bc-2aeb-4bd7-8953-e539c3ba9d8c",
        "cursor": {
          "ref": "aa73b431-cf10-4d3b-ad19-3bdb46f54dd3",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e2f1d8fb-d814-496b-91fc-ebbadbe60624"
        },
        "item": {
          "id": "596c32bc-2aeb-4bd7-8953-e539c3ba9d8c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0cc0b0f6-fd7f-46b6-8f47-ed5e43276bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eee081-3140-4f31-bcad-162e981482a8",
        "cursor": {
          "ref": "3f258870-bb0a-46f5-b86d-a9e14881da02",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d5bdaec5-1bca-49b6-bfc1-f9d80de46e0a"
        },
        "item": {
          "id": "72eee081-3140-4f31-bcad-162e981482a8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "105a775a-6bc8-438d-8466-d5491afb787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b14782c-1ded-4fd7-a194-c3731481a1db",
        "cursor": {
          "ref": "25fbee8f-f4dd-4f12-ac7e-4b6642a01896",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "74a06611-6800-401d-97c1-7c9f4826ed39"
        },
        "item": {
          "id": "6b14782c-1ded-4fd7-a194-c3731481a1db",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b4e6d88f-5a83-49d4-bacc-cfd35a1f70f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b50ac5-c5b3-4c67-9438-18ce3ea1a9c8",
        "cursor": {
          "ref": "393d171d-3bc8-4876-8700-02d6156e0be4",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "406714f5-f219-4bb0-8a00-92373d0c4fde"
        },
        "item": {
          "id": "52b50ac5-c5b3-4c67-9438-18ce3ea1a9c8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1e8b7454-bfd9-4ab6-91a0-c8223997eef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8f2050-c250-4532-8dca-41e8a8c8a645",
        "cursor": {
          "ref": "903d0d0e-6644-423d-a6f7-fed603291fcb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "390ccc5f-0936-4037-83da-6633b4415508"
        },
        "item": {
          "id": "bc8f2050-c250-4532-8dca-41e8a8c8a645",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bf22b313-19d3-495b-951a-4ac975b9fc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de22b894-aa41-47e0-9535-3316ef977a4f",
        "cursor": {
          "ref": "cdc016e6-8c05-442e-9177-a7b0629b5c14",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a745e311-381e-40ea-b960-50bf7cae7e91"
        },
        "item": {
          "id": "de22b894-aa41-47e0-9535-3316ef977a4f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b9369051-ce95-4103-8ad6-a367b985cdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d441963b-615b-496d-8833-358ac68383bb",
        "cursor": {
          "ref": "21272b2a-0031-45ab-92f0-9e9eaebe42a8",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f5a7a8bb-2aac-434f-b0cf-4172b8b03539"
        },
        "item": {
          "id": "d441963b-615b-496d-8833-358ac68383bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a6487694-9464-4f5c-87fb-3b8b87dc1e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a695844-0223-462d-9fdb-9a58a635b7db",
        "cursor": {
          "ref": "2235b0f7-18c7-490e-ad56-c6f103b06e3f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8a4c1d95-5718-40d7-bed1-628727a497a7"
        },
        "item": {
          "id": "6a695844-0223-462d-9fdb-9a58a635b7db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5cf9478f-623b-4993-997f-efc94a737af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925ca9c4-a52b-41b7-a0c0-3a102e818e56",
        "cursor": {
          "ref": "872a4350-158a-47f2-8bff-866a309b9cd1",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0c8d9059-be01-43ab-a39e-1bae144bcbb0"
        },
        "item": {
          "id": "925ca9c4-a52b-41b7-a0c0-3a102e818e56",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0bde5a46-0083-41be-a5c2-263bb4a1c675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ce6d8c-9bbd-488c-b7a2-1c5d614cd056",
        "cursor": {
          "ref": "7d62ee30-d8c0-45c9-a073-482b0d5af590",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6b4fb629-a543-4991-82ab-104a885bf5ab"
        },
        "item": {
          "id": "a5ce6d8c-9bbd-488c-b7a2-1c5d614cd056",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1874fe41-8dc9-4ace-9bc8-b348ff7474e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738950fe-4263-47f4-9eb4-c91f2f67300b",
        "cursor": {
          "ref": "cf549ae0-2fed-45f2-8fde-ed8f7dde2ddc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b59f175c-fc38-4fd1-acf9-5adfd49a0928"
        },
        "item": {
          "id": "738950fe-4263-47f4-9eb4-c91f2f67300b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fa3d2312-e83e-4df1-844b-530d8bb041c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4d7748-6b2b-4f4a-baf5-e375f276f704",
        "cursor": {
          "ref": "df6900a5-0848-4a3a-8dbd-66075cb73974",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "21e1f0af-667f-4912-b959-aa17923f30e5"
        },
        "item": {
          "id": "bc4d7748-6b2b-4f4a-baf5-e375f276f704",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "63c8f4fb-b596-4868-b879-f872b091c064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb55ee2-ef2c-4ba5-bd52-49fcc3ded9b7",
        "cursor": {
          "ref": "5c7b40ad-b08e-4159-8e1e-22bef04606e7",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "16240f50-ec0a-4e77-8c45-2f2c077059fb"
        },
        "item": {
          "id": "afb55ee2-ef2c-4ba5-bd52-49fcc3ded9b7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7a86c817-e113-4f7b-91bb-aa04f67de11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55971619-6200-4bf4-9566-a0ce56dbadda",
        "cursor": {
          "ref": "9d1eb2b6-1257-4147-89e3-9ae76c1c815d",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c1e3b5d7-6d6a-445e-ae04-1036837950b0"
        },
        "item": {
          "id": "55971619-6200-4bf4-9566-a0ce56dbadda",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0311c17a-25fd-44e7-a1d0-8fd05d44ab00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3afe39-3764-40ba-8c73-8181b672c7ea",
        "cursor": {
          "ref": "54b2a2e0-37d6-4a0d-aea9-5ff3d85acb98",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "26860a73-6910-4097-9a00-037064990bd5"
        },
        "item": {
          "id": "3a3afe39-3764-40ba-8c73-8181b672c7ea",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "af0f26a8-d450-419c-ae5f-cc98cad8f80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dc6390-44a1-4295-af93-6c613c519573",
        "cursor": {
          "ref": "3775fd23-fe85-4f7e-b870-a9478b70359a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "63ab265c-c40a-4490-9200-65258244917b"
        },
        "item": {
          "id": "e9dc6390-44a1-4295-af93-6c613c519573",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "83ec0afa-10a5-408c-872e-954847831cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd7c6ef-337c-4f4a-9529-8927d360ab56",
        "cursor": {
          "ref": "2cfbc6d2-7863-43fd-a35a-a41594813f79",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "52f1050f-9c32-4ab1-83a9-1509857fb2c1"
        },
        "item": {
          "id": "9cd7c6ef-337c-4f4a-9529-8927d360ab56",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c9364c5c-9207-44df-81c7-296ab9242d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63ec171-3ec8-4f6f-aa3e-37fed6c1d928",
        "cursor": {
          "ref": "7657ac7e-66b4-4aa9-b892-15bf604972be",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1b445246-4d9e-4373-996c-43b8802c297e"
        },
        "item": {
          "id": "c63ec171-3ec8-4f6f-aa3e-37fed6c1d928",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "49b6349a-9d9a-4f8f-8a7b-09b7dffbed26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3892a55-d10b-41d4-94dd-79fb7aad7b10",
        "cursor": {
          "ref": "6de77d7b-7cf6-435a-90a5-f902f9d1f832",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d6157d0f-36c5-40e2-9fd2-a9c024c764f7"
        },
        "item": {
          "id": "c3892a55-d10b-41d4-94dd-79fb7aad7b10",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7777a2ec-d231-4ce6-8b8e-0204dd0bdc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbd7e68-3a17-4859-8a75-3690e5708482",
        "cursor": {
          "ref": "177adcc9-20bf-4b82-b463-971400bd5606",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ffc93895-c1b3-4804-93e7-c4a50a69b90d"
        },
        "item": {
          "id": "3bbd7e68-3a17-4859-8a75-3690e5708482",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f868212b-4bea-4a10-939a-41f7a4823ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7149973b-eb05-4943-982d-d46fa770d76e",
        "cursor": {
          "ref": "56c13151-3896-4958-a243-21d6fbce03f8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "de57beef-5e83-4f2e-8758-f465fd39763e"
        },
        "item": {
          "id": "7149973b-eb05-4943-982d-d46fa770d76e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "12757adb-a1e5-4e2c-a4d3-8d36819d97d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f10ff9-0568-4dd5-93e7-b1aef51f0855",
        "cursor": {
          "ref": "e9a44e6a-b028-4f43-8109-f70b5728e324",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "937a2197-5bb5-4fd4-8928-e0e199e8fe56"
        },
        "item": {
          "id": "e6f10ff9-0568-4dd5-93e7-b1aef51f0855",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d9b096d8-6561-4e7e-b87e-88d57f4ae70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d98f6f-63bb-498c-8ff6-c2a2551c939a",
        "cursor": {
          "ref": "94a512f8-7f8b-49dd-b456-a266ca0d258d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c24d62c7-64a8-46cf-8d30-4ccab383c758"
        },
        "item": {
          "id": "45d98f6f-63bb-498c-8ff6-c2a2551c939a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fadb5e40-2e0c-451a-b1a2-88c85825f5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea32da1-04c3-4099-854d-1fe9dcaa9281",
        "cursor": {
          "ref": "f55fccfc-8f52-4d45-8e74-7d12ac0498aa",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "457ecefb-cbd9-4669-98d9-60ff4488357e"
        },
        "item": {
          "id": "cea32da1-04c3-4099-854d-1fe9dcaa9281",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7aeb103d-ba00-46ca-a997-94e4a8df859b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20d5b5e-3070-4868-b815-68b0a5b48201",
        "cursor": {
          "ref": "ee7161e4-ab16-4be4-90ae-6d11a41050e7",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5c8973dc-bdf1-4ada-af5e-f7945dff848a"
        },
        "item": {
          "id": "d20d5b5e-3070-4868-b815-68b0a5b48201",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5fdb77b5-0c9f-4431-98bb-bb7ac7e7b76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb566f6-644b-4a63-b399-7b96d22994f9",
        "cursor": {
          "ref": "fc7d0bf7-7adb-4005-a5fd-f2cdb921845b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c8cc36bd-ba44-4ffa-8eef-7eb791cc8abf"
        },
        "item": {
          "id": "9fb566f6-644b-4a63-b399-7b96d22994f9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d9ea12d7-8f9c-482a-bf1e-0e905d751463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a71b4a8-7fde-4906-bd19-97c57ab3272e",
        "cursor": {
          "ref": "f87648cf-6ebe-40a6-a6b1-45b228f5b9f4",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "11a28abc-4c2f-4e0b-977a-47966f3fee09"
        },
        "item": {
          "id": "5a71b4a8-7fde-4906-bd19-97c57ab3272e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0ca1e92d-1fd4-48bd-bf04-20701bfa715b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f957e46f-0351-41cf-9abc-916eb9c3aa9e",
        "cursor": {
          "ref": "ec08c727-1134-4484-b78d-092f4728d717",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "96494e3b-9427-4031-96fd-0a13dd2e6c01"
        },
        "item": {
          "id": "f957e46f-0351-41cf-9abc-916eb9c3aa9e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "55d5d270-8365-45c3-91c9-38bb1d015e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289050a6-a652-4e71-bddd-c92639effd3d",
        "cursor": {
          "ref": "587a3779-d9c8-45b1-921f-dba3c5a52d72",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "66fc1b5c-f455-4eab-acb1-9baf89782d8f"
        },
        "item": {
          "id": "289050a6-a652-4e71-bddd-c92639effd3d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "197977a8-7648-425f-88bc-ecfcfe2a0c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12952b03-6f43-4b7b-8085-3725da3cb744",
        "cursor": {
          "ref": "afa868a5-7008-4a4e-b0df-59aaa30ff692",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0bcd25af-9099-46b0-8bc4-1eb56e80cfa2"
        },
        "item": {
          "id": "12952b03-6f43-4b7b-8085-3725da3cb744",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "be2a7d4d-383b-42c1-b0f1-bc7b3b3de5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792453c6-1f9c-44f4-b6ee-3ffb514a61cf",
        "cursor": {
          "ref": "a0e0bbaf-aad7-4cb8-b345-7b1099f59575",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "79bc7358-a7cd-4815-b9d4-92b36b934a6c"
        },
        "item": {
          "id": "792453c6-1f9c-44f4-b6ee-3ffb514a61cf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "99f71c96-e92a-4c2d-bd4c-b6d32f0afa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dd8962-4304-48e1-9d58-db886a8c69f0",
        "cursor": {
          "ref": "24a9bc88-0b4a-4ec8-907a-d46732d005d0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "935b0926-704a-4741-aba8-a4c6df067191"
        },
        "item": {
          "id": "14dd8962-4304-48e1-9d58-db886a8c69f0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ae35123f-f873-4950-8356-22d4a08eb312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7380311-cc63-44ec-ae87-21501e635c0d",
        "cursor": {
          "ref": "c69bebf0-1aea-4fdf-b70a-0efe238a0774",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5f0369f3-0681-4799-a371-e889691202d5"
        },
        "item": {
          "id": "c7380311-cc63-44ec-ae87-21501e635c0d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "87548695-0939-420b-a0de-b3a0064da5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1b9c6a-1ae0-4770-b6a3-0b3dd543d13a",
        "cursor": {
          "ref": "f98613e3-4a9e-4c03-97fa-a6d1f28f9dbe",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a4a67ff9-952c-49e9-bcb8-2cf8a1641e8e"
        },
        "item": {
          "id": "7b1b9c6a-1ae0-4770-b6a3-0b3dd543d13a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0f7fc4b9-3d14-4ebb-99a5-8eaf3bb8c4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c36f1a-7d6e-47c8-bb14-186f2f4a99f9",
        "cursor": {
          "ref": "abee2cf9-e837-49ac-80b3-12e3516f5714",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e94dca85-36fd-4caf-a52f-c910ad8c7b52"
        },
        "item": {
          "id": "d4c36f1a-7d6e-47c8-bb14-186f2f4a99f9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7cfb0da3-5be1-4929-9b00-45cbb248e420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6a29ef-6f1a-4bd5-973c-fac5a94a5d31",
        "cursor": {
          "ref": "f10f76c2-bd34-42a2-939c-4c96b93dadd5",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2a81f91e-5116-4fd5-be00-d63b3226f37a"
        },
        "item": {
          "id": "ff6a29ef-6f1a-4bd5-973c-fac5a94a5d31",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4bf00f2-3ab8-4f02-89f4-73e7ebf4253c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ef673a-550e-49b6-bfc5-8473433661be",
        "cursor": {
          "ref": "f8d764b1-3231-4497-b1dd-6552280dbe70",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a2e7fab2-c830-458f-846a-9d9b0ee2f47d"
        },
        "item": {
          "id": "e7ef673a-550e-49b6-bfc5-8473433661be",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6ddf9b24-4a6d-47de-bc6b-a8f5084f1f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782474ad-8975-4d80-9c32-de4d632831eb",
        "cursor": {
          "ref": "14e1912a-0ba6-4638-bc6e-1a974a2dc463",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d62f4fcd-f848-43b4-be7d-08ef51098227"
        },
        "item": {
          "id": "782474ad-8975-4d80-9c32-de4d632831eb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f72c8bae-b32d-4d6d-95e1-e3214d2999c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324a4514-b318-4b01-b1ca-bda73cdadaa0",
        "cursor": {
          "ref": "d976c49d-1b17-4732-a661-9023196b03aa",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d7b3bf6f-dba5-417b-9d9a-0abc81a06027"
        },
        "item": {
          "id": "324a4514-b318-4b01-b1ca-bda73cdadaa0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cf944fd1-7e23-4683-9834-e26b0465dc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34959e92-90c7-4d35-9223-f3085619dc0b",
        "cursor": {
          "ref": "07713d7e-75d6-40f8-aa86-bec29c69fcba",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0018b6a3-a40b-41d5-845d-0e801563211b"
        },
        "item": {
          "id": "34959e92-90c7-4d35-9223-f3085619dc0b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fc9166ca-5da5-4982-a0e7-2637f8293db2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc93fd20-2cf3-4526-b5bd-3bee2ebb1cfc",
        "cursor": {
          "ref": "afac016f-21b8-4155-b522-7f66ced33d6c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0647f3b9-0643-459c-92d9-24fb33deb5d2"
        },
        "item": {
          "id": "fc93fd20-2cf3-4526-b5bd-3bee2ebb1cfc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "140c3c6b-1445-426a-9400-bf543208c9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b2f8462a-0b21-4d70-9cba-cc89a841e50a",
        "cursor": {
          "ref": "0eea9b66-0d2b-4617-9284-3ad185599ea0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "54509667-11b0-483c-a573-94aebceba4f5"
        },
        "item": {
          "id": "b2f8462a-0b21-4d70-9cba-cc89a841e50a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7fc04c76-53e5-4b38-8f49-66cffcd7c1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7f5db647-514b-455a-bc02-b35a6adea578",
        "cursor": {
          "ref": "7cb41704-69ac-4d1f-92c6-39cc207fb6c9",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ac3010bc-16ef-40a2-9bf3-0fef6d98a825"
        },
        "item": {
          "id": "7f5db647-514b-455a-bc02-b35a6adea578",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "501b1113-15cd-496b-8b20-4e2e9329a090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "764a4568-1932-46e1-9e41-d1806166bab8",
        "cursor": {
          "ref": "f05c9fe4-dd03-48d1-ab58-4b27e6cac75f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "36cebe24-0d62-4f23-ab88-2edd0cf8e3f8"
        },
        "item": {
          "id": "764a4568-1932-46e1-9e41-d1806166bab8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "beeadeaf-74c5-4493-aa75-2b359c8dd0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c03c5429-7635-4d3a-bb55-9f00215a5809",
        "cursor": {
          "ref": "e0e39aee-5182-450f-b6ec-1248743367f2",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3e9e07e3-4fe9-4e11-85d5-eb4c82cfe607"
        },
        "item": {
          "id": "c03c5429-7635-4d3a-bb55-9f00215a5809",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a31e7640-35a6-44cf-b17d-2fc2d4ef2e98",
          "status": "Created",
          "code": 201,
          "responseTime": 5330,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ab2686-1077-4b27-a786-a28533ba9138",
        "cursor": {
          "ref": "b8d3324d-e0d3-4bd6-bdb3-a5035afce1b0",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7fa75a04-55d7-4eb6-a51d-be5c07498bbc"
        },
        "item": {
          "id": "b1ab2686-1077-4b27-a786-a28533ba9138",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "26b65cc8-0ac1-4b2a-8946-060d2e38cd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b7adb52d-98b3-4afe-95d4-16f4ea7b451f",
        "cursor": {
          "ref": "3a9ce1b4-3ffc-4116-9062-1b26a6e10148",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "02299249-1c19-49b7-a40b-4043d22dedb9"
        },
        "item": {
          "id": "b7adb52d-98b3-4afe-95d4-16f4ea7b451f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b9dc53de-4b78-41dd-8238-adefeb52fbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "96248c8b-2d75-4434-8241-3741f35cfba3",
        "cursor": {
          "ref": "08cd9e72-f78e-4179-ba36-23fac6a3289a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6b6e964f-a555-4055-abfd-354a863720c0"
        },
        "item": {
          "id": "96248c8b-2d75-4434-8241-3741f35cfba3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "56fbea3b-7d06-415f-97fe-47f0c38e81a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4797a0a-00db-44c5-9609-db5b59fc9239",
        "cursor": {
          "ref": "3ce06657-a2c3-421f-a2ec-6d7e5dd8ceb9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a2619b88-0014-4d08-b4cd-bb5d7a6ac5a5"
        },
        "item": {
          "id": "f4797a0a-00db-44c5-9609-db5b59fc9239",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "24021913-a8b1-437a-b818-9b9ddb360717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3d0e63-a297-4334-a86f-f34fbe207866",
        "cursor": {
          "ref": "0f0d1197-7238-4e71-ae00-a5774ba7d297",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4d49b014-5640-446a-bd75-b271e72ba3aa"
        },
        "item": {
          "id": "dc3d0e63-a297-4334-a86f-f34fbe207866",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "05a34858-47c3-4db6-93da-41d795e59e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9831d292-e279-48f2-bec1-2cbc7f3c34bc",
        "cursor": {
          "ref": "edd3080a-03cd-4fc5-ad11-4e5a72204813",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "38a8d997-d9ce-4772-b34c-66692085a24f"
        },
        "item": {
          "id": "9831d292-e279-48f2-bec1-2cbc7f3c34bc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1d155e06-c54a-4f1e-8fe6-411c2537960b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ed18d7-29ed-4193-a29e-72ba62564410",
        "cursor": {
          "ref": "d50503fe-1c46-48ea-bb73-e053c6696e28",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9721fadf-dcf4-42e5-87c9-f0b47c171631"
        },
        "item": {
          "id": "23ed18d7-29ed-4193-a29e-72ba62564410",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b31cb6fd-abba-4895-9024-470fa6261a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1072b6-0e71-42de-9766-631d5bbc8b20",
        "cursor": {
          "ref": "300ccea9-e4a3-40da-bbee-62b0e899463f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "95d26664-27ff-4717-8810-73a2a06b32e0"
        },
        "item": {
          "id": "bb1072b6-0e71-42de-9766-631d5bbc8b20",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0d66b85f-154a-4f00-a987-29fbea5ae634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab576c2-db64-469c-a8a8-b0e41e7c7eea",
        "cursor": {
          "ref": "c8826bb1-3a54-4ee6-be54-cd08deb763c4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6170bed4-96d1-484e-800c-b3da9f1884d3"
        },
        "item": {
          "id": "dab576c2-db64-469c-a8a8-b0e41e7c7eea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f0d25a26-c9e0-44b3-82fb-a07fc50141da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bc4aff-1cbf-48a6-81f8-ad31d2ff13fe",
        "cursor": {
          "ref": "def5d405-0088-4d11-ae06-698f8dc29a7f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0f1a4bc9-c34a-4e8f-a370-fa7bbcd38a3d"
        },
        "item": {
          "id": "66bc4aff-1cbf-48a6-81f8-ad31d2ff13fe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9ed726aa-8730-4d88-bc04-c7afe7ddbaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a492dda-154b-4f14-af63-0a82a51123ca",
        "cursor": {
          "ref": "7249bff3-83ae-4508-a3d6-ac4845119993",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ee598dd0-4dbf-4f59-bcbb-069fa309fe86"
        },
        "item": {
          "id": "4a492dda-154b-4f14-af63-0a82a51123ca",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "81b8c352-4382-4f2a-b679-0fa66e8ff7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c117711-f4be-45cd-90ea-e50cf9ec5069",
        "cursor": {
          "ref": "0a02c9c5-70fa-4005-b865-5ccef2769d5a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f149aacf-9c7f-4f8c-9edc-4d9db7c6cd4b"
        },
        "item": {
          "id": "1c117711-f4be-45cd-90ea-e50cf9ec5069",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4ccefde5-0e1f-4c6d-988b-91e967ea0e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58f3772-9522-44e9-8cb0-91e325d92659",
        "cursor": {
          "ref": "814437b2-5bfb-4bc2-88a2-c10a9a785dfa",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "75460b09-5394-4861-9263-d57e11c40674"
        },
        "item": {
          "id": "e58f3772-9522-44e9-8cb0-91e325d92659",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6851625a-c4b9-4291-b754-2efa6da63a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0717cc-6351-4593-82e6-52937c9c3d79",
        "cursor": {
          "ref": "7385619f-bc62-4bc5-a9a8-1edc8d8c163b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5bc04aa1-6386-4e45-86d2-8c95f78910dd"
        },
        "item": {
          "id": "ba0717cc-6351-4593-82e6-52937c9c3d79",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d4bcd741-477b-43a2-8a9b-d8b21628b574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85f9586-ecf8-4320-b6e6-badd823085e6",
        "cursor": {
          "ref": "7050877c-dc78-4999-97dd-2dc41b594fa2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4fc55156-7c03-4bff-980d-6597a1076537"
        },
        "item": {
          "id": "f85f9586-ecf8-4320-b6e6-badd823085e6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3e1c6645-70ff-4ddc-81ef-ae351c57b190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeecde7-4135-46b7-80c5-43c99ba02390",
        "cursor": {
          "ref": "a334e53c-a9d4-4066-98b8-353948470499",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c25fb803-c467-4a02-bf24-e616d1ec37b9"
        },
        "item": {
          "id": "4aeecde7-4135-46b7-80c5-43c99ba02390",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4955075f-2b5e-4d38-9e49-18d600af67d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b9ab61-3dfc-4f94-b4ed-5d51ba4dd65d",
        "cursor": {
          "ref": "256c2b96-c2cb-4f31-bf55-4310f7b8605b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "914f3549-eaf8-49f1-92ad-2a534a7730ef"
        },
        "item": {
          "id": "78b9ab61-3dfc-4f94-b4ed-5d51ba4dd65d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "949c8bf5-6906-42f9-85bc-b38f370f7cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c2a85f-a736-4c84-b9b5-5a5936498ebd",
        "cursor": {
          "ref": "7238fb51-b914-47e3-89d1-b992d67c34c0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a01d7959-b909-420e-a234-30cea1628b28"
        },
        "item": {
          "id": "27c2a85f-a736-4c84-b9b5-5a5936498ebd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "64eb662b-e1ed-4952-997e-62e6aa6ea043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efac9b4-7fbb-4519-8907-4fcf9a398485",
        "cursor": {
          "ref": "28197d43-4cc6-4c7e-9a4d-904bbce90183",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6607b926-2ad9-44c1-98c5-843162817a07"
        },
        "item": {
          "id": "0efac9b4-7fbb-4519-8907-4fcf9a398485",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f4027c16-37d4-492f-b09b-7d283b28fbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553c213e-a3fc-48e8-a7ee-234ece05ce74",
        "cursor": {
          "ref": "9f51b86b-0257-46d4-9c64-e99768a300bc",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c555f254-ae5f-49ab-9e4b-34cd93494eea"
        },
        "item": {
          "id": "553c213e-a3fc-48e8-a7ee-234ece05ce74",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "62049587-6e45-42b6-8872-64593d6103ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b48d39-57ea-402e-b880-c6620f476170",
        "cursor": {
          "ref": "435cbf45-de49-48cd-a8f1-e91babb7efa9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6b753e99-f0c7-4e1b-a30d-d7d1cd80d6a6"
        },
        "item": {
          "id": "71b48d39-57ea-402e-b880-c6620f476170",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f34949dd-96d0-4b09-b33c-af0d3eb52779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211543cd-2e7c-426b-b191-9cd4bdfc9bd4",
        "cursor": {
          "ref": "d65602c3-4d3c-4009-8d4a-fc05a0d4d76b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ae03069d-b780-4820-b2cf-58a5976dc12e"
        },
        "item": {
          "id": "211543cd-2e7c-426b-b191-9cd4bdfc9bd4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "125f76c1-1750-4b28-b3b0-51899f8bc3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcee19f-0a88-4217-85e9-00dbf8fc347f",
        "cursor": {
          "ref": "cc45548c-3c79-4db8-81b1-3223065a1b8b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "eef18a89-88f9-4313-83ef-b3e6419454c3"
        },
        "item": {
          "id": "cfcee19f-0a88-4217-85e9-00dbf8fc347f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4f651f3d-7dda-4023-b397-58e014a22d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ca6bf7-43f9-4635-bee6-fa6d6f3f4562",
        "cursor": {
          "ref": "2b74874d-9c05-40ff-ac63-1cdf6d4197b4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7d073012-874f-4696-afd2-a8d1aa38eb03"
        },
        "item": {
          "id": "13ca6bf7-43f9-4635-bee6-fa6d6f3f4562",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2f6dd866-1e86-437d-868a-dd71d9fe22f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8701a8a8-5be7-4dca-bb3e-e01cf73d07ff",
        "cursor": {
          "ref": "d40cfe09-1f63-4f10-bcae-1776ce000a2a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6f45fa23-5dd3-459e-9900-c6d1e250cdab"
        },
        "item": {
          "id": "8701a8a8-5be7-4dca-bb3e-e01cf73d07ff",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dbab81b1-0f72-47b3-9436-6776bd0c38e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60a6ef4-32ed-4099-8c5f-ef39cce54261",
        "cursor": {
          "ref": "1a7ab330-ecfb-464c-b921-b7fc19a400bc",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5da181eb-7ff6-4ff9-86df-3213037706ac"
        },
        "item": {
          "id": "f60a6ef4-32ed-4099-8c5f-ef39cce54261",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2a547393-a013-456c-9df4-0960b8124499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be847bef-3b1b-45ab-afb9-9c3317ffa70d",
        "cursor": {
          "ref": "b15e1dbc-1df1-4904-9305-856927e0b864",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cfa6902f-f4ec-420e-8f93-ffceef0494d4"
        },
        "item": {
          "id": "be847bef-3b1b-45ab-afb9-9c3317ffa70d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ad39279a-a38a-4d40-bca6-fe876bda30ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2fea51-43e4-4925-8d80-98c1ddd64622",
        "cursor": {
          "ref": "8e0c92e2-fee1-4249-96aa-a477c44662ef",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7aa032f9-e946-4f3d-8457-79b460034167"
        },
        "item": {
          "id": "eb2fea51-43e4-4925-8d80-98c1ddd64622",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd79b02f-d845-4a33-9571-e7c317132e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dc1ea9-9b60-4a16-8cf1-fe05a4d40fcf",
        "cursor": {
          "ref": "0337e069-9f9e-4102-8abc-6a4d24bdb7df",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "33c4f125-e8bf-4832-b170-717f4b5550cc"
        },
        "item": {
          "id": "e1dc1ea9-9b60-4a16-8cf1-fe05a4d40fcf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "18de9389-a8ed-4785-85c6-80373945a93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154895d4-fc04-407a-8550-0347e57012ef",
        "cursor": {
          "ref": "0b369bcb-62eb-480c-9a94-e17ee960d76e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "aaa453ae-4a9a-48e8-8e1b-0a13bf8ebbf1"
        },
        "item": {
          "id": "154895d4-fc04-407a-8550-0347e57012ef",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bd42b249-23f0-4940-8cee-706902a4ccd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e79d6f-1151-4ba0-a926-17821a18e712",
        "cursor": {
          "ref": "6c59337c-cdcf-4b25-a666-e079840eda9e",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4421e29a-7bc7-43bd-84e1-3a5e3bfbf30c"
        },
        "item": {
          "id": "f0e79d6f-1151-4ba0-a926-17821a18e712",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c277feab-36e2-4975-a7f2-c2be46c8935b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72ad654-942c-47eb-9e81-134edcd5fb36",
        "cursor": {
          "ref": "284ad4fd-08b7-418d-a1cc-b63d19f16921",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4327bc3a-1b9a-4cbc-ba9b-41144e7ead26"
        },
        "item": {
          "id": "d72ad654-942c-47eb-9e81-134edcd5fb36",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ad52ff7b-ca95-447e-a2eb-cb020014e89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdcd9c3-9356-4e88-ae9d-4ce62a26d9db",
        "cursor": {
          "ref": "1d0b0906-27da-4735-bc19-df6c11d453cc",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "091d5e8a-3b61-440e-9748-18f9802d0c57"
        },
        "item": {
          "id": "4cdcd9c3-9356-4e88-ae9d-4ce62a26d9db",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5587985c-6c3d-4177-87f4-18bab2c56ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aad141f-73f1-43a7-a809-a41e9d6d9b84",
        "cursor": {
          "ref": "b20ab40a-7cd0-4eeb-bb12-a1178cfb509e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "404d4cdd-5776-48ea-b65d-9e2755d3da67"
        },
        "item": {
          "id": "4aad141f-73f1-43a7-a809-a41e9d6d9b84",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ea535fa7-03a6-47d8-ac51-3efd76e71cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b6e9e7-708c-4585-bdb4-f539eabe249d",
        "cursor": {
          "ref": "b08f8a5f-be07-45c9-8b3f-0ee2a99f1e8b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6f29379d-dddd-4923-bf4a-f9aab46bd861"
        },
        "item": {
          "id": "a2b6e9e7-708c-4585-bdb4-f539eabe249d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9463d253-7b73-4f28-b6d0-4de4f2c29b77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef845013-a30c-43c6-8a98-2d354dcdbe3d",
        "cursor": {
          "ref": "23eb75b0-9fd7-4c25-aca4-0d6061d585c7",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5937f803-af60-4fe0-92bd-82f3d3e41f09"
        },
        "item": {
          "id": "ef845013-a30c-43c6-8a98-2d354dcdbe3d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c8097d2b-bace-4a53-bbb3-464431782444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ae90ec-c7c2-48b0-bedc-500813458d1a",
        "cursor": {
          "ref": "0b5d9223-6fb8-482c-8ff5-b910238650a4",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fefb4614-e8e4-41cf-bd84-b4cc1ff8cefb"
        },
        "item": {
          "id": "46ae90ec-c7c2-48b0-bedc-500813458d1a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d15671e9-5a3b-40ed-aa1b-1b40ae9dbacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f86decd-3cc9-481d-a05b-5d5183323d47",
        "cursor": {
          "ref": "c3dcd5c6-6d7c-4c2c-9cf1-54d4f9eaa8cd",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "29f96161-9dd1-44ad-b5f5-6aac75424bf9"
        },
        "item": {
          "id": "3f86decd-3cc9-481d-a05b-5d5183323d47",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "33e3785f-f04c-4302-bff0-7fbdbfafb63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4dc6cf-de21-4198-805e-ea4a24226b3b",
        "cursor": {
          "ref": "2fa3566d-e6ad-4f4f-b9a4-8e1ca0c03285",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b635e7b2-1d75-460f-a853-fbc428648b0b"
        },
        "item": {
          "id": "ba4dc6cf-de21-4198-805e-ea4a24226b3b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "140b2cc6-728e-4850-8a03-f842e3a3df5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d054cc2-b362-4d31-bf5c-55679bd066ad",
        "cursor": {
          "ref": "29d00357-ea39-49f6-a9c1-b082f956f6f8",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b26d6dd9-47f5-426f-a979-0b0bfc532537"
        },
        "item": {
          "id": "0d054cc2-b362-4d31-bf5c-55679bd066ad",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6c561f24-562f-4296-8809-4d4eb070fbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524a3432-b52d-425c-b3c6-ae025f1e6829",
        "cursor": {
          "ref": "f1941dad-4b00-47c6-9275-ad757e15fcbe",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cd1347ee-b7af-4d9d-8eed-1277e772fc6e"
        },
        "item": {
          "id": "524a3432-b52d-425c-b3c6-ae025f1e6829",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9a4f02af-f2a9-4905-9c75-831b042271b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f23352-394a-40e5-9a25-cd7a832ce0fd",
        "cursor": {
          "ref": "42d5da50-5ff7-4823-af10-ab09c2d22f7e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b135f717-21d9-4006-9d19-0c42642f8c2a"
        },
        "item": {
          "id": "52f23352-394a-40e5-9a25-cd7a832ce0fd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fd3ee1b0-6c9d-4639-bd59-fb7394941266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8359240c-b2c3-49a1-a3f6-e391aa5ec819",
        "cursor": {
          "ref": "89b52d96-c161-463c-b4a7-89c221cfb3a7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a0c21c64-be52-4c8d-a090-03664ab97777"
        },
        "item": {
          "id": "8359240c-b2c3-49a1-a3f6-e391aa5ec819",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "44af50ea-d52b-45de-a25c-337cec691ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c67f7ed-10f4-41bf-ae3e-c7dea82b5226",
        "cursor": {
          "ref": "55f13884-ac97-4604-a160-72fa7e6ecaba",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8be71ea2-fab3-4b94-9014-71020877e64e"
        },
        "item": {
          "id": "9c67f7ed-10f4-41bf-ae3e-c7dea82b5226",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b0dca2d4-282d-462b-b1d9-d21c5c0ce94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6d021a-6550-437d-bead-7455188b2b3a",
        "cursor": {
          "ref": "0e5c2925-0be6-4672-9a70-8737b625adbe",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4182c975-3914-4c26-8d23-161f5578fb99"
        },
        "item": {
          "id": "7b6d021a-6550-437d-bead-7455188b2b3a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4b854479-8ae9-4a91-915f-a8e103b9223d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49d1a8f-0c21-473a-89dc-492d9c939201",
        "cursor": {
          "ref": "ed295abe-8f49-4823-a8aa-18e9dff5a756",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6a8bcd54-68c8-4871-9592-4291b4e228c4"
        },
        "item": {
          "id": "b49d1a8f-0c21-473a-89dc-492d9c939201",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1e6ee304-94a4-4858-9ed3-5559377d19c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb25415-168a-4ac8-8fbf-cf05b6d61bd0",
        "cursor": {
          "ref": "fa7bbcd2-22dd-44a8-af6d-35067694193e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "61eb27d8-07c6-4dc0-878d-f9db93121ccf"
        },
        "item": {
          "id": "ebb25415-168a-4ac8-8fbf-cf05b6d61bd0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d5392ce9-6633-4b39-9bab-0da9de179aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e1ab53-f1d4-4c0e-8d10-9516b92ca0a0",
        "cursor": {
          "ref": "1d13047a-d6da-4ab2-b864-c5263f3e1ce4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a156194f-24bb-4f31-b147-b28a54ffecfe"
        },
        "item": {
          "id": "39e1ab53-f1d4-4c0e-8d10-9516b92ca0a0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "469c8b66-2a00-453f-9b9f-d7723c7f01c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1ba5e1-5dcf-476f-bfa0-e22755234290",
        "cursor": {
          "ref": "37c812ae-ad4d-40ac-ad0d-c722667139e2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cac93c7e-78c4-40a4-8dc4-5f82961b4ca2"
        },
        "item": {
          "id": "dd1ba5e1-5dcf-476f-bfa0-e22755234290",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c9a60415-d866-4767-ba5f-25ee5f7eaa05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777754df-7f14-4f69-bcd8-dbcaec5c318a",
        "cursor": {
          "ref": "de1bb8b7-caeb-4fda-be32-a7b0da1e539a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f80f223d-4bc5-4c5b-ad9c-c37e294cacbc"
        },
        "item": {
          "id": "777754df-7f14-4f69-bcd8-dbcaec5c318a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a0c5289b-42f4-4c46-9567-fe40fd157598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9955b490-4e0d-48c7-9b25-010dfa3119d3",
        "cursor": {
          "ref": "01fb9787-762b-42ed-b425-75e3abdbffa1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "33b86b3d-7b5c-4f98-a6be-3ab291347b6b"
        },
        "item": {
          "id": "9955b490-4e0d-48c7-9b25-010dfa3119d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "408a2e5f-a47c-45f4-aa5a-54607bdc258c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e7977b-e150-4f19-a696-56fecdbf1c57",
        "cursor": {
          "ref": "7dcf0f0d-c866-4e4c-8b8e-3dfa4cc6308e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d6539d44-f147-481a-baf7-ac302f6667c0"
        },
        "item": {
          "id": "b3e7977b-e150-4f19-a696-56fecdbf1c57",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7ac95a9d-be61-4c97-b59e-86b9e7f39a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2236e72b-7ba8-4a62-a709-e76b9709e050",
        "cursor": {
          "ref": "5c2e300d-de6c-4b7f-9c23-dbd106988ea3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b3c7e9c5-8c82-4c0f-a047-f34920644b5b"
        },
        "item": {
          "id": "2236e72b-7ba8-4a62-a709-e76b9709e050",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2e111931-08b7-4343-ba35-d6b976239cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046e2afe-5868-4a5b-9340-5cfdf25fe114",
        "cursor": {
          "ref": "a01009e6-cbba-4d94-b710-78fc19000a1c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "99054e7a-66f7-48d7-bebf-760f9edc59a5"
        },
        "item": {
          "id": "046e2afe-5868-4a5b-9340-5cfdf25fe114",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "27433935-f045-45a2-a6e0-2a4695fad765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c515f6-add0-4502-8973-9ca3cfef1191",
        "cursor": {
          "ref": "0f449325-7db4-47a0-9c90-121ca93dbd99",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1915d353-20d5-4d23-a4e1-af9e57a1d734"
        },
        "item": {
          "id": "c7c515f6-add0-4502-8973-9ca3cfef1191",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9f8f7507-24ba-445d-8e0d-3190e17b01f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6508290-39b1-42f3-b421-b1a17218f3ad",
        "cursor": {
          "ref": "47e3b7f9-ad1b-46b7-9f7b-7298303fe113",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ad47e18f-96be-4129-871d-887ed91f2590"
        },
        "item": {
          "id": "e6508290-39b1-42f3-b421-b1a17218f3ad",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "24c5fee1-a15a-474a-8cb6-ff798c636a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94b9118-aa39-4440-b6e5-08cdb4849a5a",
        "cursor": {
          "ref": "1f8d60b6-1c11-454b-ab36-b9575fb10ba7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c1c86d48-421c-4019-b807-167919f9ad05"
        },
        "item": {
          "id": "c94b9118-aa39-4440-b6e5-08cdb4849a5a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c593cdb9-7611-48a6-9602-b81a97ec4db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe75951-74ea-425f-a5e9-ad04f21eece0",
        "cursor": {
          "ref": "3e027bfc-3195-4cde-a686-d5dc5d835178",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "def3ac55-3363-4a6d-ae8e-5d17d495e42d"
        },
        "item": {
          "id": "dbe75951-74ea-425f-a5e9-ad04f21eece0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6ec79d9f-9956-4ec9-8b0d-0ecdec319b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d717d9-e79e-4681-89d5-f173192271ee",
        "cursor": {
          "ref": "3cf68073-ff30-4095-9402-014726aec6f8",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e6aeebc1-9efa-4314-b407-3207e923721a"
        },
        "item": {
          "id": "d8d717d9-e79e-4681-89d5-f173192271ee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "40c19f08-49bc-41e4-9693-010ce319f7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f4edf1-ef05-4406-8cfa-944a29f43c2f",
        "cursor": {
          "ref": "26632579-14ea-452b-8673-439e02bf11f6",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f6087549-342c-4097-9a14-4d95204e7b81"
        },
        "item": {
          "id": "43f4edf1-ef05-4406-8cfa-944a29f43c2f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8addfb72-4c06-4583-9031-f74d05d31590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8aa66e3-f2bf-40c5-b6d2-dfcbc82a9777",
        "cursor": {
          "ref": "4e472fcf-4bd4-4436-856c-9db21bdf1230",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a0247984-5483-426d-8c4c-d8d1f0f648f6"
        },
        "item": {
          "id": "e8aa66e3-f2bf-40c5-b6d2-dfcbc82a9777",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "92457d56-9bfa-413b-b391-eadee636f718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85788caf-dbb0-49d5-9299-541e8ff1c2f0",
        "cursor": {
          "ref": "af4653af-0408-4e04-a9a3-c840d1be40f3",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ec07e7a7-e4e1-427a-be80-c1946a9bb8c9"
        },
        "item": {
          "id": "85788caf-dbb0-49d5-9299-541e8ff1c2f0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4a99c18b-d304-4c50-b205-98312e1e5096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee26793-6f6e-4727-acdf-93ca551cdd03",
        "cursor": {
          "ref": "f3f60094-5de3-4fbf-8fc3-75b1428dd9b4",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "65294330-9f47-4eed-a6d8-12affd80e0e3"
        },
        "item": {
          "id": "2ee26793-6f6e-4727-acdf-93ca551cdd03",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "701fabe6-d4e3-4225-a387-a1124de87d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f9bc21-9e90-4fa5-8d5e-ccbbb0b7598d",
        "cursor": {
          "ref": "d5c3fd00-5989-4435-918e-6bf9f799b004",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c9e3eb40-da6d-48f2-a002-8815842c9d5b"
        },
        "item": {
          "id": "93f9bc21-9e90-4fa5-8d5e-ccbbb0b7598d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bf306896-c0b7-400e-8236-e0e12a853461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25814b47-18fd-4ac6-9bae-721fc91c5d0e",
        "cursor": {
          "ref": "dd992725-accf-42f4-a575-9e1504abe30d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bbe8e06c-cfd4-4f69-9471-c88895cdeaf0"
        },
        "item": {
          "id": "25814b47-18fd-4ac6-9bae-721fc91c5d0e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7e13fa1-2eec-4655-9e5c-559468254720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e33205-319f-48f3-a842-6ee33f5f1c1c",
        "cursor": {
          "ref": "157aec9f-7963-41c9-a626-cc3368a09646",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3565ce34-aa5b-47a6-a5d2-dd0ddbc35bb8"
        },
        "item": {
          "id": "c6e33205-319f-48f3-a842-6ee33f5f1c1c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7d6da79f-786e-49c6-9e30-3c42c05e87f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908c7c1c-9600-417c-b804-0b81f6a151d4",
        "cursor": {
          "ref": "4582b9c9-5f28-4774-9831-8278ef464985",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5d9c6e05-afe7-4558-a610-5619fbccac6e"
        },
        "item": {
          "id": "908c7c1c-9600-417c-b804-0b81f6a151d4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "23a35229-e11a-4f3f-ab18-7715a9ab0ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fd31f4-4e94-496d-9534-e49b7f06dd34",
        "cursor": {
          "ref": "e12c771c-eac5-40fe-b4de-d126c52c778d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8d19d77c-f5e3-4d7c-b718-d31b7c9f94f9"
        },
        "item": {
          "id": "39fd31f4-4e94-496d-9534-e49b7f06dd34",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "27e22b3f-4def-4440-be36-87ae1c49ab51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10df9400-cd77-47cf-8dc6-ef7ce255e334",
        "cursor": {
          "ref": "83c10014-4932-428f-9a1e-ac69010161cd",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c7d40135-856e-499a-9c2f-a7cef5c63b98"
        },
        "item": {
          "id": "10df9400-cd77-47cf-8dc6-ef7ce255e334",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bf197695-c8a9-4036-ab04-5f061e051254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9220f239-1b56-4362-ae22-2f58fa40c69b",
        "cursor": {
          "ref": "63ed9797-fe9a-4336-a187-3b16783a6a4e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "85c20a4f-ba19-4f42-bf63-d3b7f8f4c085"
        },
        "item": {
          "id": "9220f239-1b56-4362-ae22-2f58fa40c69b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "504eb01d-f309-4191-93dd-af5ba26661e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a89afb5-a8ed-463c-8c79-efcfc233092f",
        "cursor": {
          "ref": "d40a3209-177f-4ac3-b62d-cefe4a528105",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ac61f237-3829-4370-9bc4-b2e3090321c5"
        },
        "item": {
          "id": "6a89afb5-a8ed-463c-8c79-efcfc233092f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2e5f5ed0-7364-4686-a923-886f9c96b4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6462ae1-218b-4900-ada9-cda8ca598231",
        "cursor": {
          "ref": "8cf047fc-9446-43e0-ba3c-5cc43a6367fb",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1848f90a-8a25-47ac-979f-21faba5b2743"
        },
        "item": {
          "id": "c6462ae1-218b-4900-ada9-cda8ca598231",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "11301549-76ff-4c81-b014-10670c8bf6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646b4932-ffee-47bf-b740-100333616f15",
        "cursor": {
          "ref": "bad5f464-b59b-4638-9d54-244886b01e26",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "74806f0d-7430-4351-8423-b8bab047a532"
        },
        "item": {
          "id": "646b4932-ffee-47bf-b740-100333616f15",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "41d41c97-02e8-4c6c-a2d1-845273f4f5d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462b4f8f-83bb-4331-a813-67c35faefa7b",
        "cursor": {
          "ref": "6e43f987-e3e1-47ab-bbc8-4d5e3ee20a01",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3151f3c4-6979-484e-a157-8dd170886716"
        },
        "item": {
          "id": "462b4f8f-83bb-4331-a813-67c35faefa7b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1971f0bf-816c-4930-a02e-f78e3d0a3aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d962678b-02a2-47ce-b723-0cb10a7e9aa7",
        "cursor": {
          "ref": "dc888d8c-f295-49a0-b9c5-79710e99c8fd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e0eb05ed-5d7a-46d2-8bae-7d95a8023292"
        },
        "item": {
          "id": "d962678b-02a2-47ce-b723-0cb10a7e9aa7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "00c5e745-ad24-4faf-bf3c-c9c460bd03b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97824ee-441d-4629-8473-5fd285ab04e8",
        "cursor": {
          "ref": "0b53e1a1-cb3c-4ce4-adfa-4bec1076ee31",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a1ed7f70-f727-4818-a901-66d7d4cf1b34"
        },
        "item": {
          "id": "d97824ee-441d-4629-8473-5fd285ab04e8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ae3a3134-f60d-4654-8584-8a1407fc62e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb77a8a-4869-42ed-b083-101f29d04bb3",
        "cursor": {
          "ref": "ab162469-2593-48cb-94b7-43bc5fc4c2b9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1a541335-c9b8-49cd-9883-1b0f17ca31ce"
        },
        "item": {
          "id": "feb77a8a-4869-42ed-b083-101f29d04bb3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b0aec9c6-188a-403e-954a-17e3b935ae43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752a31cb-5ace-4b13-9651-567fab26a83b",
        "cursor": {
          "ref": "8e041abb-0f02-468b-a6be-8a66e3d21abe",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5a853020-6a91-4595-a331-d541d5207d24"
        },
        "item": {
          "id": "752a31cb-5ace-4b13-9651-567fab26a83b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d5a43b36-487e-44c2-a269-af407485edf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80aa3a3-e37f-4ad3-9511-b9dcf6cd14dc",
        "cursor": {
          "ref": "e66f3242-05a7-4fa2-8bf8-0cf13fe33570",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5b7def83-205c-4319-b09c-7f88cc2b7f27"
        },
        "item": {
          "id": "a80aa3a3-e37f-4ad3-9511-b9dcf6cd14dc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3de3c4b6-b39e-4823-92fa-248fa4c1444f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18523d89-f329-4fc7-b8b0-ec96024a3d55",
        "cursor": {
          "ref": "c5331547-687f-4344-85f9-7290dae60318",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "03ae497b-ff8a-4a22-a626-8a882f336e28"
        },
        "item": {
          "id": "18523d89-f329-4fc7-b8b0-ec96024a3d55",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1c76f518-a043-42f6-8cf8-ab729898a525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ab7f09-87e4-49f4-b2a5-a9a820df8b23",
        "cursor": {
          "ref": "97339b73-a81b-4552-8bbf-e71a7a78e1a6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "52d5c957-2343-4f92-aa5f-852fdfbb180b"
        },
        "item": {
          "id": "43ab7f09-87e4-49f4-b2a5-a9a820df8b23",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "56600e04-ea28-4fe2-837d-bc643a3c9658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859acca1-28e2-453e-8e94-381ad9d30ae2",
        "cursor": {
          "ref": "661208db-ce5c-4b00-95e8-d13a70f42d28",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f2d65c6f-9d68-47f8-b76e-108290b122cc"
        },
        "item": {
          "id": "859acca1-28e2-453e-8e94-381ad9d30ae2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "27cce0b5-2a0c-4b40-9051-8c193ee73fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e69d60a-8122-45f0-97a7-9edf9fd335d7",
        "cursor": {
          "ref": "69252df3-089a-48e8-a3d5-8f5fe021ee50",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "03a39cc4-ff59-4ffb-8c37-11f5ac992c0c"
        },
        "item": {
          "id": "5e69d60a-8122-45f0-97a7-9edf9fd335d7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "098e7c2a-9e58-4cec-9414-cc4f85886cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7967bad-2060-47ea-a713-b68a590bf8e5",
        "cursor": {
          "ref": "a101f613-00f2-45d9-8cab-1a6d5f481b79",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3229ba0f-3b46-4c55-8ec4-f443fe304cfc"
        },
        "item": {
          "id": "c7967bad-2060-47ea-a713-b68a590bf8e5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b08614d4-79c7-4c5f-8801-3455e6b4cb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a443450-28b4-44d9-bf77-de59b700e0d1",
        "cursor": {
          "ref": "a5aa1f0c-000f-4cb5-b580-0e98b24ab3b2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "43f87df7-197c-4613-9195-616295a9a460"
        },
        "item": {
          "id": "8a443450-28b4-44d9-bf77-de59b700e0d1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3838cd8d-350f-4479-aac5-af7f2ca45768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11bd08e-7b9c-4534-aefa-c600f3ec2730",
        "cursor": {
          "ref": "a28842ee-ee14-4e76-bfd1-362fb6cff204",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "da4ac053-8866-407c-801d-d5f49f239f23"
        },
        "item": {
          "id": "f11bd08e-7b9c-4534-aefa-c600f3ec2730",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d3886a98-684a-4ff1-97bb-460e24977ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead0e911-06a6-4714-9d8d-49936af315c4",
        "cursor": {
          "ref": "386cfb7a-372e-4013-b175-4d86277b2299",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "65088d0b-629e-4b32-b20a-5bf16f35550b"
        },
        "item": {
          "id": "ead0e911-06a6-4714-9d8d-49936af315c4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a5172265-973b-431a-a0ff-ac5be9543fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3173f694-33c0-4455-9f32-a38c2206797d",
        "cursor": {
          "ref": "0ed38a4c-9cbe-4529-9d9b-6336392da237",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5faa296a-2319-4ecb-b2d9-8773345bd75d"
        },
        "item": {
          "id": "3173f694-33c0-4455-9f32-a38c2206797d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d2ba71d2-7a67-4af5-9489-011d9072941f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7ef7fe-eaf8-4bc5-ba26-3c2e8aa91614",
        "cursor": {
          "ref": "b1ea359d-9efb-4e4f-9777-b3456d66501b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "32536ab3-d218-480a-b091-3b2a3d819734"
        },
        "item": {
          "id": "6b7ef7fe-eaf8-4bc5-ba26-3c2e8aa91614",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f0338a13-d76f-49c0-b811-cfa86a304461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab036a0-e71d-46bb-8c32-de4794c4ffee",
        "cursor": {
          "ref": "268c8c6e-39aa-4336-b621-3240e10640e8",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1538c664-03e4-46e8-a1ca-8cc327b0de4a"
        },
        "item": {
          "id": "eab036a0-e71d-46bb-8c32-de4794c4ffee",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fea97224-b2a8-44f1-a82d-0cd09a4313b8",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "31498ac6-66cd-4fa1-ae45-4d0678decd08",
        "cursor": {
          "ref": "b2500977-360d-48c8-b12b-7aadc4f88ae3",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f58a8112-689c-4ab2-aed4-18130b03f6e0"
        },
        "item": {
          "id": "31498ac6-66cd-4fa1-ae45-4d0678decd08",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d0bc4ea2-e777-41bc-ae21-bff0580a867d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53dc6b3-2915-4006-93cc-2dc2f32caa7a",
        "cursor": {
          "ref": "54b1fd23-7706-43d9-a0b6-b8efe139847b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "efa7e633-2480-4c93-b8ce-6498e60053b7"
        },
        "item": {
          "id": "b53dc6b3-2915-4006-93cc-2dc2f32caa7a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "71ff3ee0-2fa6-47f9-ab70-f3d0d7598137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a55937-d335-4d45-8400-2f8d3bd6a806",
        "cursor": {
          "ref": "aadd20aa-f8b1-48c8-9468-834cd725a5ab",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e8e484da-770b-4749-ae8d-da3a37fa596e"
        },
        "item": {
          "id": "42a55937-d335-4d45-8400-2f8d3bd6a806",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "358eb53d-e94a-4b03-928c-a834e28be889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2559b828-cc14-4351-98c6-71b6dc2372f3",
        "cursor": {
          "ref": "8d8811ac-b6a2-44f2-bbf6-4459047ad890",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "111f4f53-6d23-41ee-aac6-bc0313bac489"
        },
        "item": {
          "id": "2559b828-cc14-4351-98c6-71b6dc2372f3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "59471711-f8d1-47e6-b827-0d09c9b3f59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6021ef-c690-4cf7-8fe0-b0a3cc6fce58",
        "cursor": {
          "ref": "5c54f89c-6fbd-4336-9fa9-a383f0004ded",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "46287bb3-1030-4abc-8e77-6448f8dc60d5"
        },
        "item": {
          "id": "3f6021ef-c690-4cf7-8fe0-b0a3cc6fce58",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "94a42c41-2793-4403-8720-70cb17488580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca22137-a5cd-4834-9395-27e20ae2654f",
        "cursor": {
          "ref": "663d7b81-2a39-4cea-92b6-f590012f87f8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "685fb35a-f1cd-4758-892a-96a3392a6010"
        },
        "item": {
          "id": "5ca22137-a5cd-4834-9395-27e20ae2654f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1a8d9b42-1cc5-4af5-af03-bcc46c6fa4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d203b5-6441-4f30-9c5e-9fd9bd3335bd",
        "cursor": {
          "ref": "ec96099a-a0af-42ef-8121-262d1db6a10c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3d044658-73e9-491c-a996-5136307a8e27"
        },
        "item": {
          "id": "16d203b5-6441-4f30-9c5e-9fd9bd3335bd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "00f19059-6492-42a0-ad69-54c619801982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42340324-f402-4273-b25f-434911afe52f",
        "cursor": {
          "ref": "0d46ae79-2012-49d2-9f3f-f2697d001e7d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e0e641ec-41e8-40f0-acf4-4d90a67498b1"
        },
        "item": {
          "id": "42340324-f402-4273-b25f-434911afe52f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "53414319-9cc5-4a41-bf9c-712a52197655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e52ce9-88dc-4dde-ab3e-586f252ecc95",
        "cursor": {
          "ref": "ff75aa52-7ee5-4050-8895-8988bd512565",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d93d32f9-3480-4cba-ae87-ee8bb8862241"
        },
        "item": {
          "id": "c7e52ce9-88dc-4dde-ab3e-586f252ecc95",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1c0f205e-73ac-4bc9-b691-4d16316f3012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c19100-8f1b-48a5-bee0-8ea2f392fe35",
        "cursor": {
          "ref": "af5492bd-fd6d-4270-9594-6069f7189a78",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e210a46d-8527-416d-9569-74ca8d897ac6"
        },
        "item": {
          "id": "40c19100-8f1b-48a5-bee0-8ea2f392fe35",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7f5e9c89-a8bf-417c-b725-e76a35f70656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a8bf0b-0c90-4f98-9e39-8bfcbb537cef",
        "cursor": {
          "ref": "f1c1004a-dfdc-49f7-9929-f1068f306842",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f54e118-158c-4265-bc08-d5dbfec0aa41"
        },
        "item": {
          "id": "c7a8bf0b-0c90-4f98-9e39-8bfcbb537cef",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "59eb5c59-49df-419e-87de-fcc058f0f216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6248aa26-51f3-47c7-b94c-18d6608ec7e2",
        "cursor": {
          "ref": "7f28d295-bd34-4d98-b1c4-577a37870ddb",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "234317a4-fd8a-4c17-aba7-c74fa433db81"
        },
        "item": {
          "id": "6248aa26-51f3-47c7-b94c-18d6608ec7e2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cf84d204-3397-4c3b-a9ce-28134d46f8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10523590-8946-4d7c-ab65-43692f8c029e",
        "cursor": {
          "ref": "4756ee65-5b8d-44e2-aeb6-b2b934a2cbaa",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "02b8dea9-670c-4610-a4a8-c5b8352c1142"
        },
        "item": {
          "id": "10523590-8946-4d7c-ab65-43692f8c029e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cf75c053-4206-4535-ad0a-ae6c3404b06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0b6dbd-65a1-4e00-85a7-683a2c2b7830",
        "cursor": {
          "ref": "f3a1d66c-2406-4b32-8c4d-c84a3e71e638",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "54c0c0c5-75cf-47c0-b39f-8138ea736da6"
        },
        "item": {
          "id": "6b0b6dbd-65a1-4e00-85a7-683a2c2b7830",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ab3b45bc-e757-4a0a-9e5f-7d9dc4f616ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc104583-1391-4173-bee3-58763ff8f988",
        "cursor": {
          "ref": "66e63a31-c854-4714-848e-6a974e18d916",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9c5e25c5-a214-4a0f-8736-50b3caf7f596"
        },
        "item": {
          "id": "dc104583-1391-4173-bee3-58763ff8f988",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8b93c525-8790-4f49-ae44-faaf2a4481f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329e6d1b-1d6c-4344-8198-fc459d5b6f27",
        "cursor": {
          "ref": "d5c02b71-796c-4736-b8c7-d818deebf92f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "deb6df27-01d2-4dcf-8d1e-79a236ca5f6c"
        },
        "item": {
          "id": "329e6d1b-1d6c-4344-8198-fc459d5b6f27",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "092be1e7-7037-47e5-9cfb-e91ab751b8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78165b4-9443-4af7-a6ac-033ac3f11b14",
        "cursor": {
          "ref": "cf4817a6-86b2-471f-841e-1e791068d91e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "07686573-9a75-4c81-9ca7-54c0b607da72"
        },
        "item": {
          "id": "a78165b4-9443-4af7-a6ac-033ac3f11b14",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3f2218cf-0922-4142-8ace-509bb40cda0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f157eb-5a3d-422d-ae1b-054cf1f39b10",
        "cursor": {
          "ref": "9f2b1c9f-3efa-49b4-81b9-b8253d536021",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1e4794a2-308b-4eee-a0b6-db4ff4def1a7"
        },
        "item": {
          "id": "74f157eb-5a3d-422d-ae1b-054cf1f39b10",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3b98df47-2fbf-45ac-88af-c84d4e04fc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58069a9d-5a2b-488c-b0ec-7a252d0a2b02",
        "cursor": {
          "ref": "b85d2e3d-0525-4dd5-bfd0-87b37a181970",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e6321c6f-42a6-44d0-8c2c-f7435bfab4da"
        },
        "item": {
          "id": "58069a9d-5a2b-488c-b0ec-7a252d0a2b02",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c458191b-883f-4a50-b1a3-467bed30b205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dec0550-92fa-413e-a7b7-dab923782a9d",
        "cursor": {
          "ref": "2d00337b-a5fe-48c6-b875-56e102d44dfa",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1b71fbb3-4a08-408c-bc0e-f99c3b09055f"
        },
        "item": {
          "id": "8dec0550-92fa-413e-a7b7-dab923782a9d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "43176a9c-8f56-4ef0-883f-1ec8049a9812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ae295c-d6ed-4161-9c08-51b84fd70a5e",
        "cursor": {
          "ref": "4578988e-f613-4d57-a7fa-525bd2b55524",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "29addf0b-b9aa-43ef-be0e-bfafd72db6c9"
        },
        "item": {
          "id": "43ae295c-d6ed-4161-9c08-51b84fd70a5e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d37fb678-278a-44cd-92ce-53b699e3f111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a42282-e36b-47e0-bcc0-3087387017f0",
        "cursor": {
          "ref": "8b8111ba-b576-43d1-a83f-55999667d6bf",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "13b24407-c9a6-428b-bb3d-ee054e0ad9b3"
        },
        "item": {
          "id": "22a42282-e36b-47e0-bcc0-3087387017f0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e18ea725-20d6-4eb1-b1de-08667bf450d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2882d0-8941-4223-8539-cfe3fd900549",
        "cursor": {
          "ref": "cb2c2d01-d185-42d3-9c12-29037a286101",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "37931016-8c5d-4015-96f7-61a213924f06"
        },
        "item": {
          "id": "9e2882d0-8941-4223-8539-cfe3fd900549",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "86e2cde5-0147-43e1-aaaf-8a417405751c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c366b9f1-4539-40b2-9da4-45f628d0ead9",
        "cursor": {
          "ref": "0c651469-6947-49fe-8860-b925c423b9db",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "520880b1-888e-429a-b056-ea1725cceac9"
        },
        "item": {
          "id": "c366b9f1-4539-40b2-9da4-45f628d0ead9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bec1d72e-7275-493d-ad8b-481f55c69bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f70bf35-e437-4936-b695-0f9ca369dd6a",
        "cursor": {
          "ref": "ad581e6d-cb78-4570-9234-f3ef27978155",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "10eb6082-43f4-4f1d-97c3-941db31583bc"
        },
        "item": {
          "id": "6f70bf35-e437-4936-b695-0f9ca369dd6a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5288f81c-ef59-4548-8bbf-204ef9afe66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3c70a6-04d6-4523-9285-e802210a4780",
        "cursor": {
          "ref": "c5e46342-a3d7-4d5b-a42f-e39630189e42",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a3b7d736-2a58-4618-a547-6bfa157a1920"
        },
        "item": {
          "id": "7f3c70a6-04d6-4523-9285-e802210a4780",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e3627149-558e-4cc1-85da-d26bbaaa3e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51da33f9-3207-4e88-9399-160e0986e4e2",
        "cursor": {
          "ref": "8e216ac5-f0ff-44f3-a47e-d06c337b74b1",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "53559408-ec98-439d-bf16-764e59ffbe36"
        },
        "item": {
          "id": "51da33f9-3207-4e88-9399-160e0986e4e2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9b615f6c-ca26-445d-a8c4-ffe74b850974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48545ffa-044b-4a2f-8b88-28db610c940f",
        "cursor": {
          "ref": "7c9d0cbd-c961-46ba-99b9-425cb5fb7fa6",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e6d4ae92-66fc-477b-987b-73d1c6831141"
        },
        "item": {
          "id": "48545ffa-044b-4a2f-8b88-28db610c940f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7559c41e-8199-4da0-80ff-09c4d242f96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2752d6a6-a692-45f0-ad9a-f05ec4603e8b",
        "cursor": {
          "ref": "3358971f-4675-43e5-862f-3ef718b7e9d9",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d2b551b8-a7f1-458b-8324-3bf4041ed3c6"
        },
        "item": {
          "id": "2752d6a6-a692-45f0-ad9a-f05ec4603e8b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2a2e5b1a-c0cb-4695-b3c8-b55262ea61ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905746be-7228-4be1-ba7a-acf0567de1d7",
        "cursor": {
          "ref": "ffa233c1-decf-4380-b131-36e31f1a3752",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dd8bed03-7c58-4ebd-9eca-2f9ab106e7ae"
        },
        "item": {
          "id": "905746be-7228-4be1-ba7a-acf0567de1d7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c9072902-9b12-4e1e-b235-5525f578a8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934bf362-4f32-48da-b880-34d2857809ca",
        "cursor": {
          "ref": "977ff799-529a-475c-903a-819da043a8ee",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "78bbf3e2-0d1d-4d4d-8a11-96c054799875"
        },
        "item": {
          "id": "934bf362-4f32-48da-b880-34d2857809ca",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "33300a7e-6d1c-450b-ae44-c896112bf658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a1a2a5-4e45-4c2a-a24f-d2c5bfad187d",
        "cursor": {
          "ref": "c3366647-9b84-4f0d-b33b-ba57e987d791",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8f6b1e32-25d9-41f6-86c4-f3fbb87141a5"
        },
        "item": {
          "id": "63a1a2a5-4e45-4c2a-a24f-d2c5bfad187d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "04350783-3963-4f8c-8635-0eb4c773b595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700030a2-0d19-4178-b040-6b6f0f7c0ddb",
        "cursor": {
          "ref": "fde5cf08-f669-4252-8162-9eeadb39f3f3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b5057835-5f84-44ce-8566-cf828e07b195"
        },
        "item": {
          "id": "700030a2-0d19-4178-b040-6b6f0f7c0ddb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1d9f8076-845f-4fa1-a3e2-0da7a727d64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6285e27-8306-42ed-9e18-266d16342329",
        "cursor": {
          "ref": "bd4ee134-dede-403c-b1d2-2dd5fdd85d99",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "deba8fd8-2a33-424d-b2d5-cafcc1a49f9c"
        },
        "item": {
          "id": "a6285e27-8306-42ed-9e18-266d16342329",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "186ec09b-20fa-4456-b4c4-f398c954c694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299df3ff-6f32-42b9-a715-07455f69b3fb",
        "cursor": {
          "ref": "5fc359db-5082-4edb-b0ea-9a9868c2be49",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8edf79cc-35ec-443a-8b7f-916c74aa865d"
        },
        "item": {
          "id": "299df3ff-6f32-42b9-a715-07455f69b3fb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c0998ce2-ca6c-4050-aac2-1dc33a0cc520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db182a10-f67e-4117-85ff-e33224d538e8",
        "cursor": {
          "ref": "9c890364-7d98-4242-95f2-d636e56e50ee",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "039d40ec-c04d-4835-9ab4-1fda18e320e4"
        },
        "item": {
          "id": "db182a10-f67e-4117-85ff-e33224d538e8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c7abab33-abdf-4ff5-bba9-a1abe2895bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05df9d6-d268-4d48-8660-ad63070e8d04",
        "cursor": {
          "ref": "2ff120a3-0946-4436-af7a-d9527efe0fd1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "54e3b02c-81d1-42fd-8f2f-fea3327809f1"
        },
        "item": {
          "id": "b05df9d6-d268-4d48-8660-ad63070e8d04",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a4222617-2884-49ab-a2e1-6c88e1567bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850f7f1d-4e0e-4607-a28c-e950a4cb6710",
        "cursor": {
          "ref": "2f25ab50-5917-4581-aec7-b481c65146e3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "41abce7f-fe28-4434-9f0a-776243358a5a"
        },
        "item": {
          "id": "850f7f1d-4e0e-4607-a28c-e950a4cb6710",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "db5bddbc-3521-483a-a789-feb613fe1d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8702db-af1b-47ae-aa19-039352154724",
        "cursor": {
          "ref": "d73f65b7-d861-4b03-92d4-df6d35439b0b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e652792a-0900-41ef-a5a7-9695555b1ec2"
        },
        "item": {
          "id": "2b8702db-af1b-47ae-aa19-039352154724",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4f9bedf4-e368-4050-b8db-d9e2ef21f2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fadcbe-e84f-4e5c-a4c1-4de7cf9b628c",
        "cursor": {
          "ref": "d2470143-c9ae-44aa-bbd4-85ac83c3c087",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c886f4cf-4dce-41d2-807d-420108b64c62"
        },
        "item": {
          "id": "d9fadcbe-e84f-4e5c-a4c1-4de7cf9b628c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b3f4c4bb-4f9a-4ec2-81d3-fad0bd24ba7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6273787a-40e2-4306-8c7c-47cae73afc74",
        "cursor": {
          "ref": "34bdf754-e17c-46b7-b3a9-7cc0320dc60d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "df1c0853-5380-4ef8-a881-4a0ce0e91a00"
        },
        "item": {
          "id": "6273787a-40e2-4306-8c7c-47cae73afc74",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5f6e378d-d4ec-473e-919d-fcf34c04f5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da870697-b74a-4c66-9936-42fee3fdfb34",
        "cursor": {
          "ref": "70e8f02f-ff33-4b92-a62a-d11e633ae545",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "06a378e3-6a19-4d27-8fd9-3d0a0e83b8ee"
        },
        "item": {
          "id": "da870697-b74a-4c66-9936-42fee3fdfb34",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b813f079-1fcc-4c56-a03a-2ea3fbb54a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3cc7d2-379c-4a3e-84d3-6708e5cb3522",
        "cursor": {
          "ref": "78470226-01dc-4a48-acce-ff334e7d2a91",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "647cce71-724e-4856-b1b3-86a333967c45"
        },
        "item": {
          "id": "da3cc7d2-379c-4a3e-84d3-6708e5cb3522",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b087d62e-59b1-44b2-980d-e01cc412bc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baf8ccf-f08a-43ee-b222-cff2597e333a",
        "cursor": {
          "ref": "d19015d7-06a8-4351-a47a-6f9e10ecdf3b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bbb555ec-afe6-4818-88ad-7a423c61f431"
        },
        "item": {
          "id": "9baf8ccf-f08a-43ee-b222-cff2597e333a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "856bb564-5035-4b58-bc62-15aa23818e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f3a01d-491b-4a05-9373-acb4d50ed8d7",
        "cursor": {
          "ref": "9a90d24e-1447-45bf-981b-dd7d06d9e692",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1bf2774b-e486-4cb9-9bad-cbbf580ca26e"
        },
        "item": {
          "id": "17f3a01d-491b-4a05-9373-acb4d50ed8d7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "923e1aca-4b77-40b8-baa2-7f13952fc0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4fd6c9-8e04-413e-a0a7-7dc63e30ac5e",
        "cursor": {
          "ref": "35cb6155-37ea-4b9b-80aa-c039ce2cb0a6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "87d73101-2a6c-4966-8829-d1f930d7b185"
        },
        "item": {
          "id": "be4fd6c9-8e04-413e-a0a7-7dc63e30ac5e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cb7a3b6b-be84-4c71-aac3-9e5cb61d6f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9932ff-4e47-4739-b027-95aa294dd1c2",
        "cursor": {
          "ref": "8b7bf395-c710-42aa-b031-13c14b2fda26",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "286853e8-452d-42da-98b8-431905000059"
        },
        "item": {
          "id": "4a9932ff-4e47-4739-b027-95aa294dd1c2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e7f6ead5-95d0-4e62-81d8-6a38a14c3042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310501aa-7829-4884-b11e-7a10ec59902e",
        "cursor": {
          "ref": "07fb2bca-eb66-4b27-9bda-00a2256b5938",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ced6e30f-c865-464f-b892-673b23e17605"
        },
        "item": {
          "id": "310501aa-7829-4884-b11e-7a10ec59902e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "273ddd1e-421d-4ca0-967f-610ea43c9ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4511b3db-52fa-46a5-b05a-de4a81001b01",
        "cursor": {
          "ref": "74a1c6e8-bba4-4cac-bcd0-66ac3b1d2599",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "083d09e6-ae5b-43be-a0a5-02a92e3a3e0d"
        },
        "item": {
          "id": "4511b3db-52fa-46a5-b05a-de4a81001b01",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "aca5be8d-a461-4176-b55a-fb12e8c66d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d167cdd3-c34e-4449-863d-2c1ca43b8aeb",
        "cursor": {
          "ref": "27e96204-707d-4070-a4be-0eb5187c3f7e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "73c92b8b-bf1d-432a-a476-701628a2f27c"
        },
        "item": {
          "id": "d167cdd3-c34e-4449-863d-2c1ca43b8aeb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b0f67fa1-5205-4bca-8186-f5a8af83f8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80c11d7-44e7-44a2-b214-9e14e833b0fa",
        "cursor": {
          "ref": "00bce13f-ab33-42cb-819c-c87214ee28d5",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6423c81d-bd99-460b-b12a-4b373863eb23"
        },
        "item": {
          "id": "c80c11d7-44e7-44a2-b214-9e14e833b0fa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "406fe137-e8a3-4034-ba7b-c1ea60757092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621de2eb-3583-4742-acbb-c8a1c58d3f98",
        "cursor": {
          "ref": "0380def7-9b74-4504-8c65-fbc908a5eb3e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7618463a-b171-447e-8be2-d4f8cd0c5a04"
        },
        "item": {
          "id": "621de2eb-3583-4742-acbb-c8a1c58d3f98",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "aa9c4773-7310-4aeb-9383-aded1e063298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7150272-6f10-4b7a-8663-0f81db18893c",
        "cursor": {
          "ref": "76e6f139-184e-4a7c-b8da-9bb04ab93934",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "aabcf2c6-c5f9-4e7a-9410-a8f2fa719126"
        },
        "item": {
          "id": "a7150272-6f10-4b7a-8663-0f81db18893c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a3940cb3-bc2c-4eb8-a307-d1e9b2a1e1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcc4552-0184-428f-a22e-7559702e0017",
        "cursor": {
          "ref": "ae3392bb-120e-40c7-9e77-5578a786ada4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "13e0e83d-e802-4796-bec9-e461f47806aa"
        },
        "item": {
          "id": "7fcc4552-0184-428f-a22e-7559702e0017",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "01f855e0-23b9-47cc-9f09-d86bbf580d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0633f51-52c0-408f-b7b8-50e7309fb53d",
        "cursor": {
          "ref": "7c652ab6-3746-46fa-ae37-b024df39001a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3f561d54-04e2-4816-b1f2-ffbb59f6c8c3"
        },
        "item": {
          "id": "e0633f51-52c0-408f-b7b8-50e7309fb53d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "788f25c0-49af-4372-aa16-08aa16ce9c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c04dec-e8e5-431d-abf2-98d27a6e24ab",
        "cursor": {
          "ref": "5b4c0b98-9dde-499e-92a8-998f5decbaec",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0f1f886c-9d35-4d50-9374-0b92e041ed22"
        },
        "item": {
          "id": "c9c04dec-e8e5-431d-abf2-98d27a6e24ab",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "78e8b87d-5ca7-4cbb-88ba-faa1a71f7a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f5cf15-8c71-466a-a0d7-4414d5a25b49",
        "cursor": {
          "ref": "f179a965-0172-4452-ba10-5820ff47f1a9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "deb2af0b-74e3-4a7a-9dfa-86e359851533"
        },
        "item": {
          "id": "12f5cf15-8c71-466a-a0d7-4414d5a25b49",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cb023a5c-6fde-4ab4-84be-7752474613f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cd4d8b-5af8-4d2b-ab30-4174189daa63",
        "cursor": {
          "ref": "4e7dd77f-905d-4e65-b41c-55e318c38dba",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "57c836ec-1b3d-47c8-b8c4-8d7eab1b207f"
        },
        "item": {
          "id": "80cd4d8b-5af8-4d2b-ab30-4174189daa63",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "39131871-33fb-4020-9637-ed4ee2175f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d717718f-dcbf-46e7-9e89-bff11ddc730a",
        "cursor": {
          "ref": "c56c507e-cbfc-4355-9d29-44764bfb0d08",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "04f871b2-ed7b-4453-a099-b5e62c78e073"
        },
        "item": {
          "id": "d717718f-dcbf-46e7-9e89-bff11ddc730a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6d9cfc0e-dbea-4303-97a9-ac4aa6a2179d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbe755f-def7-4f92-b461-1fbb12f02efd",
        "cursor": {
          "ref": "6686905c-9faa-49ba-8ea6-f7805ae3f09b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9ce4f282-5a0f-4f55-a234-451156dfc857"
        },
        "item": {
          "id": "2cbe755f-def7-4f92-b461-1fbb12f02efd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d6ce9f98-af7e-4e49-bb2a-8f1bf5caa1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd87bc19-5259-4fb3-aa17-2bf45e324057",
        "cursor": {
          "ref": "ee593bde-3126-4705-aa9d-97c13aa70969",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6933cce6-d05b-4c4a-8d68-8128bb5cf085"
        },
        "item": {
          "id": "fd87bc19-5259-4fb3-aa17-2bf45e324057",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d8967fb1-75fd-4418-9560-dc57b17fbe9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2777b2-324f-431a-9667-0d078e935475",
        "cursor": {
          "ref": "fbc9f913-4e31-48a9-874e-af80905cda99",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6c25bcf8-97c0-4ea9-b84b-03d577a56964"
        },
        "item": {
          "id": "ec2777b2-324f-431a-9667-0d078e935475",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1fcdf15a-0963-4185-be1b-4f75be92a23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f4f756-6d0a-4ee6-83b2-3db958955e2c",
        "cursor": {
          "ref": "8d3493c7-9c41-4d02-8cea-cc17fc8dd1d0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a219f87d-8115-4102-9360-0cdc7e6881a3"
        },
        "item": {
          "id": "67f4f756-6d0a-4ee6-83b2-3db958955e2c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4811f03e-7313-4f7b-a7f4-5a4851ca114a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765cbc9f-a5cd-4423-b829-2158966d00eb",
        "cursor": {
          "ref": "bab01c84-c069-413b-bcce-294f97b69489",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "57b80058-9266-4817-b8d2-1a75b1d52898"
        },
        "item": {
          "id": "765cbc9f-a5cd-4423-b829-2158966d00eb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "68a5c1c8-8be6-4f4b-89a6-251124411b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fb95e3-2384-4f42-a39a-61cdc5d960b6",
        "cursor": {
          "ref": "777802e8-fb40-48f6-adbf-b3d9975e2601",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b08621e0-0b6d-420a-932b-3ae0d1f6f33b"
        },
        "item": {
          "id": "a8fb95e3-2384-4f42-a39a-61cdc5d960b6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "39a77532-36b6-4f05-a914-50c1e1cac3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36104111-7fdb-4a7c-8e26-38ccfd00cf80",
        "cursor": {
          "ref": "40b99b27-fef1-43ef-8b00-d4aa324f30d5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9e174187-0280-462b-98e2-c24c0d34c63f"
        },
        "item": {
          "id": "36104111-7fdb-4a7c-8e26-38ccfd00cf80",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5f12adaf-c14a-4128-bbb8-57dfdd673ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0a9135-21a1-4604-97fe-182cd796959e",
        "cursor": {
          "ref": "6704700d-318e-496c-a695-875780a4dcef",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8e7dd557-71ab-440e-983a-e3b68bc3e129"
        },
        "item": {
          "id": "2a0a9135-21a1-4604-97fe-182cd796959e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "41f7fdb8-5555-4af7-906f-4915eef8eadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b4b6a5-6f2a-4762-958e-0049b97aec30",
        "cursor": {
          "ref": "9d5a8036-a13f-4613-bb3d-0886f013b8b5",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0bb7c00d-05a6-4392-901c-f6d7782ad620"
        },
        "item": {
          "id": "96b4b6a5-6f2a-4762-958e-0049b97aec30",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3aa8cd8b-39cb-4065-a47f-e27f13e40769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380eed2b-2860-49a7-bc2c-e8ce4824d357",
        "cursor": {
          "ref": "e76062e1-a075-47e1-bacc-2641c1880d26",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4b7bb755-b76e-415c-9139-184183f59f8c"
        },
        "item": {
          "id": "380eed2b-2860-49a7-bc2c-e8ce4824d357",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "34193da4-fa9b-4d96-98f4-9000d71a75f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e865f171-98ac-4eb6-8d83-ae22fb253e0c",
        "cursor": {
          "ref": "99d26717-a5c2-440c-8079-0830174e3a90",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "79baf9d7-e5d1-4848-9d00-0ca560b09026"
        },
        "item": {
          "id": "e865f171-98ac-4eb6-8d83-ae22fb253e0c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5cd5d69f-7bb3-48ef-8d71-01f7992cee08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c504d78-6760-4835-be0d-5479333b008a",
        "cursor": {
          "ref": "f47cc986-f696-4aca-8545-7c2410c35e3f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f811adc1-5be4-4ea1-a9bb-4a8417d48db6"
        },
        "item": {
          "id": "4c504d78-6760-4835-be0d-5479333b008a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "27989afd-a341-42bc-b57b-ccbc95ad60a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ce5848-b0d1-4aae-950f-37707dde8261",
        "cursor": {
          "ref": "cd805119-9b47-4926-b04d-f4625deaea8d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "19246180-e975-4e04-8f5c-e985d164ecda"
        },
        "item": {
          "id": "e2ce5848-b0d1-4aae-950f-37707dde8261",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8bc09589-4282-4c73-9f47-59dfa2674c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63360e0b-91a7-4fca-8678-61475e9f5ced",
        "cursor": {
          "ref": "4bb4dddb-6216-424e-92be-5b8983fcbc26",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "23520302-f2d1-4948-9cf5-89610b6ece8b"
        },
        "item": {
          "id": "63360e0b-91a7-4fca-8678-61475e9f5ced",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d02b8ce9-09a3-4827-b7c1-d54d26e3ae67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67662f6-64cb-4b6b-b507-8e5c2e360d0c",
        "cursor": {
          "ref": "ff57170f-6bfc-4dbb-8089-e97bc57dcc4c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c72f5a2f-a1ec-4acf-a430-04baed967cbe"
        },
        "item": {
          "id": "a67662f6-64cb-4b6b-b507-8e5c2e360d0c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "12d6bdc7-6874-455d-9415-7a93153d017d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ddb252-244d-4268-82aa-ce44a0d50c65",
        "cursor": {
          "ref": "644cdbaf-c145-42f1-ab92-fd2b2b405338",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3be0f9d5-df0b-4842-86d2-a080c43d3d01"
        },
        "item": {
          "id": "85ddb252-244d-4268-82aa-ce44a0d50c65",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "14175639-6a97-4a59-80bf-667e43763115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3577fc21-ab87-4619-bba9-9e9445df1e32",
        "cursor": {
          "ref": "e6d5f721-4f72-46da-aad7-4d19e6d56941",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d739133a-3499-4838-ad56-c5baa0de9c7a"
        },
        "item": {
          "id": "3577fc21-ab87-4619-bba9-9e9445df1e32",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bf18976d-9d53-455c-b7ae-0d6c184191ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fa8f83-a0b2-40d4-af3c-d5344bd7a78c",
        "cursor": {
          "ref": "e90316da-a655-4d61-9289-8c6098654691",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "95443be1-b329-44a5-9010-b3ace6f2097d"
        },
        "item": {
          "id": "75fa8f83-a0b2-40d4-af3c-d5344bd7a78c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cbee4425-a3df-4be8-8dc8-313e54a5f98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e107e0e-5bed-4000-beb6-40154910067f",
        "cursor": {
          "ref": "5ecd1658-7eda-4b3d-847b-d2fd588d02cc",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "040c8c4f-94a2-48ac-96b4-4758a60fd549"
        },
        "item": {
          "id": "4e107e0e-5bed-4000-beb6-40154910067f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4ab3e09c-c027-43e2-a47b-acfb52bba785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e145da-a2d7-40eb-96c0-f6da96b553b4",
        "cursor": {
          "ref": "c1c4f4e1-f812-4049-8a8b-a670282acdf0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "05b9f686-51a7-4a5b-b295-849a80e094be"
        },
        "item": {
          "id": "53e145da-a2d7-40eb-96c0-f6da96b553b4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0ea72e8a-409b-4678-adb7-7fc4f6dcb794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bcc99f-b973-4d44-9af3-e9b5aa288f00",
        "cursor": {
          "ref": "ea36e2fc-e664-4669-9d9d-2f8d41c1d720",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4bc88d32-31ec-4a14-8b6b-b9cb93bcc900"
        },
        "item": {
          "id": "16bcc99f-b973-4d44-9af3-e9b5aa288f00",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "118a9ecf-3fcf-4e1c-b921-5c8125c16645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f0abb6-7b88-47fe-bed3-10efa4ecb54c",
        "cursor": {
          "ref": "1c65b3b2-deb0-45b2-9237-f26f61ef72f3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "636ecf82-40cf-41d9-9b4a-32a76ede81e4"
        },
        "item": {
          "id": "a6f0abb6-7b88-47fe-bed3-10efa4ecb54c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7a54c749-5f98-49fa-9c5e-db87964d4edd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c70bc9-aba7-4dbf-9468-7887b9913133",
        "cursor": {
          "ref": "f916aab3-ec65-446e-8066-6d82f6d467af",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "db89dcbe-7ce4-4148-9f80-9745b1a19777"
        },
        "item": {
          "id": "e8c70bc9-aba7-4dbf-9468-7887b9913133",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "53ef6342-250d-4451-ada8-58a6e392f5c1",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd45c2bb-5dce-439c-ac59-12d0aca870b2",
        "cursor": {
          "ref": "5f6d8b1b-82ad-43b3-bc4e-82e7498c3465",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3cc8cf9d-d888-4884-9ba4-c15bc55a71a0"
        },
        "item": {
          "id": "cd45c2bb-5dce-439c-ac59-12d0aca870b2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0ced5411-a434-41f6-b9ee-3a2e9162e69a",
          "status": "OK",
          "code": 200,
          "responseTime": 3137,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b502cc4f-7443-4eb1-bee6-51384deef30e",
        "cursor": {
          "ref": "42892782-eecc-4226-a485-c6d73fd6dd1e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "175d6704-3d68-417b-9898-1d17189663f3"
        },
        "item": {
          "id": "b502cc4f-7443-4eb1-bee6-51384deef30e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "904d0115-0119-4a83-aac8-9408473c1cc5",
          "status": "OK",
          "code": 200,
          "responseTime": 2998,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff21e5c-8031-4198-8c3f-4bce76affaad",
        "cursor": {
          "ref": "e72422ec-ef03-46f9-a460-06b0303a1274",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5aee1030-ab82-4d56-89e7-f6a779f84cf6"
        },
        "item": {
          "id": "0ff21e5c-8031-4198-8c3f-4bce76affaad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e09db49-a1df-477e-8545-51e2bda7462c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff21e5c-8031-4198-8c3f-4bce76affaad",
        "cursor": {
          "ref": "e72422ec-ef03-46f9-a460-06b0303a1274",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5aee1030-ab82-4d56-89e7-f6a779f84cf6"
        },
        "item": {
          "id": "0ff21e5c-8031-4198-8c3f-4bce76affaad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e09db49-a1df-477e-8545-51e2bda7462c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1e8a47-8283-466c-b1c8-208bf6f86bd7",
        "cursor": {
          "ref": "63022c5b-ee71-49c8-bc9d-7fa63cfd6ad3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c57b433d-5d68-4a6a-9ccf-2657d0ebdd26"
        },
        "item": {
          "id": "4a1e8a47-8283-466c-b1c8-208bf6f86bd7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fb8ed2cb-4b43-48af-a8cd-e86035d19ac3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb53789-289e-4eb7-a2c8-1771d15fd77e",
        "cursor": {
          "ref": "c7c01196-e758-4386-959c-af3001db31c4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "754382e7-dab4-4e06-a465-7501135093e1"
        },
        "item": {
          "id": "dcb53789-289e-4eb7-a2c8-1771d15fd77e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "50eb4a26-59f7-4383-9ff8-1f1116965854",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}