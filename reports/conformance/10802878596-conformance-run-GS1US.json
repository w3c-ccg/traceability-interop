{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4a9bc8dc-5267-4ff0-b7ec-d7f79d5b3d75",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2f2a608a-6ea4-432b-897b-668955b2ffba",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af8ba81d-1ac0-4187-81c0-391b7ae7def9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c689517b-8680-4de2-b95d-ed9a305b48e3"
                }
              }
            ]
          },
          {
            "id": "ccb8e29e-9114-4d68-86b6-4cf2b1e88b5b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e053f71-5aa2-45a6-96cf-e7acbeb8e844",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "54185d67-bbab-44e5-add3-7ea9202ca42c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "26f2747d-2579-41d4-be31-0a634293fd50",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "800f7850-7be0-4938-bb42-edb461cbd485",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27479234-cf25-4f20-a54b-3684a30807f2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6f0d154-7458-4163-9739-da2a00d70fec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94abf83d-b5d8-4a32-a87a-a8c12104b521"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "514b68ce-87fd-43d6-b5d3-11d92986df95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebd1fa48-d146-4d9d-8f05-f3edccec434b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2034a58f-6f48-48f1-9e17-02851c36c9ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79764235-983a-42cb-b0ac-26a700224652"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93547965-3d5d-4462-9599-3c0a21a35f6c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "09c07f88-3ab5-40e5-9709-d94ec4e7dfa0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d24f4499-6f86-402d-b0f5-a1dff73a1f7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c88b4b7-607f-483a-ab9e-bb581e51ad65"
            }
          }
        ]
      },
      {
        "id": "2e7b2949-0570-4332-94a5-4972f21691da",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bf0ae2fc-1115-45ce-a0d7-c86f5af0b40d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "049dd5f8-503e-4727-ae85-38fbd6c87cff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ccc0cb15-5ebb-49fe-8fac-2c62cdaf18c8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f872c02-cfbc-4a7d-9c23-9afc96d028fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c4fed44-bb1b-42cb-9a3b-ff3d4076ccd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c115c0-d320-4280-91c9-2d6ed9e7b474",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fd4d06-5f66-493e-a8c0-85e82e06cd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b772d0d8-37dd-4295-bc91-ce4a920956fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc7c9cd-89f0-44ad-8259-13698a422574",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2d5571-c39a-4e0d-a44f-8d12a7e02f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87fd932c-1e92-4fa1-a019-951b337d3e58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "510b6ad9-3184-4cc3-9414-f6dbaef9a027",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04a78666-2fcd-4150-9bdd-dfb6a5f7a9e2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7820a7e5-2ee3-454b-970b-2e5d8b285d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a538626-3565-4a17-b04a-7b7ec5ab9d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17081f70-6069-44a7-9902-34a47218d129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37bf3d8-1c9f-4568-8080-17e1cfa0b87c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8eab19c3-f1ec-414f-a399-5006b01e7375",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3522c64-cb74-4f36-ac5e-25ee4eacb3a8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78dee09c-bfcd-4f42-a1e0-99add22d996f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bfb02c0a-bee5-4f6a-a399-ad8240e57ee9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6743a71-9adb-48f8-9795-7e481774049c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "75506686-44fd-48c5-9a7e-5a85e0f112d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7547f52e-e3fe-418a-97e1-98574a59831c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "486e2a07-e011-4f11-8f53-2620b74e6bd3"
            }
          }
        ]
      },
      {
        "id": "c2a0e624-88e8-4d16-82ba-02c0d8ddcfea",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ff031265-054b-4af7-8490-45b2355641aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e65a247-bfa1-494c-910f-cf41a66efb23",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fb9972b1-18c9-4fa6-b6db-4d66c4077516",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdab0a3-7189-429e-a12a-d1fe51986432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5002c98c-a5f9-4624-b531-d773288611f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f91c5e-72a8-4b79-a4a9-5fc0718ce16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a012e660-4c57-4645-9763-1d41ba442592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94abb510-6256-48fd-871f-5c110d58e689",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9503a73a-94aa-487f-b3ce-c05075bcf256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a692cc3-46e7-42f0-8462-67d9081848fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0e993d-2b49-4f9d-9f36-3d12c915039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87edf4b9-a165-4dcc-8ea1-d756a97cb9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfee8791-2837-4501-ba22-5026ee5a401b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445185ef-56b8-4bcd-9fe8-917c426ba546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f4118c-6486-4369-aefa-2a9ee0872287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba0b0a8-6035-43cc-8582-e6c4ed58a095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79771605-4c9c-4a62-a3c5-197a53b1e84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1724979c-0714-4eef-872e-b2ad03f8a166",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c76d54-dfff-47d5-b555-b47d7a8b7177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac39922c-8a18-43d3-82b3-ea3d10856759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc40d26-1bb8-402e-a600-2554b86eaf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ecd984f-7cf1-40d7-863b-09cc6090d242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b2fcd0-253a-4608-b0db-f2a74c464f8b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84650820-2413-4171-89f1-94864654f03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bcc4f5-b039-45c0-80bd-81fa14aa34ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187a97a2-368c-409b-98e7-c938f8f3cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfbac337-e6d6-4385-b7e8-4230c3e21d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414d67ed-a892-4d1b-bcb7-4724b280a080",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0423a78d-4bb4-448d-ad1c-a951161463ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c882bee0-b053-4d3d-8470-6e14047fe3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814345ce-d839-47aa-8b06-b25b827f477c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34ace0d3-8235-4e1b-a9ed-45518a80d075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06f8d0c-a5fd-4067-9250-4e308c4c6e1f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379af452-d7da-4597-8960-5fd399a1782c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32de1b54-8981-435f-bf4f-e1ad70a1ca68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f0e243-6e69-41cb-a139-d409260d6b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0362279d-34bc-47a7-97ed-fdfe3ac44f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e98354-a493-43a6-9f53-76541727f79d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0386bb-c71b-425e-aaa3-df129a81413f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b50640-6b6c-4550-944e-50008dddecd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11dbc255-1a34-406e-aedc-d9cfefd536f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cec9982b-530c-4bc8-99fa-0dd9ecd857a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571ca1c5-3196-4ca5-b1e8-513078a7e107",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca56a596-c0aa-4954-b409-b333249a2876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2bf7a5-0403-43cb-b5de-74fdf55641b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256891da-4b08-4789-a53d-1d4e52bfa25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66e0cd29-b4e8-4873-8056-f26b17179434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1725174-2899-486b-b30a-f9525397083f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022a0bad-2d6a-4a9c-a7a5-3ff626571985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efc526e-2fcc-44a4-a5a6-0ef1603c8e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08b7cf3-e02e-4a37-a2d8-c5796f83f988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ff62298-54e5-4c62-b775-c4e8258d8bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39498ae-d47e-48fd-aad3-5556aa3a8cb8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c045fb5-63b0-4e07-90b8-52ba2b260657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1082a4c-407e-418a-a599-a17a32d95764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f1ed7e-1edb-42fc-ab90-16d2a7f4fd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d2e5a5f-f8df-496b-9afd-df7fb810a5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d642681-392b-4ff6-8e1f-11cbd2c33811",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5d87bb-3899-4d8f-b2a0-b6ed019bf1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4395f0a2-e072-4345-a4df-485b99f08a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46030ad3-e845-450f-9547-e4cbb92e8da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c26ab7e3-8ccb-41f5-9749-74e12b127e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98954a2-91d6-4a98-8190-264d261c63a7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edf6635-8813-4e91-9b04-9651c6a2ed4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c713591-ccc5-4701-9a2f-dbf5378d8fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ba95d9-0ae5-4da5-bb94-39e1c4721bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "726f3ee9-7724-4934-b72f-26cdc3fb2ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd24bb0-2d39-4939-aab2-de338e1c28d5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ba6d87-0da1-4028-b4d7-d1d813596846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d70ffbd-8fae-4cff-a3f7-572c310f86f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2ca36f-9cc5-42a3-95c8-cfe6f58646a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad3a42da-d522-4954-8152-c9fe35af20e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9bd050-7107-4e34-8942-f3c71df585cd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4093d62e-2ae1-488b-a64e-86af106c3194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150f1394-bb05-4cac-9181-c243054f6be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71839124-a253-48fa-8baf-a0a57fcf808a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a7ad1ad-501d-4f5f-b4ed-bef624d56824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9565d7af-2414-4aed-807f-bd36f765aea2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae926877-6e73-4cd4-ad14-59ea539e70eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b408fe-f327-413f-8c93-b91268131872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71450ce9-ebe4-4a0d-96e4-daadc9a16619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e347c91c-0df7-471b-877a-8a44e44138cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ab9f8c-1131-4920-89ea-0680910278d0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5223783d-923f-4f0e-8d55-0878fec17fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86521cb2-378d-4db5-8aee-d10db8157d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f9de6a-2515-4ce4-aec6-1310e54c4f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43ddfcd9-7cd2-45ce-b771-34db252d1905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d722f74-44e7-4d65-a931-c8fc5039ed47",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6cd3c7-3503-4e93-9153-99522de0ac3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fbc0d5-fd6a-4a2c-9f0b-9385bbfafa36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c6eda0-7eb0-4728-9115-48371eb3e8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "58135f00-7ace-40ce-9672-4a2b4b9fbb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3982e26a-37de-4edb-aa14-eb60ffd983c7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ee657e-d6ed-4839-b936-8a58615cf539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c60ebb-749a-49b8-b60c-6465648aa94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f392dbda-bd8d-4a14-8fd1-6a717e3c68a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "495bd710-2421-4661-8369-4cb496db54af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43249d6-70ea-4a57-bac1-169e07edd875",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e044c741-1f50-437a-816b-20735f087f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c2c633-b451-435f-ba9c-5b07335a87ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fd6653-9846-4b56-a68b-e73b79f5f0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ed8435-14c7-4115-9abb-80e1a234e11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1107caa6-b66a-46d7-8425-0f739ceabd11",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06c9f64-8108-44cf-83dd-84d7c40340bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b133f8-ca50-4957-91ce-c79f5f3606a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142f6107-14d5-456c-bcde-d0a89412a1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "708672f9-9793-4851-b111-c48eb4ed6ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e508ac8a-1f14-4821-95c5-92dcd5fab6c0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cb1247-65fd-4515-8ffd-ab8e34f0c7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c402b12e-2a0d-4673-81f1-599c65a5bf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea108b93-2eaf-4aad-a450-c5a2fc051421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25ed6169-d4b7-46ce-a1bb-68a55c904e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805a225c-1d1b-42e6-ab81-e620d79d0d84",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e87ece-400a-4fdb-a565-ab6d831de9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab3912e-86c9-412f-9987-8005120857fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ffee52-38c9-4f5a-bee6-1404ee79beec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57465a7a-2e4d-44af-9bc3-b895e1e56b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bd0e1e-d8d6-4710-8e65-b73465cd95a7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137d27ca-e366-457d-b50c-f2d5349a3a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d3b194-657a-4fdd-8227-65cf77b78918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a35374-e8f1-484c-ac30-d14011149e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb9ab50-8848-4546-8e3c-fe89ad7a7b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7df546-1d71-4520-95cb-3c7cf52ba7c3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dec0527-848c-4f30-9219-66c47e2fff55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5376576-659c-4a29-bfec-10e04f130cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83e8a45-51ce-43fd-877f-d86619921389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed66f342-c0bc-4383-9022-673eae096fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef037517-e8bf-4e78-859e-e28c3bb0926c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32293862-2353-4b02-9c9a-1e17a1bb8efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ee194d-4dd6-4282-9ac5-0f68b4e993c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d21747-d687-41c1-b99f-9c236d3a369d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed868c25-74f3-4a90-bb73-6d558e92924e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710a4727-f488-46a0-8c7b-1e95c4fa7063",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148b24db-3f62-4717-9bed-80163e50a3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a38f943-6e43-4506-aa76-7a41e6cf7923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e117d3-1141-4dfb-8ba8-df2e0fc577af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e185d999-8bd6-4201-8bf6-ff2d94858750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de94a4a6-96b8-4e7c-b9c8-02f66ef719e7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f1ead8-ed03-4fdd-a490-947dcd41a86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a58df0-dc0b-4fb8-8937-03a2747260e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1354d0f9-26c7-4121-8678-c4eb854a8949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "878322ca-0991-4962-8d74-1d9e630eb8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc905be-383c-4dce-befc-d1859ebd78d1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a40ab3e-51ba-4cbc-b5a4-53b7b8b24f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615551ee-c25c-4eb7-8560-21ab63df96ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ac7f88-b4c2-468b-a9bb-3def4f7fedc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb62b0b-eb33-45b1-afb0-f69fc7a23cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c4a007-64f1-487b-a150-a9506fa59245",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c65b020-d13d-4271-b908-ecc6ad9a0ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5ca83d-607d-4e1b-8bd1-2acd0b0cd452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a274313c-b68b-438f-97ab-be614d486141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9935f289-058a-4c12-b79f-aa4ec4cf0de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e03ea9-e8f7-49d2-9e6e-47ee287f2129",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4bd5e6-c48e-4d48-a4ff-2434673a46bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab8dd17-6e80-41d1-a187-c0678c9198f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a066c833-88f7-48ca-a58d-3c97effc15d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac13834e-db7e-4a39-bd10-cc37f81c859e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31acf4d9-fa0c-4859-8cdf-99420eb1cadd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5540d4-5cd7-4d5a-a44e-d118c4f9ddec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22db68e-195b-4f00-baaf-d156bffbf2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53288a7-dc6e-46af-922b-a17daf28db3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa37c88-3529-4c5c-afbd-9a34771e66bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54da3097-249c-42dd-9481-c9b517114519",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8503a4a-eb2c-4a84-8e77-1bdc6e956bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40b2885-c4af-408d-99e1-ca394c7780db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b399af15-8db7-4836-987f-16c94acec1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d14ee0-bc4e-4131-8ddd-a4e7c0af29c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769e67a4-4e8c-4f8c-9508-b3044b845e24",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765d3c10-b024-4139-b296-549bf69e40e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b8bfc6-6675-4c93-a4dc-7cc3e2ee51ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8093529c-e8dd-4c6d-ae84-da41b4c0ca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3151db9-42bc-441a-80dd-c9a288d55874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf07dc28-35a2-4686-9aa0-bb3c63c05a5b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e95b8e4-c606-444e-a678-5444903122c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18a6919-43ef-4ae8-abd1-6ce20ccd6e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae24185-5128-4cf3-8d20-c6d4dd869a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "415b175f-0f0a-4479-9998-768eba233f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4195902f-5d61-45ad-a30e-6435700ec482",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941899a8-8421-4ef0-969f-1b7242cf074e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3b10f7d-e7c8-4b7b-af7f-a19bfd4d3822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b15cab-7e62-4d89-8072-57226d0915bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd20a200-e165-4fb9-858b-7d05642db2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b442d5-f95d-4bd5-9c57-307bce9e55c7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0926228e-0f6e-4ce1-93ec-4292c8fab29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f684d893-1809-4b4c-8e87-b41d96c137d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19173d3-2f68-4f2b-83b2-af246debabb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bc74a8-515b-4284-ba1e-50d629a873c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb2fbfa-0e12-42be-b7da-0fa1eff5fe45",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9efe222-d4b9-4969-b0ce-6ff09786e692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb75ba32-0fe6-4ad1-a213-8d490d26a630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bab49c-1b8a-4361-9fb8-0440ee283e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2105e792-2fb1-401b-b351-b392e972342b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c214b3a-d76c-4426-a144-8c645ea8af2d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27da6036-e5c8-4f39-963b-f8cf5597247a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0404ccbc-a96e-4c63-83a4-228ab0b85981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f56db51-e53f-433d-b99f-1fd07cc90cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c851870-6a45-4af0-93a3-e1f0d061ccba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9878a3-691e-4474-badc-da9101ce35df",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eabafb-dc23-49d5-a3e5-5dfe04c54f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a10a520-b91c-447c-9b26-0f57bfe1dfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be77bde8-ee08-4430-8c07-55dd059409f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6453a2a-35e1-489f-b854-ce3192b8b4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d581fe-c6e2-43ad-aa23-b6f9d7f132fc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bd4fc1-988d-4d8f-bbcf-b0b19152189b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f8a357-4693-41d0-b4b7-bd298e7d13a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f839f91-e7fa-40e0-afc3-8579dcb8b97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc55cd42-1fc7-4bab-ae47-44175792b7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f436fb-c08f-4258-9238-bd89bc022bce",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea4f651-a2b4-4c1b-ad79-16fc4f969985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc6dffb-21a2-46b5-8e6d-1858e18bde1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077acd35-e673-4443-9727-56033a728030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3626f082-3db7-4916-8591-08b00b3fe7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39ea89a-ecd7-46e8-8990-e24e47d902ce",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2a83aa-f6ca-46dd-ac65-944e2f71a610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518a9352-1e0d-457a-9407-b37b8ebcb138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35530c0b-25b6-4d30-9f70-ebc954b7e08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c19cfc0e-b835-45e8-a50c-fd6e81def2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8be566a-7f1a-47be-87ee-59b7e9322117",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbd8467-a824-439d-852d-671a640d3469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9466182f-0054-43b7-bb7e-75f28a24449e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6220e40-ddd4-4e1e-b757-430491b6ecc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c0cb20-65a9-4179-90f9-de1e38e4f9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cf49ed-41f2-4364-b2ea-a63c67e0de3c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec8650e-1d55-46a8-bd5a-e5f363a6f3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5309c194-2b73-4cb8-9949-4be77079aa8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56758ea-bf59-4674-a78c-17d6f95627ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14ec168c-0a70-41c5-9f69-f8f7776b7b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340dcfbf-84c4-4935-b52e-42b861e17370",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fe91ba-a261-4582-96b0-af7692f6b0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df52855-4728-46c4-9dbb-142e311ab4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628cd721-71b6-4463-bc66-33296b466386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c6aa6b-b5d0-4e56-a24b-5958381c5c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775c7d24-a6e8-4f14-a349-6cf546cf484b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94089f5-0ab3-4fbe-a731-1a3bdf387a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0affc868-04fc-4068-af28-742f749cf93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f84531-1b25-4163-a140-6e9f0e75b1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "571905c3-ee41-4715-bd20-058b745bd313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e11e089-40d6-4a11-81b8-a79bbf38bd98",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41187596-9b73-4af9-b50b-d713bfb1c5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c205a35-ebf8-44b5-bcf0-b3ef9475c3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332b050c-7b6e-4bf1-aa99-85e1add9c9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6eca42-18e3-455b-974c-86baa41d642b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fb7014-4c85-4529-b3c9-fc032d4c067c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecc4e45-443a-43ee-bb67-d61e30fc5c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c09aa4-61b8-495c-a0d3-d717ccd5bb8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd460e1-78ee-4898-a128-418bf7e53853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52c4ec24-7090-4957-8392-14c4d7e65858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a00a8a1-e03e-456f-a0d3-4507dc81e927",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9136c0-096f-4053-99c6-62398a61c58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb851b1-0b64-4cff-83b4-2ff548615159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97035fe1-14d8-493d-a226-67fe08dbbd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c67dbc9-a6c6-41ee-aebc-90331f65851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8450b80-da91-43ff-8820-e2b581a34df1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9625bce1-1c04-45af-976b-cf776e8704fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a59636-9922-438d-9e6b-3475f73154ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a59691-994f-4203-8be8-f284afa26248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d7d410-4bf3-4f97-9eba-71aeef4188d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66546fe-2677-4867-8d83-768f8196dc02",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3e51d9-4411-487f-9573-67f3da15f33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb980673-7bc3-4ad8-a9eb-7eb52967798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b491cab-897d-410b-9593-e49cbac4f07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0362240e-b3eb-44a7-89d1-b2cded353f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385f9fb4-43bf-4b63-8747-ff2e59b60626",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3985198-47c1-4c9a-a5a5-32c8c560f618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0993baa-d42c-45ef-ad64-5231556796b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a2d4ab-6e40-4481-aa32-c0732292d240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0b1a9c-457c-4096-a0fb-67db16e95dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287e9a2e-9f78-4d7a-a78c-9a2f2c13671d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcea706a-e8f9-482b-9fb8-f849e5975390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c7fb0d-8321-4ba7-893b-7ef1e75e57a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6223c10-40c9-4e0f-b36a-145d43b0c8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "386beb86-1e2f-464d-90f7-1c03644898c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16af678-69ae-40fe-94fa-e152fa03bf5b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30eef4ed-7751-4e3f-8344-0384c1bf79d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343232e9-aa81-4170-b69e-f310f12618fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f5db99-9a7f-4029-a320-e0adbbab1a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa78ddd-b4d0-4fb0-99cd-b8f5ce50f32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4956e4-baab-496f-8367-4a65388b82ba",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b594d900-005a-46f8-89e6-16d999e311e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8c8342-37c4-4bb9-94be-986c9fab4ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec8b4bc-d6a8-48f3-ba59-d3132bb1ee8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fa4326-bf6c-4b18-a7da-e111f0eba089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e545b2-6b54-4594-8db7-34bf9b789800",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41173934-cb49-42c8-80e4-43105b69a7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97aff0f1-b815-4bc7-ad2f-550c226e6f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f35b09-fee2-4082-b4ac-c2438b5d200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "00dadbdf-c3b7-4e38-aebc-45e1a9a6e0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e118c0f4-85c3-4621-9748-b40e800d2278",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d489e027-7e8c-4509-9e73-9e983cf90153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857a0a05-f88b-43c5-84c0-4ed01f4c3946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5255603-4198-468b-bd37-12c375822a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db1cd2d9-b131-4ef8-a372-8225321f0f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c5ce1e-a4e8-4f2a-8d46-bb2204d7a18b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef0e178-243b-420e-82ad-ddf234e29d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f827ee2b-aaba-4a9f-b4d2-71bc7201a30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca2aaaa-d680-4542-a5a5-88072d1c2437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96170b86-b7f4-4915-aa00-bbdb637d3b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ca4f55-4f24-4fb7-82d2-d87f6e986939",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248a1fc3-8e41-42be-85d5-ad68ef72fc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c74b4ea-e145-40bb-8699-6d2ab8be30de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b411ee2-4a2d-423f-85ae-922919377b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd108151-8e9f-4a4a-bcbe-ccc8dcb36929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4379266-a0f8-47c2-ab98-1da0b357f394",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d54e29-64f1-4e34-acfc-b9e8a8d2a25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d25240-ce13-4ae2-ae0e-060b2ff0e6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81660e9f-ba28-4271-bcc1-1c7a8ec2ade3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f83f797f-86ec-443e-beff-c6de5fec6936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9116e0d2-a157-4063-9f60-6cf27f7df2f4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b2fd89-d44e-425f-94e0-376133f1ea19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7e05aa-1393-4b9f-bc00-810ff028220f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47238a2c-8167-47af-9625-5e2ff0c13793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "391f4141-2961-47f0-a7ba-1f5247418bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2627d47f-e8de-4a73-b3ee-c91e25ab12f8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04f155e-441f-4f74-91b5-ff49660ec0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cec781-1503-4ab9-b346-6f7835c1adf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c205e2-8d9c-47df-82be-4641de7a8cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "96e94aa5-edd4-43ff-b03f-27bd0bd5fb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb5001d-a476-4db1-ae67-d20e89351f0d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4831b8-1762-412c-bcac-ffacb74c588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481ba153-ad19-4d06-9e2c-ef10d602b90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96b90ca-cdd5-4c31-924e-01bc6239f23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a7767b-2236-4ab0-b65d-4642f9f77e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a209a799-3e91-47f5-8f32-bc5e116759ef",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9458d5be-ad59-452f-b6b1-056cd2676827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af29f875-6928-44d1-b424-9d37e46b129e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700292af-80b2-44cd-9ab7-132d13e93845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d75ede85-3c40-4be0-a91b-c1fe383d8004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29de19f-e9a0-4702-b375-e7a8751d50f8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb08a339-25d6-4706-b387-351e317ae2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0158ce1-3dbe-41b1-a52c-8dbe72bfef3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1199b4fc-4642-43f2-9074-874d9cff48b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d921aee-fade-4b43-9eba-fe37e7f19ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caca3e2b-bafc-4d6c-bd6a-f749239e7a03",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584e18ed-7c3e-45d1-b624-a6e39c14c6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e66fe2b-828f-4661-969d-feda4e2b462d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e80a737-8e34-4fe6-89f0-15c106acd550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3652abc2-aadd-498d-a5ad-1b838fd15b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdf2488-e41e-45db-babe-58725e9d94a1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefbc117-77bd-4c5e-a048-02c39f60b541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a96cffd-ebec-44f1-a85d-b8a7655d37f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc040a6-9e10-4943-95bb-19872a3b828c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e2bea7-3ae2-4fd0-9817-00a303679ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad73cbb-574b-4737-84e0-94b9c5dd73b1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792aea62-68ba-4bf4-a55b-391043ddfc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24545ecd-ba86-4588-8a29-9f8c833a003c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40412ca3-e2f4-4207-81cd-96ce7380c99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "745f6e7f-b511-42f6-8f64-77e74a62b167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a514f54a-da31-46d6-8570-0810083d8f42",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c402b69a-7573-47f8-a00a-458270a97ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340a90fd-0d64-47b3-b73a-3accf138b947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4d4d04-a7de-45e1-b1f6-68a287290638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "566c2ac8-f02a-4333-9d8d-c8d5771d9755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66b1427-6210-48c7-92a5-92f867196e8b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ef5604-8c61-4bc0-8d6e-8965e3a684ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b1f7cc-d0ab-4a0c-96cd-0e05c446363e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78087173-50bd-448c-b01f-e1127367e7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4126453-f6fa-43fc-a3b8-89fb017c2064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acaf1fe-3d6e-483d-a8a7-fee6ed0bd981",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0210f454-04e4-483b-95d9-52334593a045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78490f5-2076-4916-a84b-f4a3ebb4d188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e7c51b-8fdd-4553-9b7f-3f27cc56e465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73c18815-f70d-4d68-a698-7258d5f97e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a142d7-d7d7-470b-8856-2ecdb2ff71a9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77afd1d-e71c-4adf-ac83-7046f54fb1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4bf967-067c-4044-80aa-d83019b3448b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21571cab-51f4-45d6-8a7c-8641da07071b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd1020d-4b46-429b-9758-79b4fb021aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd11472f-38d2-4a01-b99d-dfe39674810a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873db0c9-20fc-4147-89e5-b39a83a18f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3861b343-7f53-44e2-9607-fec82606c506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4ec4a9-8f46-463b-8d86-8a80e413fec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "176c473f-e30e-4d6f-b4af-0e845a64e359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f3dc5b-8598-4ebc-8f64-9f2c4df5bcc9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da620139-f6b7-4080-a690-9e4279c04b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17245823-beb4-407a-ad2f-b384a8203bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ebb832-c595-4c45-be34-178204abd089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "974ac5f5-b9ec-49d3-a9f0-624414770801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a5cf9b-fb71-42b5-b619-decab9f07002",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115af176-f4ed-4459-80f6-e53163ffe8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee6144d-dbd6-42d9-9335-968e5cf1d19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792054a6-6e1b-4455-8e6e-6c9e9326dc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "547a0d3f-0794-4cdd-82fa-afd29d898fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798d9d47-873e-4cda-9b9e-880c19c2d381",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb849b6-626e-42ce-8839-87678e0b8446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6402eee9-6a4b-4f48-978f-406068255779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d87613c-1063-4deb-a83f-7274de922008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e533abb1-e5f5-44ba-b568-9d8df97be250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8c54dd-d734-4e59-930b-aff76ff7da06",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c524c0cd-0ae5-48b2-aafb-92aa6e156a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f427a256-5521-4f8a-9720-458685c923c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbe1634-28ff-4d42-8a87-1833fa0c9f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6edceb56-f766-4340-8f71-5f5ce7cbeaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e215597c-f803-41d6-b626-9e4f2a6c9e2f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcebfd12-8417-4a91-8c4a-9b762e2c0305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f4d3d5-05f2-4314-b28a-41063202edef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5f54ba-495e-4527-9b51-f4b98366e2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c3b14a-5227-44d9-90a5-b0b9d6187639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb40492-48fc-434f-80bf-5f01990a8362",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0cc582-66bf-4b9b-a6b9-c77ad6eaa87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30d4791-5cf3-4a47-addd-b8374c515411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07ba1eb-43a2-48d1-8b2d-29ea9ddca082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c900d880-05dc-4f14-8b1c-07ea46c35728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1f469d-2460-4a6c-a3a2-98928114efa9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f755bd85-6b59-4234-9025-0307db0d85a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99474d42-087b-4cce-8c59-e8489c9211cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fe0be7-e607-45fa-9e30-740935c05022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f817dce3-d741-4903-8dee-3302dc337987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4588ba98-ea1c-4cf0-bee9-3a99b686d8e3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91e1b32-162e-4cba-b1d3-fa5fbf887a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53cd875c-71c5-409a-b0b8-7ab6062a8dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cff63c-7139-4f51-b692-4ca949d73b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f5e493-7e6f-48ae-82a4-5b89a965c914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b3c63e-9417-4a6e-9c73-fb57b27b8050",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77082681-e5c1-4da5-91ae-919c41755066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0c923d-7d31-4827-96b3-9a55dd10a3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddef0b83-4fb1-4876-a56f-0c0c71edcddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfc7824-ff1c-46ed-97dd-2830286918a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00da7598-4f21-4cac-b122-b01b789b74ae",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed0e213-37d3-4b52-b96f-0bde677ddc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5126d8b3-4915-4f16-ae5d-5a5953c60d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520fd147-1797-4516-be9b-e7be4310dd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7502f63a-a7d6-4f7a-b126-74cf82f30776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c473e7-1dd8-437c-81c6-9491a6c0beca",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79532cff-fa5a-4abd-a9ec-8e565711b9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a782d1-3b10-4dc5-a51e-8544aa4dfdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88247e21-57e6-43d3-b138-1a0abfe56f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d4a594-cc11-48a6-9816-d871d4f1044a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b729751b-88e6-4338-905f-5b894eb5258a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da6c43c-8c9b-45d3-a0ba-fad843c9950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be215e1b-8e97-4e8b-a461-39b1e1d13c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563814c2-757b-42aa-a43c-7cc094f6da74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1689029c-97b9-4fd8-8a99-4a15129ed4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dcc10f-b116-45c3-a69a-4493e79d34ea",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2899bb70-e8b6-4d5a-9fa7-4923a0e7efb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacc9e4f-89f0-4b95-97bf-d3192c556709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70a7c62-4c74-41c0-8196-88b1f1ae57b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "024216f9-036c-44b1-82b0-3bfff704382a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b6b5aa-2599-494d-b84a-5305b168e5cb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b0b23e-6ee2-48f3-a8c4-2d8b2ea78d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660cfc83-1b8a-45c0-a1b1-47af76c3f803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ebdbfe-1ea3-4dce-a272-e9a98b0cbce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e296bb-ed52-4876-ab7c-b5106bde2b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f614dfc1-1936-4bef-b066-16feb13c6c45",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27950e40-e6e9-434e-bd6e-af0f1ce991c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5e361a-7502-4395-9b6a-c391eee26cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cb0891-97ac-446b-b6dc-924ce4524b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d6b182-9da4-4670-9a2f-f8ade9349676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76246446-3cfa-4a26-a238-cb4abaec0764",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cad974b-7ee4-4d12-8035-0671d30c4faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97d0189-7213-4b6c-b195-7d39b41452f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030f51fc-9c2d-489a-b55d-3178eb6f81b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02ebb4dc-3bd6-449e-a292-fc07db673950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91982ede-c930-4980-bb17-2d8b43432824",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154e554a-8059-4d94-8bf6-61ed1c16b8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68092a4-9454-4b48-a1b6-7873dcaaa32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31302cd0-3694-4a5f-98d1-da7de931ce54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e88ddf9-a6af-433f-a81e-0c5ddc23bee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf55954-65d5-4e47-a1c4-fbb9ff67baf9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc46020-c20b-4eda-a871-5ce01fce036f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ed19564e-ddee-4e27-a22a-dd06c5c31ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1ce9bb-898a-4043-9d19-9360bcf23e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "08d5920c-6697-42e2-8acb-bec0cf6c3e4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5837e0d0-a1ef-42ee-a6e1-a0324e39c26c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b23ba460-dffe-4f24-b7fb-199d9f197a3e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62d31b7-6a25-46e0-98ed-7bc3b87a2986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46cabcf2-f641-4205-8eb0-1ac77e5b2b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e28638-66a6-4cbd-a145-99c5c217ff2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bc3003c-f0cc-47fd-b65c-b5cbfbd1456a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b3f5ea1-df92-4a24-94bd-a54f283904b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7d32bda-639f-4a22-83fc-36c40deeaadc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aca4101-e69c-4bf6-b962-a7b4a4971c1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f79f273-f6cf-4f8b-a8e4-0358a1192ef9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67ca8891-1b6d-49ef-914e-c46c96a3e16b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f70970b-40b1-4a2a-b2e4-dfba178bafa8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1db9290-d3ad-422d-8c95-65ac92dc2e72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b7d36c6-9d47-446b-998a-71adad602ec7"
                }
              }
            ]
          },
          {
            "id": "1bd0df57-20a7-4f68-b3b6-dbfddda697a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dbb42bf2-eb60-44e7-a88b-b7d0843f0b78",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "12d82070-0b0f-428f-a4dc-b44e2b1e823c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5f36fa-7dbd-4b92-9406-bd28d55681ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a49ab5e-ec7d-4377-84b7-7035ce72c3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f361e2d-3b38-4fb0-a750-32692072ddad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5b669e-0576-496b-861e-9f3242310117"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77446114-4463-4fb2-b782-fdfe035cd5f5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a77e67a-ffbe-431b-8fbf-37114bcb945d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "147ce767-b937-4316-ac37-810b60529485"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ab90ddf-c143-4a4f-aadc-fcfcc016532f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a3183f3-2e6c-4ae5-9592-ee23b35c74b8"
                    }
                  }
                ]
              },
              {
                "id": "dbf4198b-7629-4626-b18e-1031a7e38963",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50328600-a9f7-450c-8909-49e0ff05951a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fab846a-98f6-4d2f-98e2-ad445aff33ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baa85e61-53ff-4cc5-9b62-ec171df95617",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b33f0e3b-98bc-4838-abe6-4649a74fae46"
                    }
                  }
                ]
              },
              {
                "id": "3cc9a64e-f638-4bcb-a2f9-7ee9ed0eac70",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3513c04-db2d-4839-82d3-e83b78443251",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "745f2688-ab62-4166-a92f-42f725eaf075"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aecb9e06-2eb8-421e-8fa4-8f55919bdeb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5fbc964d-7a64-4228-b519-e81aacc02238"
                    }
                  }
                ]
              },
              {
                "id": "0534e4eb-8893-4b06-a3df-de81eeabdcdf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "527f9c98-7685-4ec7-b91a-026a6717917d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8a83f03-7487-4174-b2a0-6c1bd4a2fcb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30d2ebb4-a072-4f2d-b191-eeb9a6f65dc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9f1e1a08-92bb-40f7-9e88-667275e9e708"
                    }
                  }
                ]
              },
              {
                "id": "3fce5aeb-13f2-428a-9b4b-f30f4f7e151a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c49112f-80df-4a21-b131-3fe9aa28cb44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26c96c41-aaab-4d02-825a-52c843f110fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a64486f6-69e6-4b0e-97de-1672afbf1b6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2f6515db-fc1b-4938-8a1e-bb72c3efd7a0"
                    }
                  }
                ]
              },
              {
                "id": "b420c269-debd-4f72-9133-cfa71af3da5e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4197c9e8-4853-4445-8025-921c523df6b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a72b056-9418-46ca-9054-cee4a54491d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf389029-4bc2-4c49-997e-18fbfe5c28e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa776a30-7e31-4cf0-a4ee-37edd6173935"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fc1864f-3e8c-490a-8c0f-408ae5c94f71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d15edc24-882d-4c88-bfc0-b944f7ee89cb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e947faed-85ca-488a-9fdc-c1c7c74fb2d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f622800d-8421-4383-a4ae-9462800c358a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6fc3847-b385-4f9c-b1e1-6caf9ee7d8f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "00ed5c6a-d8ae-4a81-b4ce-63f41c103492"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "691d8b55-929c-4d1f-8d48-d213ef647ce3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5421e1d7-9f1e-45f5-97f5-e036d1d883e5"
            }
          }
        ]
      },
      {
        "id": "71665a73-eabc-4f79-8b0f-c9589325fc3e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "110aedc8-7f7a-41cf-bfb2-975d95a513d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03c72802-bea5-40fa-a49c-405a87e56df2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f26b00cc-a4ed-4dcd-8a8f-d299e945cec2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc064f37-8bdf-4c49-b40e-45166ab3ffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ab6d6e-c8c9-49ff-a8a2-c74cd2adecfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9ada0f-38a7-40f4-8874-d9f5bdb10cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ad0296-f3cf-45ea-a5c7-84907f09abe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eecabf-a883-49ba-b351-874ce536e0a1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbfd2c5-01ca-445b-bf50-fcf783be4663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a30905-a615-48d3-b508-d90c9f6926b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceaab07-db06-4775-b762-1e131fd61210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25809e68-2dc7-4f7e-9061-2ecede2ea23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da21b0e-f1cb-42c3-a60c-4c8c427c67d3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07565939-72b0-40aa-a3cd-f3c19ee3a287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ae2030-e821-4177-ba6a-350239dd8678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202f4263-e31b-46f9-bf0d-79be3de370f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35d893b6-9e43-4789-8dce-fe8956972478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46622fa2-6bfa-4655-95df-1f30e6b57646",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a99c4c-b03d-42fc-a990-6d8a72b8f8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ee9a98-6a94-4892-94e2-fd67c78608ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5482e4-189e-42fd-80ba-4f39c10e6381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3433ef35-7536-402e-bc73-76969ffbe6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fbfdcc-323e-4143-a765-08ded6a76021",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306d772b-a0a6-4667-8197-9ac9bade5075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac0e962-97d7-4991-b7ec-2eb0f6d5ab24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71fa393-ba9b-4177-a4e8-4232343fda37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea40358b-33bf-4dcf-be3c-fb3962f0cd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb5ab62-d1b3-499c-932c-85d0ddc287a5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c33bfb-a592-4b03-8c39-da95c11b6ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e247f8-daa9-43a9-9293-d18af874cb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a84098-6219-4f31-8887-5d30584cf47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5aae75ae-431f-4403-a95d-1715878c5987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f853ce3-0887-4c26-a295-48a01bd1a9fa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92040e4c-af94-43cb-a707-f6f081f881ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41402042-26c0-469e-a47d-4002935155cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd458baa-fb04-4984-be5f-c46e3d78a21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e6f306-2385-483d-9558-15577793287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04069181-e3ba-4424-9552-d2672438a773",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b939657-031e-49a9-b22e-5d66ef074764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423aa709-d3ab-420d-8d8b-212c30396f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543853ab-9c0a-4aea-98d1-67a3a21a59f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a5087f-426c-4f60-8c6a-14fb2af2d533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fb7e39-fb14-4546-bebf-f14e1d93623c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49399fa3-906b-4c12-9f9b-7040eef87823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93334f34-469a-45b7-b291-04c0fd903546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8a71c6-f61d-463c-bd1f-c00b5958e132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d86b5c-f6d0-419b-b408-648c2ac3cf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df90fa2d-08c0-46ce-ac10-f8b807a3befc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac33b8b6-1cd6-4c4e-91f1-68d50b289b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fab9a5-c3a0-4dee-8055-50e90afe1934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565c62de-8b5d-4ff1-b05f-550912482a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "646bb91b-0ceb-42ac-a163-4130183d973b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae34b71-5666-4a10-9282-de7fadf4cf7e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dd26da-ed74-4215-b72e-a4063218ce49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d0c88a-5709-44a6-8d81-140babcb3fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e76dcb5-5c27-4ff8-a01f-6e1f9eb16d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "75f97cc9-32bc-4bec-b846-b8aca4264453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e985a49a-4588-4242-b67e-ba97175d2749",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c87db4-57a5-4c6b-a3c3-aba080a3a2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46614e1f-bb54-46f4-bbb8-56393ad87738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23aa748-690e-4a79-8fc0-b2fe3dbece62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67c539dd-a8f2-4f4e-8950-c23fd7f32585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46987080-7607-4b46-8901-8e20ba0a6a91",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488272d0-2873-4e21-9ad3-3d6b0fd2996a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac6c783-0bd6-4811-ae26-8b9c8d521375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80bf44e-baa3-4254-aa39-77c21ab2a86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85c5e99-3e74-462d-8b0c-351455d54cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20d033a-428d-4cdd-ac31-ee17841dfdfd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc8f948-ead0-47ec-892a-ebb48ae34157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff77c004-c77d-4efa-af4d-fc44f9be2a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42bea60-774a-4b13-b25d-ea97bdbc38e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f02f741-420f-4d1e-be54-e727d698bcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925013d6-3902-4c61-9e51-ea9e61ea7e79",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd94a0bd-62f7-4767-836d-80cebde3fa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f5eeba-eeb6-468d-88e0-8af6c594e763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a539f08-e68f-4ee8-bb34-5082682f8d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2f8346-a5d1-493d-9824-367332e15559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107684ea-1ef3-420c-8884-f48b482e9a46",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085c5dc5-0957-476e-95b2-a7c83f92b98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249bbf5a-54df-4077-9c7b-d0e0b5c5cd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372dce78-a461-4954-9960-7c952d3215c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "de41d5a8-0a69-45b3-a905-6712262c37ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55aaf02-21ca-4ccd-8bc3-9a0ee250fcd1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bef203-973a-4008-b75d-6c5f1b8ab4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d11b43-643b-4035-88d0-aab6c107e8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b984f6-0645-45c5-9156-e85f70e4fea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e94e3bac-508a-4b6e-8cc2-ce2cda844bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1392174-7175-4306-84c3-6306e9b3ed79",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478bacc9-2f25-4502-bfa4-76de3a7c0ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6979e17-5397-466e-8956-a83779683fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71c973e-7334-4bcd-ad75-6a764cdf26a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa501e4a-9ffc-4013-8029-4e18afdbd2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e962a45a-8af4-4671-ab85-0fb2ec4da654",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766c7af0-0191-4d59-9b97-4640e58b0724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5794f5b1-6131-4d7d-8ebd-735753346541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7f15ff-cdc4-4c28-94e0-1d7f3d0013c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb819ef-9dd7-4bd0-a927-a7854458d4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2363d3c2-4863-4bd7-839c-4859f2cafeb3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364242b1-3cdc-4214-962a-826e07218d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66c1b2a-fa30-489f-89cf-75dbc35ce26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9c8a7e-5e47-441f-b15e-ec1a72292ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff18fdb-7980-4a3b-88c5-eb0ebfe603e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a259aed-f61c-4444-9904-c5237f31f16a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fbd5a3-b7b6-4b0d-ab52-d0cfd1b32e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8935ad61-819d-4a3e-90a4-f892d8b07736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9db636d-e2f3-4b82-92f0-21df586a3b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c16bbd0-7fe0-4ef1-b33c-bfd85f3b477d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98107db7-c9f5-4a88-aadd-1c8924b59a1f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add9dea0-c998-4ad2-934b-5be27dbf7ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8233bb-b5a7-4d51-8b0a-71d9af40b5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1976754f-e78e-4029-b025-7511a0fbd90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7dc3a5-f0b5-41b0-81c6-4011be5df13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b41b43-1d81-425d-b112-fc837e34bf31",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922b5022-1aa6-4548-a525-8d8bfb533752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94675e3-95f4-4ec3-82d2-b731ceb8091d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d91657-8de3-464b-9307-da0b6c461f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d663abd6-f68d-4cd9-a77d-0da5f8998056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3579ada0-2ac7-4903-a3f4-4c33376018eb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b27047-1fc8-4744-95ac-78a6c13c42cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5070d3c9-0d18-401a-b09a-c66b0e0b2a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae871f6d-d6e0-4c69-961b-9026a77fcf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6484060-cd82-48a7-8477-f090f2c891c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bd4f7d-d799-4dd6-81b2-b1bcb0898f10",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb01598-8825-46ee-b230-96c13875c7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c77d051-5af8-41a4-b7e4-3c69f48aaa31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8a19bf-edc4-4e7c-9574-34f58546b7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99de28e-9595-44c7-830d-9218d8136c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4541fd7f-39ad-4ffd-8e14-6444e716dc50",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ebbec5-d49a-4852-8c16-da3d3cd26740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e97a5b0-dd98-48ed-bae2-55cffcf2a844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f29694-9dcf-468c-b6d1-c10a7b5db716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2199868-525c-4510-8806-3ee846682bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48a159b-bd54-468b-8739-7642ee23da73",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61496738-63f4-4827-99a3-5ef2a1db297e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eac749e-e8e1-41b3-8b46-38df412f5a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d709c104-af62-4bd9-8595-9154ac1fedb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6182fb-01b0-4aa4-aa1a-c66d27efc285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63809f53-62c6-414b-b3fd-6484b82b91f4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b82963-4a3a-468e-963e-18b29d57a4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf8e4a4-c20e-49f5-a9f1-0a41f4b1a77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04502b91-b598-4d1b-8868-85334847290e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0cb94a-f675-4a39-ba06-3f2f0d6ee88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cb3e8d-56d1-4f34-abbe-83c13ca3e444",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb14051-7e2b-4367-9e50-facb98a0cb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209300ec-7731-40fb-992a-dd9fa4c01ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d7328f-61f3-4c8e-ab38-71012420a27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e893b9fb-7eca-413d-b5e0-cbab74e99238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ee0eee-e327-4d84-81ce-aaa75fbc595b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffea319-082a-4f6f-ac2d-384e9d49995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb34cbe2-ae3d-472f-806c-e0decec3d5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf9c267-f76c-4c15-8111-13258c05bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe359b67-cdf7-4f00-86b7-305a14a34ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a82d4bc-d93d-4617-bcb7-118c82ed6c98",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a219c89-e4a0-482c-9391-01a8a656ef8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da08308c-3a19-4723-8be2-eda1922d5b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91e24e0-0113-4eab-834b-d094cd78eff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8127f0ff-936c-4718-8306-b25f22c5f6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217796dd-a94d-4790-83c4-45acbccd1408",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7b604f-c65e-49f1-a702-16c832a2beff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b855bef5-09d6-46e9-8a1d-589d8eeb5a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70434931-e19f-4dff-87bc-1460e8e09e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbf68a1-0f92-4152-a86a-09c3047c22c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baca1561-f811-4e6e-af8b-4d8d8ca622d8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e759da8c-0e94-43cb-9296-7697b3f7e2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f424ec8b-37d9-4d9f-894d-1107466d6086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcba0af7-edfb-4783-9736-cf5fb129b0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6257c03c-a831-4229-a1dc-ebf812865839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658a8117-bf67-479e-87a7-68a9b42e900e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b44c83-47d4-4d8c-a995-ef01855e7361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986912cb-805f-4bc5-92db-58d38bfd2021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6230e7-ee3a-4119-a13d-9e56f50f90b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "863b233e-db79-4ef7-ae2f-30e2e69f9c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7654c38e-73df-4c5f-b0e5-1c058eb1fe5f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5006ef7-1469-41a6-b5e8-b5a1a4d819c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a3221f-a566-44f3-8dba-d04b013326c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b46e9e-1ce3-4bb4-89b9-3f6bc7c35110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98be9d7b-fd32-4f62-8cbf-65a09e8a79cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2accfff6-45a6-478a-81bd-f75e7a29dbd1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432c863c-ea0a-4a84-868a-3db9d97b7b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b125b5f6-10f3-46e7-a790-d607ed4a2252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa00cdb4-a9f9-49c5-bb17-f723a377c3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6128fbf8-3f54-42d1-860a-66c6f8e972ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e65749-c361-47a3-b282-80ccd4b9f74f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f1a7d5-7534-4bc5-9def-d554b9087541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d9e982-104c-4a52-b3d0-8a8af7683a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6343bdfd-bdfc-4486-8ab1-9a23b16dbfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "888ea063-7e05-4aa2-a5df-c6b33be0d88f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c26cf98e-d89b-4464-b235-43566b126858",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca4b4ed3-0a20-40e8-a84f-2bd813a8eeac",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9ee55b-db85-4172-b441-5bd51102e007",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "42e711c1-cc9f-4572-8ee1-d4a2bbc2151f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be2b84f-547f-41a8-bc38-cb85fa2a7baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7bc63b2-21f5-4b74-a08c-619b7614ad58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3218de40-e709-4471-9967-3d6693ca3e0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9cf1358-d587-4ffa-a276-74c5bad1177c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2535926f-d6af-42ef-8986-5c885f81ab75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72f555be-47b2-4289-a269-05b405ddd62e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "452d8dff-7080-4cea-818b-a2bf470eb713",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a42ebd62-88ce-4629-ae66-e3a23dab0edd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9aecedc5-e31d-45fc-8a58-fe56274ad68f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7248853-7e81-4327-b1b5-d8d685148207"
            }
          }
        ]
      },
      {
        "id": "d41e7bfe-3037-4e66-95fc-5204eb9e47ff",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a8900e85-f654-4813-be6b-786388b438b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a06ccc08-90db-48dd-baf1-41c56bb1f49f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e213e529-26b9-406b-a11a-06e3d9694a8b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb311aa-2bcb-4656-988c-062cea7b7c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39443496-eb1a-4213-aaf3-d9eba16060fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3935193-c86a-41d5-9bd4-9998b5e93443",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044f02f5-50bb-4b34-bb88-d0ef6fca794c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0e03e0-0a28-499c-8fe1-8e7dabfd2b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bc510a-f2ec-4db0-873d-9f53a50d13d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69abdaaf-faae-4ace-a1b8-faf349db7185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da152c51-59b3-4d0b-9571-91bc2fba2fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d50397-178e-4589-be99-e1d36f3ada16",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f032b9fc-afb5-4276-84d2-d212c90d4de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4de1555-752e-478c-93d8-ac70586c91b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1abead-a090-4fe4-b180-80a0db4b892a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d62d838-040c-46b6-85e4-0104eaf98eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944691c3-5011-4c27-a0aa-fc4d15c521af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321730b5-7bee-40cc-bc7b-dfbc75806f53",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b833d0-5bc2-44d5-9327-a92e22ce6e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5eec329-5a3d-4122-99fd-defb489f8e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe76c7dc-501f-4188-ae91-3c9048e71c80",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8e2370-2032-4d80-b5e8-b0534340c6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26f7d8d-8c1c-4c0b-9732-c9cfe4fa4533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf79e1b3-4f44-41d4-a8ee-a01cb5b7d6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76956cdd-1ee0-4fec-943a-b8f20b5b86f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1951f756-64af-4174-b884-6574c4adda8b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68921e4-7d68-4409-91b3-0945a87331ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f65e8c41-aa6c-407a-82fc-4220b5e41c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a022f6-15a1-4bc1-90db-c1ae849d172d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3f60f5-10aa-4c6c-a280-441eace8ccc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84cd2eb-c0c9-497b-81d8-be403cfab99c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4198cea7-9aab-4541-8a63-f1e342fcb4a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17816a2b-c36a-4d75-955b-4c71ec2e40e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffeb46b8-8c64-43bb-a704-595bb5454dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff4194b-f741-4f03-9c0c-c70195ab5937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6505d94f-8fc5-4a2b-bc12-ad73f135f38c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d0cba0-e490-42de-a051-1e376269652c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ca541d-41e3-4e2e-bd1a-ee864da51e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d79c85-0400-470f-8c07-9dd0a86ed8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dd175b-a167-4b32-b76a-c8cbb3b00770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a594c694-7d19-49d4-865b-40ec51ca2d9f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4279560d-1851-42cd-ab2a-d5deb6883d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7490709b-a012-4c5a-b385-c1d3ad74a8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d9a585-a406-4b26-818c-3eae2224a0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a47ec30-4f13-4ff4-885f-63a57e509dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aaa4cc3-6c23-444f-833d-0645b71d9854",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6632c8-de8f-4155-a0b7-4337809dc261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff914828-c2a9-4363-ae4b-22c7d361596b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7777632b-89e5-461d-951d-76f23968f200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624cb874-6d77-4995-af43-7f01bf84647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adbd1e0-1f96-4445-89c7-592dddfd5d81",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bbc603-e798-4840-ba31-a945111b5c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45eb8668-b10a-4df8-ad36-7eddd5769370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ddec15-3d12-4202-806d-bd2eaa564158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb81cf8f-96f6-49a5-805b-05116fc289a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024d9c74-04c9-48f5-afa7-639e0e83b7c2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2109ead-0317-4cdd-936f-b73c8f3c45f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ab2884-a49a-4e85-a68d-54aeffe43d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d9a4d4-6c9f-49be-b7ea-d40c13508ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa11fcc4-4c18-4dc7-89d6-ff92885aef46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27213902-3ff3-4198-b181-258deed6f343",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35be8c04-930a-43bd-9b65-6119ef28ccf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3cd5014-bdcf-4e9a-a095-cd5809b23e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0050b6-ed0f-43a6-b338-d59c4c415155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4dddb3-828e-4efb-9a32-f17be3ba291d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df038b3-e943-4adf-acb8-28516399e5f2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509ff39c-9846-460d-82e6-39f656b11030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d160b298-9761-4d52-b04f-f8087fada48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644f29e8-b13e-4c05-83d3-5eef3d5b9956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e7e412-a001-4f30-a009-77249fb863f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3b0f41-fb63-4cb7-adc0-c3c3d9c59a83",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5051205d-94e0-4dc9-a5ec-5e9ae170926f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ee7c47-c421-4c7f-ba85-fe587e0f5cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce8386a-adb2-425a-aa56-ce91027c705d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c2a375-f0ad-4f72-8887-835469ac97b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb2635d-6f26-4ddd-b851-871ddd7c7e6f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4ffcdd-de4d-47de-956b-10d350e0a7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5d60d1-966a-4cc3-a8ce-2d76663a47ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f08c869-fddd-4714-9429-702921d7d54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7094e65b-fb6b-44d5-a35f-e669faee03bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40784be4-26bf-4b27-9444-936455c2e8f2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b38182-afbd-49ff-9632-cd255f1e9464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd605c6-a33f-498f-aa80-0a709fc9a7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1562572b-18ac-4844-890c-52628afcc33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848fb3a4-4956-4b3d-8ac5-aec4321aa5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc83fe8-1353-4d9f-9eae-fa5ba20d9799",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6039dd57-d2c6-4752-8df5-25f05d9bdde0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff74f05-ebf7-4e5b-9341-68978170d2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2414d996-14a3-46e6-8347-098d3bd38c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9e183d-69fe-48dc-bd1d-54ae580654da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7592852b-383b-4028-ac35-5a306e72bf3e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69687067-9636-4dd4-aaf1-e6accdc586e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a617f2-7951-4a2b-b9d9-966835589c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff434a3-f4a6-41b7-80a9-f2ac581ecd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae02b87-ce75-4642-9e9c-d9189d763867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e831ec2c-0864-49ec-8e9e-f4f1b04b58ae",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbf272b-89b0-4c4b-a18f-f9ec8713a4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad3c9d1-76b9-48aa-a905-9fd7b6883377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68302938-d6b2-42bb-bd5d-e2988495ef4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b645d2-0476-434d-b90d-726efc243732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de8b0cd-c488-4c53-bab0-fd196c15d8f9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e334b6-665d-424d-8c3e-f3f722f45251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d671ab0-b78a-45f8-aa2d-c18db4449b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d14ad3e-8aa8-432f-beb6-047d04d8aff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e714a2-5d39-4dbb-92df-720e6cd319b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451d7854-67e4-44a4-81c6-75c31371466e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668f29ed-f3b3-4d97-aa62-4ddff3350cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64691a4b-32c5-48b7-bda2-d5ff59654300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87370bb1-603b-46e3-9d0f-50464492b4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bb1848-7c06-42b8-a663-a9c8739ef4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e023ab8e-929a-4d4d-a9f8-5116afbe8f5d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cb468e-6fa1-46c7-a1a6-8d0901575e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73524cdd-8d3a-4833-8a53-8f601a1b6576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fba76ff-352a-4a85-a839-0089c1d4ca37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05545aa6-4b43-4d4e-ab94-0ee2ed587c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30252bba-5940-4d8b-bf4e-b56be2bc88c6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8e94a8-dc61-4d35-9135-0e85e7067518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05c96197-8b45-40ea-bffa-96984def0dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24774f8-e99a-4f26-a5a5-5ad1432c1a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607fff5a-313b-4e70-bc25-a5a1d7019079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82085d2-d929-451b-ba75-30b39006088b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96051d88-a1cd-40b6-80ea-d142f563e0da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8520abc3-3e8b-4394-a7b7-d306d693574e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763271f1-aa98-4c92-9006-dc9114bfee50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7309317-5f29-4caf-a47c-2c030449068f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0f5a06-46e4-4d6b-be3e-21a448d9c51f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78580616-9021-4f22-a03c-44256c791d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20451eb-8acf-4aa1-8e3e-872bfdcb2aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5b51e9-75f3-43da-bb57-453d5651c398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ff6fc2-7f03-48aa-83ee-37b1b695c7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbde2166-68bc-4f6f-a04e-78bc5ad29263",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92189a44-9361-4d90-97fd-0311980a6aa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71317f69-81bc-4d82-a9e2-0d5b73a9bc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c850eaac-4f77-4296-9a25-2d6791d6e171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68235c3-02e4-4cdd-9c76-008bc2e70585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0d49f1-ed04-457e-b76d-a14efac00c3f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b719642c-6ed8-49a4-821b-8f5984da2b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954a22f0-15ed-48f6-a9ce-13ab73501bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e4e17c-907c-481a-82ed-a1558541592e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998154c2-fff7-463a-8174-f62e11d5493b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d84eee-f149-4c9c-b8f7-6f6fb79aceab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d2eb9c-d04e-4f74-9548-b9d77ebbd5b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6113d33d-ec4c-49cc-b8e7-3fcee8ca564a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa77bca-f866-4a58-979a-eb72a4334c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04e96f9-bdc8-4707-8576-14c0cb384ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607b8ed2-2b8a-4140-b5a3-88c16252ba95",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ec92a3-3c6b-4124-a8d9-a54f48d166bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29095fe0-6d3a-416b-8e7a-9df3574e85bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c944cb5-a433-42f5-adb3-02ebdf15bf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931cab66-3942-42c2-a1af-22f689893334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54154fa2-4309-4fde-80d7-81de072d89e9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a3fc81-3099-4bc2-a893-8546c93e0f02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac9871d3-f194-4472-a227-49e0924085e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60a29bb-ca38-409d-87e7-d7e27c182777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51a422e-50ac-4264-8b99-544b716d5463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d1f68e-72f9-461e-8bb2-23054b934481",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f5c80a-be3a-412d-8deb-7e283f4a76f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a65067-2eb8-4286-b416-0e66b5612188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea2866c-9d6a-4382-bb31-a8df300ba1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3145776-9aa0-492c-aa8b-70a11357434c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3488e6e-458d-41a6-bf04-d2bde5816b31",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911c1465-d83b-4c11-a76d-20f69d688296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc74446-888d-477f-a0b8-013cfcfeb4d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d9b7e5-2db3-463e-a4b9-9a307b902ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d32c579-680c-4e64-aec0-99894f740431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9392fb-77bb-4b57-a66c-3a3ddeaf9369",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd2993f-ea21-4a8f-ba0b-d7d719b9e876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11061960-eed0-4056-9536-c543424b4e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6230ea27-770f-4ec0-9151-ca1fb0b01e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c9f728-5acd-489c-9aaf-f7e3c2921b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162eb578-9e85-42f4-bb86-b9ab53f345d4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496affc9-1c59-4ab4-b1c6-deae8ff1d91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e1042c-de2a-46ee-b3ec-a9b94094de4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6d3105-7fdb-4ffe-b54b-4a49fc15565c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c5212b-a004-402b-98c2-52bd4fd0bfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc022268-d485-44ba-a9dc-0ba0bc630a55",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556d1ea6-885a-4d37-bcc0-c4eb4fa79ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9224fa-1ae5-4fdf-8130-9a18fef2314d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ba0164-bb01-4cc9-9263-3a3c73b6bd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a855d15-d099-4f49-926e-0d7733426fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a0fb7f-4f92-4d88-b498-60442ca97e98",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28073b0a-defe-42b4-993b-22388542d302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bb46a0-cf86-43a2-88f7-536ff534c54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d98ee7-7370-4b4a-b1a9-62c64e284799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74e7e9d-a400-492b-ae5b-d678ea87b689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38934fa-354e-4ae6-81af-32cc0782621c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f868521-8135-4290-b691-b9c40afbbd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50f7332-d24b-40c1-97cf-ae7a4c61503d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3a44a8-43dd-4017-aeb1-299812cc65a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f2a4c9-7675-48b3-ad89-21d4449e61d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d72f2e5-a6e7-4be9-aaf7-14ea07e753a3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd439d9-9de8-4283-a585-ea9daf46dd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097d3f3d-affa-417e-9569-82582e71a4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb1a35b-0f8a-4709-93b1-81a45f95e9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f58e79c-2f0d-4b0c-a709-c9a7bb327649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f46b00-27f3-410b-a0f8-cf74eda3093d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446d47ba-9e7d-48d2-bc21-8cb0cf8c689d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4d2c41-9b8b-4164-93d7-63472c9f6ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d455a4-040e-4f5c-b977-f39c4e1bbe2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdcb584-a6e1-49f9-a078-7f6a48f0bfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65761c41-32fa-475b-aaae-30ddcf9944ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1be048-91e1-4536-b7f2-952d3dfaef0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a9934f-dc0b-477c-ac4c-42a236ebe704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef87d6c7-15cc-4151-b856-da0e372d3e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887fd3fe-16c5-4689-98bd-163e7ed65f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed63cdd1-82e6-49df-98b8-482ef2cfd11f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae1c72e-d302-4266-bd45-baf68fe7056d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4100e7b8-94b0-4f64-a83b-922bf1d1811a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c158231-b4f4-497e-9bac-eabef0b8eca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cce218-b104-4676-a90f-fc895bafab46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f897f69-cec9-4d5e-a533-e0fada826367",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be28a82a-be7f-4062-aff4-32e06319e5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d49354c-554b-4a4f-b6d2-b214a02fbcf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a9951c-2df4-4443-a03a-3c6dc9214726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9406b05e-3f15-411b-869a-deb5a592b431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8648ebfb-b0df-43f0-bae1-c30e21a84096",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9b0f39-126d-43fb-a71f-073c7e724dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705950a2-b9ca-4dd1-905d-bc8ef2c6074d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1aab6aa-8683-4a03-94c7-7bb39bf8d683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053bcea1-2113-4828-8a2b-33451a1734ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b4a769-e248-4038-a6a9-2aa7ead8253e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b4912d-10a5-4114-bc98-79ffc68e9f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5700187a-0848-4429-a9b1-ee9f20eb7a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1d922c-e559-4220-b6bf-7b0214b0a429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1609843d-4d91-4ad3-8b78-0168cb1af089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e62d70-f0a1-4127-8bbf-4473bcdc411f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825d4b05-baee-4370-80dc-aa19de33215b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c76a35-08f6-4420-8038-29c0ba6b91c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11542a31-c422-4a9d-9773-dc4dd1c6b3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57817b4b-b906-4fe7-8eda-22045bccd6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6275657-b143-4898-a7a5-978be34cfffa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d87f98-8fd7-4db9-a1a9-8b8a831c87aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d435b9-6dd2-4514-b0b5-b5b4ca09b961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040b66cc-b53f-4f6a-8579-b604d7aba40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b118a1-d909-447d-a230-c62f6fa0bdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30398bb3-6c4a-42ad-acaf-180a9c82445d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19112bfc-fa43-4710-802c-2c9dd6d0a93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4824ccd9-6812-4bd4-adc2-313eba58a86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a54d870-21b8-426f-9931-c1b116da2b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c18e95-8563-4b7e-8fa7-37f8211d5cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601056e2-2e9a-4534-9963-a22cef3302fe",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9b2789-efff-4f5a-899c-c59d8d2424f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2858c8-708a-4981-bfe7-b9c48cb5611c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22b6aee-2705-483e-915f-0472a90c1f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65bcc85-e06f-4610-97c2-cbc7974a0630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97056b76-5877-47f4-9cea-e3d199bef22a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cc2377-80b4-40bf-abb4-634b170878dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f488f56-3508-4313-9504-daffb45713ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5ff5b3-4c7e-47b8-8530-836263969a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6b6601-0d2f-4240-8037-ff68f800338b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ccacb6-3956-46d9-8d32-084f8c62a2fd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a0c78c-c1f5-49f0-9239-bd3b33a8b990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecde5510-7aff-4b80-8bd3-4b15b072a58e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7ffa3c-221d-4f02-9623-28623bfd7d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6109ba59-32ab-42d3-ad8b-4e891e2dbe09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e880762-4a61-4a66-9de9-f9efd970150b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0344bf4-c4f2-4c3a-a4ee-a93aad685d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10b9534-a211-4918-8bac-cc5ac9e4c9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62eca36f-9e09-48e8-b73c-74f5b633bc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1cb01b-bf73-452b-872e-0b12f92569ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4509e1b-3723-485c-ab2c-d90e46f81b0a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6eb6e1-09cf-4d00-9838-25dc19b7c0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd13e61-da7a-478a-bd75-7f854d407276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16222d8f-3876-4b09-9dbe-5c382f6c915b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e08ee4-de73-4b81-82c8-a7921f9abf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b0d6ff-bc24-4fe4-9977-7a34dfa0fed8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318b5941-270c-485b-8e49-db274f438803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2efc5f2-8265-4fe1-83eb-79aa6071d648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d5de27-5ab0-4f6f-811b-5874867ce9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659bf5c1-557a-45f2-8fea-96a971f67655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4575b8-7ed5-403a-a9f6-d997af2003d7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be57b896-b802-4977-a266-1d95364f9eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebc01b2-57e2-4e0a-9936-dd0bb6b7ce2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3f69c8-7b1e-48de-96bf-6225db79be06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930e5564-bffe-4287-8eb2-7a2952914f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c55b26-b65a-4870-975f-a8d0681fbce3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5c54e1-3944-4434-8423-3f9466b96568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c488a42-d4f1-4170-b505-d4ff8f3ad044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7013f92d-0b06-417c-a83d-8883e1cb858d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8154b7-deab-41ff-bf3a-7a595ae80341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c11494b-e86d-4eae-8d47-7a9727e87070",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db67ef7e-9917-413e-894c-4b07de9dde03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4273a5-3871-4435-a9c7-a2028796d92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe1beeb-8f6b-4305-92b4-5ebc63b07f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e562b0e7-1b19-4e85-aa39-5bd9e47fa99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722a2f44-3a9c-46ed-ba13-3495def5cbbf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19f5516-585b-4a3b-b013-883035f42fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec2edd6-6ee1-4e05-8b36-1473b4a2f40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58f446b-0423-4d83-beb6-a131689ddc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9ba956-ad91-4cf3-afd5-2d90158765da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ce7851-7c48-496b-9f3e-bee948381913",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71594d39-1fa6-4796-a6f2-71339360cfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ced0e95-d39b-4c65-bc71-c26884e48b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4668f487-dd62-480b-9c13-b9118bdbe6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a253eb19-b490-4f94-89f3-f82b831e9d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41af50d-c471-4d24-9185-9ae224ce29da",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ad9395-8593-43cf-bbb6-435c9029429c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb02e70-ff1c-4f68-9490-50c74cdc9b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95525700-6f30-4a46-8a85-2407ce685b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9422e07b-da74-4bab-a2f8-09217f75b88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b728e5-4b01-4c3b-9766-65c5c07cbe68",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ff72a7-8bcc-49b0-907f-92f66a7a7ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4947bda2-7d1e-4db7-9ae5-ece35f2b6e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d4394d-11bb-4796-b0ed-2418537c96e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e1fa13-0f6f-46ff-acf0-cfbcafd75c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff403e69-e927-4591-8df8-aee940327d0f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a121885e-0f0b-404b-95a9-758b4ad224bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd062134-bd81-453a-8499-06a680628792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58df8da3-a147-4fa9-919e-9c5dab18a9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ed422d-2860-492c-82bc-17e943710ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daf3604-ede7-43a4-86c3-a77676f34aa6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d64dc5-2ed6-473c-b8eb-ae010febb4d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03691e49-f12a-44ce-a5bf-7589d73fb934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467e16fb-abbd-4f23-867f-d6a542fbe362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607a5b39-bb96-4849-9d3a-d3d83aa46497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d9ec07-57e1-4355-8f2c-760c614217d9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198ea04a-5c5b-4300-b46d-f25685290a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6254fa-6f1b-43dd-a61e-ab3b75ce37c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47c9cb3-d8b8-40cb-9328-dfc88a33e253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f69baf-3a5d-4297-b25e-7f506e626c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf91bbd-e8dd-43e4-a7ec-df253e64deb4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b583b926-bc6a-41e9-b360-122a969e1498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43946a15-0aba-4236-985d-dcac0460952d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a00385-b980-4a67-8de1-d7ad128b5f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab64dd6-7109-4800-a2a8-6315e0f7b4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1dd301-3765-47c0-a647-b1632884426b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba21087-7d0d-4eb0-b73e-f151d1477019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc78216-d011-4b64-859f-a00fd82a517c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90a3e52-841e-4c52-ac23-a4f80c89ffbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ec534a-b161-4cde-beb2-d3b8cdc80535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9278466-7cb4-4858-93ea-8438cb7c8f6d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee62061-3422-44bc-b7db-3da2b3d1931a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6bfd3eb-da0b-42ec-9eaa-3eab5d2ad7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed6fa41-8131-4071-b5db-048dba25eb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2a9aa9-4c4a-492d-add9-b187eae4566c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae86d38-d5b6-4a90-b1c8-8674a3126185",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2be72f7-d82d-401f-868e-89c6faf9b729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94b5387a-77c4-4c63-b9e0-1a5ea2d2732b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75175558-3109-48c0-8847-8079bd032eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14645577-ac49-411b-b94b-78b4ce81bdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0580d8fd-a4bd-4186-b3cf-99a1d346a376",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a4d8a1-f5bd-45f6-b578-0518a4b19889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f53f1119-dda9-4fa0-8aff-be1588293610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d971ad64-bd1d-47ce-b6b5-a9b110094fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3a4d5b-e3b5-4c7e-8703-98619626507c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aada503-723f-4a8d-bb61-6d6e6f166400",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8600b37-9e70-48f8-977b-4ac36aa9e559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc35379-c566-4a4d-a863-1d124944b452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d96f85-f447-4fc3-805d-5c45bc8e1257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ebb9ae-cd66-4b0d-8f31-a5926a5ebbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f200c9e7-4e8a-4dc2-a4fb-6205448df03c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65405ec-bb01-4c89-a094-beb53b172731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c116ebde-e669-44ab-a684-afa99b7eaf4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a755c2-b387-4a95-8b41-ec140485e18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436ee9fe-5404-4d89-9b60-5ebd82f2e588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72667a81-0952-473a-b038-9f6d8b6b3710",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf0ae38-64c3-4534-8a71-ffcca52da0f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f72999-4c5e-421a-93c3-1c871bbc244a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaaee8a-0c28-42d8-a879-c5f73a82591d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cbcd59-5c19-4ff4-a88f-b94c6e2dfd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0dcea57-7357-45aa-b330-bc4b2af3d8a2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a3a12c-c35b-40ca-82bd-ff69d72deb20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "230ca450-b469-47ba-a973-5c7c5601af8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75815c45-1d06-480f-9461-387812497721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ef9dd0-85ea-4567-93f6-eeb9e525cc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43502573-dd61-4187-8815-a4cf9fe988cc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e618956e-5e66-41a5-addd-1d1b4352b2f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22642b96-2fb4-4072-b2cc-6e1ac7b594b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dcfddf-351b-44e9-8a8a-cd0879ad3c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f7a4e6-a04d-41fa-b25c-176d08adbec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb99daca-d392-4859-8b11-8dbb247ee188",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b94019-6450-4897-8761-ce4e405fca88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f6a075-8a69-4084-ab59-74b30e3c2631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4532267e-8488-4283-b8a6-ce40338e8c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29086732-dfea-47ea-ba07-1b59cd548444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635a36db-10d0-4410-8d52-144900924452",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3703234b-37be-44ab-a532-c1c508ff262f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "917ad0f3-ec19-4e6e-8f2a-d87f4c9c4fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2aa074-a31f-4b44-ae47-700c9234ec55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5557c590-5837-4862-8d78-459ce6c7bb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b2b4ac-57bb-480e-9cad-4dba454215ca",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edf42de-5620-4916-82f9-4b0bdb83c2b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7b99551-93b4-4b9a-a4a2-782398b0640e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6c4d29-202d-494d-9785-7ffb38db9724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7aacc2c-2f3a-4092-9922-7ab392290920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6656146-f1d1-4a50-ad5f-cce6e92cad95",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4299edf0-e373-465a-bea7-5b0ab436104b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ecdd36-1cce-44ed-8a12-83c9a92452c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b556591-2850-4849-ba56-f49c68b9206d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5055d82-4cdf-46a4-bbd4-d13636db4752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af33961-a449-438a-b301-60b6e297c8a1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ca8010-77b5-4f3b-aedb-e59195b714d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d280658-00df-4e71-aeb9-9c768d555768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d3c74b-6d80-4b6f-9602-74981e1a1729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5f6666-5b40-4754-b28d-15553c4502fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5bd09f-89de-4470-addb-5deda7826c57",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9272b89d-1949-4c38-8572-540d9e552fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10dd39d6-9768-4210-91aa-237d4a889bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a54423-0d54-4507-bf06-7182ac70341a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36ae9a0-d4a3-4156-ab3d-aa296a1da092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df83e54-23d7-4677-acef-16006fb8ec4b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43512d88-9627-4ba1-8e54-f5ee3a08aa56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9709581-f6d5-40fd-89d0-7988b074092a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb9222b-a48e-47d6-98ed-d855b6f6b1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6975fc82-dd70-4d07-89d7-9f3e0b122725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cdf057-76ce-404e-8e41-c4b88d52d10c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5effaa-5fa2-4eff-85a1-31019a7fae79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be66c387-0be7-46fa-86a2-52e91dd84f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7393182d-4cfe-4412-b6b2-76de2a790a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978c41fe-3bac-41a4-9d8c-46e646b9cf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f81bdcc-084d-4691-9a9f-16ca62755cc2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2671c1-3c59-44a1-9205-c5afbca13f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3199d115-c370-42b5-96af-f555c76d6855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ef4c9c-3940-4964-9f60-29c4da7995d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030d4161-710e-44f7-9b8b-0a22391a741f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3a8418-9d2e-4fe1-b8c1-26ac4d36c728",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e417d7ec-3930-48fb-839f-f8707060882b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d48cf213-d2c8-4658-a643-69d7d83a3af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd44d8e-d240-412f-965c-40715e930d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d980b1d-aa77-4e78-a60f-9eb374d7a95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6286da42-67e0-457b-b91a-0c746713407a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac30c55-57bf-472e-ad35-bc13048e00d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f706647-0cbe-4681-9050-5145fe12af3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b72267-1c43-42a1-bb4a-099578d82293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7e2a67-a380-4532-ac95-c85daa728356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb9f403-a386-4543-9d00-6a7ffd1817e5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa60454e-fead-40dd-8c04-9b34f62b178a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfe1ecbd-b713-4b42-bcfc-bef6b2a74c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144cdfb2-7463-458e-a0b3-dba01ce27d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1f78a8-ab71-4698-bc18-806a5cd71f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac05109-02dd-45a7-b618-f9091104aeb6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39a5f28-2e09-4c05-a569-97c391e5661f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f56180ee-2205-47ef-b08b-bd18217afe30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59894acd-d979-4116-969a-7e2354325beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36180456-4a03-4260-9088-75321edad51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762a66c3-e36f-4914-a890-1cf260e6b869",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a929bbe1-f317-4961-91cc-6a215534c110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eabfd19-dba2-44d4-b189-8ad75c02f7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de566dff-daeb-413e-9787-5a0b3333f15f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5420f0-d438-4f67-a36f-72c0b59c265f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dd7e2b-92f7-453f-b38d-9a5a3de40de5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20067f4-b12e-4c61-b8d4-ca20d2d0bdc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cfb3b56-8909-4886-b92d-b465bfc7900e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27416838-37e1-4b3b-8d2d-159d4e611eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c5c1fc-d3f1-41c4-9782-93eaf57f6a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a461d8-4ea3-4bf8-96c4-87d6e724979f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c3df70-1d7b-41bf-b7bf-66e205166a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93103376-bedb-402b-adec-b6d0dbcc5f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3be9cc1-dba8-4958-8ab1-6210fa3cbe16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfca4a6c-0797-4f4b-98f2-c9b4efa0764c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773e7908-5ddc-4459-bada-4aad66daa4c9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa116474-6757-412f-a6e5-4b101b8acfe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c93917-89e9-4217-b4d7-d1610bb30471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3b077c-f48e-4f38-8def-f765f749409a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93d7d6b-25b4-4b98-a14b-90f7b53df729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bcbabf-0198-497e-8e9c-aa26327a0fca",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06a12f5-a4d7-4f69-8c75-f23977283ff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541efae8-1aed-40d0-a54d-546f433df80a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26010b55-2d9f-4d88-a5e1-7a1492ed1ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7400b2-3437-488b-9044-5fe33daf089d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66248630-d2d7-4ff8-b2f1-d614774d73d5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4d31fe-d7fc-4459-98ba-59586a6da001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b2a8cc-d062-4a2b-b3fb-25c6c6d43a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6bd56c-2807-4c44-981b-ad68b2d698bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14f8095-6654-400f-ad37-63a80f9708d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3957f937-0d6e-443e-bdb7-afb217a1a6ea",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da55ea6-a35b-4ddb-9047-ad48e39e56da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39ca4e2f-f566-401c-a383-a4f47d0f6405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442a97c8-4c50-46bf-9708-050d9a2a6111",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48f213a-32f8-46bf-9ee0-cb9c59842684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60abee4a-b715-4dd5-93d5-15c14f75097e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34c893c-ab8a-4452-b8d9-a55645a6c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66083d44-5e92-4bcc-ad80-792d0e7daab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c07781f-9751-4fdf-80bb-96902528b8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b7be9a-304f-4a84-a618-0e4c9611840b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e109e2c3-6918-46e1-9176-3d565577054b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82496989-306a-4512-8651-6059b13be4d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2196de3-07c3-4160-9699-1e069695b14f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e22df1ab-2ff3-4d9d-b7d9-616251f634ef"
                    }
                  }
                ]
              },
              {
                "id": "ca58fb1e-df73-4c8f-9cdc-96950d96d6b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2ab7206-35dc-46c5-8ac6-3daeb889fd06",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426f06a5-965c-4cae-9852-01302a539a4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e5ddbfc4-9db7-43a6-a955-4307afb25877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a00dde-f1fc-47e0-9533-c81d413cf46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79552665-f7c4-44a5-86d5-a1a0761d02db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08f6d324-ca91-4071-b91a-832da7b35690",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52b6fc6b-c9df-4a64-a0fc-adfa4f411b1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "742b90bb-0fc0-4efc-b1e7-4c2c2cecf082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32fc1efa-caf5-4951-ada0-c7a889528985"
                    }
                  }
                ]
              },
              {
                "id": "42ef016c-687d-495d-a108-cf1f5d6abc69",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "54214fed-c57a-4311-88ca-5a7f494ce901",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b217587-f367-4cb9-85a4-2f184008e2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2f243a3e-11ea-4ff3-a17d-e5c437f64ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b7c250-a6b0-4abc-9d9b-dc8166967143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8feb887-6ed2-4bb0-a2f3-409ae0f2cfb2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5577da00-16c4-4653-b2f4-e192aeab7340",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd774bbe-1c43-4fa7-8749-ecd5d7a566e6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37a0b632-b343-45fb-9bc8-c1e644b3b203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5f4d0c04-c960-4604-93d5-d7a987a6098e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "489a2cc1-11e3-4e9e-b0ce-693071f0f8b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bba1b30-88b4-489a-9c2a-03c1af566007"
                    }
                  }
                ]
              },
              {
                "id": "4975bb0c-65a3-49a2-acf1-b07d7c873df3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41f84f45-a180-4794-af40-02cd43aa656c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "745603da-55bb-4854-91ad-9174630b21e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df126ff6-9d4d-4375-8688-acc79e9ecfa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "662c3224-a6ca-4825-a2cb-a5699f089c1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aff62208-c38b-4321-8804-73861fc3799c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "98def32c-e121-45ad-a93f-f5315e34a7f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75c64797-0813-4109-9d7a-893f6da867b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66c421be-dd12-41cc-97b3-34fb499ccd7a"
            }
          }
        ]
      },
      {
        "id": "b9ea634e-4fa0-47a3-b2f5-5fb6b2034ae9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0ad3af34-4685-43d5-b23f-20146ef43caf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5788aeb9-c056-4bb4-a4b2-e097a48a7203",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "665893f0-42fd-495c-8c81-9addd9ca2615",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e71c22-14f0-400a-b297-ddee5ab2636a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7c27d986-d5f3-4752-88ef-f07b7039acf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e312f2-c0d5-467c-8121-4d741cb9d352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32aca2d8-9d82-4844-a56d-951ebccb30e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c8d46bd-3b59-42c6-b76a-aa2b3fd27008",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7c0dab1-2eca-441f-baa5-2f8a182c5860"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13ab720b-ab87-454c-83b6-5e2a75f0dc48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f28db72d-b331-4538-a5df-bad50b62ab3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0aecd05-232a-443e-af4e-55d95839eace",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b4211e8b-aed5-4ad8-b401-70ab9611a531"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5a7086d-caef-4452-b354-75e52bfe745e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d753404d-6ea3-43e3-85e3-bb05ca3c6e1e"
            }
          }
        ]
      },
      {
        "id": "691218e9-e723-481d-809e-78a0a4736a4e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b0cc2e4b-b2b3-4b70-8917-7e22127d62f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d05017f1-8b22-4d28-975b-87e4f0b4d4fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90fd6091-11a1-4e16-b623-d7d3d795a289",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c53a6d-cba1-44cc-89f1-68afe59f7957",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3c78725-5dc3-48b4-a7d7-3a005ca9c326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b0c091-c028-4b85-9723-05f3200f3c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cafb7d6f-4728-4fa3-a080-550a993714aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5887b61b-c3b3-45a6-acec-65173db130b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc374a0b-f976-406f-a256-03f46e2458e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a7715c6-a6f2-4a32-8a05-f7bd43e1d48c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d0513ef-68a9-4bd9-909f-6c125ae3f879"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "696c15e9-a498-4263-8ab0-0d3b86451e48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01a0d49e-f62e-40f3-b629-c00381fce0d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "078df079-2f22-4ac1-ac28-46535cd94289",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84868be7-e76d-4754-9e85-91a81c392e23"
            }
          }
        ]
      },
      {
        "id": "6d90f8e2-871f-45cc-bd1d-9ba851e503a6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fc10a2ff-076d-4718-97b7-9c720aecf953",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3da5107a-801c-4eca-ac65-8d63a083bcd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88579b22-c022-4b89-a42d-d27499ce9fab",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdd13e5-a920-4f93-abca-adaf5ba2da54",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aac07e47-2c90-493e-8c4b-37619b894269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e657b83b-920d-4b61-9cd5-e7db928312ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d44d793b-ffb6-4372-b8d6-8215ad027da3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b0e324b-1445-40d9-9657-79b83f471cec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e760414a-3451-4e17-b81f-293119db39b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5bb61e1-aa9b-46af-9ce4-7259e7e2bc7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7183c453-5ffb-42d9-8876-4a2593f724cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "649cf0ce-215f-41cb-86b4-0994dbfb1e1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "079c455e-7522-4a8c-9589-858690cea3f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a1b20f9-ec8c-4f1c-a394-41d0741444b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "192bc6f1-3279-4552-aa85-99ae2f99f38f"
            }
          }
        ]
      },
      {
        "id": "0cbe6ff1-68d8-40cb-a911-25e70faa196c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e82a36af-5879-4732-a1a8-2362457d9508",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bf0fc4e-75c6-4133-ba90-353935368eb2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c6f20253-6187-4b31-8ec4-a1d1689f5974",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec3dfaf1-f23c-44c0-8c98-ddf4a76df2a0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aef059be-f3ff-4c86-b79b-397306c20cc2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 94.42063492063485,
      "responseMin": 3,
      "responseMax": 11766,
      "responseSd": 787.8262070977797,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726015368183,
      "completed": 1726015400465
    },
    "executions": [
      {
        "id": "2f2a608a-6ea4-432b-897b-668955b2ffba",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a8ae7115-f535-4cba-a53d-8fa51ee8537d",
          "httpRequestId": "d0d84831-d811-4a1b-8d24-8167866365b3"
        },
        "item": {
          "id": "2f2a608a-6ea4-432b-897b-668955b2ffba",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4fb94d6c-f1fb-43e2-8c1b-b0e508dda8cc",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "ccb8e29e-9114-4d68-86b6-4cf2b1e88b5b",
        "cursor": {
          "ref": "afa0fb32-fa9a-4587-b271-748fbdc22204",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "835180ae-4318-43ec-8d52-b5e0166b67a8"
        },
        "item": {
          "id": "ccb8e29e-9114-4d68-86b6-4cf2b1e88b5b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "69ebc0e1-8afa-4152-bbc3-cb5b1a091fbc",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "27479234-cf25-4f20-a54b-3684a30807f2",
        "cursor": {
          "ref": "8b66bb0f-3947-4f80-99a1-8e8509fb6595",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7b0e37fe-67f8-4a38-8708-5467c8955464"
        },
        "item": {
          "id": "27479234-cf25-4f20-a54b-3684a30807f2",
          "name": "did_json"
        },
        "response": {
          "id": "f6bba333-2094-4236-8147-d7273b0702ee",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc0cb15-5ebb-49fe-8fac-2c62cdaf18c8",
        "cursor": {
          "ref": "978d6210-e0e7-46f0-865c-db298cfb8318",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "747c01f3-9235-4502-8838-da585c297e36"
        },
        "item": {
          "id": "ccc0cb15-5ebb-49fe-8fac-2c62cdaf18c8",
          "name": "did:invalid"
        },
        "response": {
          "id": "2d6b6fb6-8eb1-4f9c-9a60-20b6d81a488d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 442,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc0cb15-5ebb-49fe-8fac-2c62cdaf18c8",
        "cursor": {
          "ref": "978d6210-e0e7-46f0-865c-db298cfb8318",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "747c01f3-9235-4502-8838-da585c297e36"
        },
        "item": {
          "id": "ccc0cb15-5ebb-49fe-8fac-2c62cdaf18c8",
          "name": "did:invalid"
        },
        "response": {
          "id": "2d6b6fb6-8eb1-4f9c-9a60-20b6d81a488d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 442,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c115c0-d320-4280-91c9-2d6ed9e7b474",
        "cursor": {
          "ref": "6717eff7-d273-49d5-a262-4e514a0e502f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b2583334-516a-45eb-b126-8aa441472c33"
        },
        "item": {
          "id": "08c115c0-d320-4280-91c9-2d6ed9e7b474",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "97876139-6738-4a71-a82e-d33737f6b1ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc7c9cd-89f0-44ad-8259-13698a422574",
        "cursor": {
          "ref": "11431a14-a4c3-4bba-a46e-569d4e99c93e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "188737ee-48b1-43c4-987a-d2dcdfaa3de0"
        },
        "item": {
          "id": "6dc7c9cd-89f0-44ad-8259-13698a422574",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ec388e1a-a134-4147-a48b-286f75775da7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a78666-2fcd-4150-9bdd-dfb6a5f7a9e2",
        "cursor": {
          "ref": "dd69effb-21ea-4d63-91b1-e821a8ee2212",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "680c1a3c-dfcd-4130-b1cb-be2515a8a2e3"
        },
        "item": {
          "id": "04a78666-2fcd-4150-9bdd-dfb6a5f7a9e2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2e195ae4-62ae-4f85-8505-297943bdfd63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3522c64-cb74-4f36-ac5e-25ee4eacb3a8",
        "cursor": {
          "ref": "a71b83e1-96dc-46a9-9c65-47428c7d497d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "891471a7-662d-4d36-b279-e46f5040e0fa"
        },
        "item": {
          "id": "d3522c64-cb74-4f36-ac5e-25ee4eacb3a8",
          "name": "identifiers"
        },
        "response": {
          "id": "f42c375e-8485-4053-8eb1-999e410d574c",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9972b1-18c9-4fa6-b6db-4d66c4077516",
        "cursor": {
          "ref": "96e3b31e-2b36-4939-8e0c-d947ca463f9a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4002b956-ff7a-4dbb-8ccf-e2f5374d715e"
        },
        "item": {
          "id": "fb9972b1-18c9-4fa6-b6db-4d66c4077516",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a0f9e1b1-8885-47f2-8a5c-db7bc92534f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94abb510-6256-48fd-871f-5c110d58e689",
        "cursor": {
          "ref": "8fddfe85-7c9d-4b06-afb2-f6362d2706b2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0b4525f7-0cb3-4ccd-ace4-04bd110abd80"
        },
        "item": {
          "id": "94abb510-6256-48fd-871f-5c110d58e689",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9bad14fd-f212-4de3-a0ab-2c0ed2c8b96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfee8791-2837-4501-ba22-5026ee5a401b",
        "cursor": {
          "ref": "65678ec6-cc78-450d-bc89-756fab0d504c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "99f757ae-1e03-49fa-87c5-5d0d03157e05"
        },
        "item": {
          "id": "bfee8791-2837-4501-ba22-5026ee5a401b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "538e4009-085d-4909-826f-61346f2be0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1724979c-0714-4eef-872e-b2ad03f8a166",
        "cursor": {
          "ref": "c3a5543b-f919-4ca4-b975-5a865e16d874",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "df7a7ee6-4230-4c41-9459-ab62ab1065e0"
        },
        "item": {
          "id": "1724979c-0714-4eef-872e-b2ad03f8a166",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7f1d0668-40bd-4983-a46e-5e63377c145f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b2fcd0-253a-4608-b0db-f2a74c464f8b",
        "cursor": {
          "ref": "ff718b4a-4a2a-4af5-93dc-65628773bc5b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "81bb5e4f-dcb2-4dfa-b298-ff777aa41075"
        },
        "item": {
          "id": "a1b2fcd0-253a-4608-b0db-f2a74c464f8b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e6417f2c-3eef-4b8c-8027-931345e566c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414d67ed-a892-4d1b-bcb7-4724b280a080",
        "cursor": {
          "ref": "20d14824-6f22-4c33-964f-1e67e8994280",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "30170591-0733-4da1-872d-3bcfeb2811b5"
        },
        "item": {
          "id": "414d67ed-a892-4d1b-bcb7-4724b280a080",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d3caca37-1df9-4285-b81b-045b72fee673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06f8d0c-a5fd-4067-9250-4e308c4c6e1f",
        "cursor": {
          "ref": "d66d332b-5c5b-4872-8482-7f77df842ad0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "10bf47e6-93ea-4b0b-9809-c11e3db117b2"
        },
        "item": {
          "id": "a06f8d0c-a5fd-4067-9250-4e308c4c6e1f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "21c05e3b-81f2-495b-8706-3c17e4a8221b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e98354-a493-43a6-9f53-76541727f79d",
        "cursor": {
          "ref": "4b550202-f9f3-47be-b1d5-60df631e3661",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "50b9afca-f48d-4f4c-a464-298b11c3a028"
        },
        "item": {
          "id": "a0e98354-a493-43a6-9f53-76541727f79d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dd14dece-3ec8-4e3a-9b79-38b682dac40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571ca1c5-3196-4ca5-b1e8-513078a7e107",
        "cursor": {
          "ref": "c331e945-f52f-4d27-b426-7396ddd74a00",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "46513b76-eb9b-49fd-888e-bb4fa6058c94"
        },
        "item": {
          "id": "571ca1c5-3196-4ca5-b1e8-513078a7e107",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e5317f66-8513-4be9-84ec-55613838717d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1725174-2899-486b-b30a-f9525397083f",
        "cursor": {
          "ref": "fb411f25-ac59-4169-b631-e757171a5e66",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "027121fd-6b92-4631-96f5-6ad4a80a1efa"
        },
        "item": {
          "id": "f1725174-2899-486b-b30a-f9525397083f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "407f0cbb-e5e5-47fc-8909-ddd417e114a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39498ae-d47e-48fd-aad3-5556aa3a8cb8",
        "cursor": {
          "ref": "37b4eb59-81e3-4a48-bc34-d832dcf88093",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1acde7cb-1269-4fa8-9a05-39c5773c7aaa"
        },
        "item": {
          "id": "c39498ae-d47e-48fd-aad3-5556aa3a8cb8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1894e96a-ad12-4ea5-936b-594a876b6b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d642681-392b-4ff6-8e1f-11cbd2c33811",
        "cursor": {
          "ref": "033fd085-8049-4334-925b-bc12b5945fdb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e7966758-61ff-4da1-9b5a-e566adacb78d"
        },
        "item": {
          "id": "4d642681-392b-4ff6-8e1f-11cbd2c33811",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d4939c8b-e8fc-43af-a6e6-09d616df3c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98954a2-91d6-4a98-8190-264d261c63a7",
        "cursor": {
          "ref": "d5143a48-fd4d-4061-b5fa-d41fd2efcb49",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f8cd630f-e244-44e4-a704-dc982bd28cbb"
        },
        "item": {
          "id": "b98954a2-91d6-4a98-8190-264d261c63a7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dbd55959-93e7-4732-ba36-d4c319043f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd24bb0-2d39-4939-aab2-de338e1c28d5",
        "cursor": {
          "ref": "c645beec-4fe6-4342-a75e-908b7289757c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e1f81f94-66f5-4b3b-a932-f619053147e6"
        },
        "item": {
          "id": "3fd24bb0-2d39-4939-aab2-de338e1c28d5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "af8ebd0e-d49f-403e-a275-7a9bbe7a69de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9bd050-7107-4e34-8942-f3c71df585cd",
        "cursor": {
          "ref": "0c36b933-055e-4742-9bb2-6e989ac33235",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "23c849e9-d0a9-43e5-ad42-247d0577dded"
        },
        "item": {
          "id": "3f9bd050-7107-4e34-8942-f3c71df585cd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "25a4f80e-c63d-4ca0-9aaf-8601776cbe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9565d7af-2414-4aed-807f-bd36f765aea2",
        "cursor": {
          "ref": "e61dbd16-9a9b-45ea-8958-0ef1f8338248",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "757dc757-948a-4000-a05e-74fe8561a407"
        },
        "item": {
          "id": "9565d7af-2414-4aed-807f-bd36f765aea2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2a6f93cc-713d-4f88-81eb-eead3fdc652a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ab9f8c-1131-4920-89ea-0680910278d0",
        "cursor": {
          "ref": "9d57dc7b-12c0-4ea8-85a0-2444c99517bc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5ee66480-b3b0-4216-a4a8-cab93d07efec"
        },
        "item": {
          "id": "94ab9f8c-1131-4920-89ea-0680910278d0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8025ae2d-9343-440f-bf99-9fcc1c93c163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d722f74-44e7-4d65-a931-c8fc5039ed47",
        "cursor": {
          "ref": "bdc0c120-2b19-4098-8f8a-a43b3f5b4457",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "887ed7a5-ac1c-4731-b50f-30a05bf05af3"
        },
        "item": {
          "id": "3d722f74-44e7-4d65-a931-c8fc5039ed47",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fc3b8826-0e7a-45c9-bfff-adef98d37835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3982e26a-37de-4edb-aa14-eb60ffd983c7",
        "cursor": {
          "ref": "9657746f-3fdf-4021-816d-763f4370ae55",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b02caffc-9f1f-4764-aa81-597ae8c13a1b"
        },
        "item": {
          "id": "3982e26a-37de-4edb-aa14-eb60ffd983c7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "40cfcacd-7fb6-4a9a-b998-8972d46d5c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43249d6-70ea-4a57-bac1-169e07edd875",
        "cursor": {
          "ref": "5bc08b77-fd06-42a9-91ec-d4b7f0d9a6e1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bf07e0de-9ebc-4d43-a7f8-b81138f81714"
        },
        "item": {
          "id": "f43249d6-70ea-4a57-bac1-169e07edd875",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fc002d13-983f-47fe-b1a1-0e2b913e01ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1107caa6-b66a-46d7-8425-0f739ceabd11",
        "cursor": {
          "ref": "0556989f-796c-4ed1-9430-eda90aed1d98",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3590b9a7-a974-4cdd-894a-cf41ef0073c6"
        },
        "item": {
          "id": "1107caa6-b66a-46d7-8425-0f739ceabd11",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cf8dab08-efce-45ea-b6a0-f406d3cec739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e508ac8a-1f14-4821-95c5-92dcd5fab6c0",
        "cursor": {
          "ref": "8e78cf58-fba2-415a-b02d-9de9d6508f5c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "43922a3b-d797-4aac-bc56-583daeb326b9"
        },
        "item": {
          "id": "e508ac8a-1f14-4821-95c5-92dcd5fab6c0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c7e146ce-4b4c-4091-af1e-ecd38ff26688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805a225c-1d1b-42e6-ab81-e620d79d0d84",
        "cursor": {
          "ref": "8a17a9a2-cd21-4af9-90c6-45501f21aa4c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f1e3e53a-fb39-4f72-884d-9f21b25a372f"
        },
        "item": {
          "id": "805a225c-1d1b-42e6-ab81-e620d79d0d84",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f884d098-300c-4c7c-b116-150e3f872ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bd0e1e-d8d6-4710-8e65-b73465cd95a7",
        "cursor": {
          "ref": "e969fa2e-5f96-4243-af75-1009025ecf81",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "aa0c616e-d5aa-43fa-b83d-b9e71e36304b"
        },
        "item": {
          "id": "90bd0e1e-d8d6-4710-8e65-b73465cd95a7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6cccd433-77ac-4781-9f9d-8e7b0149de2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7df546-1d71-4520-95cb-3c7cf52ba7c3",
        "cursor": {
          "ref": "29facd0f-91a8-4705-bf96-45434c5ccb4e",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9d372f99-9370-411c-8125-456e3b376fe2"
        },
        "item": {
          "id": "2c7df546-1d71-4520-95cb-3c7cf52ba7c3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cd64954d-e824-4e71-abb7-1019f8b5e3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef037517-e8bf-4e78-859e-e28c3bb0926c",
        "cursor": {
          "ref": "4e2888ee-3efa-45a1-83de-1c39734895d5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6300a9ab-42ff-4cc5-afa9-39f356882311"
        },
        "item": {
          "id": "ef037517-e8bf-4e78-859e-e28c3bb0926c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "324d88f8-a94f-4573-bd94-883f69b06ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710a4727-f488-46a0-8c7b-1e95c4fa7063",
        "cursor": {
          "ref": "01ac70f3-4649-4cb2-8278-2cde6e96056a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7df1c905-890e-4f7d-ac21-08450a6c1f5c"
        },
        "item": {
          "id": "710a4727-f488-46a0-8c7b-1e95c4fa7063",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0c968686-cb6b-4b13-b1b9-5cc4880f11cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de94a4a6-96b8-4e7c-b9c8-02f66ef719e7",
        "cursor": {
          "ref": "41783e42-de37-45eb-86f2-9a4be0284246",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e1927099-a81b-4d31-8c9d-82bf190bb364"
        },
        "item": {
          "id": "de94a4a6-96b8-4e7c-b9c8-02f66ef719e7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a59166b9-3788-4d6c-b23d-033d5396476e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc905be-383c-4dce-befc-d1859ebd78d1",
        "cursor": {
          "ref": "309befa2-684c-4135-bc1b-ed0e99f696e0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ef4f709e-7d26-41ff-9db1-65706b3aa947"
        },
        "item": {
          "id": "acc905be-383c-4dce-befc-d1859ebd78d1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8356e0b1-5173-45e3-b0eb-fc82ef1ac904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c4a007-64f1-487b-a150-a9506fa59245",
        "cursor": {
          "ref": "61e8203e-a45c-4700-b9a1-f6c2408e4ffa",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ef28558b-1642-484d-a4f9-3a96f965498c"
        },
        "item": {
          "id": "e5c4a007-64f1-487b-a150-a9506fa59245",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fe3e79f3-29ea-458d-8552-50efb576efc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e03ea9-e8f7-49d2-9e6e-47ee287f2129",
        "cursor": {
          "ref": "71d5a1a0-eb71-40aa-9ddb-41043bc24b80",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f21a69bf-1527-46ac-a74f-e4b537052d56"
        },
        "item": {
          "id": "e9e03ea9-e8f7-49d2-9e6e-47ee287f2129",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a8f1e724-a00b-4eda-9b7f-a08af909a30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31acf4d9-fa0c-4859-8cdf-99420eb1cadd",
        "cursor": {
          "ref": "0e109912-ee60-4193-b4c6-fda38774033f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d687431e-952f-4dec-85c9-cf7f5f1015e8"
        },
        "item": {
          "id": "31acf4d9-fa0c-4859-8cdf-99420eb1cadd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "db5610eb-5a34-40e0-8b81-1b641d929bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54da3097-249c-42dd-9481-c9b517114519",
        "cursor": {
          "ref": "eacab018-3a30-4b9c-a43e-6659221e2115",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fe9036db-6aa0-4a5b-bb77-e5114ddaa835"
        },
        "item": {
          "id": "54da3097-249c-42dd-9481-c9b517114519",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5652c5a0-2b1c-446a-bfed-8c0f92d60611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769e67a4-4e8c-4f8c-9508-b3044b845e24",
        "cursor": {
          "ref": "fb7eb0be-7997-4190-86b3-c1efb738afcd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "73be6b6e-bce2-4e92-982f-286b9e47410c"
        },
        "item": {
          "id": "769e67a4-4e8c-4f8c-9508-b3044b845e24",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6b842746-0f24-4a00-a065-6e5a5a259fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf07dc28-35a2-4686-9aa0-bb3c63c05a5b",
        "cursor": {
          "ref": "14f1ce6e-d766-47b3-8046-b5875c929ad6",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a2ed1a6d-d93a-4ab9-aed0-a0e24af57b42"
        },
        "item": {
          "id": "cf07dc28-35a2-4686-9aa0-bb3c63c05a5b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ebe9886a-a047-41b0-9147-501ab7afe6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4195902f-5d61-45ad-a30e-6435700ec482",
        "cursor": {
          "ref": "d348b174-1704-4e73-9249-fee0852eb184",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "11a525dd-7821-4648-8058-aefe3058b876"
        },
        "item": {
          "id": "4195902f-5d61-45ad-a30e-6435700ec482",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "16e2e76c-1844-4ef3-b1c0-0b0ef521a218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b442d5-f95d-4bd5-9c57-307bce9e55c7",
        "cursor": {
          "ref": "4ded627d-d454-49fe-ac9c-26713e994e97",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b45eb4c5-19e5-47fa-a051-da3895502903"
        },
        "item": {
          "id": "46b442d5-f95d-4bd5-9c57-307bce9e55c7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4788ae8d-d53f-4535-af4e-51d9f173a008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb2fbfa-0e12-42be-b7da-0fa1eff5fe45",
        "cursor": {
          "ref": "eb52e56e-eec5-4851-8413-18e3728cb9b3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "74d7907d-0552-48b4-95d3-b49ef52ee4e6"
        },
        "item": {
          "id": "9fb2fbfa-0e12-42be-b7da-0fa1eff5fe45",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "22524ddf-13e4-4259-abbb-0787cb0128cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c214b3a-d76c-4426-a144-8c645ea8af2d",
        "cursor": {
          "ref": "d4ca5a02-5cbf-4d60-a2e1-8bdaacba77b0",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a1d01f3c-0953-43ab-897c-c476d864cef4"
        },
        "item": {
          "id": "2c214b3a-d76c-4426-a144-8c645ea8af2d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "800b2b85-2cd6-4796-b4d0-c9b31b8c5763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9878a3-691e-4474-badc-da9101ce35df",
        "cursor": {
          "ref": "840f05b0-fe4a-4fe6-9d01-ea0f62d81e1d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "33c140fd-ba8c-4bf8-9fd1-399eec1f4176"
        },
        "item": {
          "id": "be9878a3-691e-4474-badc-da9101ce35df",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1d84f3e6-d69a-4250-a940-e15cced66990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d581fe-c6e2-43ad-aa23-b6f9d7f132fc",
        "cursor": {
          "ref": "befbdfb6-003b-4060-aa3c-f7dfd13bb28c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "50c4028f-3a5b-4042-8fa6-f303783427dc"
        },
        "item": {
          "id": "55d581fe-c6e2-43ad-aa23-b6f9d7f132fc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2ad2c25d-3a4c-46fd-ba60-5fff0ee460e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f436fb-c08f-4258-9238-bd89bc022bce",
        "cursor": {
          "ref": "5f24ed0d-97be-46f5-8493-cc21c305178a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f6668f45-aa9f-4acd-be66-8b4c108e26c9"
        },
        "item": {
          "id": "51f436fb-c08f-4258-9238-bd89bc022bce",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b1b814d3-8a1f-4ae8-9b8a-d515af5656fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39ea89a-ecd7-46e8-8990-e24e47d902ce",
        "cursor": {
          "ref": "750b72ff-d75f-483d-bac2-4b09e87d4bf1",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "346abe33-66d0-4f04-bbe8-87fc909ea105"
        },
        "item": {
          "id": "c39ea89a-ecd7-46e8-8990-e24e47d902ce",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "27d6ddd3-e5fe-4dae-9622-5396b9cf4581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8be566a-7f1a-47be-87ee-59b7e9322117",
        "cursor": {
          "ref": "a3fee481-fd67-4cfb-a3b5-63e08a2fb4eb",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b69b1e36-cb20-4191-b62b-6a620f27cccf"
        },
        "item": {
          "id": "f8be566a-7f1a-47be-87ee-59b7e9322117",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ba28e313-293b-451d-87e8-348826918f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cf49ed-41f2-4364-b2ea-a63c67e0de3c",
        "cursor": {
          "ref": "5af723f3-bb80-400a-ba7a-0422aad32072",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9d80c544-5d2e-46de-a8b3-59a4ba7abbed"
        },
        "item": {
          "id": "20cf49ed-41f2-4364-b2ea-a63c67e0de3c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ba4ec6af-7fa4-46c8-8dcd-977f1a70ef7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340dcfbf-84c4-4935-b52e-42b861e17370",
        "cursor": {
          "ref": "a5a13f93-0171-4fec-9ebf-20bbfe239bdd",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7745ca56-8a56-4eb9-b67b-33a781db2165"
        },
        "item": {
          "id": "340dcfbf-84c4-4935-b52e-42b861e17370",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "914de9e5-f05b-4da4-a381-6d841e230409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775c7d24-a6e8-4f14-a349-6cf546cf484b",
        "cursor": {
          "ref": "45db2337-07f4-4d37-b91a-4fbc830b0814",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bf01713b-e85c-4b5c-bfbe-6ad14362e822"
        },
        "item": {
          "id": "775c7d24-a6e8-4f14-a349-6cf546cf484b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ff5db1ed-eb6f-4487-98f0-96531f5a7069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e11e089-40d6-4a11-81b8-a79bbf38bd98",
        "cursor": {
          "ref": "b4595e56-db5b-4698-ad4e-f302ae44d919",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f956a9f9-8db6-4e1f-83a8-4b8a6df8ef47"
        },
        "item": {
          "id": "4e11e089-40d6-4a11-81b8-a79bbf38bd98",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "81f4c6f4-5155-45bb-8a1e-3a7a8472f6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fb7014-4c85-4529-b3c9-fc032d4c067c",
        "cursor": {
          "ref": "73537eba-8223-4fcc-9c69-c2d9195e0287",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4d2eed73-6be4-45a7-b38d-f7266dba9a1b"
        },
        "item": {
          "id": "35fb7014-4c85-4529-b3c9-fc032d4c067c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b2235953-ac0a-4d6a-9a8e-e9edef3cd4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a00a8a1-e03e-456f-a0d3-4507dc81e927",
        "cursor": {
          "ref": "f6396e28-f0bc-43bc-9545-c2bd129c1bbd",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ab551193-83ce-4487-a810-e5eb298dac58"
        },
        "item": {
          "id": "0a00a8a1-e03e-456f-a0d3-4507dc81e927",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9fea7c86-d13e-469b-ae9c-176c16bd227c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8450b80-da91-43ff-8820-e2b581a34df1",
        "cursor": {
          "ref": "7c16f9a8-3aed-41b7-a858-b4d804693028",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7b7cff4b-635b-4365-9dce-14a8b1ea756c"
        },
        "item": {
          "id": "f8450b80-da91-43ff-8820-e2b581a34df1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e3ba8915-3906-46cf-9d27-f0ca468d744b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66546fe-2677-4867-8d83-768f8196dc02",
        "cursor": {
          "ref": "4971952f-1863-4efc-ba8f-ebabbd79b26a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4799d75a-9aee-4108-95dd-55af58fe5112"
        },
        "item": {
          "id": "a66546fe-2677-4867-8d83-768f8196dc02",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c926547a-8a4d-4f55-b4e5-84a4cc07e42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385f9fb4-43bf-4b63-8747-ff2e59b60626",
        "cursor": {
          "ref": "f6c83836-93b8-4ba1-8bdd-22562e48b067",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fa3aa1c3-149a-475d-ae1d-8347470d1285"
        },
        "item": {
          "id": "385f9fb4-43bf-4b63-8747-ff2e59b60626",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5d740303-6d20-4efc-99ba-cd131e2af890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287e9a2e-9f78-4d7a-a78c-9a2f2c13671d",
        "cursor": {
          "ref": "b53b9f8e-fb96-4768-80a5-5b8b3f3ce272",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8e63ec2a-c2bd-4ee7-9650-41bcf76e5442"
        },
        "item": {
          "id": "287e9a2e-9f78-4d7a-a78c-9a2f2c13671d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bb8be749-ca4b-48ac-8f30-09c4fb95dabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16af678-69ae-40fe-94fa-e152fa03bf5b",
        "cursor": {
          "ref": "6c3af25f-cc9e-4d4b-9e9c-090c3f0477e4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0c2dd1fc-c8d4-4d32-ae3d-41c533ee8fc9"
        },
        "item": {
          "id": "d16af678-69ae-40fe-94fa-e152fa03bf5b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "22c570c0-f43d-448a-ac9e-2a7eed660b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4956e4-baab-496f-8367-4a65388b82ba",
        "cursor": {
          "ref": "bf9b7f31-42ce-4a0d-ba2a-765470dce53e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "048aae36-a49d-445e-9dc9-d830209b9bed"
        },
        "item": {
          "id": "ff4956e4-baab-496f-8367-4a65388b82ba",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3e8b9417-c1b1-47f6-8f10-fdce37016d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e545b2-6b54-4594-8db7-34bf9b789800",
        "cursor": {
          "ref": "a0aca65f-9610-4fec-a386-b3b92bcaf762",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "36a61cd8-493c-48b1-b9bc-df1ebaf19ba2"
        },
        "item": {
          "id": "71e545b2-6b54-4594-8db7-34bf9b789800",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b5636a82-2f22-4a96-91ae-7f633c56cfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e118c0f4-85c3-4621-9748-b40e800d2278",
        "cursor": {
          "ref": "11e1d351-2481-4beb-baa3-3ac1d00a1d10",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "51fdbb3e-eb5a-41cc-8301-ac37badaf49e"
        },
        "item": {
          "id": "e118c0f4-85c3-4621-9748-b40e800d2278",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3ec89ece-d9ac-4aea-b7c2-4f148a27efe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c5ce1e-a4e8-4f2a-8d46-bb2204d7a18b",
        "cursor": {
          "ref": "ecfba8c5-6ad4-4e0f-bbd1-65898a35419e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d09d8ad2-ea4c-4ff4-a5ab-47f7f0230df6"
        },
        "item": {
          "id": "07c5ce1e-a4e8-4f2a-8d46-bb2204d7a18b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3d9dab69-bbe1-4a27-8ce9-d04121088fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ca4f55-4f24-4fb7-82d2-d87f6e986939",
        "cursor": {
          "ref": "77574270-0cae-425a-b61c-0f1e4afe410a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6ae48272-1413-431e-8e0d-38295a72b35e"
        },
        "item": {
          "id": "a6ca4f55-4f24-4fb7-82d2-d87f6e986939",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "038ea472-3e3d-4883-a75b-d41957f332d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4379266-a0f8-47c2-ab98-1da0b357f394",
        "cursor": {
          "ref": "bef4b6c2-5c24-464b-af6a-ab0127156c41",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "06f3860c-2b32-4596-8286-8151c155ce3d"
        },
        "item": {
          "id": "b4379266-a0f8-47c2-ab98-1da0b357f394",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7fcc98c1-0aad-4c62-9cec-7c736b6c7a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9116e0d2-a157-4063-9f60-6cf27f7df2f4",
        "cursor": {
          "ref": "3a354a1b-b809-4a4a-809a-f1ecac721c53",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "34fa7d54-fbcd-436a-acdb-9fed242ce0ce"
        },
        "item": {
          "id": "9116e0d2-a157-4063-9f60-6cf27f7df2f4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dfc181fa-f096-49a4-a8b2-55a57ec3fc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2627d47f-e8de-4a73-b3ee-c91e25ab12f8",
        "cursor": {
          "ref": "d746f4d4-7810-409e-beac-49d63537ccdc",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2953a313-1f99-4184-a508-5c56debec03c"
        },
        "item": {
          "id": "2627d47f-e8de-4a73-b3ee-c91e25ab12f8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7213eb6c-4029-4462-b703-75d4b1be1c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb5001d-a476-4db1-ae67-d20e89351f0d",
        "cursor": {
          "ref": "3f0d19df-9130-4326-9843-e526645d9238",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "591d46ce-e4bc-4111-a141-f925e20dec4e"
        },
        "item": {
          "id": "5fb5001d-a476-4db1-ae67-d20e89351f0d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "25598c42-ac41-4c50-b9fb-a36b8f0edfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a209a799-3e91-47f5-8f32-bc5e116759ef",
        "cursor": {
          "ref": "91dae26d-11ad-4e99-a6ec-3d93395e1c56",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b6bbe399-fd2c-4aa4-8b19-9d9cb60820f5"
        },
        "item": {
          "id": "a209a799-3e91-47f5-8f32-bc5e116759ef",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f851e220-7d3f-4274-98d1-ff6380f8cd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29de19f-e9a0-4702-b375-e7a8751d50f8",
        "cursor": {
          "ref": "0efe1c1c-135e-4db0-8e5c-20b550b3f46d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "53fbe10f-41e6-48d6-91ad-694639410301"
        },
        "item": {
          "id": "b29de19f-e9a0-4702-b375-e7a8751d50f8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "24230467-aa1d-47aa-bb6a-5605b3a1af96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caca3e2b-bafc-4d6c-bd6a-f749239e7a03",
        "cursor": {
          "ref": "57e1ed8a-5a8f-4a1c-a1ed-d41c06958856",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "abf90c6d-b759-41a0-b7c1-f082b1826c61"
        },
        "item": {
          "id": "caca3e2b-bafc-4d6c-bd6a-f749239e7a03",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c97e7123-63a4-4342-b7e7-9ebf06426250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdf2488-e41e-45db-babe-58725e9d94a1",
        "cursor": {
          "ref": "b73bb149-4011-42d6-ac9e-8eda4a08eda3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c859d1bc-8012-4c39-908f-f2611b79d4b4"
        },
        "item": {
          "id": "dfdf2488-e41e-45db-babe-58725e9d94a1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "da41e4fd-4145-4128-9398-157d1c81a9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad73cbb-574b-4737-84e0-94b9c5dd73b1",
        "cursor": {
          "ref": "7971f70b-3474-4eed-9d37-5b056592fb08",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2d04a157-2d30-4817-88ac-7baeea0b07f4"
        },
        "item": {
          "id": "8ad73cbb-574b-4737-84e0-94b9c5dd73b1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "335aa4c2-7fac-4ba0-88ac-7a093818464e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a514f54a-da31-46d6-8570-0810083d8f42",
        "cursor": {
          "ref": "769125ab-2e04-4ab0-93c0-d4d55a20a408",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "429f21a3-cdc9-40b2-ae0a-7da882f6a0a4"
        },
        "item": {
          "id": "a514f54a-da31-46d6-8570-0810083d8f42",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "87d8bbc6-8063-4ea2-8582-daf7dfecade5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66b1427-6210-48c7-92a5-92f867196e8b",
        "cursor": {
          "ref": "531c8d9f-ffec-40f7-99e3-aabbba6fd77c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9120b8e7-86ff-4854-88f8-0554df420046"
        },
        "item": {
          "id": "e66b1427-6210-48c7-92a5-92f867196e8b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a40d0015-fb87-43ac-974f-635a995d4c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acaf1fe-3d6e-483d-a8a7-fee6ed0bd981",
        "cursor": {
          "ref": "a6d6c966-15f7-4f41-9dc0-43825c9d5ef0",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "aaf8c232-77c8-4696-a075-bb10639bf691"
        },
        "item": {
          "id": "7acaf1fe-3d6e-483d-a8a7-fee6ed0bd981",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ea934afd-50be-46f3-abc7-e407c3a70c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a142d7-d7d7-470b-8856-2ecdb2ff71a9",
        "cursor": {
          "ref": "cc5c8c6d-f6d0-4d86-ae4b-7bfd464e23fc",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c5133fe8-4a8b-4255-b61a-317f2b1c9e90"
        },
        "item": {
          "id": "90a142d7-d7d7-470b-8856-2ecdb2ff71a9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3b1fecff-0353-4650-a2ff-dc41e78f34f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd11472f-38d2-4a01-b99d-dfe39674810a",
        "cursor": {
          "ref": "630af003-7ac0-4dc3-87ab-1fe6411ccf35",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bf076f34-7aaa-4968-aeef-ab4dbc76be40"
        },
        "item": {
          "id": "dd11472f-38d2-4a01-b99d-dfe39674810a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4d21b54f-6021-4be7-a639-3f2237326fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f3dc5b-8598-4ebc-8f64-9f2c4df5bcc9",
        "cursor": {
          "ref": "aca1a7f0-cef9-4cab-be0f-24a8ac45a89d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8e5a2a40-92f7-496d-8154-48277948808b"
        },
        "item": {
          "id": "c9f3dc5b-8598-4ebc-8f64-9f2c4df5bcc9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "60123bc3-7365-4cb4-926f-7ff37270833e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a5cf9b-fb71-42b5-b619-decab9f07002",
        "cursor": {
          "ref": "9efe7a10-7266-4cfa-a6b0-8b1e8b16c138",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "017d4418-1b8f-4ebd-9d5c-2c5fb3f9d709"
        },
        "item": {
          "id": "96a5cf9b-fb71-42b5-b619-decab9f07002",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5688ee19-5a7e-4700-a281-ba952a659864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798d9d47-873e-4cda-9b9e-880c19c2d381",
        "cursor": {
          "ref": "09a3670b-945f-4f77-bbc8-1d0976c17daf",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0bb25e59-7eb4-4ea9-b02d-4064c0e36dc1"
        },
        "item": {
          "id": "798d9d47-873e-4cda-9b9e-880c19c2d381",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bb899c64-fe71-4015-ae52-84e5d435c47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8c54dd-d734-4e59-930b-aff76ff7da06",
        "cursor": {
          "ref": "242eba4c-16a1-494f-b651-c82278041057",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a2f3524e-5887-4ac0-a324-2b7efa542be8"
        },
        "item": {
          "id": "bf8c54dd-d734-4e59-930b-aff76ff7da06",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "46751f28-57be-43b2-909e-a6d51b6ed78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e215597c-f803-41d6-b626-9e4f2a6c9e2f",
        "cursor": {
          "ref": "67469308-7415-4d1f-bccf-3949f33e5f68",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a68dd9d8-4a32-4403-ade5-09d0dbd620b5"
        },
        "item": {
          "id": "e215597c-f803-41d6-b626-9e4f2a6c9e2f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4e1bcb0d-5890-42fc-bccc-322e69ddeade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb40492-48fc-434f-80bf-5f01990a8362",
        "cursor": {
          "ref": "19f385cf-511e-445a-8b42-8a4797060098",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "66a5ba2c-488a-4e02-88a4-0f94a891d32b"
        },
        "item": {
          "id": "4fb40492-48fc-434f-80bf-5f01990a8362",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "82ff4654-59a5-4b4f-bb42-3305f451320c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1f469d-2460-4a6c-a3a2-98928114efa9",
        "cursor": {
          "ref": "e8795805-c38f-492c-afc9-6d89ebeacdf4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c81c9723-fd14-45e0-9ede-5b3ede2c3132"
        },
        "item": {
          "id": "8d1f469d-2460-4a6c-a3a2-98928114efa9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "702322bf-105b-40e1-a478-31af47f6fcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4588ba98-ea1c-4cf0-bee9-3a99b686d8e3",
        "cursor": {
          "ref": "f8b5769a-fe17-4d3e-9501-f695682ebf98",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "38ba1db6-47f3-4458-a0b8-58abe21a32a8"
        },
        "item": {
          "id": "4588ba98-ea1c-4cf0-bee9-3a99b686d8e3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f4346c57-1996-4a87-9053-c1f918b13a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b3c63e-9417-4a6e-9c73-fb57b27b8050",
        "cursor": {
          "ref": "1e07e252-2020-404c-acfc-146626b12656",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "66695097-4156-4ad9-a7ef-84d07d179310"
        },
        "item": {
          "id": "c7b3c63e-9417-4a6e-9c73-fb57b27b8050",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cebf7f93-2b85-4955-a7b0-8507b547cf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00da7598-4f21-4cac-b122-b01b789b74ae",
        "cursor": {
          "ref": "2e5670c1-3497-493a-bdd4-58bd645e9165",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2f2f7589-1a93-4b57-ac7f-d41ebc12a366"
        },
        "item": {
          "id": "00da7598-4f21-4cac-b122-b01b789b74ae",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8141cad5-f22f-4b3d-8761-65d8305f9147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c473e7-1dd8-437c-81c6-9491a6c0beca",
        "cursor": {
          "ref": "9f78ce8f-6158-4920-805c-91814f3697b0",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4b2a3da3-1e25-461a-85d4-79cbb65ea448"
        },
        "item": {
          "id": "34c473e7-1dd8-437c-81c6-9491a6c0beca",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "022a3d24-9017-4a7e-a10f-7a7bb95926fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b729751b-88e6-4338-905f-5b894eb5258a",
        "cursor": {
          "ref": "1b71f68a-d448-420a-81c4-fc7c0686c4ec",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dc2293a2-4e47-4e5f-9f00-4ac17f419cc9"
        },
        "item": {
          "id": "b729751b-88e6-4338-905f-5b894eb5258a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5308a994-032f-4427-920e-8c2bd3cb8cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dcc10f-b116-45c3-a69a-4493e79d34ea",
        "cursor": {
          "ref": "9833700a-0649-4cfd-8d3a-3bad9a8c1593",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "aa30c295-0e50-471c-81b4-101e360697ef"
        },
        "item": {
          "id": "a4dcc10f-b116-45c3-a69a-4493e79d34ea",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "af39db13-7cb1-4482-ac1a-29f9c0192436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b6b5aa-2599-494d-b84a-5305b168e5cb",
        "cursor": {
          "ref": "1c6fece6-be5d-4ee7-a68f-4fc88bfb5b95",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bfe3f630-08fa-49e0-b5f3-c21d50bfb322"
        },
        "item": {
          "id": "77b6b5aa-2599-494d-b84a-5305b168e5cb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c8e8eb20-3848-47c9-8bfe-bcce61490689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f614dfc1-1936-4bef-b066-16feb13c6c45",
        "cursor": {
          "ref": "a3959eb7-d511-4263-a64f-aa44ebc91ec7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "233a31e6-cb94-4bd5-b7cc-b98b116ed2ca"
        },
        "item": {
          "id": "f614dfc1-1936-4bef-b066-16feb13c6c45",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b16bb4cd-5ac5-4feb-8315-d73d3d1137ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76246446-3cfa-4a26-a238-cb4abaec0764",
        "cursor": {
          "ref": "878057d3-a6d9-4e84-9a42-fb53e3251017",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d88308c5-9596-43e6-9bc8-3fc3d3dacb96"
        },
        "item": {
          "id": "76246446-3cfa-4a26-a238-cb4abaec0764",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "44ac4f5e-823e-4bdd-a35b-7a42e433f4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91982ede-c930-4980-bb17-2d8b43432824",
        "cursor": {
          "ref": "a401d0f8-0e68-4e96-985c-634239c12c1c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "89ead09c-3949-46b1-95c2-0eb1eaa455c6"
        },
        "item": {
          "id": "91982ede-c930-4980-bb17-2d8b43432824",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b3964277-5a8c-4043-a07f-72235f83a31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf55954-65d5-4e47-a1c4-fbb9ff67baf9",
        "cursor": {
          "ref": "e0f19e6a-ed2b-455a-aa06-0eee3bf1c91c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e70b60a9-9b4c-44e8-b878-f91fb5598f02"
        },
        "item": {
          "id": "8cf55954-65d5-4e47-a1c4-fbb9ff67baf9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2e625762-beeb-4e80-934c-c8049c744299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23ba460-dffe-4f24-b7fb-199d9f197a3e",
        "cursor": {
          "ref": "4697d315-5b7f-4905-967c-6a7da024f90f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a2960269-4d46-484a-8a22-b35df06ce360"
        },
        "item": {
          "id": "b23ba460-dffe-4f24-b7fb-199d9f197a3e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6cb64713-23c3-4432-89fe-9ed31aa9d393",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d82070-0b0f-428f-a4dc-b44e2b1e823c",
        "cursor": {
          "ref": "96f4abe5-e1b9-40a0-af73-9c01804b75f0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4b2edf67-f13a-4c7c-adac-8bf820139bd7"
        },
        "item": {
          "id": "12d82070-0b0f-428f-a4dc-b44e2b1e823c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b59f946d-a796-44b4-a637-1c253dcf9177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "77446114-4463-4fb2-b782-fdfe035cd5f5",
        "cursor": {
          "ref": "06c93cb1-c989-45af-9c4a-7ae443b3a72d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "feab8350-2cc8-4229-8580-be0fe0bf45e6"
        },
        "item": {
          "id": "77446114-4463-4fb2-b782-fdfe035cd5f5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5ad15c97-b55e-4f27-9866-a86fbee81e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "dbf4198b-7629-4626-b18e-1031a7e38963",
        "cursor": {
          "ref": "0e2c7c85-836b-4134-b481-03e75ac9fbd4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0d4c85b3-854c-4f69-b01f-86b6827afbbd"
        },
        "item": {
          "id": "dbf4198b-7629-4626-b18e-1031a7e38963",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "30ed6f87-ee00-4e4e-9941-5762c9a63e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3cc9a64e-f638-4bcb-a2f9-7ee9ed0eac70",
        "cursor": {
          "ref": "536edd3c-e08e-4ddd-9f86-8de19e164287",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "94df354f-339d-4517-a151-860102432259"
        },
        "item": {
          "id": "3cc9a64e-f638-4bcb-a2f9-7ee9ed0eac70",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "886bdb22-2adc-47d5-9367-0b8fcbf730a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0534e4eb-8893-4b06-a3df-de81eeabdcdf",
        "cursor": {
          "ref": "4e2e787c-0c7b-44ad-b024-8ed69d31b72f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b5b5975d-ca2c-4bc7-b2a4-e20674a80554"
        },
        "item": {
          "id": "0534e4eb-8893-4b06-a3df-de81eeabdcdf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "36bbe78d-0d32-46aa-94fc-d0694a108bc1",
          "status": "Created",
          "code": 201,
          "responseTime": 11766,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fce5aeb-13f2-428a-9b4b-f30f4f7e151a",
        "cursor": {
          "ref": "b1a6b840-4b3a-4eea-816c-db561176e024",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "65f8b2b1-60eb-4004-b10f-bd8f2b864b6d"
        },
        "item": {
          "id": "3fce5aeb-13f2-428a-9b4b-f30f4f7e151a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "599e8c81-6604-4e44-acf1-e4e7a7cb28c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b420c269-debd-4f72-9133-cfa71af3da5e",
        "cursor": {
          "ref": "22c797d3-fda2-4092-abd5-bd873d920ec1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b51e8b17-95f9-45d4-b5bb-e332514a0113"
        },
        "item": {
          "id": "b420c269-debd-4f72-9133-cfa71af3da5e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a52088bb-4e2e-4d42-8dee-14fdd21667f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f26b00cc-a4ed-4dcd-8a8f-d299e945cec2",
        "cursor": {
          "ref": "691b6153-471f-4580-8574-3b95bb326766",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "055e5069-04f4-424d-a7bd-42f0216752bf"
        },
        "item": {
          "id": "f26b00cc-a4ed-4dcd-8a8f-d299e945cec2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1dd50bc3-7589-45af-941a-1bae14cc002d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eecabf-a883-49ba-b351-874ce536e0a1",
        "cursor": {
          "ref": "06502b6a-2661-4509-8960-12e4b3a45f03",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3facb9f5-8913-49e6-a638-0e1322fc545b"
        },
        "item": {
          "id": "c5eecabf-a883-49ba-b351-874ce536e0a1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9d92c819-041d-43b0-b88e-d7e86ce3c793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da21b0e-f1cb-42c3-a60c-4c8c427c67d3",
        "cursor": {
          "ref": "b5661f3c-badb-41bc-92ca-13422f86fe98",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1f03c634-c3b8-4f43-a5fd-b5314ec36cfb"
        },
        "item": {
          "id": "1da21b0e-f1cb-42c3-a60c-4c8c427c67d3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e7d56c08-ee02-41ed-b8f2-a5761d7517f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46622fa2-6bfa-4655-95df-1f30e6b57646",
        "cursor": {
          "ref": "e3407036-ec8b-490a-bc09-1285042e23ab",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "00c462c2-529a-4298-9eb2-edafcc9c9c7b"
        },
        "item": {
          "id": "46622fa2-6bfa-4655-95df-1f30e6b57646",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "743c0cd0-e0ab-4b3d-8c34-548438f5a655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fbfdcc-323e-4143-a765-08ded6a76021",
        "cursor": {
          "ref": "7c946b7d-f777-45b6-9d19-7e5f30f3b9ef",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "52f35890-15b8-4c9e-9228-f107536f601b"
        },
        "item": {
          "id": "96fbfdcc-323e-4143-a765-08ded6a76021",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "068c935a-56d9-4d79-a05f-0651799d0654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb5ab62-d1b3-499c-932c-85d0ddc287a5",
        "cursor": {
          "ref": "5ae2dad0-740a-4e9d-8c15-8a2281259ebf",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c554a381-f029-452d-9fb8-a21a8880cfb6"
        },
        "item": {
          "id": "5bb5ab62-d1b3-499c-932c-85d0ddc287a5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bc318e1d-d5fe-4b85-87cc-a644a64cf449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f853ce3-0887-4c26-a295-48a01bd1a9fa",
        "cursor": {
          "ref": "a91ffd78-b2e0-4932-aa95-7030daa43819",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "52fbecd0-25b2-49b3-a98d-ca0bd2f0f04c"
        },
        "item": {
          "id": "4f853ce3-0887-4c26-a295-48a01bd1a9fa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cbd06a45-f185-4a22-bdf0-69794b7f189f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04069181-e3ba-4424-9552-d2672438a773",
        "cursor": {
          "ref": "760313fe-080e-476b-acf0-387dea85bae1",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7dc730ed-71cf-4f4a-80da-4ffc43d2abbb"
        },
        "item": {
          "id": "04069181-e3ba-4424-9552-d2672438a773",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b755eb2-3f9e-4c4e-a7ac-1fad4c33386c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fb7e39-fb14-4546-bebf-f14e1d93623c",
        "cursor": {
          "ref": "492e376d-c474-4c94-b4a5-0180e71d45a9",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9ab4b8f1-25f9-4a72-be19-78b670e1d029"
        },
        "item": {
          "id": "99fb7e39-fb14-4546-bebf-f14e1d93623c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f96cd88e-b1d4-462d-a9a8-5c503b234c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df90fa2d-08c0-46ce-ac10-f8b807a3befc",
        "cursor": {
          "ref": "bb1abbea-7b56-4e5f-a3f9-24d7de15b624",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "230f5beb-8cfd-48a0-94d2-8c8b9e0e3584"
        },
        "item": {
          "id": "df90fa2d-08c0-46ce-ac10-f8b807a3befc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "92b0ca46-2260-4266-b11d-aad0c6f7ea6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae34b71-5666-4a10-9282-de7fadf4cf7e",
        "cursor": {
          "ref": "660083e6-c345-4477-8ccd-8973f02661a6",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "08f5ce54-ef14-42b5-9f83-00bf5e67abba"
        },
        "item": {
          "id": "5ae34b71-5666-4a10-9282-de7fadf4cf7e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fcb782df-2b47-4d52-ac2b-b4d855792f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e985a49a-4588-4242-b67e-ba97175d2749",
        "cursor": {
          "ref": "60ea2b4b-a309-448b-86f1-b06d3702d14b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "499be196-185f-42d5-bd6e-4605328606f6"
        },
        "item": {
          "id": "e985a49a-4588-4242-b67e-ba97175d2749",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "847c11a4-4cb9-4ee8-acbe-e26650180a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46987080-7607-4b46-8901-8e20ba0a6a91",
        "cursor": {
          "ref": "53ebfcf9-509f-4440-aa77-cbb615f76b89",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cb5f8d7b-adb7-47cd-98d2-605335476fb7"
        },
        "item": {
          "id": "46987080-7607-4b46-8901-8e20ba0a6a91",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2e4c0646-7049-4c7c-b70e-2e3004330ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20d033a-428d-4cdd-ac31-ee17841dfdfd",
        "cursor": {
          "ref": "b91ca44c-aaec-4b87-9882-3aa1a1a5cbf5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a9a0ca3d-b2a3-4faf-808f-706143f02047"
        },
        "item": {
          "id": "f20d033a-428d-4cdd-ac31-ee17841dfdfd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aa4e8075-87d8-4122-96a3-166b0fedc8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925013d6-3902-4c61-9e51-ea9e61ea7e79",
        "cursor": {
          "ref": "ccd79fe9-61dc-407a-8c13-84a66c9fec65",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2221e0c9-4453-4aa3-89e2-453d91772a42"
        },
        "item": {
          "id": "925013d6-3902-4c61-9e51-ea9e61ea7e79",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "05ec518a-531e-4089-8882-39bfabcf58b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107684ea-1ef3-420c-8884-f48b482e9a46",
        "cursor": {
          "ref": "633c3907-cf16-4cd6-b018-8cc78c4c3c9a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b5c313fc-935d-4119-b085-261f99087360"
        },
        "item": {
          "id": "107684ea-1ef3-420c-8884-f48b482e9a46",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e4e39a3f-7f03-4342-b676-1c8cf55cc46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55aaf02-21ca-4ccd-8bc3-9a0ee250fcd1",
        "cursor": {
          "ref": "cf976c26-6ef9-4699-a50d-6e3449fd6565",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5aedf640-4a62-4556-ae92-aae6a99209ad"
        },
        "item": {
          "id": "c55aaf02-21ca-4ccd-8bc3-9a0ee250fcd1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3575a211-64d8-49a5-b58f-738754ea2e9c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f1392174-7175-4306-84c3-6306e9b3ed79",
        "cursor": {
          "ref": "d49c5b1b-8d5e-411c-b4e2-46b37aab772a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8452eace-6f7a-44e7-a373-05fae6a45e3c"
        },
        "item": {
          "id": "f1392174-7175-4306-84c3-6306e9b3ed79",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b2e7ac60-e6ce-4416-99c1-347ddcaa81f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e962a45a-8af4-4671-ab85-0fb2ec4da654",
        "cursor": {
          "ref": "65fb4f90-c2d5-4ef7-b6ab-936affb9570d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b9b4194b-f252-412c-b391-5eec572ce36f"
        },
        "item": {
          "id": "e962a45a-8af4-4671-ab85-0fb2ec4da654",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "234f751a-7196-4b71-918b-8250bc160ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2363d3c2-4863-4bd7-839c-4859f2cafeb3",
        "cursor": {
          "ref": "f50f8048-2b45-4df1-ae9c-6da679deff2c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "651ad4e7-fc08-4bfa-b0f4-8c4314904128"
        },
        "item": {
          "id": "2363d3c2-4863-4bd7-839c-4859f2cafeb3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "17ddb501-05d1-45b6-bbe1-a773a08b265e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a259aed-f61c-4444-9904-c5237f31f16a",
        "cursor": {
          "ref": "fb67406d-bb08-4e8b-94fb-464309b976c1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "198b2f9a-da5c-4887-8bea-131075678ca0"
        },
        "item": {
          "id": "9a259aed-f61c-4444-9904-c5237f31f16a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b5682d4b-8610-4cbe-8673-1aca6bd8a167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98107db7-c9f5-4a88-aadd-1c8924b59a1f",
        "cursor": {
          "ref": "82f1a19d-ec83-436b-be6f-62957bfa346f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "63555c0d-ff37-4627-8501-c037eb6579f5"
        },
        "item": {
          "id": "98107db7-c9f5-4a88-aadd-1c8924b59a1f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bdde2934-ba25-4a35-b49f-9966af2856cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b41b43-1d81-425d-b112-fc837e34bf31",
        "cursor": {
          "ref": "72af2c66-fdb4-45b9-a22a-85bbbc6a3e9c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8d235a55-38bb-49f9-9d0f-964cf61a51bc"
        },
        "item": {
          "id": "b8b41b43-1d81-425d-b112-fc837e34bf31",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "26e680a6-bf1a-47cc-8c74-ca992b11440e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3579ada0-2ac7-4903-a3f4-4c33376018eb",
        "cursor": {
          "ref": "92827d8c-5ea7-4691-a7dc-0b48cd4f61c3",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "09037400-4ed9-4e88-8bdf-24918f52c960"
        },
        "item": {
          "id": "3579ada0-2ac7-4903-a3f4-4c33376018eb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "395c2b77-19eb-4b21-a63e-51f810167519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bd4f7d-d799-4dd6-81b2-b1bcb0898f10",
        "cursor": {
          "ref": "4b75698d-a541-4319-99c7-1fcd7d6de03d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f3837929-a20e-4352-9ffc-53c14d66d7b3"
        },
        "item": {
          "id": "32bd4f7d-d799-4dd6-81b2-b1bcb0898f10",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ba47c0d8-4f95-4ca3-99cf-70d8aa55718d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "4541fd7f-39ad-4ffd-8e14-6444e716dc50",
        "cursor": {
          "ref": "5eb1c87f-4810-4061-91a3-9f5fbe48f0d3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9db96d11-f276-4b05-bac7-22243c6b0c86"
        },
        "item": {
          "id": "4541fd7f-39ad-4ffd-8e14-6444e716dc50",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e00c548e-1974-4793-a200-1870ede3b7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48a159b-bd54-468b-8739-7642ee23da73",
        "cursor": {
          "ref": "4c20672d-cccf-4576-b5d0-f743c19fd50c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fbb32261-8ba6-40ba-a0f2-5492ac2203f6"
        },
        "item": {
          "id": "e48a159b-bd54-468b-8739-7642ee23da73",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "140926fe-3a0f-4447-941c-581d92e30062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63809f53-62c6-414b-b3fd-6484b82b91f4",
        "cursor": {
          "ref": "1272de6d-313c-4f28-ba79-9d49a2ea1075",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4ed0f6f2-7e93-4fc2-9e0e-4ceb2ce326f1"
        },
        "item": {
          "id": "63809f53-62c6-414b-b3fd-6484b82b91f4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f88d875d-4e85-4867-828d-078320d4b536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cb3e8d-56d1-4f34-abbe-83c13ca3e444",
        "cursor": {
          "ref": "d53a3446-b18d-4973-84be-7f7977be2eac",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "18d61f71-f467-45b9-be62-ed40983fbdde"
        },
        "item": {
          "id": "b2cb3e8d-56d1-4f34-abbe-83c13ca3e444",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e958a2bc-e6f6-4fb5-8943-99a6af5744ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ee0eee-e327-4d84-81ce-aaa75fbc595b",
        "cursor": {
          "ref": "627ff0ef-da7c-4ea1-a0c4-e7b4971cde55",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e75b11a1-b932-47dc-8739-c2383ba84ed1"
        },
        "item": {
          "id": "97ee0eee-e327-4d84-81ce-aaa75fbc595b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "013097d8-829a-45ae-9e51-ec20c62c9fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a82d4bc-d93d-4617-bcb7-118c82ed6c98",
        "cursor": {
          "ref": "b7f73d52-20a1-4269-8ba4-2b6ea1cd5cff",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0138396d-7b55-4792-86e1-f8805ccc334a"
        },
        "item": {
          "id": "7a82d4bc-d93d-4617-bcb7-118c82ed6c98",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "592ab3cb-423a-4808-b549-f690f02d0b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217796dd-a94d-4790-83c4-45acbccd1408",
        "cursor": {
          "ref": "916898a2-b711-492c-83a5-26b708f2c78f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "eae10582-7767-4199-91b7-9f559e226e02"
        },
        "item": {
          "id": "217796dd-a94d-4790-83c4-45acbccd1408",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c9aa51e1-22b1-4c45-a362-80a1e45a9cfe",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "baca1561-f811-4e6e-af8b-4d8d8ca622d8",
        "cursor": {
          "ref": "5c41aad8-846d-47a2-94c4-b19df425ecf6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4c67985b-a2e7-4eab-85f1-b3145bd814cc"
        },
        "item": {
          "id": "baca1561-f811-4e6e-af8b-4d8d8ca622d8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7d38df25-b59b-47ec-a9ff-ec4a521ddb7c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 27,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "658a8117-bf67-479e-87a7-68a9b42e900e",
        "cursor": {
          "ref": "746ad663-dd7a-4e54-bfbc-da6f5a7aeb3d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fd822e96-9231-42d2-9006-b1b9f859d2b6"
        },
        "item": {
          "id": "658a8117-bf67-479e-87a7-68a9b42e900e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "60e9460a-d695-45c8-b588-0a511ee1ed8d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "7654c38e-73df-4c5f-b0e5-1c058eb1fe5f",
        "cursor": {
          "ref": "bd705167-d511-4fc4-969e-9d3cd0a4d8f9",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "16181e8b-ca1c-474c-b3e0-d7498dcdffa0"
        },
        "item": {
          "id": "7654c38e-73df-4c5f-b0e5-1c058eb1fe5f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "061c146a-1117-4f52-b2f9-f8fbba96d285",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "2accfff6-45a6-478a-81bd-f75e7a29dbd1",
        "cursor": {
          "ref": "a73a27b3-58f7-4cf9-bf9c-8bea13b2e872",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d98e1def-8fb7-489b-b219-e10f1d40dbfa"
        },
        "item": {
          "id": "2accfff6-45a6-478a-81bd-f75e7a29dbd1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "03ca1164-9a1c-4fdb-ad1f-fc5350c83195",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "c4e65749-c361-47a3-b282-80ccd4b9f74f",
        "cursor": {
          "ref": "007dee43-11eb-4e15-83b9-752838e49d57",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "72fc819a-7dbf-45ca-a2d0-76ebaf63eb04"
        },
        "item": {
          "id": "c4e65749-c361-47a3-b282-80ccd4b9f74f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8b70833f-e584-4d80-8d5c-a1ba2cab5fe9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "ca4b4ed3-0a20-40e8-a84f-2bd813a8eeac",
        "cursor": {
          "ref": "0e8c405b-4682-42f2-94f9-72bec0dcc1ff",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fc96ddd2-534d-4d4f-a369-e4f703403f1a"
        },
        "item": {
          "id": "ca4b4ed3-0a20-40e8-a84f-2bd813a8eeac",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3d3f9425-a2c2-4c0d-b21f-a489a49f4f84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e213e529-26b9-406b-a11a-06e3d9694a8b",
        "cursor": {
          "ref": "94a68cb9-d8c3-47b2-b418-a96ddfa02009",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3bb0d9e3-b822-4e09-addb-eacad65a0d51"
        },
        "item": {
          "id": "e213e529-26b9-406b-a11a-06e3d9694a8b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2af3eda4-c399-4cf4-9660-38ccba8c638a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3935193-c86a-41d5-9bd4-9998b5e93443",
        "cursor": {
          "ref": "31a98e76-297e-4c21-9458-246fd481f88c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e52786b6-94ef-4e27-838f-6e553ea6d062"
        },
        "item": {
          "id": "f3935193-c86a-41d5-9bd4-9998b5e93443",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "066ea1f9-958d-4d58-91d0-197aba2fcc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bc510a-f2ec-4db0-873d-9f53a50d13d5",
        "cursor": {
          "ref": "e298f7ba-c75f-40a7-a4ef-820fc4656c8e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0df720c6-b174-4dd5-95d6-848e60b0e57c"
        },
        "item": {
          "id": "69bc510a-f2ec-4db0-873d-9f53a50d13d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "07de3393-7564-4c63-b030-1900244b2852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d50397-178e-4589-be99-e1d36f3ada16",
        "cursor": {
          "ref": "b1e8829f-5228-4f68-942f-f1ac42a591c0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c2248243-9b4a-45bc-b08b-77873c82c498"
        },
        "item": {
          "id": "63d50397-178e-4589-be99-e1d36f3ada16",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "065101c3-7475-49ed-beb2-08da7fafc6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1abead-a090-4fe4-b180-80a0db4b892a",
        "cursor": {
          "ref": "fd41bc2e-bc73-4c52-8516-bee6c80387b5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bfeb740e-5ee0-41da-ae9f-085cfef31f7a"
        },
        "item": {
          "id": "3c1abead-a090-4fe4-b180-80a0db4b892a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "823a240e-6946-44f7-8f6a-c06ff336c361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321730b5-7bee-40cc-bc7b-dfbc75806f53",
        "cursor": {
          "ref": "82d85977-54b3-44a1-84b6-6fef738bdc01",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b295075b-4d81-48e3-802d-977dc387d5b8"
        },
        "item": {
          "id": "321730b5-7bee-40cc-bc7b-dfbc75806f53",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8f870ffd-d91d-438f-85c8-fadda58f9a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe76c7dc-501f-4188-ae91-3c9048e71c80",
        "cursor": {
          "ref": "6127193f-64ef-4460-961b-580f291022d4",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "813eef5c-0c78-4fe7-8b4e-537a3520ff6d"
        },
        "item": {
          "id": "fe76c7dc-501f-4188-ae91-3c9048e71c80",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3dee1767-abf0-4bb2-86b4-b67e179258f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1951f756-64af-4174-b884-6574c4adda8b",
        "cursor": {
          "ref": "9c4950cf-46e3-4e21-bea0-24ac8010e4f2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7e547d45-6820-40e4-9cc0-50b607d7f9bf"
        },
        "item": {
          "id": "1951f756-64af-4174-b884-6574c4adda8b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "121ece92-f1c0-4671-807b-83c624b4c776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84cd2eb-c0c9-497b-81d8-be403cfab99c",
        "cursor": {
          "ref": "3be63bd8-37f3-47ad-b238-41dd48824c8a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5adda163-bb06-4c74-b2ad-e807be4d3e1f"
        },
        "item": {
          "id": "d84cd2eb-c0c9-497b-81d8-be403cfab99c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "31810609-3280-488e-843c-6d77ca275046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6505d94f-8fc5-4a2b-bc12-ad73f135f38c",
        "cursor": {
          "ref": "ad3d754b-95ca-40ef-9eb1-3b35647c31fb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5f3131c5-6a2a-4b45-a5cf-05de80397650"
        },
        "item": {
          "id": "6505d94f-8fc5-4a2b-bc12-ad73f135f38c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b6f2c4d4-ecbd-418c-a546-88c6733609c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a594c694-7d19-49d4-865b-40ec51ca2d9f",
        "cursor": {
          "ref": "526a05f2-6cdc-4ea4-aa10-031c188a28f4",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e302269d-f42d-41a2-949a-679a44235039"
        },
        "item": {
          "id": "a594c694-7d19-49d4-865b-40ec51ca2d9f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "95df7f94-1b87-4d50-a148-f5b032b46c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaa4cc3-6c23-444f-833d-0645b71d9854",
        "cursor": {
          "ref": "0d68cb65-fc83-494a-8e2a-08ec6ca780f8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "49519322-ffe9-45b5-a955-9a18eca3d267"
        },
        "item": {
          "id": "8aaa4cc3-6c23-444f-833d-0645b71d9854",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5813f15b-03b8-400e-9505-7887dce9f3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adbd1e0-1f96-4445-89c7-592dddfd5d81",
        "cursor": {
          "ref": "954a82c6-98f2-4730-b0f5-0ed39940c84c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cd1a8827-b2bc-497e-b7c4-f87ab0cf6452"
        },
        "item": {
          "id": "7adbd1e0-1f96-4445-89c7-592dddfd5d81",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a929f2a9-1385-4a3a-b269-5e4790ebda2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024d9c74-04c9-48f5-afa7-639e0e83b7c2",
        "cursor": {
          "ref": "920d2728-43fb-43b8-9ae6-5bf6906e2a6e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b2cf3a54-e2f7-456b-9005-bc666a41b046"
        },
        "item": {
          "id": "024d9c74-04c9-48f5-afa7-639e0e83b7c2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f7e8c92b-0ffb-45f9-b149-217092ac41df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27213902-3ff3-4198-b181-258deed6f343",
        "cursor": {
          "ref": "4c2ac1e2-d7f6-44b4-a95f-2d28e1c20ff9",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a0b4fce7-250e-4a2f-926d-fab725a61fa0"
        },
        "item": {
          "id": "27213902-3ff3-4198-b181-258deed6f343",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1374be82-ca69-4b57-938c-6dc6fcc39558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df038b3-e943-4adf-acb8-28516399e5f2",
        "cursor": {
          "ref": "fd21de62-73dc-423c-b097-a5c22b93a55c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "796803e5-4676-4db9-a42e-fe3d01f01bf9"
        },
        "item": {
          "id": "9df038b3-e943-4adf-acb8-28516399e5f2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "647aa07b-7fd5-4c20-9004-49369c142624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3b0f41-fb63-4cb7-adc0-c3c3d9c59a83",
        "cursor": {
          "ref": "aa04a4a9-55cc-4eac-8a8a-774db153ff27",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e738ef46-25b0-4fd4-a7cd-79c9b76cd5aa"
        },
        "item": {
          "id": "6d3b0f41-fb63-4cb7-adc0-c3c3d9c59a83",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8f5502ce-1ce8-4f8e-94df-710f8e8ce0a5",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "ddb2635d-6f26-4ddd-b851-871ddd7c7e6f",
        "cursor": {
          "ref": "961a4c97-8eca-414d-93b8-1b2624a73f69",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c068e90d-2f9c-4ca2-83be-a31be10afd63"
        },
        "item": {
          "id": "ddb2635d-6f26-4ddd-b851-871ddd7c7e6f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e356b15b-525b-43b9-afe4-8c9f2bb88168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40784be4-26bf-4b27-9444-936455c2e8f2",
        "cursor": {
          "ref": "4ac95b5b-a57a-4b36-a14f-8d9849601508",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4998fe55-1353-4770-959e-5d68eec78017"
        },
        "item": {
          "id": "40784be4-26bf-4b27-9444-936455c2e8f2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ac298737-50f4-4187-b722-92a7aab67910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc83fe8-1353-4d9f-9eae-fa5ba20d9799",
        "cursor": {
          "ref": "faf89343-f0c3-4322-83f1-c862d485272e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "45f3546c-d01f-406d-8f28-8a3932572794"
        },
        "item": {
          "id": "efc83fe8-1353-4d9f-9eae-fa5ba20d9799",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3543e7b1-d814-448f-bfc3-a2bb85089cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7592852b-383b-4028-ac35-5a306e72bf3e",
        "cursor": {
          "ref": "e977f74c-1c82-4fbd-898b-963dbef048c2",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8e41be95-c59f-49bd-bfc2-12e6fa13919f"
        },
        "item": {
          "id": "7592852b-383b-4028-ac35-5a306e72bf3e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "79f0e695-4c28-4c81-a448-47fd5e415717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e831ec2c-0864-49ec-8e9e-f4f1b04b58ae",
        "cursor": {
          "ref": "7faba6e7-b36a-4db1-b135-9f67dde1391f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4f4ccac4-b590-4c06-a947-4f63e76a706c"
        },
        "item": {
          "id": "e831ec2c-0864-49ec-8e9e-f4f1b04b58ae",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f6575582-bed3-45e2-8259-fa0b3afa477c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de8b0cd-c488-4c53-bab0-fd196c15d8f9",
        "cursor": {
          "ref": "6ff6fdc0-2bee-4b2b-bb5f-13a9e401291a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a9475e57-8aac-4aa2-b1da-56bcf9a00be0"
        },
        "item": {
          "id": "4de8b0cd-c488-4c53-bab0-fd196c15d8f9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2d9667f8-fe59-4d9f-a62f-184f9794c4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451d7854-67e4-44a4-81c6-75c31371466e",
        "cursor": {
          "ref": "c44fea8f-ce55-4238-8795-acc5b4393195",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b04a029e-abbb-490c-9d99-7115a5eae7a8"
        },
        "item": {
          "id": "451d7854-67e4-44a4-81c6-75c31371466e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1037725b-bd26-4f32-8629-30d3f0858680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e023ab8e-929a-4d4d-a9f8-5116afbe8f5d",
        "cursor": {
          "ref": "cc266d76-e58c-4c28-bf8d-1cb2484715ae",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5b78df89-a151-4862-8661-0fbecf05f838"
        },
        "item": {
          "id": "e023ab8e-929a-4d4d-a9f8-5116afbe8f5d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2f5ef06c-9632-4245-9410-dd72d2d1b6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30252bba-5940-4d8b-bf4e-b56be2bc88c6",
        "cursor": {
          "ref": "8012f700-1ff7-4110-b3cc-862a02c9947d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9f6f9512-d857-4a00-9eb7-a1585787b860"
        },
        "item": {
          "id": "30252bba-5940-4d8b-bf4e-b56be2bc88c6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c1aac4f6-a920-412a-9898-4c528953e2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82085d2-d929-451b-ba75-30b39006088b",
        "cursor": {
          "ref": "e70e1cb0-84de-40ac-8427-a849042fc859",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "baa39445-bc20-4dcd-af49-0a69e223af7d"
        },
        "item": {
          "id": "a82085d2-d929-451b-ba75-30b39006088b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "38319e22-04e8-48f8-9563-002969ddf7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0f5a06-46e4-4d6b-be3e-21a448d9c51f",
        "cursor": {
          "ref": "d37d8700-3ac0-4995-b35f-3146420e2b35",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1d52ca9c-b8c1-4282-9e5a-30ef9bbeeca8"
        },
        "item": {
          "id": "9c0f5a06-46e4-4d6b-be3e-21a448d9c51f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8acd1e9c-7a7a-4554-8783-5dc4b076f5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbde2166-68bc-4f6f-a04e-78bc5ad29263",
        "cursor": {
          "ref": "276b2954-9b9e-4691-84d0-b7857811c808",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "880d4354-561a-46e9-bcb9-8010014b6cef"
        },
        "item": {
          "id": "fbde2166-68bc-4f6f-a04e-78bc5ad29263",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bf233dab-44ba-4f86-8127-ef0043d5f529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0d49f1-ed04-457e-b76d-a14efac00c3f",
        "cursor": {
          "ref": "f628b3d0-1125-4c71-96f6-818d3b563dec",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dd2e8fad-a879-4bd8-8711-a5d259733a35"
        },
        "item": {
          "id": "9d0d49f1-ed04-457e-b76d-a14efac00c3f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "97ff32e3-e3a9-4603-a8d3-b11a41c675f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d84eee-f149-4c9c-b8f7-6f6fb79aceab",
        "cursor": {
          "ref": "f794370a-e4f9-4dcc-bf88-89cbdae341b8",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3426bf74-50d5-4db5-9e17-334fd9eee5d3"
        },
        "item": {
          "id": "25d84eee-f149-4c9c-b8f7-6f6fb79aceab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6855e71f-5bc4-4e72-8049-859dbc9ebd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607b8ed2-2b8a-4140-b5a3-88c16252ba95",
        "cursor": {
          "ref": "3d9ef9d4-384b-41b3-bd34-04e8edc7fcaa",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7a1ec5c4-8570-4de8-9085-dcb60e28b7c9"
        },
        "item": {
          "id": "607b8ed2-2b8a-4140-b5a3-88c16252ba95",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f0ca38a8-52a3-4a9a-a195-b2e83cb20d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54154fa2-4309-4fde-80d7-81de072d89e9",
        "cursor": {
          "ref": "887c1c87-0b49-4cf7-aa83-e6c65997074a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "62b37893-43cc-4041-bd04-c96e1e39e6e2"
        },
        "item": {
          "id": "54154fa2-4309-4fde-80d7-81de072d89e9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1fdfc4f7-0205-49d5-80de-f464f7af59f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d1f68e-72f9-461e-8bb2-23054b934481",
        "cursor": {
          "ref": "4220a238-94c3-4554-81cc-0823c768ecac",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b0df5443-3d04-46eb-81a8-ad9c755fff44"
        },
        "item": {
          "id": "16d1f68e-72f9-461e-8bb2-23054b934481",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "32488945-63e1-40f1-8fb4-d49b4951dd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3488e6e-458d-41a6-bf04-d2bde5816b31",
        "cursor": {
          "ref": "8cb7a2bd-dadd-4990-90d9-f88ea395c7c9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cfef18d4-d4e2-4980-8e0a-ebbf37b7addb"
        },
        "item": {
          "id": "d3488e6e-458d-41a6-bf04-d2bde5816b31",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5ec520ec-2084-48a9-a323-df545e39f677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9392fb-77bb-4b57-a66c-3a3ddeaf9369",
        "cursor": {
          "ref": "4e620d7c-7094-49b7-8eb4-0f41de651447",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "739f09c0-eefc-4af5-8e49-4dc477ae6dfd"
        },
        "item": {
          "id": "ea9392fb-77bb-4b57-a66c-3a3ddeaf9369",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eeb2d76b-aae9-48ac-a232-fa8ebc2be98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162eb578-9e85-42f4-bb86-b9ab53f345d4",
        "cursor": {
          "ref": "7dd76f7b-5687-491f-9421-f1f0e29e74e6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "be1e25e4-df4d-478f-ad2e-db790d789cca"
        },
        "item": {
          "id": "162eb578-9e85-42f4-bb86-b9ab53f345d4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a8848d04-7f2a-49a4-a773-30d1d3ded50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc022268-d485-44ba-a9dc-0ba0bc630a55",
        "cursor": {
          "ref": "1f731d2f-d424-46d4-aa54-8d31ba2ec752",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1f2620c4-e20c-4ebc-b879-98841a443691"
        },
        "item": {
          "id": "dc022268-d485-44ba-a9dc-0ba0bc630a55",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c8ba6de7-b6eb-4731-a74e-4f2ded2e5b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a0fb7f-4f92-4d88-b498-60442ca97e98",
        "cursor": {
          "ref": "d1bc1de4-71b0-42ac-b515-1512a088c941",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "55aa0dbc-4d3d-4266-84ad-8549882d5e09"
        },
        "item": {
          "id": "b9a0fb7f-4f92-4d88-b498-60442ca97e98",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "12f80257-7b74-4b08-a0c8-2cc1bf93c099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38934fa-354e-4ae6-81af-32cc0782621c",
        "cursor": {
          "ref": "2e6e8216-df67-4e8c-9ded-71b1453c094f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "70e7c6f2-4db4-4ffc-8a47-e9dbc7f582ae"
        },
        "item": {
          "id": "e38934fa-354e-4ae6-81af-32cc0782621c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3837d482-6383-426f-9a22-8f2d8c11c919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d72f2e5-a6e7-4be9-aaf7-14ea07e753a3",
        "cursor": {
          "ref": "ab01c533-c290-4519-a13c-d2669b179399",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3c9a7fd2-94be-43bf-8b70-9b0054cd6525"
        },
        "item": {
          "id": "1d72f2e5-a6e7-4be9-aaf7-14ea07e753a3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8b752751-f4f7-4b50-9f70-d244af13242d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f46b00-27f3-410b-a0f8-cf74eda3093d",
        "cursor": {
          "ref": "207a260d-6da5-4a7e-9d76-29b60d52ffaa",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "82e44fa7-27bf-44ad-a30f-5f4e971afd93"
        },
        "item": {
          "id": "07f46b00-27f3-410b-a0f8-cf74eda3093d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "14cf8ce4-eda0-442a-9f57-2f0325db8eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65761c41-32fa-475b-aaae-30ddcf9944ae",
        "cursor": {
          "ref": "311d89a3-06f2-420e-849c-6fdbc7c59e59",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "61e7764a-0064-4f6d-b1ee-0f972550e40c"
        },
        "item": {
          "id": "65761c41-32fa-475b-aaae-30ddcf9944ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3f149950-e98d-4ac0-9c45-1f5c33e9f903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed63cdd1-82e6-49df-98b8-482ef2cfd11f",
        "cursor": {
          "ref": "c7285afd-436d-406a-b18a-51966ef4da97",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "da913b8c-86dd-4417-afee-e10836e09fb9"
        },
        "item": {
          "id": "ed63cdd1-82e6-49df-98b8-482ef2cfd11f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8562f3ea-1f0b-4b77-855c-a79811839af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f897f69-cec9-4d5e-a533-e0fada826367",
        "cursor": {
          "ref": "6747400f-ab4f-4d13-8017-d1d7ce811889",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "83809fd5-ad07-417f-8c69-e5f3b30cd031"
        },
        "item": {
          "id": "4f897f69-cec9-4d5e-a533-e0fada826367",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e7a99ee1-fdbb-4676-9085-95a5647d5886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8648ebfb-b0df-43f0-bae1-c30e21a84096",
        "cursor": {
          "ref": "c6061553-29f5-4c08-a5c2-4aa35baf9566",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "95f7b957-bcde-4700-a5d7-3c288acb957c"
        },
        "item": {
          "id": "8648ebfb-b0df-43f0-bae1-c30e21a84096",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d287efef-2c38-4b5a-a16e-4bf77dfd5689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b4a769-e248-4038-a6a9-2aa7ead8253e",
        "cursor": {
          "ref": "e6cf50d1-16d9-444b-8d97-9c7d1364f2c7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9feb67a5-1b30-4f32-b3ef-ae085b4f4077"
        },
        "item": {
          "id": "49b4a769-e248-4038-a6a9-2aa7ead8253e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5e91f3f3-ebcd-4f86-83ee-e070dc42a787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e62d70-f0a1-4127-8bbf-4473bcdc411f",
        "cursor": {
          "ref": "80a4c257-3c4b-4abf-983b-42c5b49aa2d0",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "98ab915f-1a4b-4115-b002-b01424e788e7"
        },
        "item": {
          "id": "61e62d70-f0a1-4127-8bbf-4473bcdc411f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "242fdb2c-a58d-4e42-a035-ae3bffb61a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6275657-b143-4898-a7a5-978be34cfffa",
        "cursor": {
          "ref": "adeb788d-2568-4315-a668-481791213a42",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7e6d8b98-09db-4fba-bb11-5a407c600ada"
        },
        "item": {
          "id": "c6275657-b143-4898-a7a5-978be34cfffa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ed8cad26-026c-43bf-8b18-b105988b3fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30398bb3-6c4a-42ad-acaf-180a9c82445d",
        "cursor": {
          "ref": "0eec5ff8-f040-4b77-aba8-8508895533ed",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2e7fa676-018f-4b38-9074-f80437b0cc40"
        },
        "item": {
          "id": "30398bb3-6c4a-42ad-acaf-180a9c82445d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dc0779d5-3e3b-435c-964b-8c8553dff888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601056e2-2e9a-4534-9963-a22cef3302fe",
        "cursor": {
          "ref": "37c1e02c-dda9-472f-813d-607b3963af23",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e31328e0-a800-402e-8787-e939b098cc0a"
        },
        "item": {
          "id": "601056e2-2e9a-4534-9963-a22cef3302fe",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0fa7f818-8ff8-4549-948b-2142b9e3ec93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97056b76-5877-47f4-9cea-e3d199bef22a",
        "cursor": {
          "ref": "1288cc5d-4133-4ec4-a58d-fb5f63f5c2c9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c2c6c04c-8ee3-4448-bb4f-276bb7e8d664"
        },
        "item": {
          "id": "97056b76-5877-47f4-9cea-e3d199bef22a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d392d7ce-6e52-42ae-a9a0-583527d92f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ccacb6-3956-46d9-8d32-084f8c62a2fd",
        "cursor": {
          "ref": "bbae0dba-82c2-4cda-8f8c-69ff72fa69fb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bb318ce8-7235-45c3-ad17-058460fbd12c"
        },
        "item": {
          "id": "78ccacb6-3956-46d9-8d32-084f8c62a2fd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4068a4d6-a57d-4cc1-9eaf-570fbcff3c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e880762-4a61-4a66-9de9-f9efd970150b",
        "cursor": {
          "ref": "c4f9afd0-3b23-46e0-a5f0-c3e6502398c5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ac0b945b-2c06-4b2d-a356-523529b382bf"
        },
        "item": {
          "id": "6e880762-4a61-4a66-9de9-f9efd970150b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7c96c52d-9dbd-4c13-be4d-4e76679772ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4509e1b-3723-485c-ab2c-d90e46f81b0a",
        "cursor": {
          "ref": "1c4eed10-e1b3-4fea-b151-d7400850428b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5260ee1f-6abc-4046-88c9-b61c0f676975"
        },
        "item": {
          "id": "f4509e1b-3723-485c-ab2c-d90e46f81b0a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "051c8d8a-adea-462f-b35b-d616722e182f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b0d6ff-bc24-4fe4-9977-7a34dfa0fed8",
        "cursor": {
          "ref": "b536d590-f215-4f85-9c4a-ecd0ce6d70fd",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1885ef7c-400b-49af-a9f3-cea4ed1eea1b"
        },
        "item": {
          "id": "d5b0d6ff-bc24-4fe4-9977-7a34dfa0fed8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "728f4e32-fc4f-45c0-95ea-40ec3bd0ac9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4575b8-7ed5-403a-a9f6-d997af2003d7",
        "cursor": {
          "ref": "e43bc21d-53f1-4c87-a061-82d5c469ed30",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "af47e059-ffdf-43b1-b8ab-dd44f841311f"
        },
        "item": {
          "id": "eb4575b8-7ed5-403a-a9f6-d997af2003d7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "22480073-1a6e-494e-8f42-47b45818c453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c55b26-b65a-4870-975f-a8d0681fbce3",
        "cursor": {
          "ref": "cd30789c-2eff-4d5f-ac64-e5f75fd6730a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4dbcac5f-4599-425e-a9c8-ac14597ba75e"
        },
        "item": {
          "id": "e2c55b26-b65a-4870-975f-a8d0681fbce3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f4fb85c9-480f-4e49-ad2a-8da60273871d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c11494b-e86d-4eae-8d47-7a9727e87070",
        "cursor": {
          "ref": "53895734-6a36-44a1-b495-ccd730b95f26",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d395973a-468f-4e76-af96-beaf719dc643"
        },
        "item": {
          "id": "0c11494b-e86d-4eae-8d47-7a9727e87070",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f3b999b2-3c89-4072-9445-61524da08dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722a2f44-3a9c-46ed-ba13-3495def5cbbf",
        "cursor": {
          "ref": "8917d5ee-5a07-4449-acb8-7c673fc6a150",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ee10be4d-37cc-4700-b2c1-cf8b0abea918"
        },
        "item": {
          "id": "722a2f44-3a9c-46ed-ba13-3495def5cbbf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2e0fe57a-7a8a-4fa3-b95b-ef56f62a7976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ce7851-7c48-496b-9f3e-bee948381913",
        "cursor": {
          "ref": "9e601e1c-eeaf-46c8-bb07-36abc3d878f8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bc4363ec-fabb-4ab6-9d26-b9e061a5272a"
        },
        "item": {
          "id": "38ce7851-7c48-496b-9f3e-bee948381913",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b8f7c694-afe3-45eb-9edd-562096409013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41af50d-c471-4d24-9185-9ae224ce29da",
        "cursor": {
          "ref": "31aa6e70-e8c0-4938-b60e-e5a68fed3a14",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1ba74958-268e-48da-ac1a-2fba8cbc644e"
        },
        "item": {
          "id": "d41af50d-c471-4d24-9185-9ae224ce29da",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9118ae95-18d7-4da1-9413-46bd29613ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b728e5-4b01-4c3b-9766-65c5c07cbe68",
        "cursor": {
          "ref": "b6f8077f-efa0-4e7c-9645-707205267003",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d65489dd-cad5-4d77-bfac-b30a3298f214"
        },
        "item": {
          "id": "48b728e5-4b01-4c3b-9766-65c5c07cbe68",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "466c1bee-17fe-4521-b8e7-12f8f4476872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff403e69-e927-4591-8df8-aee940327d0f",
        "cursor": {
          "ref": "86de53b0-d9d9-4644-9518-613406d93e08",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "69b82ed0-b4dc-49fa-b673-1fab636eb063"
        },
        "item": {
          "id": "ff403e69-e927-4591-8df8-aee940327d0f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ca61f4cb-ff95-4d34-8976-1f388ffb6f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0daf3604-ede7-43a4-86c3-a77676f34aa6",
        "cursor": {
          "ref": "4f0e0a61-2002-4f3e-8bfd-b6447e1c21e1",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6227f2dc-cf80-442b-9bc4-15a9f2394a7b"
        },
        "item": {
          "id": "0daf3604-ede7-43a4-86c3-a77676f34aa6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "327e2ec7-b4f9-469a-9f89-f352a51cbe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d9ec07-57e1-4355-8f2c-760c614217d9",
        "cursor": {
          "ref": "19c7cba0-9bd8-4d0a-a8b7-ce7adac8b5b1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fa588ad7-d511-479d-816e-c429899423df"
        },
        "item": {
          "id": "64d9ec07-57e1-4355-8f2c-760c614217d9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e1f41d0f-1c30-4526-962b-6e73c5c6ace1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf91bbd-e8dd-43e4-a7ec-df253e64deb4",
        "cursor": {
          "ref": "563dbc16-25f4-4733-b4df-6a2ea11e0341",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8fa4568c-ff90-41e6-84ce-9f9058e7ca05"
        },
        "item": {
          "id": "0bf91bbd-e8dd-43e4-a7ec-df253e64deb4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1c95b7fe-5b71-401a-a1d7-ae07de14813f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1dd301-3765-47c0-a647-b1632884426b",
        "cursor": {
          "ref": "351f82fb-8ed9-48ed-ac5d-1ff46b73c118",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "46cecb00-b9b0-47df-b5ef-a0071da78df2"
        },
        "item": {
          "id": "bd1dd301-3765-47c0-a647-b1632884426b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "636afacd-9ec6-4edb-9df1-2f413729eb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9278466-7cb4-4858-93ea-8438cb7c8f6d",
        "cursor": {
          "ref": "4a58273e-d009-43d9-9d65-4597392f2278",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8b17ff50-cb40-4040-8ec8-fb1635aef170"
        },
        "item": {
          "id": "a9278466-7cb4-4858-93ea-8438cb7c8f6d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "09ed5050-800b-463d-9a6a-b2f1cb56344a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae86d38-d5b6-4a90-b1c8-8674a3126185",
        "cursor": {
          "ref": "dd51f50b-f4c2-44ed-9991-7cc1cf4bf65b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3e969a99-13b3-4a5d-95e7-f7a8dd302df1"
        },
        "item": {
          "id": "aae86d38-d5b6-4a90-b1c8-8674a3126185",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "340b85e3-be71-4128-8cba-dd3d319d9ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0580d8fd-a4bd-4186-b3cf-99a1d346a376",
        "cursor": {
          "ref": "0afda603-ab89-4f69-9cbe-2774d9f8c960",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "62e438fa-68b0-496f-b92c-aaa613fdd3b7"
        },
        "item": {
          "id": "0580d8fd-a4bd-4186-b3cf-99a1d346a376",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0a2d9e3e-be49-435a-b4e5-148f7c4ccd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aada503-723f-4a8d-bb61-6d6e6f166400",
        "cursor": {
          "ref": "4e2dd490-74a3-4808-a24b-915c9b4133c5",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1445688b-b3b1-46e6-8234-f767435e55cc"
        },
        "item": {
          "id": "3aada503-723f-4a8d-bb61-6d6e6f166400",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "af9bb9b1-8c71-4222-9d0f-8166f20bba5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f200c9e7-4e8a-4dc2-a4fb-6205448df03c",
        "cursor": {
          "ref": "e5b232cf-f1af-4cc5-864d-34970d059467",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "877389d5-2c6c-49d4-b6e6-26cdaa1286cb"
        },
        "item": {
          "id": "f200c9e7-4e8a-4dc2-a4fb-6205448df03c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a7d04d1e-5e2f-4895-b79b-6924f3e8da8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72667a81-0952-473a-b038-9f6d8b6b3710",
        "cursor": {
          "ref": "d167eb97-1c9e-4617-a2a5-224b2c8f731e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5c69d5e7-91ce-4ac7-8393-4833272f8f32"
        },
        "item": {
          "id": "72667a81-0952-473a-b038-9f6d8b6b3710",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "93850f38-451c-44ac-9c54-b0686f29c005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dcea57-7357-45aa-b330-bc4b2af3d8a2",
        "cursor": {
          "ref": "6e01262b-5c17-4f08-9710-0bb4e762378d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "002aeed7-2efd-41ff-9b8d-71eab5bf669c"
        },
        "item": {
          "id": "b0dcea57-7357-45aa-b330-bc4b2af3d8a2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1e11fb3e-64ba-4469-a4c2-30cc6f77841c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43502573-dd61-4187-8815-a4cf9fe988cc",
        "cursor": {
          "ref": "d806169f-f8ea-4938-8b10-4426bd1484de",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b7a158d2-93ff-417c-82e4-30eeffeafee7"
        },
        "item": {
          "id": "43502573-dd61-4187-8815-a4cf9fe988cc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "21d9f9fe-b8dd-43ed-8fc9-b6d85ffbc872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb99daca-d392-4859-8b11-8dbb247ee188",
        "cursor": {
          "ref": "c5b77781-67be-41dd-9509-a02a846155d3",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2a284b85-c9dd-4531-ba2f-608d5e120d17"
        },
        "item": {
          "id": "eb99daca-d392-4859-8b11-8dbb247ee188",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3db14efa-99c6-4833-93e7-4f00dba1a6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635a36db-10d0-4410-8d52-144900924452",
        "cursor": {
          "ref": "2653ebf6-1aad-402a-a874-6e8cb3f14c25",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d54c6c62-46d0-44bf-8907-2df03f3b34b0"
        },
        "item": {
          "id": "635a36db-10d0-4410-8d52-144900924452",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "53bb3420-75a1-403e-85c0-52f24e287c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b2b4ac-57bb-480e-9cad-4dba454215ca",
        "cursor": {
          "ref": "c0c115f8-2306-41cb-84db-52fc7b28e904",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "691cbecd-1451-4f2a-b92c-2a5c6ce850fb"
        },
        "item": {
          "id": "e5b2b4ac-57bb-480e-9cad-4dba454215ca",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ed98a34a-e2e4-4532-9d15-2aec32bd65a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6656146-f1d1-4a50-ad5f-cce6e92cad95",
        "cursor": {
          "ref": "83d12e6b-0303-44ec-937f-fc200eeb48ee",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "52182380-454a-41d1-8ad1-6016746aea9b"
        },
        "item": {
          "id": "b6656146-f1d1-4a50-ad5f-cce6e92cad95",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dfe4027c-1d73-428b-bc39-46eca7e879ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af33961-a449-438a-b301-60b6e297c8a1",
        "cursor": {
          "ref": "371ec9d3-27f3-4d45-a0d7-44aec11e6dbb",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4b00c489-7d45-40c1-a6bd-7f200058c59b"
        },
        "item": {
          "id": "9af33961-a449-438a-b301-60b6e297c8a1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5650cd01-5cee-489c-b200-abc27cd87358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5bd09f-89de-4470-addb-5deda7826c57",
        "cursor": {
          "ref": "a606b68d-9b2d-4c0b-9007-d540cecbc715",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5cf23286-dee7-4209-b92e-5c4393672757"
        },
        "item": {
          "id": "ce5bd09f-89de-4470-addb-5deda7826c57",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f95799c5-d259-4d04-a360-587078f6ca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df83e54-23d7-4677-acef-16006fb8ec4b",
        "cursor": {
          "ref": "177c34a4-675c-4b71-b8ec-d5469585cd51",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "82668b4e-96cb-4dfc-ad30-9a8d5dcb377d"
        },
        "item": {
          "id": "7df83e54-23d7-4677-acef-16006fb8ec4b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f08453d7-fcca-4050-af0d-8104ffa26b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cdf057-76ce-404e-8e41-c4b88d52d10c",
        "cursor": {
          "ref": "0341460f-6aaf-413e-b095-36575781b05a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b14f1e76-71fb-44c6-8adf-14ed565190f4"
        },
        "item": {
          "id": "e5cdf057-76ce-404e-8e41-c4b88d52d10c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8cb3f879-ba92-4832-93ba-ea9fd7ff2e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f81bdcc-084d-4691-9a9f-16ca62755cc2",
        "cursor": {
          "ref": "761d93ea-2eda-4928-bbcb-85aeceaba233",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d78b970f-efe9-40aa-8500-ef9b30b743be"
        },
        "item": {
          "id": "0f81bdcc-084d-4691-9a9f-16ca62755cc2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b64be5d3-a11a-49e5-bcce-25fe8554b968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3a8418-9d2e-4fe1-b8c1-26ac4d36c728",
        "cursor": {
          "ref": "69478346-8a7c-4e5f-be8e-29cfca746789",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fad9a740-af7e-498b-b3bd-5f5d15c9ed56"
        },
        "item": {
          "id": "ce3a8418-9d2e-4fe1-b8c1-26ac4d36c728",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "956f0ec3-a0a8-44ee-ae1a-62575970ba39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6286da42-67e0-457b-b91a-0c746713407a",
        "cursor": {
          "ref": "1a475fda-a489-4696-a9e7-2709b2e041dd",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bfa8ac3a-5bee-4a88-b25e-1b3b129b5b02"
        },
        "item": {
          "id": "6286da42-67e0-457b-b91a-0c746713407a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e19ca40e-6179-4a87-bd16-a243042a8b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb9f403-a386-4543-9d00-6a7ffd1817e5",
        "cursor": {
          "ref": "d9de48cf-3388-4067-baaf-dcd3089da4d5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "20960f03-62b9-495f-a80f-ce2d606c6115"
        },
        "item": {
          "id": "afb9f403-a386-4543-9d00-6a7ffd1817e5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8e083221-1b51-409f-857d-d528f99caa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac05109-02dd-45a7-b618-f9091104aeb6",
        "cursor": {
          "ref": "db6b6802-a692-42dd-b0a0-1e082e204bcd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "73d3deb4-31b3-4955-9732-52bdf6478b19"
        },
        "item": {
          "id": "9ac05109-02dd-45a7-b618-f9091104aeb6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7e18539c-d697-4f19-861d-2ad88ccc3326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762a66c3-e36f-4914-a890-1cf260e6b869",
        "cursor": {
          "ref": "a44cb727-be52-4c4c-b84e-19c603f6afa4",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1a564c02-ee1e-45ca-8990-e012b0e561af"
        },
        "item": {
          "id": "762a66c3-e36f-4914-a890-1cf260e6b869",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1e11bf2c-fdd5-4578-8009-7a42e2b5d731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dd7e2b-92f7-453f-b38d-9a5a3de40de5",
        "cursor": {
          "ref": "b7f7ee2c-b560-4ef3-b8f9-f27688e16fc2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ec484c51-acc4-4768-a30d-ca71bdd6bc79"
        },
        "item": {
          "id": "e4dd7e2b-92f7-453f-b38d-9a5a3de40de5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "70b8074a-48f4-4567-a728-6b1ea3a268a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a461d8-4ea3-4bf8-96c4-87d6e724979f",
        "cursor": {
          "ref": "4ffe917b-5380-421b-9879-fc4c5beed74b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "da3857dd-3fe0-4d9f-a8bc-4cb29fde523f"
        },
        "item": {
          "id": "68a461d8-4ea3-4bf8-96c4-87d6e724979f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "501d15e6-2541-49c2-84cc-400b8b14abd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773e7908-5ddc-4459-bada-4aad66daa4c9",
        "cursor": {
          "ref": "ada14d92-2e9c-4c51-a77f-4317927afb54",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "db52f3ac-e479-43f7-a2b0-d38d7ebef8d5"
        },
        "item": {
          "id": "773e7908-5ddc-4459-bada-4aad66daa4c9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d98d76d6-8a35-45b7-a8fd-385a00047c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bcbabf-0198-497e-8e9c-aa26327a0fca",
        "cursor": {
          "ref": "e950ed9e-ecbf-434c-b007-62b92f9a50e5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b8bc6ade-5bf3-4a38-8b72-4952566a0512"
        },
        "item": {
          "id": "11bcbabf-0198-497e-8e9c-aa26327a0fca",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "658edf75-d2f5-4c50-bd3b-74c8d5401cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66248630-d2d7-4ff8-b2f1-d614774d73d5",
        "cursor": {
          "ref": "cf852b77-32b2-456b-aa15-3d01ba9600a9",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c520d83e-b2cf-484a-baef-7d05681c1671"
        },
        "item": {
          "id": "66248630-d2d7-4ff8-b2f1-d614774d73d5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "72ffac7a-b35d-4b38-ac07-4bdd942bb74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3957f937-0d6e-443e-bdb7-afb217a1a6ea",
        "cursor": {
          "ref": "11c864f1-3621-4bbf-8e41-2d9da93faff4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "25c94f88-dcea-472d-a5df-b2bc19dbd5c2"
        },
        "item": {
          "id": "3957f937-0d6e-443e-bdb7-afb217a1a6ea",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b93da84a-ce7b-45b3-ac85-c316f08da40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60abee4a-b715-4dd5-93d5-15c14f75097e",
        "cursor": {
          "ref": "6819178a-d1dc-48a7-8e98-a4da5900bfdf",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ff465c78-1eaf-4373-a60c-3e9a3e74af60"
        },
        "item": {
          "id": "60abee4a-b715-4dd5-93d5-15c14f75097e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "92ae8707-d85a-404f-a035-93a097b875ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ab7206-35dc-46c5-8ac6-3daeb889fd06",
        "cursor": {
          "ref": "64b781eb-e0c5-421a-ba7f-aecd70c9b001",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4d0c1317-bbc0-4acd-8d44-b14ddd0cd42d"
        },
        "item": {
          "id": "e2ab7206-35dc-46c5-8ac6-3daeb889fd06",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bb602346-e812-48d7-bae3-f20f35a0156e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54214fed-c57a-4311-88ca-5a7f494ce901",
        "cursor": {
          "ref": "94c1368c-bc74-4a4c-b6d7-af0564222eee",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f975f208-d8de-4d77-92ec-e0a09a0eed52"
        },
        "item": {
          "id": "54214fed-c57a-4311-88ca-5a7f494ce901",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e34d1667-42f6-43b6-9687-899e904b1e78",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd774bbe-1c43-4fa7-8749-ecd5d7a566e6",
        "cursor": {
          "ref": "1240d5a8-7a7d-40f7-8010-7d9b22924a6f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6c147e74-b4f2-4dc3-9598-5b6bf62c5277"
        },
        "item": {
          "id": "bd774bbe-1c43-4fa7-8749-ecd5d7a566e6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "33b3ee7a-4ff0-4996-bcfe-c54c168c9b5f",
          "status": "OK",
          "code": 200,
          "responseTime": 3590,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4975bb0c-65a3-49a2-acf1-b07d7c873df3",
        "cursor": {
          "ref": "8ba95c60-866b-456b-b348-f3a507aaaf43",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0a6e8e35-c01b-47ef-bc23-c99900aecb70"
        },
        "item": {
          "id": "4975bb0c-65a3-49a2-acf1-b07d7c873df3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "31cd9e99-5309-41e0-967b-d41eee62e8a7",
          "status": "OK",
          "code": 200,
          "responseTime": 2517,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "665893f0-42fd-495c-8c81-9addd9ca2615",
        "cursor": {
          "ref": "425a757e-cfd2-480c-ac0a-589e40927a0d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "daac28b0-daee-427a-85c7-1d583dec4d77"
        },
        "item": {
          "id": "665893f0-42fd-495c-8c81-9addd9ca2615",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "26a70495-e6ba-4541-afab-fb10f35ad254",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665893f0-42fd-495c-8c81-9addd9ca2615",
        "cursor": {
          "ref": "425a757e-cfd2-480c-ac0a-589e40927a0d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "daac28b0-daee-427a-85c7-1d583dec4d77"
        },
        "item": {
          "id": "665893f0-42fd-495c-8c81-9addd9ca2615",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "26a70495-e6ba-4541-afab-fb10f35ad254",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fd6091-11a1-4e16-b623-d7d3d795a289",
        "cursor": {
          "ref": "d659bc5b-6c9f-4909-a4a8-50f4a4a45ee9",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b3790272-fe5d-4c6f-b31d-5fc0f3b2afe9"
        },
        "item": {
          "id": "90fd6091-11a1-4e16-b623-d7d3d795a289",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a0fc3cb1-5819-4cf5-b544-ab2b1211fc2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88579b22-c022-4b89-a42d-d27499ce9fab",
        "cursor": {
          "ref": "7786b462-0478-491b-805d-a726d7993131",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "92cb27f6-e226-494e-a088-558e2ac02a69"
        },
        "item": {
          "id": "88579b22-c022-4b89-a42d-d27499ce9fab",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "95472c76-3adf-41e0-a042-dc2350e129bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}