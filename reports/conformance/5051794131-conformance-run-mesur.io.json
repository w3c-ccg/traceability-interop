{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "02fec63e-3414-4560-87a0-5f6c86a9c7c8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "81999b50-2b40-4a9d-a95d-cad8328d0a59",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6091d6c6-73a1-4723-928e-5e54eb95b89e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "37cbc336-8a51-4420-b712-b6a88b7ba952"
                }
              }
            ]
          },
          {
            "id": "3032a354-faa2-4efc-9da1-4244ca2b588c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf442cbe-731d-45a2-a1c8-11683ad66074",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "51910416-cafa-4f8d-9373-ed0448727346"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9f0113c5-f8ef-4985-b927-b44f0f410de4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "20d9a3ac-7d3c-4fcf-83a7-227232a8148e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3452eca0-09b0-4936-84ab-c2a137cd52e5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b758b787-f86c-4a66-84d0-c265eb6fc3fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e579528a-55a9-4996-9a8b-d64070f82544"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "285a4646-26ca-427a-b19e-5900f2932417",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8b36ffc-01ca-430a-a56c-74b7fde065f9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d26f08c0-55f9-4ae0-958c-e6709310b272",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d17ef661-c2a7-4509-bd70-1d9a30bc980a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c04fe8d-ae36-4fa0-b495-db3eee29ed2b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ff20b339-bb3e-465d-a4ec-e429ebdd1fd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3aba173-fbaf-4350-8dd3-19bac0adb3dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ea9d43a-debf-471e-8f87-ec1e91e3914f"
            }
          }
        ]
      },
      {
        "id": "3c213662-0ec2-4d3b-a737-029e2400bf0c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "141d23e0-023c-42a9-bd4a-f9b4af5969cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32f1c484-32d2-4a8c-afea-2aaca9bfe315",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "608a2bf7-239b-4f84-8d7f-31919436e32a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4d036c-a54b-49fc-8485-0999db46a3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b59ab62d-149b-4d6c-82d9-2e28f91a0f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192788de-7953-44bc-bc23-702825fff35e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6a3681-e075-4dbd-8aff-eba4eeb2bb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a63324e6-5d3f-4a03-9c6e-d631c739fb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584a79f5-e39f-4bef-933b-4e2b70e5abb6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e6088a-68d3-4644-b5d7-c5b571303336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58c2f6f0-ad48-4a81-816e-1f992ef93579"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "311c6b2a-d603-4382-9ba9-34ebdcf06f0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "031eab6f-a232-46a5-8178-79884a635dec",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ca9310-32ca-44fc-b09c-86075868c2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "601769d5-2cfe-4e47-b629-67c14d6e7404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b914f9a6-bae1-496b-bb47-d3125d22e59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03984f00-0ff5-4598-a6ca-289adeca6889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c84593-9700-4e5c-be07-7c0853693330",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8090dbe5-88b7-4aa3-a6f0-39b07b05dd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c47d83f4-7eeb-4770-97c7-d18324e3b0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed42cf6-5104-4940-837c-75c9f6e547e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e3ffa3ab-d51a-48c4-a7d1-3164067b6fc6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "99b6f5ef-65f9-4b01-9efc-2c67a728a2bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfef3cdf-29ae-4e44-b2c4-c11be8be1129",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f842014-6f45-444e-8889-3d90aef3204e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cd90634c-d541-4a93-b89a-243e5c4e94f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5c40a14-7fea-42aa-9954-27dbe8d1c9c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b050ecb7-aefc-4914-bff6-bb011b04826d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7b2c960-d18d-4259-b3f7-acf7bb3c3b1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ec44473-be3d-466a-896d-936f56732441"
            }
          }
        ]
      },
      {
        "id": "49cc0e7c-b7d7-4e2d-a2e4-bbb3740ff852",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "62003de8-1fe0-4602-a967-6166f3219cec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd93848f-de23-4fb2-9ea3-3bb2908a15af",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "48214ecf-b642-4bff-8eb1-1b32b9384e0c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3a7f61-ac08-46d6-8846-80c0cd82ba1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79a09b0-65d2-4a1d-8607-c24c0537cba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78dc211-93bd-41ad-adb6-10a1109180f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb2cdbfc-c8ea-4f8d-984e-3799466b20b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f06834-5670-4574-b53f-64ae17b0119c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad1c904-438c-4dff-809d-da190392b074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9478e20-92c6-487a-ac4b-2a26ce140b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6a2abb-da89-4415-b1cd-4243e92ba964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f318aff-7763-478c-b574-f3f8a2b06177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7da49e-b095-48f1-a546-bc313d2a8e30",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6739bbc4-0db1-4737-b868-dff86d7cccf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603838ae-055f-4e27-8f95-eaa507361efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3d206f-4c31-410a-8e33-347d3b6dc4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7303afba-aa7c-489a-8443-aed2eb192585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5c6264-4439-4a1f-bee2-2e11de219987",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c381d1c4-45b4-4002-b673-4ffbddeb84ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdca120-a700-4ba0-afd6-f9fdd6ec11b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1601814e-8138-492d-a870-300eb71b442e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "632f17e7-4f59-43cc-b7ed-57e11027256f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2190ac-5a5e-4606-b67d-a17b0a4198de",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a05425-cc83-4e36-82e2-9ad342b18162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be4e54f-2f2b-41ca-a353-c13938dcab0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496b198f-7d60-402b-9741-215ebc776714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62037737-3ec6-4006-ae04-aba3af2dc073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576a6a84-ac32-4580-9e29-08c89cb7191e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e3a041-3a13-42ba-8b0e-aa6c9a9b4733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff545475-e33d-4b11-991e-6b937a53689d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c16ba9b-9f8d-42b6-95ae-dcb28345c3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c5e0605-8ff0-4400-8fca-70bb25f213e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0341c04-e956-4c2b-8117-311b17fcd254",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56308bef-42bc-4e6a-8610-184b3b12fc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de54b640-2584-401a-8d27-546cda2010c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2144333d-3c45-4c75-b1de-c4f830964aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55dbf88b-d8c4-4a83-96e0-3b662ae15642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da63509-0591-4334-afaf-30bc5a106d58",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f1be81-3355-4ae1-a417-d678b11d9427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bdb31e-2b6f-4850-bfdc-d2a65e65d0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008ebef7-e73d-454d-9be2-94705560602e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bc4de8e-7559-4727-ba3f-5fd232238b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b855972d-bb8a-4932-ac4c-e37c2f7844cd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b24a7dd-d0bf-4c5b-a1da-ed4baf22ca3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de5427e-db94-476f-94be-f4eca9a6c4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6d894e-0678-45b3-aef8-03b2db8d4ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95a5d6b3-89e9-4443-9384-8066b259e31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4099bd01-d143-4e93-8cbd-d7d0a1668ede",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1554ef7e-11a3-44b3-806a-100761f6c161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd82f74-3aec-4294-b8ba-e63be25ffd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242eab7f-be16-4056-96ef-021a5cb89ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "823fa156-061d-4800-8397-e83d5861f165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85efc9a7-399c-4bbd-8c6b-5db9d444ec5d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9837f76-7a97-4fa9-ac4a-c78da59c69fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49312d7f-59fc-435e-81d5-9499490d6167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ce247b-848e-48fe-a847-c927691888f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "530ee0b0-b30d-4eb9-aeb6-7cba02ef95d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde399fe-0b37-4e1a-a243-27a1c1e34b06",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba125416-d1ed-4493-aac8-049508a58214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302901a4-2ee1-43fc-b32b-ab68c30de46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148d5d4a-5807-4eb9-a158-422d8f207baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b320eeaa-d89b-40d5-a497-516b24352d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d67885-9129-4398-9bbd-ca947a5ac1fd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8375ea6b-2cfc-4837-b5b1-f3d818b1e015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e887a10-63b5-481f-b2a0-557e52594c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7a3764-e6d0-4b72-8a8a-95d03ab6425e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e881472-014d-45ad-b692-42379f4f1148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275ae8fd-9819-4d2e-9a60-82afa1ce32d3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea57e35-234a-49ff-bb2a-e857dd8d46ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2151ae26-701e-4dbc-bb0a-76d9771da40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c8c3f3-5721-4eb8-afe9-e3b331d83073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "263529c9-19ab-4dae-bbf9-b848459cdeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb46301a-fcda-403c-b9b2-48f7eb320367",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003bb90f-7709-4297-adf6-0444359306ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e487317-b61e-4ac5-a002-150aa7106f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009b559f-68ef-426b-8efd-1e494908dcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31d8b1a5-2907-4044-9aa0-d43204d74672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8166e9d7-074f-4c9c-a0c7-148343aec2fb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca46df94-f2f3-43cb-be2e-e4a3d4cadda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0667111-4f57-413c-bb24-f63a9925d549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed405eec-5fe7-4f8d-821e-1194dc302cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b31c20ff-aa22-4777-9915-154e148cf73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba430eb6-464a-46f9-8686-ac1a3ee2389b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aad0ea0-c2f4-4160-a051-b6f684569f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb678b0d-e47f-472a-8d6c-e13a3a140b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc5379f-eced-4e12-991f-db68c56e7944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73c014e9-a859-4f92-b86e-598d82b5a5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a16bde9-5f9c-4d76-bbbc-c87d1678a12f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efea436c-531c-4286-aadb-c5bd35cebd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e011ba0a-4b34-42d3-b09e-4d6469f543bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eee9966-c8e3-48e6-bba1-1a8148f11898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b129df32-8388-499c-9749-a144d476497b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a687ad-27a8-4e46-b6c6-a1c433848723",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d9d241-2024-4085-a929-10fdde28396f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547d40c6-d9bc-4a35-abb5-51db034846ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e923919-fed3-45b0-b99c-3e8c0478fc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0860ed6b-3529-438e-88db-739667faa485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3d6f3f-bf1c-49fd-8b94-89f193bf27af",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6841c87b-b2f6-45d6-96fc-493e37bc6db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fcf7cf-fe56-46a2-a2ae-1e1acc7a6c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de69900e-98d7-486f-bfab-811ddabebf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e982276-795b-4102-8fac-e379339b47eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954c7883-297f-427f-8442-d78f7ebf105e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058f5e00-66e6-4b5d-847e-d66fb16c5314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e10f3f5-1a25-485c-b671-5d98643651c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bd94ac-ee6d-4660-9b79-2922e03b0f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29eff8f4-48dc-4326-be33-f746d9af9535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d24e14-f82f-4873-9d9a-66b9561528ba",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b05260-dbdc-489e-b7af-c4517cdc9a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682ad5d1-0c85-47a8-af6d-bd1e46ace2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b7e51d-8678-4dfe-8d1a-c0d25dc4a713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "215e4087-6ef5-416e-a179-c88a77d8fb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa478442-4f16-490d-8e97-f0fd6077c9f0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bf2499-58ca-412d-b3db-60b299588e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285f14da-acde-421f-af63-157759a9d1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f5bed0-00b2-459e-9ee6-6a8cc3639ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23eef905-9af8-4cb0-9684-73778968148a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9c32df-e026-4e3b-9c4b-c033640063f3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385de490-f25e-4ff5-83b6-6e31d97b6e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e54509-0f70-47b9-bad7-87d9951444e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeabe1b-03e1-496f-a0b6-9ff9d6c534cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "683332de-5b24-4254-88d3-23622a65e62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7470b9-91c8-46ff-92f3-39544a8f2239",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4adde2-a0a7-4823-b0cf-b5a50c774978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d69cfe-87cb-47d6-aaff-16f3c7c823bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6149badd-feac-4dbb-a978-de8ceea6ae2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb391bf2-a065-4f07-882d-237cd8751d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916ef0bf-3bc2-4996-9404-4f5686606af0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e299cc8-d5f8-4d35-92c8-fb291239b516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d04f37-1dd3-44f4-aa62-c54f0ed5c465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1679fe-3348-4f50-8663-59d9fb25b371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "256281cb-870c-40e7-bf45-0ec1ea371f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f93ffe-a3b8-4c0f-9608-7351721dd7bb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06366e4-34a4-467b-9c0c-44f4fdb52d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0852e7ef-14ef-4fd2-bd18-179f40c105e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856699fe-6202-45f2-93d3-4aeed25e1323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60272066-69b1-487d-87d1-e8678caaabb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9395db4-2d8d-43fa-9d2b-2842c29ddbca",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d34b1c-92c8-4a21-aca4-0be5a39d8998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6596c11b-c3a3-4c5c-af4a-6c912cafc564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9df6e24-7783-4020-bf4a-3c930b3f6554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c036448-6288-438c-9293-17c74b8a9c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568875bf-6b9b-47b5-a8df-11faf2915672",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90ef375-a2e6-4794-98c9-5fd187dd57c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695bf10c-06d5-4ebb-b4c1-d42d92293b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73abd3c-733f-4805-b70c-4644a39d1fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64d84d1-749f-41b9-b4df-614b5fd57082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4118772-7624-4fb6-a36f-9546a5d54e3b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ece2b1-1593-4b55-8e05-00ca3d55aa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3204fab1-5ce8-4b0c-abf6-f49a19e59665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d83e48a-c7b5-46f7-aa51-9c32e02873b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0608fd-f8ab-4923-84de-762df8be89dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4c6aac-a256-4dea-af29-00337ac65cb3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6b6174-44a2-408d-b65c-63164b9b2038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c6c357-db30-499f-b157-2e18c13d237a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cf0099-59b6-4ca0-9c45-e3f911171013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c890572-714d-4818-a085-fd4ea94effcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c974d3-56db-43fa-8ed3-11ad5a06f177",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bb106a-a9d4-42c8-871d-aaae38094dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1044c1-c012-41a8-b9ad-fc7ad4650a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fc1cef-8ada-45ee-be30-62fba99b3863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd9e062-480b-4b6c-89d8-8c4f965ad35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065a1640-1abb-4643-9031-081ab8e2e4e2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0493ca8e-0558-45e6-8a41-ff29e4af81ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce9d74d-30b8-4ac4-ba3a-111d61212a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e800f9b-0cf8-46c9-a48c-99db8445c9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d258d54a-a8a7-4d46-a6e5-ae1fb23374b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a999de2b-9d58-4119-86d7-6d205b654da1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b683b3-5218-4fbb-99a3-17618c6db2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5937986-cd81-4899-8709-881950f51975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b442c49-d68c-4e91-98ac-1d37074e3559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "572fda23-8683-44ea-a40e-18de50f6c3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06c103f-e980-44a8-a06c-ed6c1f6452f6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd07930-5ae0-47a9-8da6-53087396bef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2f02bf-137b-4970-a242-ee4d4be835ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e07e02a-f0b8-446c-aead-93f70197b973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9def611a-0359-4b8e-8651-61930de691ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642a5587-add4-4d82-bbc0-617374ba3cde",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a920eb6d-35c0-4cca-aa49-b1c09593d684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "523965e5-20e0-4b70-9ff1-574bbb306948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89499993-f231-4202-a198-59bbaad652a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1adf0a19-ddd9-4a23-8a2c-98a2886d7bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2222052-632d-417b-8718-cdbc4b0f5668",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4af7d2-03dc-4750-8bbe-a74c09e09479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e761e117-34ae-4332-b7f3-8d062d8eb3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2ad579-366f-4e99-9756-ad9aa15e9176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcc1514-f512-4b6a-87d7-2b73a6d84ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57ff49f-aadd-425d-bd14-64d249590ca6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7167b2f4-998d-4dd7-95ff-be7c86deebd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a4808b-c2a8-4f7e-86a3-1742adfe94e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c62b33-035a-4d1e-b152-685b3588d8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3d4e8c-8f43-401c-acd6-877d536e973b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749c1cb4-f4f2-4d67-abd1-9ea76f4072f1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc5fb14-efaa-4938-ba2b-95a8d2070fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a4dbbe-71f6-447e-8bec-2745f72534ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1983607f-7045-4650-a61e-12d0f39bf74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac04532a-c5ac-49b9-b29e-89bd1cf894b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313a04e9-7f7a-46e5-9f77-07d9072f4cd5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412c08a4-4c77-43f6-9d26-591dcd6d7558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5ae4b3-4f80-49f2-aa77-d6ed35f6f4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d894180-91fb-43fe-9045-b92f1ab5d510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "003648e0-230f-45d0-8276-ab8ac8f3e902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c93a3c-0128-41f9-a135-a13449a3dd1e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5b0696-bd91-4403-8389-bbcb31c3806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82021b4a-b6ad-4c0e-b3b5-53566e19f22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6681b1d3-c82b-48b5-b50e-3dcbc2230112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d8758f-61ab-4bfc-9718-57dceda6c4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d637663-2d90-4455-b5e3-3046a30e6b8e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65de1ae-4ac0-4160-bed6-22176072da95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b29e7a-319f-48ff-8039-c60970873cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27e0b7c-0a3d-4361-8807-0d86729a4918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b1eb27-caa8-40a5-9459-3cdbba2726d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59973ea2-f52b-4aed-af10-ebe0a1e24b70",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e20cbf5-edfb-4ce3-9f59-f58871068dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a54bee-28fb-448e-af3f-bf163a61470b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178684e3-2a70-4758-a1a8-481fcc5ae45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfa2fa1-a490-497f-bde7-851db496f014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f4a7a1-2b8d-44d6-8aa0-dc5e24c41554",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e35a4c-ac63-463c-9081-b54a34d872d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ac4b0b-a0fe-422e-8f28-a5a427884bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c0c368-7de5-4146-a9c9-51d7293f3c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "19989b52-cc51-427a-806b-ad14de2be1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a59bea-306b-4a74-bcac-0e4d71e7bb33",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "addf42ec-2ca0-4d11-970a-fe8d745a45c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25943a5-ea27-4856-9255-7c85e01ae681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ba218e-6ed6-4b17-8339-1338ac09a6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b83130c4-4ce7-411d-865e-8bbf0d3e6c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae07233-3d6e-4436-8e07-9f1ec7a5e297",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fc9cf1-809e-4778-9442-7db08835c8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a2a476-d8f2-4abc-ac45-4ca72264fd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12af5cb4-5ea2-450c-99b1-17c012882ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bfe5576-f1c1-4aeb-9a92-ac4af7b1cb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d2166d-07d8-4b44-ba42-289352afd90c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d191ec56-b5fb-4ed7-9149-28ce7e0696d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15579926-5d61-48f0-baa5-b7e8bb0d8d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653c1477-0353-4f2d-8955-d6bb06665318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d967eab-0529-4dc8-ba97-55f43236530e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e2a293-37e2-446b-9e13-fc7256cd54c2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99dd722-055b-4cce-bfcf-69c3afb4fb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47d6991-e968-4ce9-add8-116b15c4356e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ad1dcd-2a3a-41d4-987b-973476743470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c16af3d4-66fd-426d-b49a-260cfea9f3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecd057a-f71a-4321-8363-4de41181708e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fc6abc-51ac-40fa-8b44-41393c1a6b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73853fd5-c92c-4177-ac68-12f421f4f3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5785affb-df95-4200-98b3-39111f328895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c29fe596-b6e2-4ae3-a5f3-07b0d6c91480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a484c14-d3d1-41b2-a58f-91e9ef66360d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3204dc-b5d7-4a51-bfc7-17dc0e6d77fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbba113-a592-4d74-8cb8-0280bcdb973b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf26d6be-b8c6-4d53-b0cd-a699870765d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "562bff27-d403-4bf7-95da-b9f58443f872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136e035b-3d3c-45ae-bbcc-561e426172ca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e557edb-335e-4ec2-a5e5-9652a318b6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20adbfcc-da5a-4028-91a5-ce6090dacdaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b9afe9-9bdb-456f-bb96-d9ab63b0ad4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "97e15894-4109-40b1-a49d-0b1d5dc4cc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43f2114-5dcd-41eb-b6b0-2dd096cfc39d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c495e973-29e3-4749-a990-cf31e675d6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c0d7f9-dfdf-403c-afd2-53cb61d41ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3bd595-0445-4293-8858-73f4281e5ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b10ea77-a5ef-446d-8ae2-d19ae4d3bd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc784e55-5e2c-4e7b-abc4-78ec2b9f3eb4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b606c2a5-970a-4ea1-ad0a-cd9e2f30a085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88718ac4-c31d-48a0-b77e-31d608d06fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f4fb73-0a16-42bd-8365-3e04584b9958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc302e1-1dd5-465c-8ef0-9ca1650ac33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ea6f18-151b-4215-ac43-76cd573e9c27",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2696ee-4f8e-43db-ad41-0f7b6f198ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bc0ed6-9387-4e54-bd58-c18d620c2088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc5ace5-c44a-43f0-992b-02b578b8380c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "052fc819-4e2b-43e9-94f4-ad91bf5be5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b569227b-d22a-4605-869a-d35ca311333b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57a5c58-53c6-4a63-a4bc-69ef98cca641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d454a123-16e5-4e43-97fd-dbabc1c84c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af90131b-56b4-4b86-a100-1230485d3c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc45d8f-e828-4f83-95f2-c70d94971a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b502453b-3b56-4bf7-a438-7eadef65053d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8f4310-f64f-4781-a321-d9a6fa8c7665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b217d1d8-0367-4d80-a21f-0806324abbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23603a60-d58d-4f44-a785-3f0671ec1668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c3a8b8-ab8b-4659-b022-e22afb714d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b196a870-c4af-43aa-a255-eeec8373a655",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f55920a-5ba6-42a6-9dd1-61c5c808e1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5ea1df-1c5a-44fc-a045-c3d1aa3e9aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0554fc-c7aa-48fe-b7d5-685438c9f334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0efa6c4-288a-44b5-9f3b-6482c3ff1bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a676faa-f3c1-4a2b-9a14-1746b31343ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1affb08a-7e14-44a6-bc5a-324fc52ff12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d2587e-f286-4705-80b9-5a20dddd6e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e404b7-81c0-42af-a1da-f5ee9c1328b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cea75de9-0f83-44cb-91c9-842315ecfdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd3b2fd-5fc3-4038-b0a1-c14803a25ab4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e0631d-1a56-42b8-9b7d-ad233ff88dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4915ef-97b0-433c-b1e9-bb0924810778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd8a14a-a7cd-4b5e-843e-ebc238967d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a49f61a-c05d-467a-ba76-1bc843bd1412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598dddca-e3fb-4ac6-b187-2a1781d0f941",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560ebb02-0a72-47fa-abff-2caf916d119e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d5054f-1081-46b3-b8fc-a4dce7333ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f025996e-e2c6-46d1-b9ed-c3df18939af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc34c12-4fde-4354-9806-d12d89a12118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf27918-d4f6-4f77-bebd-314be9921591",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360c6572-e9b7-479b-a8b1-5fa58dbcf62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d30d7f-fcbb-4516-bba8-a24e996a63ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cd25ff-6c31-427f-ba5b-a1c281a137a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad88644-f36b-45a4-ad46-74b4ad271ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993b8819-f38b-4c25-a657-70cd22e740ca",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d09ecf-5c3e-4c87-957d-8e412b408145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e78da53-7a84-4157-bcf3-ff1b03eb8788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee239b5-14bf-4eba-9e2a-796d1b9a3fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6cc0cf-80c3-4269-8589-1b48041e89a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7e9a20-c40d-4cd8-bf2a-13c2e1016e67",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957b469b-fdc7-4b3f-9087-ce460e5f8edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93fcf32-3163-46c6-87d6-4987fb54850c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65218d55-de4a-4597-b075-d976dad26fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "24bc0ce0-a906-436c-9941-dd2a9cabd02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7107c50-59b3-402f-9bb7-701b625265da",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f7c011-5d9b-45fb-8360-3564c548ec51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f30924-e4f7-4bd1-af0b-954acf890eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951707bd-e9d9-4165-9cac-68f53b0f5b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3206d6d-3eeb-4492-b3ab-298602a14a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd78eab-b108-458a-97ac-aa7168c2a8d8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c397c48f-f679-4826-9f79-6bec8b461ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780e90fa-64e3-4ff8-ba1e-e36297b303c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558e14b9-7422-4b37-b304-09c8ef15fd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6a31d6-413d-4065-abd5-b3ad9de6dd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db005ff4-c41f-4507-8e93-b14d1993ba01",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8486a7fd-75ca-4a4a-ac8f-1928369ccd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf09a83-2bbd-41a9-82cd-6b5128139cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c8cf88-982e-49e0-960f-fde7e6471625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5064aab-58fd-483a-b049-d6c85091be2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86f7f2c-592a-4f4c-83fd-85ac2f6d245a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465e1158-ebb3-4c00-ad46-e3f8ed9eceae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83620f1a-a1f7-4c37-b8f4-bfb6a03d72cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cad8194-f4af-4174-b49a-fe3731d608a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6186ee2-524d-471c-bdff-2ef8f271c14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c978fa33-b8d4-4b41-8cb7-900c39f984be",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e483ba47-c1e6-4eab-a6ec-007e127c72f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fa5e37-9d33-4d9b-89c1-ac2b4f5b0e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d8900a-150c-4ae0-a368-cd8db3e54350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "59e680a2-5b0e-4a7e-ad17-42c97a39b9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f9a824-0c18-429b-846e-cb25e9e40dd9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172b6b80-57a0-4974-b407-8dc4188e7ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb2a307-5782-45de-abd5-102ac1b6b8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91bab0a-ee3f-4721-84d3-18816b2236c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f03827f0-fa1b-4273-b50b-e97a9e79d39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58f60a7-5b26-413e-ac12-3c5b03d29937",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8978522e-b8e3-4110-b768-cfdc0244d517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2a5db7-4adf-426c-b411-108c73398168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fbaeec-92cf-4d63-a1bc-8c7704fe3481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb89d3d4-b718-472d-8f3d-82193f990994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23046768-e2da-42df-9f11-8cf8d82ecb39",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a418ea8-6b0b-4ccc-889a-3e580118b2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021b4884-835c-4a04-b0c1-d4c6aeae6085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edb28fb-c1fa-42d5-8916-d1e34d9860ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8806a4-cfca-41d8-b23b-177dfbb0e1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0220f5-6cb0-43f7-bc1f-c8e17b53fbdc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bc6d55-f3c1-4575-8690-8fae198a44da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa6e9da-7bb0-4815-b08d-8d841c33c1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765a701e-eb7d-4fc0-a838-a740ce22c562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e6516f-fab5-49ca-9d4e-9a139f0a7d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f846393-ebcb-4424-bdec-2f3faba65c8e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b85f12-0fc6-4c28-8233-5bee5570b148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7b7a8a-1e9a-48d4-b9e6-37a31d84a5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541fff62-a070-4f1e-a11c-40c4ac958dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab52f267-d88f-47ba-b31b-485810215958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fda469-fcc1-4c6a-a1d6-b70804f77121",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66a8c25-66f3-4cdd-a7aa-0fc2850d0e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903691d7-2d7e-468b-9616-c7a86017be4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dedcc52-d25a-48f6-804a-4310eeb5bb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f16c0812-1d6c-4c98-9a67-72e6ed9b4fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d3d964-2847-4dc6-9758-3945e7d98048",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a325922-07b0-465a-a2c4-9e4fa1590cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3901d4-7dd0-451b-8f6d-4de1f4a9589d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2612bd-38d9-45ff-90c6-ee776b9f21e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7413ab-46b0-4bcb-b7cc-79b47703734b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d12117-7d1e-40de-aaa6-3434c75ea35d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1035d40e-6315-4160-8841-a590882330f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b99f9ba-6d90-4533-8dae-1f6d9d3754bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778770c3-ee38-425a-b457-802e4df63324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab70be10-6363-4f18-aefe-2dffa967de3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce760a27-69a1-452f-b17d-061def66da8b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663b60e1-32d2-4ebe-80ae-27ed7302fb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8aa0f2-486f-49e3-aae5-03a726dbe262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f449c1bf-8a7d-444b-8c3c-9cfef9e0160c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c499da-01d6-4213-8f59-b480d84d1323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80610378-41a4-41e2-92aa-13603da478cf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e0da9a-90b1-4ebd-b1eb-0baae3848ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357fcc0e-972b-42e2-be9e-42dbcc8ae8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a66d91-c43f-4867-8778-0564e589869a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a096a42c-731e-4504-8916-2342d88d51fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e9f83e-c966-47c6-972c-001bccc125ba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9365a815-3168-4b12-82c8-600d21a2fdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81c66f8-eeeb-42ca-87d9-f6eda9c496ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ec381d-ca64-400c-ac16-ea4cb7bfe6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aede990-c549-47f4-9d42-1d1a3430754d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca10446-99c7-43f0-aaa3-82ca91e3414e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50244d1-d119-45a2-b84a-7d8d65ef3981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac5d71f-f804-43df-81c9-9dd394091cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b470309-0c54-496b-a1ce-f2f202d1cbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6f7506-5ba2-4270-8a7e-077f2a04996c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddf6bcc-f035-4386-a929-f0abb6708e27",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e99c54-129c-4ab5-af50-1154e57627ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e13ea0-e22c-4b62-980a-8c135d94db0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af12f473-6938-46a7-a142-d5689c69c231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "351af464-85f7-479d-9f40-81ae47a21a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce50168f-ea38-4272-a6b5-db53db5667d7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97ca010-8777-4768-b83b-222d8ae0f664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c3a95b-b659-40d2-928d-42007a9abef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ba2701-0f2a-450c-b360-8824f8a81cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "706493eb-2c84-4650-b8e4-9b1337fafc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b62a8d-e13c-449a-a87b-63b850d5499b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1eeb4e4-399d-4adf-a99e-74777f191519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eab9efd-f5a4-4662-a0a9-8fc6252427f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2647358f-38e4-4f00-98cd-704d0d2c3446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15a42efa-f47c-4b3f-8b07-1c27650ec2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d76afa5-d611-469d-97cb-bf3608be6051",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfd88b0-2cf7-4357-955d-8acbbcaf1c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681ea45a-e33e-4d57-abd9-2ac6f84de0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635b0e8b-9f49-4692-a5c2-737f7d81e92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d4e86a-1fa3-4ba0-b7bd-93f2f25e881a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91abe0b-57f2-4b72-82f6-a6cdb2f9a2c7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d5887e-21ff-415e-879a-586e22e2e560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977ef39a-30a5-4fab-add7-94de0c84e2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7414b1ba-36aa-4eb2-ae3a-1c7ce1c8a57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e52fd7f3-a9ad-44e2-8fc4-79a616c90c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac9b060-3844-4fdd-b7ca-fbaa7d4797ed",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef018ade-36f0-4dd0-87f8-13bc4c6c9123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48473996-730f-49c2-bccf-0937c6084581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbecc8e-84b3-4f5e-ad52-d44f40a3ce34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb08856-1ff8-41e0-b18e-5ac1dc7424d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84118a5c-9c1f-4bcd-a317-228e41d45bef",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f17605-c2cf-45bc-b423-e36151e5dbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828f3f5e-c35a-4937-88c4-26f92ab4b4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a717250-2094-4c89-9593-9c8fb22265ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4d3871-e38a-4e94-8ac7-512410c1686d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c599de86-79b3-4f83-b837-784906715706",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32248d8f-be2c-4821-a801-3c7bf34fa178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225f5a4b-0b03-4c50-8e6d-3a29af8e69a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3cb768-54fb-4fe5-b747-2afc2e1b19f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a436fc-af11-4f4f-a86e-25fa1a84ad9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8c7d3e-beab-4aba-93dc-7309c550f8b7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52003659-77b9-4dd1-a020-6aeb4eb7ca27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f4a309-8cc5-4ccd-ad54-53d961c2e33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143c439a-57d9-4d36-9dc0-6258dc5cb7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "41ccfdd3-0614-4448-a1bc-405ae23faafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ef8dd5-0336-41f5-a9d3-e719cf17e255",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07532394-6f30-4292-987b-3cc105c5a73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6850662f-78ce-41f8-b3af-22503b1114bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f883c9-52a7-4966-8eec-ca3c85c8f406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "89b3bf18-af29-4dff-a7cc-d4223bd1c0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b528cf0-81eb-4910-89af-179b0a9fed7a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bdd12a-36bf-4c43-9572-3a1864786781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2d9654-ddd0-43d5-8fcf-8f1338f9c197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bfa61d-4de1-4a10-a4a2-806e3a20671c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "10ce09a7-39a4-4b53-ac8f-ecbeccfc094a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a4fc31-bc91-456c-acec-f72f59031adf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0f6d3b-c91d-4c3f-9bdb-efd9e64feb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8a467260-3b7b-4b17-8256-63ec4edc2ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97f860d-dc73-4b5c-adb4-c75055762dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "29ee74f7-1609-4615-b189-21bd633ad942"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8035b3fa-2fec-4eb4-a04a-f47b9a829f59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "496bd7f1-2a14-4cc3-bdc1-24d603a662ab",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e32bdfa-ebf4-4338-96e7-af9e7fd1d7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b86d06d-427b-4e1b-a8af-8f39487c993a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cbe52d-9918-40d6-9f59-9f1aeca1affc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03b1f750-5cb1-490d-b8b3-0053a1b5ef46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e83ab05-132c-4183-be6b-a7f78f65717b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7602ec-2134-4430-846a-f958f2a8e05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3a075ab-60e9-40c7-a62f-09256524a741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d73713-912f-4751-88fe-4cf4a691bf9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e465a628-d0fe-42d7-b625-221ea7bfcd20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a11d7e5-6f37-4b7f-97e5-c19668af99fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f205d14-7172-497f-9c14-d4e0dc0b9196"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eb684ae-8c47-4912-b556-698b10086925",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65a45978-f58c-4aa2-ab0b-10c9744fe235"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d575d61-90e5-4cfc-8915-068c118588bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d36a76c-8cb1-454c-a16b-d04353d96952"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1f72c167-b684-4666-88f8-d303258219fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe5cb888-deb8-4a84-b01a-3d31f40ccb1e"
                }
              }
            ]
          },
          {
            "id": "51c166fd-833c-47f9-8a59-c10a4284d327",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4d65f1f3-c726-4be9-ac9c-6bc6c3f9a264",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e30560c-f2ed-466f-93be-b704717a7162",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e71dc6a8-65b7-45e0-b416-ed7d6ef7cf62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9045756e-e602-42b5-a27d-5d2fd411b4c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf0c112f-7545-416d-b840-1c7d0b69ae9e"
                    }
                  }
                ]
              },
              {
                "id": "6877f927-8edc-46d5-a2a6-256efdecfacf",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9be64077-0801-4c1d-af02-9bb1de3322ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c99b2b00-9a77-4729-b416-cc72e2999896"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba59e4be-bfcd-4459-b962-28a966f34193",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73a025b9-a138-4cd1-824d-deb6d1d18680"
                    }
                  }
                ]
              },
              {
                "id": "24adfbb0-9208-41ee-ae38-b6ac3febe526",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "074900bb-7ea7-4a0e-88d1-849595050a6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4864cf66-b641-4342-9552-d4e154a6ef52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d9a56b7-97a5-4d5f-9273-d6b977940da8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8c87ba5a-7145-4106-b7c9-483346c12b9a"
                    }
                  }
                ]
              },
              {
                "id": "ca6da563-ccc6-4ba5-a234-e17b6733fd02",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dba68c3-a26b-4010-96b8-e9788c978be1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cb89f50-4a30-4e04-af5a-f275f2dea173"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b826a74f-4258-4c3d-b1ec-0b62d18d0bb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "28d0478b-146a-4f4e-b369-e9343ae7031b"
                    }
                  }
                ]
              },
              {
                "id": "a34fd63a-2225-4558-8684-e9bcb528d28d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b93bb1cc-5277-4d70-800c-fda606186893",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "514790cc-58c0-4fb4-a8f1-1ad57d703de3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58a11bbd-6b9e-41c0-8c4a-de7e9d9cf5c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b84f06b1-a1ff-46e7-9dd5-0ea95c49f9d6"
                    }
                  }
                ]
              },
              {
                "id": "82f0fce7-a4e1-46fd-99d1-d3816a08adae",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d81d22ee-ef5e-4701-bd5b-efe7408d97e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93d6fcac-a77e-46c5-8d90-a18f41313e13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "773f2ecf-1b1d-4337-b19b-6f4489bcfea5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68801631-415c-4782-8499-4d8cfdae6dd3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f417d86c-433a-46c7-a0c2-9f2d14346e4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "119eff78-c536-458a-a88d-7adff9b1d00e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62d93119-e6bf-4df3-bc9a-83e4d9a07d37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f46c153-f79e-41e6-8974-29fd73c5c457"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8436802f-3eab-4a58-93ac-b4f782534513",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c88a597f-75ba-4586-b86d-09827aef59a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73a6cfeb-95a8-4f84-9f5f-a52340891fb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0360d081-b7c0-4f2d-8020-0e93d9864564"
            }
          }
        ]
      },
      {
        "id": "e81d9a85-a24a-4379-b879-a732e00befbd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "87d1e4f7-3e31-4ded-bc63-640bc4e54aec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f80d1c5f-1e7c-44f7-84fa-d5ab6d1f863e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "391282e1-3107-47b8-a93b-bb86f8fce12b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f58c0f-bccc-4a15-8db9-35e52fa4a9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b192b447-3825-4114-87f7-3b708bc3c5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a7e28b-7982-45ae-afee-69111f95773d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c39f412-9222-433e-a5bb-58fb0dc4a6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b60c9d4-d347-4e5a-ad24-27ac98adce51",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106e2f2b-1c66-4dca-9871-95e031ea2186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3f1749-95cb-4fe0-9a7a-46144d13950a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3002845-9ddc-479f-8c21-d2b281692cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf2069b-a5bc-49ed-a2d2-03fe8de658b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71528c3f-804a-481e-a326-9b3fed2b8b55",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc461d5-64b6-404b-a298-e795342832cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f90e18-98be-4e1b-b8e1-3b3261fa8b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fadc19a-1317-4679-a9dc-17fbee0fb793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1dfc24-a14d-46dc-960d-bc6cf621259a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a899262d-7bfc-4286-bc36-8f0efd99b8ef",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d1813d-fd42-4554-a9d3-be859357f20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90e10d6-c735-4102-b06a-e9ef8d51e4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f18fd84-d487-425b-82eb-29c4ea461147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "558dcf80-f982-47ef-adef-47789bf82190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6769060c-b330-4d5a-81b6-f70e6d1f1276",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdedb10-022e-49ed-a5e4-10b615c2de6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a97584f-4ace-4f9b-aa77-958379ba3166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e30b5f0-32aa-4ab2-9a62-82ac9fb6188b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea2554c-9022-4d25-898e-3f977f45d978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b2c65d-22a4-405a-aecc-b87eac906835",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae13afeb-af6c-41f0-b464-636923bef9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b4e26c-74d1-4cab-9dc5-909faa7986f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a897b8-9ca3-4510-b671-39355d83a4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab52640e-940e-4364-aabf-4832b5e191b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5154583b-b946-4f3c-a174-f63582f16591",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189afd35-2090-467c-8ae6-e633a2850427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4327acc-6542-4214-9119-159c85e7506c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321c39ce-cf6b-4172-a031-98139610709c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "24df2faa-247a-45d1-a07d-2c7d9f842c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9efe385-b8f2-4f23-841a-97a5feddc4b7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399425c1-eea1-4d45-8320-46409cd15fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4787395-c86a-4ebe-a920-8a509281dc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daad4378-d796-4f9c-83ee-a64137daae92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e88d957-d5d4-4aae-9169-10a45ed2bfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5199e4c-cb55-4ef0-b090-12fcb9833ce6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64fac98-feaa-4221-aa58-ebcaf741d764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5cfdb88-3b22-48a6-9ca5-76c6a867770e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f0e31c-bbc5-4ba7-aacb-fe69f4f68377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a75239b-138e-46be-93f3-b0859a11d28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f7ca25-23b2-4114-9261-0f798cda9233",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9411f366-5d4e-4045-ad70-fded7d7105a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbdc285-c66e-46d7-bccf-9968a91bf7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d1ba12-6cda-4d4b-8ada-ccc890e881c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcd48cd-8b1d-44c3-83f2-7a7f4d0d6d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090cf4da-b889-405e-b5ca-730a3681c5ad",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b629b994-0471-4297-b321-a8acb3744cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047fa398-6869-410c-aa20-11d41f9f2876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ae347a-e579-4734-a728-e15a514adf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4c973b8d-a83c-4766-ac9d-6bec7b41d19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dac8d6-96b3-4d9d-ad03-32544459a901",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e97dcb-7500-4e23-b471-c9b0f0830023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5d7a34-e691-405c-ba0f-6b2d881c6d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b2a1fc-a72b-41f0-bdac-894e5f6fcee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7394d49d-b5c3-4b4e-ad04-9e5a553fc0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9580c0d3-492e-40d1-ba37-2259ab884b4f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a69fb25-7797-48a8-9b96-57d34efb414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c10673e-843c-4c1a-a202-f8551c2a9bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6214a2-3090-4fdf-8a3d-795eabdeba43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92267c76-b730-46c3-8633-5d4b65fb46d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75de3b1c-08f3-4642-806a-cc1906486cdb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d8ae50-dc82-4638-a8c1-2657f9637c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221c736a-9352-4064-bafd-1217c4b2eaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb823d3f-9095-4518-b2c4-c915bb2b7a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb0cd64-61e6-40b8-875f-e0ce4f01026e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff832703-7a77-452f-be47-6941e2754a93",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f418a92a-babd-49a5-97e2-c755c5cd419a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8660bf3-de40-49a1-8fe3-e54a8d29c2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57af5aa-553b-4d78-b1b4-551bfd9e1f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f906623b-f4a4-4a73-9bdd-081c019ced22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7177c33c-8645-40c5-b147-af8e9bc97908",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44516d7f-6005-494f-92b5-eb158d354e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1f0562-a8da-4d7d-a998-18a1cfa9d366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e25cc7b-a8eb-40e8-aeef-817a06064d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "55902db4-e1d4-42c8-8972-8e626475b585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78888a4-aa51-48a5-a4c8-4b359a08c01f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff961c1-e36e-4417-a266-01a72d29e19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fbb618-acbe-46a1-ae6d-e9767921ad71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015dbbb3-f009-4480-9588-998d173f5a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d037bb4f-5814-456d-92ca-ab4aaa3d0647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea185f3-d27f-42a5-ac16-8d3778400739",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874210e0-e7a8-4ec4-88e3-56c74a673dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459e379e-72c4-489d-af2c-7846f13c4aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f153cde-ff7f-493e-8bc6-91e7c0add09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2b7a5f-1b7b-46ee-af8d-7bec7c2b160f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd43b01-0431-462e-b2d9-cccf11fa099c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ebd7ca-3bc2-41bf-a997-f7224fc383f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fb63f3-df36-4b7b-8057-140ad9883242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5935e6-a81d-4e3e-b986-260236f71010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4343a4e-5269-4a3b-9a10-d9297446e1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc651231-c988-48ed-bb2f-9a5d9762f7b2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a001cf0-d93e-447c-98e3-77f3d005fd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bdd42b-70eb-40aa-8d10-c919cac49795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdf221d-1f28-417b-8d44-ebac904c0af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f8b9e8-cc2d-4c4a-a518-b78f6a35407f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289f7898-46bc-4ee0-8762-6905037f9d56",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e80e0c-0f96-4d31-933d-31673409970a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6da993-9f6d-4cd1-86f1-c9257f4db218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a361c0-5525-465b-b966-2f1cff14763f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "663c9c42-4124-45cf-bd44-52e06f89926c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc79c85d-3121-4e68-87ca-c069361b09c7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100f18b1-b361-4472-8fc9-c8c50e013237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d62839d-a43f-4e9e-a144-3921a1e8a653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b3f01e-64b9-4d28-83b7-698d41d07154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff8f92f-9037-46b0-89f4-cdf1914573ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3172949-357f-4daa-bf56-274de9dabe46",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcd207a-6098-4ed4-8c95-22f4a6194cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc896e30-2b2f-47e0-9d79-1642278eb65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5389e814-82d7-4ee5-af3f-cadaf47a0670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcd0b5d-2c70-401c-b1fb-174bb8adeed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2f7af5-3fc9-4648-880f-6087eea67cb3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51925aa3-a18a-448c-b259-2bf6fff4454d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a3dff8-0662-4374-9450-2894fffc5d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d86f7dd-494c-4535-94f8-a9f047a766d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28402b46-7e64-43e7-93e8-d1a6462d9ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b6463b-1179-4dd7-9653-c0b2ea009c7e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42619a6e-0621-4fac-85bb-4d319e591b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32254e2-fac2-4bbb-870d-fd55c7b95401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a61caae-c99e-431c-8863-7194ed98aa6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6c2d38-ec42-4359-8578-00f755592412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308b3e7e-5d45-471c-8ffb-8559c641ce1c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00fa654-8a2d-4138-a995-57e95309875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b352f26c-c1a5-4588-847f-e9572e7a10a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9403836c-c706-4147-9027-a816a08c46f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c91f8e77-4116-45b7-b2d0-f06ffe46c622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771118d6-cdec-49a3-a426-f8f5c9d1d0ad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e257c2d5-6bd4-4968-8b83-e37d5f332bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eac121f-344b-4340-858c-b14c7711e319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5f5412-f1c9-4db1-8dd4-6b79af42f2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b127ef34-77d4-4153-ade5-80ac62b81f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6794f9-fe5e-4c59-b27f-5fcd1a5d0e98",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2572489-ce96-49b3-a88e-b3e485d376d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3624c3-c100-4df6-9f91-0ccdfde9bde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738b38ac-9e4f-4104-a65a-e9d8ffa3f716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f474be-85bc-4401-accd-9b26589d35b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b829822-8406-4b2a-a3fe-615840eae984",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabcc34b-7059-4722-8a6f-2ed2d85827ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e26deb3-8e80-4f9d-8cd6-915c6f55aa07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4f4f6b-5963-46bf-85f6-2ec5620c91ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e037e510-a687-45e7-81ac-69076cf47d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0b9d2a-1af7-474c-b119-04a25bfc9b01",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fb94ac-4721-4324-8a50-5720a6f7ce67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8dad28-f60c-4af5-9f73-d5ab1443f128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38730c3a-a6a4-4c25-808f-8e1fbeb9c7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce765d9-3094-434b-ae84-0a0627cf0da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbcebd6-a079-48e7-a414-793f02bd9a0d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fad1391-e52c-47d2-96b0-0107d9f52ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97392538-0652-45ec-9f1c-23ed6e222b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5f34c5-a725-4452-940a-bf2a3a5acd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de04889-f822-4fd8-a195-4ddf4314d109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da65205-6462-4646-b931-fbf9bdf6d200",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec2ec8d-2605-4d89-9a50-4c64d4136383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91dfbc66-1a5e-4599-bd4f-d6bb451a86d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09d7a9a-082f-49f2-8fb7-105aac89d6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9fa137-fda8-424a-8125-7a1e97483332"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b3d8424-5842-4a43-9374-ce3078a6b57b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49a269de-b3a1-4221-8035-ed28ec1b7db9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bf23af-39ae-4500-a417-dd8ad0acb169",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2677a1-73d0-4fba-a51a-275cec5d899a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1a51aa-ab7a-4062-ba90-d7b4d600eaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7aafda34-10a2-4912-9ae2-d5196ced23f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475a063c-592d-42b9-a8b6-2bee8ab68ce6",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c3aaa1-fcb0-4e45-9cbe-34e21d75ece8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0740ea5e-eb83-426f-897f-e31026a90d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd0cbbc-0186-471e-b772-1a5edb9bddbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54630f15-d30a-4cd7-b515-5d4bc1bb6cfe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8136af80-6416-49c7-b435-b45b8930e453",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f752ce32-6a3c-4c2b-801f-eb227d082dad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ede6765-9e96-45e0-a993-1e826a06b8a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f8f34d6-6027-42ee-a3f0-55f5d6c576dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4497263-3af7-448b-86f8-27940a41a9b4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2decc534-0e54-4ba7-a201-bcb113448b56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd0ace94-218d-44a9-8bdb-f87faa53a53b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1df67739-77a2-4fa5-a843-5314db1c8743"
            }
          }
        ]
      },
      {
        "id": "b8ed9681-2fc6-4ca1-8529-adf395552d46",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3eef6c1b-15e3-46aa-abb0-28072fdbf183",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10cec244-d401-4ae4-8504-d7d10dfde6cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6d946ee-2367-4ffc-ad34-311f20dc1098",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b978042c-e727-40fb-ba68-4d180b1ac6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8c61d7-f7a3-4070-bd04-d7222159ea0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a835e3c5-5243-45de-8057-300350cc5021",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abca5444-1b1c-464b-a81c-abb41a9ce42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f49992-c29f-4aa8-b11e-b7f3d8734f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888835a4-f72e-4ac1-bb0c-955d19bce9dd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cebaf5-a798-47d3-905d-4357699c56ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8201f21e-f249-49db-92e5-fe286d569ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae412435-4b7d-481e-b950-9d27e90c8883",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff02846e-9e4f-40cc-b17d-820306cdc4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c1890b-cae5-49d8-b9d3-f26806d3ceb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8fff11-cd15-4919-83d9-2cd7fda97c52",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ce8c75-f5b4-4b97-9404-70ea9d844d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0cfb8e-a503-4f05-9cf8-c41d8ccc11c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9144ee4f-e0df-4f42-898e-fddf9021d820",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14095de7-d6fb-4e1b-b490-641b6c76eb2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdb217a-8698-4561-9136-470413549b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383b8412-daa0-4952-a53a-2770db7c8779",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3d38b9-96d5-48aa-bb38-5074f4cbd435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5baaaf6c-43dd-468f-a1da-d1250917aae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db88b076-6727-4acd-a641-5dbb653e9bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802f8f5e-d581-4585-ad6e-2fd0d5773bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc1c12c-3b90-46e8-b684-acd3b00542ca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef974fb-dfb8-4a90-8c4d-0404daf9d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82dc0c5-296e-4983-835a-3c24b5773fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31deb04b-b542-4480-88da-ee74d7d80c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c23d2b0-7768-480c-a65b-71e98d4906e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6100bbee-25d8-4a71-be56-6ef8102d5338",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afc5d0b-9a43-4c53-af5e-ff091bc2ec94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50c43c2e-8b48-433c-8f44-d098c33eac58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ef5bbe-f10d-49c6-98bf-a879651e4eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046e4d14-72b3-4723-afa6-be107059169b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b828cf4-63de-4b5b-b202-bcc68f1232c1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad56b69-6fac-431e-9d8c-c83400ec08b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82d3d9b-c0f3-4651-8fb5-ae34c3e3e2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930f3f40-1482-48cb-a491-90c75372c23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca8bac3-2ef2-4d09-87db-b1cb5ea56535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cd1e16-404d-4eca-a5ae-9e288024a15c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ec4ce1-b7b4-44ed-8e5d-030269ecae56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eeb890b-5803-443a-8d96-41d739d471cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2eccc1-9895-4d8a-885d-36ee5d3ec0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919c9923-66d4-4163-b175-6b3f05a08d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d0a524-0f87-42a6-90d8-2adbeb562e09",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ed2ffb-cdd3-4cb1-bd6f-338ff6d32b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452c7af1-6880-4ffc-b6b0-c23de2dc9ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f130727f-544b-48aa-bcf0-668fbff4c4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb904630-4689-4638-ae5e-beebc1d6b03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c73d89-ef22-4be3-8506-9afdbbd155a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48ea058-2288-4998-851a-19b2433cc6ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab30517-1d00-4070-9572-7f471d4a94b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8643c60-e267-4700-b919-4d31d3684528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aeb7257-9f4d-4b47-b2ad-5f63080d22de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17fcb16-dcc0-432e-8338-1f1421f29744",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b9532b-9b3d-4900-a29d-bf2bfa63c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ddbed4-f5bf-4e59-a288-d25635d23b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde68945-119b-4eda-bd94-d29a0fcfc514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4ec35f-af1d-4fb4-a6a5-0d6061831571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60fb00e-0610-44f3-a1f6-f9c6390dd4d4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46529e3e-4189-43fb-bb56-08a2ada97e85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0181695f-0180-4b01-af14-347429da2f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb06ab1-796c-4e9d-9f96-ed5e655ea01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ef6714-bf3c-40e6-8690-69ced9740798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f8273c-8077-41f3-acb8-b1728faffaf4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e137282b-6e17-407f-9f68-d5784b561ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acfa485d-0c61-44f0-b157-236b2b4fda89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacad69e-838c-4972-9c7f-658242cf2aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d48432-bded-49ce-ad9e-5e1178b44aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a70ba9-aec1-44ef-9ff0-e1bf7cebc4d9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c50f6fb-f49a-405f-a78b-7bcf3fc1ec5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1446189a-3e6d-4c23-9111-b1f6b6246455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c64b239-7c5f-48aa-a81f-1d7aa92ec7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edff9b72-8091-47ff-a9f7-1a85f16b300a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4aef68-34e4-4489-a8bd-8c454549e0dc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b3945f-45ef-43a3-83a8-a202c90d2da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a690ea52-2a35-46a2-91e6-a2eb704fa237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093a934a-0a90-4c19-a03d-1fa06c0d1533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5634d0f9-7732-4a4f-aad3-ee1ae8d566e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8080350d-ed5e-4c61-ba64-5b3f3ce49f38",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ed9f43-f0f1-498c-a6c9-d966a51a866e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c132450-6b5d-45f6-ae0a-503b23d3e182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da624248-6708-4cc5-a5fb-787de6148b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e6102c-f998-44b2-b284-9e20159b0882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ea5c91-545f-4f7d-87d1-27e4a3ebb69e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d9cbd0-ee18-46d0-80a0-2531c3d02286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247c1392-cf5f-45ba-9017-4eac0d6a2ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07aa7ea-5242-455b-8258-a7e185201885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034dc40a-b9e8-4687-b9a3-502bb59b46f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5075e19e-90c4-4481-ae64-74d172984350",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4aa0edb-7f03-4e16-85b3-5d802bda6a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3e7d10-e9ea-443c-9515-2d1b699d54fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c91cc8-8c12-4c5f-adaf-7a367cd5f4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb724bd-f8aa-432e-ab1b-ac4bd2bc6986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eacb7fc-02f8-49c4-8b14-d5e98059a79e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13003aa-c4bf-47bb-bdd2-3ee2c1e8137f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77eee70c-0da6-4059-a5cb-746109728362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b431bcc-bc2d-42f6-add8-744906c81a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645812e9-78e2-44c5-8e79-10d20d6faccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1a118d-a4a7-4211-9fc9-95758c194e28",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7a1cd6-451f-4ba7-a4b9-1ce2f77a121c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca361af-161f-4eb6-af43-091706e272dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2939ac81-c834-4325-99a4-e06262a0e6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c4df0e-ca3e-4f4c-9402-31d1eba35bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f0df31-0674-4deb-a84f-b6d9283020c2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9393708-d7df-4ae7-8dbc-9c8503974f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b6eae24-62c2-4b13-9328-55aa85520951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbe6ee2-4aee-47d6-b63a-be2f7afcb69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53db9fbb-5955-4178-b0ec-791148155c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de30848b-8df0-4339-9632-8409fecf663c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613b5bba-8a33-488c-aaa7-23a2c87c0bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afbee597-2abb-426b-b208-1258768968b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910efbe2-1295-48d5-8342-33068ed6ddc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed21d3d7-431f-4995-8e04-74e4deaeffa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f3e96c-829c-4ac4-9917-8ed8d877864e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbef0015-0db8-4562-83ac-9e78c6bd9093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "356b9ce2-7c53-4b8b-ad4c-6626a9fdc033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2a24fa-9e6e-4adf-a180-bc61fe7588e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7774568-0538-4195-be72-3629d24a8ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b852209-912e-453f-bb15-9757c87020ae",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2919570b-3be8-49ba-92a8-0a5ad6455428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c485d682-0dbf-40e1-a692-59fb9e61f8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d67d3d7-3997-49f6-8adf-18e13d85afe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58a9883-d649-44f7-b68e-e3462bc11d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ff194c-f2bb-4cf0-9802-4526e4a60b9b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac504e7e-f95e-4fb2-976c-f999b0620983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c7fb3e-fbdf-41dc-8fe9-fb3bf02f8b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6795589e-b699-4c1f-889d-3cf6b530c433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c7ad4a-047e-46f0-b546-d66b42f64ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8aa6bc2-afb2-46db-899f-2f38574db2fc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc25aac-c4d8-4e3f-835d-ea84b1296351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acfd6790-f54a-4cef-b7f3-73d83791ff86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9493f285-da3b-453b-982e-3eafc3daa9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60738a5-2056-4abb-9a95-1f67748cc6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45249d1d-b81d-43d0-9db9-e688f68e93d6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443cee68-9626-4751-bc1c-c1dea318a2ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42948053-89e3-48ea-821d-f233a002b21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c65b907-68e6-418c-a72d-ec1041714bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f47a0d-7c09-46e7-9bf7-1c51352aa2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77165f08-2d16-4a6a-8ec6-fe600b0ecd7d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47546b9-92ab-4f12-bfc6-8da3ee3ad59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e7a1871-dd33-4dec-a463-c61eeaccdabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f479dae1-cc1d-4fb3-8556-c06834199a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976ce451-9ec7-403b-947f-d060233fa3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678ffead-6e88-457b-9c56-b2702c54c967",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bae628-9eb4-4205-960a-505855697c4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b0d201-9c57-47d2-8a5d-49ec425ddc4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88370a0f-f0d7-4ac0-9947-d78df5ec2e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5db0ac-64b0-476a-b635-e26f7a046fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b5dd73-e191-486e-960d-264dc5acabbb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d64767b-e9df-49fb-92ac-f42146ddf244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232f1ecc-ed53-4a68-9742-aa1dab59d615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af68711-d662-45ff-93b9-7e87080518b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52a2016-d752-401c-a593-8fc370b6bb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f53688-dd8a-47c0-8701-cea82c05aa29",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabe6736-506c-45cf-8e95-978e722a932c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "827399d5-82ad-46ef-9f59-8d64587dc865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fce500-4ed8-4f26-94b1-cc60071749a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2adcd4-78b0-4aba-b718-b85cd0461967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb07071a-ea9d-4599-8fed-24ead469a870",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caff7c10-a6ac-40bb-8f6a-c77938569d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6de7607-6578-4d5f-abe1-b94e83425b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366ba3fc-d58b-44e7-937d-1d2d8c6f6615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcca2918-132e-47f1-816e-2ab91a5d727c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682e20f4-b894-4e2d-8ae9-c6fc4e767b7a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87e5ef2-53fa-47df-829f-62b9490a324c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92517ef4-5bdc-411c-8280-42fc03960268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689fa3db-f8ee-4319-828f-90c22ec47fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07187844-2c22-4de8-b6f5-c22284ff24ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6055b978-c379-4416-912e-59be16029ad7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f26d65-0a54-4dc1-8866-acc9c06533c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809c085d-c6e6-49f7-b51f-cddece9d9295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af9147b-6463-4f7b-8d5e-91e76675598b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51311595-340c-4765-81e3-260d0e3c14b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfc454e-fead-44f1-9629-fcd301c7e9ac",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f57ae1-ebde-4d83-a29c-7e19332d4d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e77248-14ca-4937-b1b6-f6d4c163628b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd43a6ea-7da1-4ebc-bd05-f6995714b865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df855cea-d952-4c91-9276-e403ae7409df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff634fd-415a-4467-84b0-6cd9c6f39f66",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0f9d10-8376-4fa3-9ae2-fa1f035dbb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7fb8c4-7ee1-4b15-aa6d-80477379d5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1abfc46-1333-4d30-8187-391fcc443a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c162bab0-1031-456d-99d0-6f2234ab02ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9409b7-1afa-401e-ba4f-1a59f08a6e86",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff0bfcc-151b-49d3-90a9-3272f321f022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e30303-2c69-41cf-97e8-d1fcbbb153b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a381d6-99a6-418e-8b19-0b17c7f24317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8bf51b-9787-4fbe-9a42-f1a32310b05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d88962-3fe8-414a-a7de-f74b26f1caf0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3afff34-e3f6-4836-8d28-be9390e2cf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a6896d-ded9-4053-a648-a4af17c05eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f504aa96-a05e-4ca7-b3de-00063f0a0855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7635b59d-8f1e-465b-aad1-bf9031dfa647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f7f098-2dfa-4a73-857d-2d609ff2b399",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87d34f6-702c-4c93-8960-702c72310459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635240ad-cc4a-4f27-8101-bd6d35d7c064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36fddf0-95e0-4571-bcd6-69b02a5851f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5d254e-d460-4d93-bd9f-c7abbcc6bca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dec08b-7e3e-49d0-a327-b855c146aab3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6297cb3e-e1c3-4e01-abb4-8407533dcbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf026bd3-a6a2-4696-bad4-fe1dd9536697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a699708a-28e9-4a15-b9cd-36ae1df9dc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cab4fb8-bdea-47e9-b3de-af62654ab51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe22cae-af8c-4887-845d-ab469bae9689",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de50e001-1990-418d-8c0d-af6ffb81d2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e174ece-2db2-488d-a2ae-b3d2a4e104dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbeb6f9c-08c3-4de2-85df-18fd97121c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08746175-2e0a-4a66-9707-043d7a705f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc799429-a085-40ad-ba25-6ce8b71f3366",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a8f6e4-9c84-42d0-b488-f56fe2747b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0374a864-1a4b-404c-b4b6-b255c6a28962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cff4ee-e56e-4bbb-a845-d06f55b82f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea39d85-ae89-4ee3-b8b4-f5a926fc7cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f214ed-27c2-4b72-bc15-0aaf180a00c2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382d941b-3cfa-46eb-998e-e2469d4fe7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9dbb075-bfea-4fe4-80f7-3c423abc9c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7febe801-d0d0-417f-8907-8262f95e9086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff4d5ac-077e-4d36-86d9-08dde7042518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54ec565-1881-45e9-872d-4718b7fd1e5d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24595919-1b08-498f-99f1-97c05c83dbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319e5d5a-bc7e-4d49-802c-3c6bd08e1890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308a1bc7-125a-49c9-a944-bf9ab8e90b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9abe769-89e2-4737-9893-154ba1df31b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1fe88c-4413-4c9d-bbd3-9229847cab99",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68cff3b-65c9-423c-8a38-32288691fae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aaba615-0bda-4eb0-bb38-653fb0879b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d697d0c7-d8c0-40ec-9179-b8daaf6ec468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efdd2c7-f0dd-4bd8-aa78-68eb28f995a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09c2825-ae97-4ee1-9138-ebc4417d41cb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9034be-1686-40f7-b2cc-b4e3f08c0e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971937de-481f-427e-a525-82b85e03ca76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f113f9-8120-430c-b43e-a2ebae9d65e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac21891c-089c-4564-8ae0-eb0115f90502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121932b2-1d9e-4c7d-a09e-50c6b40cc44f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5cf115-88f2-4d5d-8aad-8f677c12e6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d42240-eff7-4bb9-8c05-8f4b76754bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8695207d-2a43-427e-9371-ebb48ace35e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a61500e-5db0-498a-a6d7-9f1dbf26cbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2981ec3a-8701-4a28-b5f0-acf92941dcaa",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1995177b-2d89-4b67-a196-b33a62ddc122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf15936-3ebd-4cf5-abba-7b11bbdd3d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959edbf5-2057-4511-8ecd-1e97e3685d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e31462b-983b-4725-b118-17a3aab8f015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce6cb7c-8298-4a37-858b-48a9a5484a35",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a250794f-a01c-4877-95f9-f9dc1d1ef16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdb7622-0b88-4bae-a8a2-49b4e80aa607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5af6257-d0da-4634-8444-9ca1f631d4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c44d88e-87a2-4672-ae0f-5ec2f629afe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d821f237-f9dc-4dc2-a2c7-f22892c7f181",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d8553a-98ff-4bae-b03a-e5ebacce81d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1b033c-efc8-403c-904a-92a1caf1cc8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890c07e3-9d7e-4c9c-ad1a-4855463192d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b196eef-3d20-4c7d-ba0b-fc9704503621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c0cdac-8e5c-4f9d-a375-17e48b1f817f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362b4522-df10-40ce-9944-c4b31c606637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d23d8db-7654-4044-85f6-b5e4502aa292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be37f7c3-2737-4160-afd4-901d41da0060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b346be15-2fa8-4736-a1c0-76d3ef6c5da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbe5d47-abb5-41e8-9050-80be25d86f8f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bef389-619a-471e-8995-310f4e77dd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4650db54-6819-4b89-b0dc-f9504193a9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32b7999-301c-4801-a915-b7124d4a9995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47166b9-f83e-4714-8657-c2c9e09cae03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9d76b5-ec82-4183-a7d2-76a430f2a524",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa99a24-7003-4fec-ace7-98707d706827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37688cf0-2904-48af-bf2f-d8ada8834521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abbf849-7cd4-4b3f-8214-61631ed2223c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be59169-ede3-43c1-887e-8816070825b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fe6f37-c758-4f7c-8a62-fbf1f9ae90b7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ba6010-ac57-434a-a9fa-f944d275d537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216dfd54-c80d-47ec-a558-0db2bf712d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ae8995-3a4f-49ce-b0b8-1a6b5feae8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5928bddf-6aab-4b91-aa82-2f9ab917bdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c931123b-9ee5-4049-8db9-248dd9b43840",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8146fc24-54f0-4d07-a491-e82378878c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85816f77-8571-42c7-a3eb-cccfa20fc745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e20f12c-249c-4d35-8b6e-dfb429471623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3cc397-ebf8-49d4-a941-9ba3871aff44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c7f511-41ad-4b1f-be6e-3c08143e8cf9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5054ea0-cf2c-4d2e-9e74-b54c2b6c13a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d64ef6-05c1-43ec-9ada-5a54acb407e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e03205-30ae-49f5-815e-dbac4d8b0c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2130ca-7f7e-4902-9498-2bbfe1f9382d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9834c9d7-33d4-450d-90dd-4dd6efa911db",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f964d47-6485-4156-b4a9-ddc95d818ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7551090-6d46-419d-a041-94d27c06bb49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a63602-9d8b-46fb-880d-a7dbf080e564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf440389-7ef1-47e7-ad0d-cd9b0b58b8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80afc56a-1dd7-4bb6-8719-944b180fd05c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f16f339-7a99-4316-aee0-d0c2e8290244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7211f220-7815-4239-9376-ee92a483a17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905b7203-0e59-4c99-9321-1e263a552d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875a429b-437f-4699-ac00-84e8081235bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebfea82-ec84-4d95-b552-4a9bc340e6f4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5099e352-1b0b-424d-818c-c402b84f9d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d36d636-6cb2-403f-925a-2a19b9012f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd7f231-902c-454a-b550-d67fc85116ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c42544-d07a-4052-8eca-caee35041940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a125cd-46b5-45fe-aa85-1df1a4bacdb9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f18cff-d3e5-4120-8c01-8dfbd55c8f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5eeffff-d18d-4893-bfe0-35a855399587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725f6f8e-e7ea-4c81-8f6f-a05e389e8300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73543b3b-edd0-46a6-a414-ebe7df43ec06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33f9dbd-5154-4bd2-a975-7f8726aeda5f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9987de62-b3c4-4c4e-b96e-3881c4d11fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "153c57a9-9319-46fa-8b06-4bd22b8b46a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cde2b1-1821-4cce-88d8-adf48d042b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9da7c05-544e-41f2-89c8-e0ee9e398830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bd4957-00f8-4132-81da-01206fecbc3a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53fd45d-31a9-4472-a6ce-3dcbdb4d80d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94cfe561-43d4-40bd-906a-54d8a4203ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0751de26-a18d-4fe6-979b-e08aa23302e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82b24b0-4a92-47e5-9706-79524dba12a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5ed0dd-856e-4bbb-bc0e-aa8bf4ab226b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ea2e89-8cdd-4f7d-9996-72f134b3562b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b20a6fa-51eb-41cf-9703-1436a2193d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76840edf-bb6f-45f5-9467-02fd350a53d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe43a2e-92aa-4b79-81ff-46ec4a3ca8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9504c7-b2c2-48d9-b316-1810bdaaf961",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8421f34e-a447-4f92-951d-d5aa32608c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00aa24be-0bf3-4a66-afa1-051c700b772e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d6eef1-b5e5-403d-bd70-0c1953dcdb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1077acf5-4b90-4a72-95cc-93c4dbfeb404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad83fe63-50d0-48ea-b161-1f5d9a90ad73",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f6242e-8800-4950-856c-f4f5cb359b80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f659707-e4e7-4446-97b2-31ecfcb09afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ffeeb2-806e-41de-a1dd-aabaa48e1314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0005fb-de9b-4227-8bcd-79807029b4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab814ec7-bdb4-4e9f-aaa5-8dc3014664df",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b5ac6b-1944-46af-a0a6-d613d334f73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa2b62b2-c81d-4877-940e-260ed650227d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4c2857-8fa0-4e9d-9a36-c2c71b4b3a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d96076e4-e95b-461b-83ac-c92986963c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f132484-5a76-45de-b03d-81d2b1e5d767",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f49604c-00e1-4c39-aeee-d082ca19fd49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a811536-7020-4a8a-95e9-1511b05838cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6fda49-c357-4e30-8000-24cb40488392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288fa158-1083-49b0-b0db-ec63467d9e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99498ff-44c6-47c6-967b-cc593977c1ef",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3c6a34-7f1c-4008-ab0e-e79df26188fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4960e225-eeef-45f9-b1db-b16158a243b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7a1c04-c934-4bd9-82da-df3728ea6a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61003584-02b6-4f00-97ed-4a5af8724b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a22a807-d88d-4290-abd7-0d2b328046f0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26d7c65-6286-4103-8268-8ea8a0e85213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "679b54df-edd3-4396-af86-e465c1413933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31510d6e-e0cd-437a-b8eb-b48fd5c71586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025debe4-168d-4d38-917d-c8e46e44107f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e560266f-c0a0-42af-a408-a518eec97f17",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e34ef03-a9b9-49b8-82ed-78476d045b46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45fe502f-0a39-44be-beb5-4a54212b6bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596ed4eb-e0aa-4f13-b718-572c086aa48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa94feff-ae02-41b0-991c-6d61c86697fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330bdf47-146c-4ccb-b94e-f44e4ed9d130",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4120dc5-cbf6-4dd0-be16-e605f9d4d07d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e4af47c-b40d-4847-9fd0-80a62ea09b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a58de0-acea-44d0-888c-544688fb8a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f64c65-0c0e-4cbc-8d22-acf53f798fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bc7a8e-f48d-4630-bda0-de5883bb6726",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f840cd11-3318-465d-b335-335bf2ed08e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d2ad65-b176-48b0-8b14-05822dcdd673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04105f0-614e-4a16-94f8-47e686138757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae770f3-f5df-4eab-a836-24fba009c3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c469c321-9b6d-4200-8508-9a1bc9d89a84",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66be25c4-1291-45dc-92f5-0999d6b65b5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6173f5c4-fc5c-46b0-9488-121965b8b1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e75c707-dc31-485f-9e1a-55ce5a200576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4813b08c-84c0-4973-a8a7-92ec7378d8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d01ba56-711a-4098-b659-3342cc966bdb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e8d367-a906-4ef6-874c-87a8dd57bf5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6717cb-194a-4da9-9d72-13423b71f188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a295822b-24ea-46ee-8114-f011a9a6bc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9785b866-3c45-4fc1-8629-31968d2ed3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cc52d7-f9ab-4d79-9e14-75ebc7046f22",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c4b39f-86c1-4927-88e1-052ee35041ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d848a5-1762-4870-9654-70f933bc04bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00d3cb5-a328-4bbc-bc53-1e8ff477c109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30517d14-0c07-4f9c-8337-ff2ef2b77b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd5b797-9ad8-4697-b087-d0443c7ba995",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faff8d8-d674-497c-b549-1218002b1141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b559592-96b3-4f17-a7e9-16985a35f857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d54319-60dc-47c3-8874-cdcef157da3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825d8f7d-a9ca-45ec-a73b-4d7318a13c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d664c4a6-f9b7-4cb3-8690-bcc9850c9086",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fed71f-55ed-4e77-aa52-ee26e18968c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9898eb0-5be8-4f5e-9e47-63acfaad3440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6370ac7d-111d-4226-8ece-fa4461864c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb919465-8b93-4c76-bf69-146641e83c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717670f9-59ea-4461-a09b-98c0506edda9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f0c97a-a9e9-4f48-8f87-513504158e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17997b04-ecb5-4fdd-b2d4-8e29bae5d497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a108e8cf-69a5-4a21-bebd-40bbf42be237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf01e266-5211-429b-a52a-3ba8f32542c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eb2cb8-d279-4ebd-b873-17d2c2cff034",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e373a075-58db-4ddd-8f75-36b59f5da360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a85d733f-c01e-4d29-89e1-7f5afc776170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72c1b38-f002-41bb-8dc8-3e931ef82767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea643065-24bf-43a3-8c39-a69b8953db41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed59a21-28e8-434e-b1ec-0c4a6d9a58fc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91876fc6-064b-41a3-901f-180bad6495b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159d6228-5fb4-42b4-b83f-18d808a2de88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281bd76c-bb1a-4b26-909d-b1c227b05fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719df126-af6c-4632-b428-91d8501ab4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60943e1-d78e-4489-b030-535a90473d23",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8eefca-b261-4777-8d84-24178649c9c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d7f5ba-965e-4af6-8257-d9540b0da1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94509970-498d-4599-82b0-99aa611b78aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9169ab0-6b2b-409a-b943-36333b535d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555d87b3-6a13-4936-bdd7-7d1af34796b3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42c007e-8813-4918-927a-93dcc9a8476d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582484db-1489-46b1-a7e8-857cd4c90963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b3349a-0c8f-4386-9a6d-c67089a80fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5dae25-de74-40ce-89b3-b5869ff53afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e545ddf9-89c3-4d04-92a7-b19f802f3c7e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68758509-e6e2-4bd1-abc8-b6c2173d46db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2655e40-c753-4d7b-8e23-10def6516515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf2ca17-4eef-489e-9979-3da49ee5733a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86dcb8b-1448-49ab-bb46-f1aa93e71f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b39ce7e-9c41-4997-b5ce-d2dd58e90c67",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5c5c28-fa0b-485e-8827-11c3519dad24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1004ce7-19a9-4bf7-9146-9d792d3d546c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfbf0f6-66b6-4bb9-8e46-13592eb975f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79b8ef7-8aee-4468-b60b-74b78aff5aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0b211f-b066-4bda-9617-317115894e7b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59575d55-5f07-4c29-a437-b1cee1ee6c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9628ff-be85-4582-843d-c5a644ef98d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb70bb8-8067-4fe4-9b46-0caf513c94d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391361d3-767e-402d-9ec2-3ee320fcfecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c204a8cd-2a6f-4ee8-87c9-a6c6de19c1aa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a32662-7f00-49c4-a342-84c1e76ad4ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8cc03d9-384f-4f3b-aaac-8ef37941b60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f2ce62-ecaf-4712-ba62-0437e6fae42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90c3743-b9e8-419e-91b2-4c85465a8f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd8acf8-5574-416e-adb2-5af6e6a66329",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b60a52-3ac5-4e2a-b458-b67c6aee8856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da28110e-16a6-4eb2-8b34-699e3556c9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f354392-ee90-4086-aa45-ee1404263321",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d687457-70be-4c7c-8e06-b206983fe022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e478c9-3162-44e4-917e-d3bf7fd5b955",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c607bfc0-3786-4d8c-b767-4535499769c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe123d52-a283-48e7-bb6d-ac2834794c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe90deb-a47e-472e-be13-82a25358e302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2c932c-7d1f-454c-b74a-8e0f3873d49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655c88aa-93e3-4e21-bdb4-e5fbb95bd050",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ac9413-9d32-4487-b034-5414cc1312d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac6f2d4-40ef-4a3c-8e76-396a76dc579f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd89205-8452-4124-a653-20668b21c9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7008dd-960c-4a48-b345-891159865704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b392cd0b-d321-4cc8-a0d5-6016aaad8ebe",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65dcec2-3031-4ebc-ac7a-7358b9b3341a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40272814-a477-4d49-99b4-e8a31dcc03b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76111a8-1a6a-4dc6-a963-a638cedabb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6900271-ec55-4356-b38a-786040ec324a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6239b44-5264-42c3-ad4e-00142c511f3c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ac3357-bd1d-4a16-b919-103ed75ee203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7484974d-9010-45d1-b464-b51e52a37ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7673d1b1-84b4-4849-b33f-c150f5a0904a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64380b02-a1e3-41ce-aeae-5af5231372cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eef3686-b957-4a07-bddf-0337181430e3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c482b5b8-9ef4-4e95-b792-d9390ae44aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccce1ac4-3d0f-491c-837e-ec2adb7c85eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1acc45-d19c-4fda-8c4c-689940d1d2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c535f2-7e42-4efa-82f7-d74a64018c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccb8f6d-54dd-4cf2-a858-3d08244dde77",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4e33fa-fc44-40d5-aff4-97e23ed532a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1fc538b-89fc-4e2c-99c5-0d6492b69ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "364f8580-025b-470a-b2dc-0a05b16e5788",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212c0986-790a-4434-a480-e68663c90b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a51be7-9433-41b6-9b7b-3ce3885700de",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd10dbd-1d44-4565-87ac-c00aead14ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9284c89d-e8c8-4b10-a1a0-9e0fae5fe82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8376bbe-6cca-44e4-883e-225bf0be4837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8335762-0009-48e5-9970-9ffe4afe09ec"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd0539bb-4f17-4167-abf2-9517df8d6c05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92cb8d9a-cb05-4cd2-a67f-4d0d437b8ec9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2dff9fb-c490-433f-ba4a-f64b09eb5c94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23380e99-e2a1-4676-b655-8c14f25be0bd"
                    }
                  }
                ]
              },
              {
                "id": "20d8f9c1-7533-4237-9aee-5f45b90c6761",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "443c0d62-6059-47cb-8d4f-a961c12eab72",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c0db32-fbc7-4c0f-aaf7-4a25cbe15218",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a021e3e0-4c20-422e-8e40-0d32949ee559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d2b3e6-3dbe-4dc0-9700-b59e27a91017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5363fa3-5379-410a-9b42-56e073f6020e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a769b7be-fdba-4cc2-8b0e-055d0cface5e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63494835-8f7b-48c0-8adc-3bb8acec9105",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "703a8da2-d864-4cae-9e61-193ca6271d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a3d530-cb1f-46ed-b72c-ae7e0b65b586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "050cfe59-2020-497d-830b-fabb5e85b6fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75fa255b-4a0b-42f2-8f1e-b686bb131099",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bb9ba0a-4966-4c1c-885a-20ce10b37dcd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e7a188d-132d-4c23-b647-9dbe32d93e66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2649a2ff-d444-4847-ac6d-5a4bb0a2284b"
                    }
                  }
                ]
              },
              {
                "id": "8ec5d2da-b614-422d-ab25-8f8d53fa0443",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "91485d57-b5bc-42bd-a5a8-52af660dd1a8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadb5a9b-86fb-4809-9bde-792d3eec0d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8fc1b68a-4bce-4df1-91f8-083fd3fab49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e3cc7a-b675-4e37-a460-ac319d0516b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad09e420-78e5-4863-ab12-ccbf01e55c4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c322dc54-bfff-4d82-a3f9-4b7e6042d939",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0022b507-db2e-4495-adaf-14173019aa81",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ab3ef47-8673-4916-841d-ba4604f5f1cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dcef0900-19b5-4283-bd6b-f521c6d721de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3af6272-d550-41cc-b149-16de83accf1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56ae9bff-11e2-4747-beaa-4bc33a4d1922"
                    }
                  }
                ]
              },
              {
                "id": "abe83fae-618b-4fb6-bcf6-b96d944645c4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "491d8cc1-5736-4655-90ab-db559cc625c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ad055b9c-bd70-4fe4-8bff-cf51670908be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c91df6e9-19a4-4646-87d7-184999a87994",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0100aeae-0ed0-43d8-81d7-846f9f593701"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de24c2cf-c109-4d6c-8e1f-99472519d9bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "09e0e166-4c1f-4d0c-854b-402221cf41cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fa7a5ee-9e1b-4e14-9f52-1371e359b230",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34d5869c-7166-4641-b33c-4363f5096ea5"
            }
          }
        ]
      },
      {
        "id": "ab13950a-432c-4853-a3c4-e394f704da99",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d5a715b7-8dbb-4c8d-8d2c-97a68dcf406b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "954d44a0-0cd8-4d67-8b01-f65d048a070f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a94bfd4d-64ee-4954-9eba-428b3e73e252",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a807e129-62e1-4713-9c76-9b2d13f0a507",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5463cb0b-e027-414f-bcc3-87a917ad8996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddca9041-a67d-45df-9c5e-a5c5bb01840d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2606535f-e322-402f-8af7-6a7c35468b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05834cf9-9810-4290-8b7c-0c3daca81d57",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bf0f09-ddc9-458a-a198-6777aeb7b0ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "165b571c-5584-4a06-908f-3c624ef8ab23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6884bec-2a5d-4b7b-b79f-88ff9f70e825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "681544a9-e726-4a9d-99f8-598eeadceeb6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7524495f-d12a-405d-bc2d-b69dac674796",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f560db9-7f48-475b-b1a6-22ba10964bc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c1328fe-1874-48b3-911e-45e31de942ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "403d913c-acb8-490e-a441-0e493a39c641"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87ddd3a3-6dec-4274-a7bb-a600cf631255",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0788a142-ed75-4fed-ba9e-5d4de5112b3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40268cb3-1472-4f38-8217-04e79ab19ed8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f91db910-2fcb-4fab-9d6b-a5c23834288e"
            }
          }
        ]
      },
      {
        "id": "40c54e7b-987d-4afc-81bc-290a064e4316",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "66e8ebd0-9868-4896-8cd4-a068955d01fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a5311fd-1bad-467c-9558-89d1dcef842f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd74c273-8ac9-426c-9170-93ea58727f8d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c5cac8-fbe4-4ca9-bf08-b3a5d38dc369",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e410268-570c-47c7-8f14-67d38a5182bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16f1b4a-5e47-4af0-925e-d774b51e3705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2076941-55e2-4978-b3c7-fa93f4cf53f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae310e5b-be46-4576-9e70-d1036747cbea",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ae6efa-4cac-4505-a21b-9c6bcff47d1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "09e63b97-a16a-46d4-854c-ffe19775bd06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6dc49f-92c8-497b-b468-9f1f76d1ba37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c05d791a-0aa0-410c-b53a-06733444c91f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54853657-d811-41ab-a51c-998ada4125fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14bcf9ed-3eb7-4cae-b939-ddc8515bbd32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd69382e-24b2-4e9f-a8d4-c5cc37e2e5f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c363af2-7939-434d-bc0a-23950c75114a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1994c18b-309e-41b9-8104-f93a7e99a11f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d257142d-db9e-4f83-acdf-69a06ac3395c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19dbfae4-96da-43c4-83ee-9f14992316df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0349f575-4251-4d29-9d3c-4c3d136c3643"
            }
          }
        ]
      },
      {
        "id": "63838318-e19b-4027-8a60-d58b72ced24c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "28784f35-382f-4e55-ab1e-8ec9ad291062",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05b39629-1430-4320-87df-23dbbbaf92e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8fc25a7-86f5-4e79-85db-dd50d67b3007",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a103e68-23cd-44e7-9640-b15e9fed0408",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84d4d779-56dd-4091-bed6-8667ecbc609f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446ff6cc-d396-43a8-895a-31570b615cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf158f18-6ec5-41fe-9468-c1316d09d13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26a9408-7c1e-4d01-8b35-566cf10b825b",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b42b5ae-c1e3-4c8b-82c4-2c6746dc51c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "51fdb604-a82c-45a2-976c-0126dd247d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc154eb-6f8c-416e-bd47-8efda7e45d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d584239-b246-47b7-8db4-7540c7742911"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12c580f5-6a3c-49af-9251-a719fc320576",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75419cd9-fba1-4f67-91d8-cfdca5ed4b47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fca5a5b5-cd93-4af3-87e4-5d5a291c5cb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6d1bffb-dbc3-4037-beb9-87d440f67c7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a57a67e-2f8c-4b50-ba1b-e9d450788558",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ede3a907-aae3-4584-b86b-9ffa9cd776c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ab973cc-d4e1-4289-89a3-8bea22ca67b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46dac4f8-8838-4153-806b-10300ff17d76"
            }
          }
        ]
      },
      {
        "id": "10acb775-8024-4aca-865b-8f4ecd323272",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "200c69f8-6760-483f-8031-aa97953697be",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68dcbeea-d28f-44c7-a692-56d618a78fe8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c41127c7-d365-4398-a18d-b52273814079",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c150da1a-976f-466a-ad0e-1aedbb38cbc7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63a4ec14-371c-4f0e-ad30-9ab658c62f44",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 57.40384615384615,
      "responseMin": 21,
      "responseMax": 266,
      "responseSd": 29.249496784221435,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684802271593,
      "completed": 1684802297272
    },
    "executions": [
      {
        "id": "81999b50-2b40-4a9d-a95d-cad8328d0a59",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2c097808-c454-4ff7-a5e2-b9ccb69fd5a5",
          "httpRequestId": "9bca625f-a4ed-4d73-a3e1-3b6ba555c03f"
        },
        "item": {
          "id": "81999b50-2b40-4a9d-a95d-cad8328d0a59",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "145b3ab0-49a0-4eaa-9900-52e80a4fb0a7",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 0
        }
      },
      {
        "id": "3032a354-faa2-4efc-9da1-4244ca2b588c",
        "cursor": {
          "ref": "11dd073b-8201-4798-8efc-d07dc09044fa",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d5fd0edf-9d16-4ea7-992a-616e70750186"
        },
        "item": {
          "id": "3032a354-faa2-4efc-9da1-4244ca2b588c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f99e22f9-6c51-4f2d-a034-1d7e189f1e5f",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "3452eca0-09b0-4936-84ab-c2a137cd52e5",
        "cursor": {
          "ref": "79b7af3b-333f-4c49-90e3-fcc328e93b31",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "04ac59a7-9751-4be1-b8dc-086d6fe068fa"
        },
        "item": {
          "id": "3452eca0-09b0-4936-84ab-c2a137cd52e5",
          "name": "did_json"
        },
        "response": {
          "id": "79e6272c-f993-4c6b-80f5-4c8d9bf3b824",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608a2bf7-239b-4f84-8d7f-31919436e32a",
        "cursor": {
          "ref": "0e7ecdb2-9bd2-49f6-a0c9-82b137bc6f20",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be4e58a1-e958-4d84-a212-c966dbc463d3"
        },
        "item": {
          "id": "608a2bf7-239b-4f84-8d7f-31919436e32a",
          "name": "did:invalid"
        },
        "response": {
          "id": "26a0407a-6a3e-4b5c-a597-ff3bc9011010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608a2bf7-239b-4f84-8d7f-31919436e32a",
        "cursor": {
          "ref": "0e7ecdb2-9bd2-49f6-a0c9-82b137bc6f20",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be4e58a1-e958-4d84-a212-c966dbc463d3"
        },
        "item": {
          "id": "608a2bf7-239b-4f84-8d7f-31919436e32a",
          "name": "did:invalid"
        },
        "response": {
          "id": "26a0407a-6a3e-4b5c-a597-ff3bc9011010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192788de-7953-44bc-bc23-702825fff35e",
        "cursor": {
          "ref": "bd5fbace-27dd-420e-bd6f-4238fe90a34c",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1bff1fb4-0f6b-4f99-95b9-e5b17016d303"
        },
        "item": {
          "id": "192788de-7953-44bc-bc23-702825fff35e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f59409f0-bad7-44b0-9567-03b9a01898a2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584a79f5-e39f-4bef-933b-4e2b70e5abb6",
        "cursor": {
          "ref": "6dad0b7a-1abc-4fc9-8ea7-9320d399721a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eaf695e1-f6c8-4580-9255-4a155aeaffc7"
        },
        "item": {
          "id": "584a79f5-e39f-4bef-933b-4e2b70e5abb6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "107fa9b4-678a-4103-9933-5473d9e04e28",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031eab6f-a232-46a5-8178-79884a635dec",
        "cursor": {
          "ref": "2b912bfc-a12a-4771-ac55-37c22a7a5063",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "424e4e37-37f6-483c-be35-0107ccecd3bf"
        },
        "item": {
          "id": "031eab6f-a232-46a5-8178-79884a635dec",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "658b8e98-fe50-47e5-88bc-7757849f2bff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c84593-9700-4e5c-be07-7c0853693330",
        "cursor": {
          "ref": "38c08208-ae29-4225-85b2-24e91e7a5d32",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4ad7ca3b-7023-4950-98d4-9d36607b0ada"
        },
        "item": {
          "id": "95c84593-9700-4e5c-be07-7c0853693330",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "065f8196-53c3-4a8e-bb6a-610b1ecb1bd6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 52,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c84593-9700-4e5c-be07-7c0853693330",
        "cursor": {
          "ref": "38c08208-ae29-4225-85b2-24e91e7a5d32",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4ad7ca3b-7023-4950-98d4-9d36607b0ada"
        },
        "item": {
          "id": "95c84593-9700-4e5c-be07-7c0853693330",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "065f8196-53c3-4a8e-bb6a-610b1ecb1bd6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 52,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfef3cdf-29ae-4e44-b2c4-c11be8be1129",
        "cursor": {
          "ref": "53df2ae5-e7cb-4a22-8208-7510a261092c",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6284595a-3b8e-4bd3-810f-1ba5e712000d"
        },
        "item": {
          "id": "cfef3cdf-29ae-4e44-b2c4-c11be8be1129",
          "name": "identifiers"
        },
        "response": {
          "id": "b4dcd9c7-a8a2-46b6-8116-933eb548aafa",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48214ecf-b642-4bff-8eb1-1b32b9384e0c",
        "cursor": {
          "ref": "07fca657-8b1c-41a7-b2e2-d83081fcd10e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "73437209-c29e-4fd6-a4f1-59928f6ba7fe"
        },
        "item": {
          "id": "48214ecf-b642-4bff-8eb1-1b32b9384e0c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1fab9e64-bf26-44fc-87a7-4f989982f2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48214ecf-b642-4bff-8eb1-1b32b9384e0c",
        "cursor": {
          "ref": "07fca657-8b1c-41a7-b2e2-d83081fcd10e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "73437209-c29e-4fd6-a4f1-59928f6ba7fe"
        },
        "item": {
          "id": "48214ecf-b642-4bff-8eb1-1b32b9384e0c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1fab9e64-bf26-44fc-87a7-4f989982f2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f06834-5670-4574-b53f-64ae17b0119c",
        "cursor": {
          "ref": "6b58401e-87c5-49d6-819e-d33045e61ed7",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "066d581f-2f5b-45d8-952d-03f57bb071f3"
        },
        "item": {
          "id": "e6f06834-5670-4574-b53f-64ae17b0119c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e5dc480b-dca5-473d-9caa-77e44a640b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7da49e-b095-48f1-a546-bc313d2a8e30",
        "cursor": {
          "ref": "28f096ca-af54-46b0-ac0e-bb26dcfe0fa8",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ccc6caae-bcc0-418b-b194-c7d65cc8c9f5"
        },
        "item": {
          "id": "af7da49e-b095-48f1-a546-bc313d2a8e30",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "02d749bb-38c6-4dee-be81-d85b2deb10d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5c6264-4439-4a1f-bee2-2e11de219987",
        "cursor": {
          "ref": "117dc596-1e6a-40cd-8986-d73dbfbb0318",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "94ab9a25-c17c-4d7a-bacc-ca5e087942cc"
        },
        "item": {
          "id": "9c5c6264-4439-4a1f-bee2-2e11de219987",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d573a5ec-6293-49d3-97cf-3f8632551834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2190ac-5a5e-4606-b67d-a17b0a4198de",
        "cursor": {
          "ref": "9f6e4fe5-5683-409b-ae10-9ddc14600100",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "10b1cf68-e6dc-4866-a538-236d6357427a"
        },
        "item": {
          "id": "8e2190ac-5a5e-4606-b67d-a17b0a4198de",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4d567389-2975-46bd-8f55-0a925c56a70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576a6a84-ac32-4580-9e29-08c89cb7191e",
        "cursor": {
          "ref": "dbca16df-10c5-4c96-a2d8-7ca2540d54d8",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d00402d0-f5f1-449d-aa28-f401993643a5"
        },
        "item": {
          "id": "576a6a84-ac32-4580-9e29-08c89cb7191e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "099c6c85-6883-4f89-a3a5-92e3b84bf3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0341c04-e956-4c2b-8117-311b17fcd254",
        "cursor": {
          "ref": "bde6e85a-ac4b-4819-b515-dae7414cc794",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c9d7181d-67a9-4e41-9ed2-17b4b6e6f922"
        },
        "item": {
          "id": "e0341c04-e956-4c2b-8117-311b17fcd254",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8ffebb2f-1c75-4f33-97f2-dbcb61274f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da63509-0591-4334-afaf-30bc5a106d58",
        "cursor": {
          "ref": "b8d4db54-3d4e-48b3-9bab-d13d75f127ca",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "738e006c-8ba1-42f4-bfac-d51d4082f692"
        },
        "item": {
          "id": "2da63509-0591-4334-afaf-30bc5a106d58",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a33322e6-fd54-4bff-a52e-ba7320bbec27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b855972d-bb8a-4932-ac4c-e37c2f7844cd",
        "cursor": {
          "ref": "3378e531-2cab-49d7-ba76-29956b9e6c4f",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "34a717ed-4a7d-4d7c-a843-9e7017853393"
        },
        "item": {
          "id": "b855972d-bb8a-4932-ac4c-e37c2f7844cd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "23c3ff55-b6ee-4028-a764-89433b472a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4099bd01-d143-4e93-8cbd-d7d0a1668ede",
        "cursor": {
          "ref": "bd96a9ab-c9d4-4aa9-ab2b-b1f5b2f695fc",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "52e1f91a-1fb5-41bb-b266-0feb1dec2bf3"
        },
        "item": {
          "id": "4099bd01-d143-4e93-8cbd-d7d0a1668ede",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0d6f3487-7f9c-43bf-b581-adaa69c5c8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85efc9a7-399c-4bbd-8c6b-5db9d444ec5d",
        "cursor": {
          "ref": "1dde1dc8-1a28-4f36-b0a2-6e7b0a2fa203",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e72024d1-8a19-4128-82d7-6ca37560eeee"
        },
        "item": {
          "id": "85efc9a7-399c-4bbd-8c6b-5db9d444ec5d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8de0c88e-51ad-44a9-9aad-69c3ec6ec954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde399fe-0b37-4e1a-a243-27a1c1e34b06",
        "cursor": {
          "ref": "cb179f27-03aa-48ab-8719-205ac8e195e1",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1f14d03a-41e0-4681-867b-c0594e3cf247"
        },
        "item": {
          "id": "cde399fe-0b37-4e1a-a243-27a1c1e34b06",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6cb6c41d-4422-40be-8afd-17f48c758305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d67885-9129-4398-9bbd-ca947a5ac1fd",
        "cursor": {
          "ref": "f93bc095-0ffc-4a88-9ce8-f95b22f95e2d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "25c5da09-c62e-4f91-b5db-a6f569d77ccd"
        },
        "item": {
          "id": "50d67885-9129-4398-9bbd-ca947a5ac1fd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5435b889-a99d-430b-ad65-29802bc8b65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275ae8fd-9819-4d2e-9a60-82afa1ce32d3",
        "cursor": {
          "ref": "a6450fdf-9973-4c59-b096-01cb75dd10a5",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4fc7c487-ae39-4ceb-93b8-78f5a018bb26"
        },
        "item": {
          "id": "275ae8fd-9819-4d2e-9a60-82afa1ce32d3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "62a94462-9e9f-401c-8416-54e101aeb1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb46301a-fcda-403c-b9b2-48f7eb320367",
        "cursor": {
          "ref": "12482857-5c92-44a9-b98b-40a193e89077",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "286c3881-6480-4ea4-9b88-12c6cd094418"
        },
        "item": {
          "id": "eb46301a-fcda-403c-b9b2-48f7eb320367",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "47a42eef-5cb0-46f7-b533-08b52c88af0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8166e9d7-074f-4c9c-a0c7-148343aec2fb",
        "cursor": {
          "ref": "de5a597d-f9fc-40c0-941b-7cc6e9c9c307",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "579b93a9-7c7e-419c-8a50-eda9971fc181"
        },
        "item": {
          "id": "8166e9d7-074f-4c9c-a0c7-148343aec2fb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "24217093-2e9a-4f0a-9188-82b7a70234ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba430eb6-464a-46f9-8686-ac1a3ee2389b",
        "cursor": {
          "ref": "4d8ba198-6c65-4bff-b4e0-557ede963a1a",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "28e4dd9e-af21-408d-bfa5-de23bf4481a6"
        },
        "item": {
          "id": "ba430eb6-464a-46f9-8686-ac1a3ee2389b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "07437c09-1467-4951-bd07-87273c675114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a16bde9-5f9c-4d76-bbbc-c87d1678a12f",
        "cursor": {
          "ref": "7daa4756-12b0-404f-b917-ae1283a0f59b",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6271fac7-9729-45c3-b9aa-30639fa7440a"
        },
        "item": {
          "id": "7a16bde9-5f9c-4d76-bbbc-c87d1678a12f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "12b670cc-c7cc-45d7-bd0b-596bf26863ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a687ad-27a8-4e46-b6c6-a1c433848723",
        "cursor": {
          "ref": "62572df1-f694-4103-844d-11991013d401",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5743d1ef-edd0-4b1b-a607-633176a13ae9"
        },
        "item": {
          "id": "47a687ad-27a8-4e46-b6c6-a1c433848723",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fc8e2a1d-875c-48cf-a2fd-cbe9b205fa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3d6f3f-bf1c-49fd-8b94-89f193bf27af",
        "cursor": {
          "ref": "8d298a36-7243-4ab9-934b-5b0a23c9ee34",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d1148fe1-a8af-4645-8112-4f52b07ac5f3"
        },
        "item": {
          "id": "aa3d6f3f-bf1c-49fd-8b94-89f193bf27af",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "729dc0d1-cdeb-45f3-a600-ad5b23160a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954c7883-297f-427f-8442-d78f7ebf105e",
        "cursor": {
          "ref": "0ad0de98-8f3e-4831-849d-25021cfeb968",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9204a9b2-1b88-4143-b9d1-354a448ef90b"
        },
        "item": {
          "id": "954c7883-297f-427f-8442-d78f7ebf105e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7f896144-a387-4005-a7ba-f15fda550cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d24e14-f82f-4873-9d9a-66b9561528ba",
        "cursor": {
          "ref": "c09bbfc1-ec43-4e9d-a0f7-2e2b0eb50585",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c30be086-be2d-47cd-b363-4a9a7779c727"
        },
        "item": {
          "id": "49d24e14-f82f-4873-9d9a-66b9561528ba",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f4e1d5d0-8836-4443-9d7e-a1ca51bf3318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa478442-4f16-490d-8e97-f0fd6077c9f0",
        "cursor": {
          "ref": "381bf555-c100-4c05-94db-fa3c9920d3ca",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "85a7245b-3405-4bb6-918c-f3b53c136aab"
        },
        "item": {
          "id": "fa478442-4f16-490d-8e97-f0fd6077c9f0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6fc53fed-56df-4d99-8bf6-12b6323ffdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9c32df-e026-4e3b-9c4b-c033640063f3",
        "cursor": {
          "ref": "1f89e48e-cfc3-4eed-a3b5-17ce9ab5adf1",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "76d12c48-9756-44d3-bf0a-7cc346d154f4"
        },
        "item": {
          "id": "df9c32df-e026-4e3b-9c4b-c033640063f3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8a0aba29-a1bb-4e55-8212-e8dd13400491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7470b9-91c8-46ff-92f3-39544a8f2239",
        "cursor": {
          "ref": "9f495178-a163-4969-afe4-311ee16d65ef",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f5cd2d79-084a-4229-8018-efa6d7af7c25"
        },
        "item": {
          "id": "6b7470b9-91c8-46ff-92f3-39544a8f2239",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9423ee74-070d-4a4a-ab3d-f014dd456662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916ef0bf-3bc2-4996-9404-4f5686606af0",
        "cursor": {
          "ref": "fc8b327c-962d-4d6a-9526-9626bc3d6fef",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "eff6c190-af2e-4b42-b51f-aa13fdccc43b"
        },
        "item": {
          "id": "916ef0bf-3bc2-4996-9404-4f5686606af0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5af32d6e-9bc5-4ad4-a756-14a7efe9b7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f93ffe-a3b8-4c0f-9608-7351721dd7bb",
        "cursor": {
          "ref": "ab4a5538-42f3-40d6-9fea-8b60fab84f43",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "32c37151-7f2a-4ba1-b944-8274d50ce37e"
        },
        "item": {
          "id": "85f93ffe-a3b8-4c0f-9608-7351721dd7bb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "886cbb50-c9cb-45dd-bb4a-f995d75638e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9395db4-2d8d-43fa-9d2b-2842c29ddbca",
        "cursor": {
          "ref": "25add6df-4b73-4b71-9423-1a28ec1179b1",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ac2048a5-870d-441b-a960-5d3659f3bb49"
        },
        "item": {
          "id": "f9395db4-2d8d-43fa-9d2b-2842c29ddbca",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "97ade2e3-b49e-4e88-92a0-2ddbea7aeebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568875bf-6b9b-47b5-a8df-11faf2915672",
        "cursor": {
          "ref": "92fd4063-a263-4298-9ba8-5e9f5a469b67",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d46ec6d0-455c-42e0-b8a4-e7602a0797ca"
        },
        "item": {
          "id": "568875bf-6b9b-47b5-a8df-11faf2915672",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5abe8421-b951-4149-a4c3-f17c73c21c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4118772-7624-4fb6-a36f-9546a5d54e3b",
        "cursor": {
          "ref": "4f584bc3-a379-430c-88ac-0075f6f04571",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c9fd7912-c5a9-4dc7-99af-82f763c3382e"
        },
        "item": {
          "id": "c4118772-7624-4fb6-a36f-9546a5d54e3b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "547e15c7-cb9e-4b64-8dea-879cb4aafcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4c6aac-a256-4dea-af29-00337ac65cb3",
        "cursor": {
          "ref": "764ff423-800c-40db-9bff-77d0ad254d94",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b56992f6-2ae9-4203-b338-acb886df02d9"
        },
        "item": {
          "id": "5b4c6aac-a256-4dea-af29-00337ac65cb3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "172dc341-1901-42d7-974d-40ed02d78493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c974d3-56db-43fa-8ed3-11ad5a06f177",
        "cursor": {
          "ref": "e44f19cf-cd98-491a-91bf-b935835e4b95",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a7fd1022-a800-40ff-9462-09cf3faac86d"
        },
        "item": {
          "id": "15c974d3-56db-43fa-8ed3-11ad5a06f177",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5086156f-d093-44bc-a6aa-73f0d9b00778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065a1640-1abb-4643-9031-081ab8e2e4e2",
        "cursor": {
          "ref": "8714f4e4-69bd-49cc-994b-a7a2ef25142b",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3cdcbb74-6106-4a70-a64d-6735e28b56d2"
        },
        "item": {
          "id": "065a1640-1abb-4643-9031-081ab8e2e4e2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b16308a7-2462-444e-a2e5-3b73f73fd38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a999de2b-9d58-4119-86d7-6d205b654da1",
        "cursor": {
          "ref": "47edb60b-206d-4688-a51f-9244f8a3f46b",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ade7b179-4db1-42a7-9d9d-0fd4fef43fec"
        },
        "item": {
          "id": "a999de2b-9d58-4119-86d7-6d205b654da1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "070e5c51-9ea3-4104-86b4-2fea140519ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06c103f-e980-44a8-a06c-ed6c1f6452f6",
        "cursor": {
          "ref": "6d8fc662-497c-43e8-9f26-4fb35e537218",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2fa62f84-7897-4dea-be24-7edf0c8abd6e"
        },
        "item": {
          "id": "d06c103f-e980-44a8-a06c-ed6c1f6452f6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9c800f96-ad45-4f6b-ac2a-895423485a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642a5587-add4-4d82-bbc0-617374ba3cde",
        "cursor": {
          "ref": "d07340ea-e098-4996-8a1c-f4fe73263b34",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "61de6bbb-194a-4ac3-bd7d-4e77e8e05490"
        },
        "item": {
          "id": "642a5587-add4-4d82-bbc0-617374ba3cde",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fcce22b1-932f-42c6-815a-078949f7267e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 61,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2222052-632d-417b-8718-cdbc4b0f5668",
        "cursor": {
          "ref": "438c1499-0915-48e7-b117-03b577152b2b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "32e84374-4f08-461c-8f65-43a594d6d5d7"
        },
        "item": {
          "id": "a2222052-632d-417b-8718-cdbc4b0f5668",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d6c82afb-97f0-4484-b172-5531c68f8e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57ff49f-aadd-425d-bd14-64d249590ca6",
        "cursor": {
          "ref": "8d0b32c6-159f-4414-b6bc-4dc107b9c036",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "890d1d14-a966-45b2-8975-2b6938c2d0fe"
        },
        "item": {
          "id": "d57ff49f-aadd-425d-bd14-64d249590ca6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "88939a0b-08d6-4d3c-bc49-0460b8566048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749c1cb4-f4f2-4d67-abd1-9ea76f4072f1",
        "cursor": {
          "ref": "b004f695-7fd5-4b59-af47-c4fc43e1cc6b",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "86e9c8f8-5a6e-499c-ab85-f096dc882113"
        },
        "item": {
          "id": "749c1cb4-f4f2-4d67-abd1-9ea76f4072f1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c9494e84-6a96-49cb-82a3-55cb6f9858ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313a04e9-7f7a-46e5-9f77-07d9072f4cd5",
        "cursor": {
          "ref": "b1e42480-67d4-463e-b1ed-0e6452f8630e",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c27aca47-97aa-4c70-bf73-a8eda66ad7ad"
        },
        "item": {
          "id": "313a04e9-7f7a-46e5-9f77-07d9072f4cd5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c9e925f6-0161-4937-a4ef-fb533e740d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c93a3c-0128-41f9-a135-a13449a3dd1e",
        "cursor": {
          "ref": "2cf30620-0822-4c7a-8656-9089d485d170",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3c203fa2-e1c8-46ac-8f2c-56a2f30472e0"
        },
        "item": {
          "id": "90c93a3c-0128-41f9-a135-a13449a3dd1e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e8014722-ac11-475f-8be8-836243e265df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d637663-2d90-4455-b5e3-3046a30e6b8e",
        "cursor": {
          "ref": "2dc2af04-4e60-43f3-be26-7f5105252e0c",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "423da6a7-e1bf-4eb0-ab9f-65084fce64dc"
        },
        "item": {
          "id": "5d637663-2d90-4455-b5e3-3046a30e6b8e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "be67a119-83ed-4d30-a702-36d790bed14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59973ea2-f52b-4aed-af10-ebe0a1e24b70",
        "cursor": {
          "ref": "fa21adf3-39c7-443b-950d-865e5d01e1ee",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "719285a0-1804-4acf-90c4-885ab23a81e2"
        },
        "item": {
          "id": "59973ea2-f52b-4aed-af10-ebe0a1e24b70",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c24d3e17-590d-45d1-a8df-c8f5a76f0a9c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 61,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f4a7a1-2b8d-44d6-8aa0-dc5e24c41554",
        "cursor": {
          "ref": "0b5b4e1c-3921-4e7d-bf0e-bcb3cd2cdfa2",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bcd0c9e6-ebe1-47f8-bbbd-6298f01eb457"
        },
        "item": {
          "id": "d7f4a7a1-2b8d-44d6-8aa0-dc5e24c41554",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "074d572d-d805-47ef-afae-75bea4507998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a59bea-306b-4a74-bcac-0e4d71e7bb33",
        "cursor": {
          "ref": "13bd1d7a-287b-4d45-93c0-6390482c6d69",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "71c41e85-b2a8-4ef9-8fa2-a6dba7c92fe6"
        },
        "item": {
          "id": "46a59bea-306b-4a74-bcac-0e4d71e7bb33",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "aa1d6823-7bf7-4feb-ba84-1cfe07ceddd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae07233-3d6e-4436-8e07-9f1ec7a5e297",
        "cursor": {
          "ref": "76c2f603-9dd2-4f57-9f8c-73306005a5c9",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1827d46c-4313-429a-ae8c-4ea96b04cbac"
        },
        "item": {
          "id": "9ae07233-3d6e-4436-8e07-9f1ec7a5e297",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9cd9d4ab-e01d-47f0-bd13-c41a3fc29cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d2166d-07d8-4b44-ba42-289352afd90c",
        "cursor": {
          "ref": "c3f4cc2e-f55c-4eb2-a952-7d43d75ddda3",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a4eef10f-687d-4c5e-8b3f-0d67a5e730cb"
        },
        "item": {
          "id": "a3d2166d-07d8-4b44-ba42-289352afd90c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b97bc99e-f56e-446b-9d77-ab9042b3ab16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e2a293-37e2-446b-9e13-fc7256cd54c2",
        "cursor": {
          "ref": "6b4fae67-bd01-498b-8967-781434c2f95a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1cf0e077-06ff-4c50-8984-e915f0c97ad1"
        },
        "item": {
          "id": "d0e2a293-37e2-446b-9e13-fc7256cd54c2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7ef9f86f-9ed2-423d-8a84-f143717498aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecd057a-f71a-4321-8363-4de41181708e",
        "cursor": {
          "ref": "de8cd847-05bd-4875-a1ba-b2e20c5bec11",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "96ac06bc-a9e3-4364-a6ef-805f28e4b35d"
        },
        "item": {
          "id": "cecd057a-f71a-4321-8363-4de41181708e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2ff1c9ef-c5b2-4816-8917-4d0110b892d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a484c14-d3d1-41b2-a58f-91e9ef66360d",
        "cursor": {
          "ref": "09ba1e94-119d-4f88-b18a-d9c3eb4aae89",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "afd8339d-8374-443b-957c-dbe8910af657"
        },
        "item": {
          "id": "0a484c14-d3d1-41b2-a58f-91e9ef66360d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e31dd67e-24c2-4832-ad76-87bb56ee349c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136e035b-3d3c-45ae-bbcc-561e426172ca",
        "cursor": {
          "ref": "32af84cb-ce65-451e-8772-baa9ad822dad",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6355eab8-e2f3-4ac2-8632-1428c2b0c27a"
        },
        "item": {
          "id": "136e035b-3d3c-45ae-bbcc-561e426172ca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e617db7d-5dc1-4719-8ceb-0b0310e367b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43f2114-5dcd-41eb-b6b0-2dd096cfc39d",
        "cursor": {
          "ref": "6037feb3-50bb-411c-adc2-f4281acd1889",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0268b2f8-49a8-43b2-a69f-a0bcc9e21c91"
        },
        "item": {
          "id": "d43f2114-5dcd-41eb-b6b0-2dd096cfc39d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8f518714-ecd8-4115-a3ce-e3aa27bcbe8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc784e55-5e2c-4e7b-abc4-78ec2b9f3eb4",
        "cursor": {
          "ref": "99a6c458-9ce3-4b47-8661-1e9c0d419399",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7e9c90fa-be61-46eb-8008-199e19eef4af"
        },
        "item": {
          "id": "dc784e55-5e2c-4e7b-abc4-78ec2b9f3eb4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7d944c7f-95d6-4d51-8ec6-6f1ed5b10fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ea6f18-151b-4215-ac43-76cd573e9c27",
        "cursor": {
          "ref": "fe031e1d-f159-49fe-990c-d23803911b29",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9ba51803-c835-4167-bbdf-c3f90b92d5b9"
        },
        "item": {
          "id": "a5ea6f18-151b-4215-ac43-76cd573e9c27",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "831aa06d-6a77-461a-844d-b48d3008a365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b569227b-d22a-4605-869a-d35ca311333b",
        "cursor": {
          "ref": "5ac9b80c-a4d6-4238-b23d-e17236053335",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b5694e45-7cef-4e4a-9db2-7bfa07e821b0"
        },
        "item": {
          "id": "b569227b-d22a-4605-869a-d35ca311333b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "911c4ff0-18e3-489a-85eb-77a8ff92b29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b502453b-3b56-4bf7-a438-7eadef65053d",
        "cursor": {
          "ref": "edfa51e6-e997-4611-a553-2155dcc5b537",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "559ebe66-680c-4e27-920c-e058a99b7247"
        },
        "item": {
          "id": "b502453b-3b56-4bf7-a438-7eadef65053d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "030a5150-ddbc-4876-b325-f43a638d6d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b196a870-c4af-43aa-a255-eeec8373a655",
        "cursor": {
          "ref": "bd9f30ac-68f4-4cf0-9023-82dc18cbbc2c",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f9652955-24ed-4066-8f66-7389dededc9e"
        },
        "item": {
          "id": "b196a870-c4af-43aa-a255-eeec8373a655",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ef630337-7134-4504-a4d0-6c4ded6c0fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a676faa-f3c1-4a2b-9a14-1746b31343ed",
        "cursor": {
          "ref": "a0f6f64c-301a-431e-ad17-135bed0204ca",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "49419048-0fbc-4e0c-ba54-f98b91f38a51"
        },
        "item": {
          "id": "0a676faa-f3c1-4a2b-9a14-1746b31343ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b3111535-46b5-48aa-a717-eec0118726f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd3b2fd-5fc3-4038-b0a1-c14803a25ab4",
        "cursor": {
          "ref": "329b706a-b874-420d-9c8b-992dfe5033dc",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ae825de5-ec3b-47cc-8968-64c433f17ed7"
        },
        "item": {
          "id": "3cd3b2fd-5fc3-4038-b0a1-c14803a25ab4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2dc2deee-7a9c-4043-b51f-78d7c0f2e158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598dddca-e3fb-4ac6-b187-2a1781d0f941",
        "cursor": {
          "ref": "721838f2-65a4-4954-a7ef-40e58620e810",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6590effc-7185-4e38-b8cc-b9ce068d0dec"
        },
        "item": {
          "id": "598dddca-e3fb-4ac6-b187-2a1781d0f941",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d2de9d91-82a4-4c0e-bf9e-3f735c24ea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf27918-d4f6-4f77-bebd-314be9921591",
        "cursor": {
          "ref": "d2af1304-1104-4cac-bf48-d09af5589196",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e63c2240-8870-44b7-8768-2c157fec5b1f"
        },
        "item": {
          "id": "faf27918-d4f6-4f77-bebd-314be9921591",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ab04a62c-e183-4bd3-a6e5-33fa2eea7d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993b8819-f38b-4c25-a657-70cd22e740ca",
        "cursor": {
          "ref": "37dc1be7-909a-4194-bc06-30c492fb5583",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9c5cc00e-d3e2-4be8-acf2-b4a9f6e3eda7"
        },
        "item": {
          "id": "993b8819-f38b-4c25-a657-70cd22e740ca",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d2579af4-0be9-4ee4-821a-7b5985e19a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7e9a20-c40d-4cd8-bf2a-13c2e1016e67",
        "cursor": {
          "ref": "1eb9cfd7-7ee7-403d-be64-524ccdd4800d",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2197969b-447f-4658-85e7-fb58f2b27887"
        },
        "item": {
          "id": "0f7e9a20-c40d-4cd8-bf2a-13c2e1016e67",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0c069377-d41e-4e8b-8a36-90296a051040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7107c50-59b3-402f-9bb7-701b625265da",
        "cursor": {
          "ref": "75cb044e-8b4d-483d-af4a-5516506a9327",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7e504c02-b349-4bf4-a6fe-2b657b8e4d11"
        },
        "item": {
          "id": "b7107c50-59b3-402f-9bb7-701b625265da",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "05305c84-6035-4fbe-8357-bad996777213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd78eab-b108-458a-97ac-aa7168c2a8d8",
        "cursor": {
          "ref": "e9534b1b-9a90-4d69-8eed-233c494760f5",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a3d0b913-e585-49e4-abec-3baab02b2b2b"
        },
        "item": {
          "id": "8bd78eab-b108-458a-97ac-aa7168c2a8d8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b7d63070-4682-4659-96bc-2d0386e5c57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db005ff4-c41f-4507-8e93-b14d1993ba01",
        "cursor": {
          "ref": "2f4f1c4f-69bb-43b5-9f7d-c18c95671d13",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fec1ef89-e7df-4749-b049-5ab5859d4526"
        },
        "item": {
          "id": "db005ff4-c41f-4507-8e93-b14d1993ba01",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4f849da5-31e4-48b7-a3f4-a0e361134b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86f7f2c-592a-4f4c-83fd-85ac2f6d245a",
        "cursor": {
          "ref": "c8acb30a-9a8e-4e5b-ab47-456c4a654a98",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "87d349af-7b1c-44ce-899f-549416e5452d"
        },
        "item": {
          "id": "b86f7f2c-592a-4f4c-83fd-85ac2f6d245a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a0b0ef29-aa8c-4108-b532-8fcd8d2a213f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c978fa33-b8d4-4b41-8cb7-900c39f984be",
        "cursor": {
          "ref": "16e4cd6f-65e5-4765-bd10-e6e7a20c83bc",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2117e2de-fb76-4cb3-b1e3-410cf2350c91"
        },
        "item": {
          "id": "c978fa33-b8d4-4b41-8cb7-900c39f984be",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2eb8624a-eb57-47a8-9838-e7b9981fb803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f9a824-0c18-429b-846e-cb25e9e40dd9",
        "cursor": {
          "ref": "81cc3323-c5c3-4096-beec-52d05c497f26",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f08fde5c-4969-4758-8fae-01cf616be984"
        },
        "item": {
          "id": "b5f9a824-0c18-429b-846e-cb25e9e40dd9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "548a0c9b-3b44-460c-8f16-90c3e25911a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58f60a7-5b26-413e-ac12-3c5b03d29937",
        "cursor": {
          "ref": "56a7de8f-00cd-4adf-bf72-2899bca3c0fd",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9348030a-cf9a-4047-9e0a-67ab9c77624a"
        },
        "item": {
          "id": "f58f60a7-5b26-413e-ac12-3c5b03d29937",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5cb3a780-af39-4960-b030-afe765840249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23046768-e2da-42df-9f11-8cf8d82ecb39",
        "cursor": {
          "ref": "df6b254b-67ab-40de-b9ca-9fa4ed30331c",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1c4b6150-bca4-44ea-92ec-a642ea99af5b"
        },
        "item": {
          "id": "23046768-e2da-42df-9f11-8cf8d82ecb39",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d42630b4-7c87-4a10-a02d-4178207e6454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0220f5-6cb0-43f7-bc1f-c8e17b53fbdc",
        "cursor": {
          "ref": "2410f589-7fa8-4ac4-b170-7f856acae6da",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e41b3eb3-c33c-40ae-b4ff-58448f5dad31"
        },
        "item": {
          "id": "0e0220f5-6cb0-43f7-bc1f-c8e17b53fbdc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6ec4bd8b-f5db-4a29-a577-89bcaa2d8ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f846393-ebcb-4424-bdec-2f3faba65c8e",
        "cursor": {
          "ref": "32c06708-0b44-491f-b789-8e78543d1bb4",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ee1f9eb5-a5e1-403e-b0d2-fb246794d3ce"
        },
        "item": {
          "id": "7f846393-ebcb-4424-bdec-2f3faba65c8e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6feee5f1-f918-4bb8-8edc-a50ad5bc9a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fda469-fcc1-4c6a-a1d6-b70804f77121",
        "cursor": {
          "ref": "b27c87e3-6f7c-4303-9429-1cb472e58d2d",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d4cbd565-07de-4811-9dbb-e70e3daa90aa"
        },
        "item": {
          "id": "31fda469-fcc1-4c6a-a1d6-b70804f77121",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3b92531b-ae74-4834-8e9c-bc6e621a21f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d3d964-2847-4dc6-9758-3945e7d98048",
        "cursor": {
          "ref": "52e0a491-4154-44e8-a11f-43d1de27bfe8",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "40619d7c-b3e4-4419-bd7f-798fe08342f2"
        },
        "item": {
          "id": "05d3d964-2847-4dc6-9758-3945e7d98048",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a14a92b5-9a88-4774-9290-5c3658cb0b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d12117-7d1e-40de-aaa6-3434c75ea35d",
        "cursor": {
          "ref": "a177ceb5-4638-453a-8a8a-4caee26fd133",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f6a510aa-7f37-4e84-b8bd-100fa33f47a2"
        },
        "item": {
          "id": "f5d12117-7d1e-40de-aaa6-3434c75ea35d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "32e4b425-3a5c-40ab-97df-8578c5bc2e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce760a27-69a1-452f-b17d-061def66da8b",
        "cursor": {
          "ref": "e45f68d3-b693-436f-86d3-63dcfc1c605f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4b5bf4ac-374e-4816-9167-3cd418d2adf5"
        },
        "item": {
          "id": "ce760a27-69a1-452f-b17d-061def66da8b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "998d23c9-22b8-4d21-92b9-c4e390ac8ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80610378-41a4-41e2-92aa-13603da478cf",
        "cursor": {
          "ref": "82ddc7f0-e588-4fc4-8966-6e089feabec1",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "99f2a91c-c7cb-401d-aa59-23f88dc53512"
        },
        "item": {
          "id": "80610378-41a4-41e2-92aa-13603da478cf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "db0a0dbd-23ab-4111-b125-c57c12c4f399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e9f83e-c966-47c6-972c-001bccc125ba",
        "cursor": {
          "ref": "69b5d721-3b28-4735-9857-25dd094f4e80",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1efc93b7-916c-4814-98ec-eb56b3db0989"
        },
        "item": {
          "id": "09e9f83e-c966-47c6-972c-001bccc125ba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "52d4cb76-a5ba-4e2b-be15-00d0c533513f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca10446-99c7-43f0-aaa3-82ca91e3414e",
        "cursor": {
          "ref": "a1372016-59ea-494f-871f-dedece2ba5dc",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "77cc639a-dfcc-4961-a19e-3759516d5008"
        },
        "item": {
          "id": "8ca10446-99c7-43f0-aaa3-82ca91e3414e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4141b299-3b2b-4a79-9c23-16d3bd5db991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddf6bcc-f035-4386-a929-f0abb6708e27",
        "cursor": {
          "ref": "bbb062a8-2a7f-47b8-9d82-a538a21e7fd9",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bebb8981-62d7-4aab-a73c-1167a6f962c2"
        },
        "item": {
          "id": "eddf6bcc-f035-4386-a929-f0abb6708e27",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7961228c-cffc-49b3-8633-8cedbc5d992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce50168f-ea38-4272-a6b5-db53db5667d7",
        "cursor": {
          "ref": "609527f7-c49b-4b8b-bfa6-fb6125ef19bd",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "be11a549-0da8-49c0-909c-7086139ec358"
        },
        "item": {
          "id": "ce50168f-ea38-4272-a6b5-db53db5667d7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0393ee30-f993-4c20-b170-3c1debdd3d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b62a8d-e13c-449a-a87b-63b850d5499b",
        "cursor": {
          "ref": "85ad8585-88e7-48eb-9d41-b8631ffc513a",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2b257927-2562-4123-9488-f2e4c5323f00"
        },
        "item": {
          "id": "51b62a8d-e13c-449a-a87b-63b850d5499b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "541ed847-f43c-427c-9254-12139dbf213f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d76afa5-d611-469d-97cb-bf3608be6051",
        "cursor": {
          "ref": "8a1117a7-7622-4444-bd1f-84b69685ac0c",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0288747a-340e-4b73-bb4f-ae2dfd95ae24"
        },
        "item": {
          "id": "1d76afa5-d611-469d-97cb-bf3608be6051",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "68ddc6d0-c2e4-4a42-be85-4ed2ff509484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91abe0b-57f2-4b72-82f6-a6cdb2f9a2c7",
        "cursor": {
          "ref": "3ed75da4-f53c-4d93-a302-50c881e15b0a",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b0d892b2-5eb5-47bf-9d6d-c76f6515d339"
        },
        "item": {
          "id": "c91abe0b-57f2-4b72-82f6-a6cdb2f9a2c7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6db17acb-ab0f-43bb-97ce-d723fd591d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac9b060-3844-4fdd-b7ca-fbaa7d4797ed",
        "cursor": {
          "ref": "ab60adf7-433f-4814-90ed-94e62a2e78ec",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6dec781b-4c92-406f-b35b-6b9a5e31df76"
        },
        "item": {
          "id": "aac9b060-3844-4fdd-b7ca-fbaa7d4797ed",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "72c35d07-ce63-4562-ab16-170b38ad965d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84118a5c-9c1f-4bcd-a317-228e41d45bef",
        "cursor": {
          "ref": "bcbea847-cb75-4e23-88b7-d5f7806f3f56",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6ef8ce6f-0f5c-4d4e-ab1c-630c41f26957"
        },
        "item": {
          "id": "84118a5c-9c1f-4bcd-a317-228e41d45bef",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a64e8b5d-3647-4b44-b106-f803d709ddbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c599de86-79b3-4f83-b837-784906715706",
        "cursor": {
          "ref": "0193ce17-f37e-4db7-9e54-75997d24c830",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d0b32184-ce4a-4729-8dbb-1222e77d7c99"
        },
        "item": {
          "id": "c599de86-79b3-4f83-b837-784906715706",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "438ce476-80bd-44cd-8ec4-1cd6dc860260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8c7d3e-beab-4aba-93dc-7309c550f8b7",
        "cursor": {
          "ref": "61452642-736d-4f2b-8b64-bd6d7cf1998f",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1839bf92-0d05-45b8-a336-f93fbacac19d"
        },
        "item": {
          "id": "5f8c7d3e-beab-4aba-93dc-7309c550f8b7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d7dd5abf-f1ea-40ac-85fb-49250ddc07ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ef8dd5-0336-41f5-a9d3-e719cf17e255",
        "cursor": {
          "ref": "64167331-7412-464e-973e-f10bf66f42ea",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1acaca06-1e49-465c-9ab1-ee3171f69b41"
        },
        "item": {
          "id": "60ef8dd5-0336-41f5-a9d3-e719cf17e255",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6128dd70-aaa6-4003-8649-f28dd4427f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b528cf0-81eb-4910-89af-179b0a9fed7a",
        "cursor": {
          "ref": "c7090092-65cf-446f-95a0-443faa615423",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3dfacc42-0c64-4972-92c7-7300e7e0c9f4"
        },
        "item": {
          "id": "8b528cf0-81eb-4910-89af-179b0a9fed7a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "63e268c6-44aa-44cc-ac9c-d36323dc3df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a4fc31-bc91-456c-acec-f72f59031adf",
        "cursor": {
          "ref": "6d3b8939-f4b7-421b-a5e8-a79ebd217b03",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1d5a1a20-ee37-4d5d-bc35-fb5d219fa7f6"
        },
        "item": {
          "id": "48a4fc31-bc91-456c-acec-f72f59031adf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2caa048c-b6db-4541-b9f5-4b7fc2e235d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496bd7f1-2a14-4cc3-bdc1-24d603a662ab",
        "cursor": {
          "ref": "93f2fa95-e6f2-44c4-a0c1-8caa9d48e1fa",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b01d1975-dfd5-41e3-895c-1c3bd0483ece"
        },
        "item": {
          "id": "496bd7f1-2a14-4cc3-bdc1-24d603a662ab",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a563f7a5-d8bb-4150-aebb-820e578194cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e83ab05-132c-4183-be6b-a7f78f65717b",
        "cursor": {
          "ref": "4da841e0-316a-4ce5-95c3-2864200d7fe9",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "958e05fb-30c9-4e15-a697-d52c3859a953"
        },
        "item": {
          "id": "2e83ab05-132c-4183-be6b-a7f78f65717b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c7f646b4-8c94-40e6-a496-60cc6822b9ff",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 146,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d65f1f3-c726-4be9-ac9c-6bc6c3f9a264",
        "cursor": {
          "ref": "4d4e838f-428f-4f7a-819a-ac58b68a784f",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "52e72b50-80b2-4ba4-977f-d472eef93b1f"
        },
        "item": {
          "id": "4d65f1f3-c726-4be9-ac9c-6bc6c3f9a264",
          "name": "credentials_issue"
        },
        "response": {
          "id": "82390c3b-b211-49e1-af02-046e8f97b774",
          "status": "Created",
          "code": 201,
          "responseTime": 108,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6877f927-8edc-46d5-a2a6-256efdecfacf",
        "cursor": {
          "ref": "b94dab56-5287-4a3a-8866-ae46c07f0309",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "acbcb511-a7c3-4ae1-836f-7a93d088f505"
        },
        "item": {
          "id": "6877f927-8edc-46d5-a2a6-256efdecfacf",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "89b8ed68-a571-4283-b880-91c04678dfce",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "24adfbb0-9208-41ee-ae38-b6ac3febe526",
        "cursor": {
          "ref": "341ba9e5-b511-416b-b027-330ee86d56b1",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7a43ef45-3116-48c8-be50-36a19fb172f1"
        },
        "item": {
          "id": "24adfbb0-9208-41ee-ae38-b6ac3febe526",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bf940c6a-4a9c-46b6-b86b-bdd30c5e5d36",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6da563-ccc6-4ba5-a234-e17b6733fd02",
        "cursor": {
          "ref": "18118648-adc9-49e3-ba35-55d0c1ab80cf",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "35480f9f-ec6e-4c68-b712-4a9d2cc48484"
        },
        "item": {
          "id": "ca6da563-ccc6-4ba5-a234-e17b6733fd02",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5dd3d059-62f3-4821-9597-7274b7c34eb2",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34fd63a-2225-4558-8684-e9bcb528d28d",
        "cursor": {
          "ref": "109fc904-e94d-40d5-9ca7-8ea9b5718b38",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "99ae4f34-771a-4c6d-9483-010eeface45b"
        },
        "item": {
          "id": "a34fd63a-2225-4558-8684-e9bcb528d28d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1ae1618d-42ee-4250-b8a2-feb72ec18364",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f0fce7-a4e1-46fd-99d1-d3816a08adae",
        "cursor": {
          "ref": "dd4583dc-10b4-45c4-be1a-baec98503057",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1e3b2dfb-ae9d-488d-b893-07c7c6e79adf"
        },
        "item": {
          "id": "82f0fce7-a4e1-46fd-99d1-d3816a08adae",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6c12d620-e6fe-4d00-acd3-b993c77a95f2",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391282e1-3107-47b8-a93b-bb86f8fce12b",
        "cursor": {
          "ref": "af22bafd-cc14-4a8f-ae7b-3a8cd1125b3f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fb65768f-3052-41ad-b246-48bb482db316"
        },
        "item": {
          "id": "391282e1-3107-47b8-a93b-bb86f8fce12b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2b2d67af-7b02-4031-80de-6d0df9eda1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391282e1-3107-47b8-a93b-bb86f8fce12b",
        "cursor": {
          "ref": "af22bafd-cc14-4a8f-ae7b-3a8cd1125b3f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fb65768f-3052-41ad-b246-48bb482db316"
        },
        "item": {
          "id": "391282e1-3107-47b8-a93b-bb86f8fce12b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2b2d67af-7b02-4031-80de-6d0df9eda1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b60c9d4-d347-4e5a-ad24-27ac98adce51",
        "cursor": {
          "ref": "d780a5dd-4378-4fdd-8b59-59be7605f734",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "245c0a3b-9610-4356-93ca-8e043eb2b1d2"
        },
        "item": {
          "id": "7b60c9d4-d347-4e5a-ad24-27ac98adce51",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a798a77d-a604-49b3-9c93-ba33e82472c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71528c3f-804a-481e-a326-9b3fed2b8b55",
        "cursor": {
          "ref": "189745fe-51cf-4ff0-aebe-00cbbdec1f4d",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0e38e05f-202d-4313-a6fc-193e8f947398"
        },
        "item": {
          "id": "71528c3f-804a-481e-a326-9b3fed2b8b55",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0add9a33-821d-4ef5-9084-f92db3e0f346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a899262d-7bfc-4286-bc36-8f0efd99b8ef",
        "cursor": {
          "ref": "43536bd8-0e7a-4217-a993-66645aa96aff",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dd2bff68-8c40-4e01-9f8f-950844be0264"
        },
        "item": {
          "id": "a899262d-7bfc-4286-bc36-8f0efd99b8ef",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3fca0b26-dd1f-494a-a150-8ee0e7c80192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6769060c-b330-4d5a-81b6-f70e6d1f1276",
        "cursor": {
          "ref": "1f0a145c-9396-4325-9c36-21e77d1f6e9c",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8a2db299-a7b6-4d2b-a7b7-18ba98e9af5b"
        },
        "item": {
          "id": "6769060c-b330-4d5a-81b6-f70e6d1f1276",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "758fa1e2-79a5-43d7-b654-480c91c302c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b2c65d-22a4-405a-aecc-b87eac906835",
        "cursor": {
          "ref": "bec3f65b-1f31-48c6-9417-7e7cd72c038a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3f8e67e0-e74a-4691-ac11-6e33b51b49ba"
        },
        "item": {
          "id": "a1b2c65d-22a4-405a-aecc-b87eac906835",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3b99e0b5-0ae6-4ab0-b058-8dfba2051549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5154583b-b946-4f3c-a174-f63582f16591",
        "cursor": {
          "ref": "331f4d28-bab7-43f6-961d-7526f1548613",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3f71a198-2c98-47a6-9546-e35be2a4d534"
        },
        "item": {
          "id": "5154583b-b946-4f3c-a174-f63582f16591",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cad1355b-1f46-49b1-b366-1998a34a466e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9efe385-b8f2-4f23-841a-97a5feddc4b7",
        "cursor": {
          "ref": "1b854eed-c0d6-41f5-9fb3-0b08a5b12222",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c702766d-eea0-4077-8221-dbaa09402c9c"
        },
        "item": {
          "id": "f9efe385-b8f2-4f23-841a-97a5feddc4b7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "efb3f6a5-46e9-4b93-b4b0-fcb2e4084a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5199e4c-cb55-4ef0-b090-12fcb9833ce6",
        "cursor": {
          "ref": "945d2fbe-3812-445c-b1f5-30e54e211000",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "13ebcf55-027f-46cd-aeeb-2fe25f4ea563"
        },
        "item": {
          "id": "a5199e4c-cb55-4ef0-b090-12fcb9833ce6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f99dbd34-1cbd-4b73-a473-ed1f0c389878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f7ca25-23b2-4114-9261-0f798cda9233",
        "cursor": {
          "ref": "dd5c781e-222e-4578-8b84-7e410543419c",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4e130a70-f53f-490c-a42e-5fab959c04eb"
        },
        "item": {
          "id": "b5f7ca25-23b2-4114-9261-0f798cda9233",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0540afbd-9520-4edb-8417-807c62f39c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090cf4da-b889-405e-b5ca-730a3681c5ad",
        "cursor": {
          "ref": "043d402b-8cd4-4a57-93a5-617edbaa654a",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "14aa1ec5-e5b7-489d-a50c-cd3b0ae5d453"
        },
        "item": {
          "id": "090cf4da-b889-405e-b5ca-730a3681c5ad",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "250d1e7e-61f4-4b80-8b9d-5e677b82fa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dac8d6-96b3-4d9d-ad03-32544459a901",
        "cursor": {
          "ref": "10e31bd4-55f3-426f-be38-a4515354968c",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1a401a78-86e0-4a37-afa4-55570e85b1bd"
        },
        "item": {
          "id": "03dac8d6-96b3-4d9d-ad03-32544459a901",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a0f920c0-b19a-4942-93a9-ac1fa10f7594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9580c0d3-492e-40d1-ba37-2259ab884b4f",
        "cursor": {
          "ref": "4b0f7d5e-39b3-4d48-aef4-1787418997f1",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0020e31a-88c4-4366-b2e5-8f714ea90c56"
        },
        "item": {
          "id": "9580c0d3-492e-40d1-ba37-2259ab884b4f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "243f4710-cac8-41d4-a5e2-65c3c9406811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75de3b1c-08f3-4642-806a-cc1906486cdb",
        "cursor": {
          "ref": "9d4633bc-5d09-47e8-9ca1-b13ed6af7fa5",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fcf754c0-6514-4867-9fe1-40221770ad42"
        },
        "item": {
          "id": "75de3b1c-08f3-4642-806a-cc1906486cdb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "74e60954-f531-4912-91cf-8d502feaa0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff832703-7a77-452f-be47-6941e2754a93",
        "cursor": {
          "ref": "a394c367-ff10-4106-b9e6-d80020759b26",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4ae4a013-5c7b-45b6-9393-17035c8bb0f7"
        },
        "item": {
          "id": "ff832703-7a77-452f-be47-6941e2754a93",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1edcb721-aa4d-4d68-842d-f667de8f5077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7177c33c-8645-40c5-b147-af8e9bc97908",
        "cursor": {
          "ref": "9248dc7d-f239-41be-89cc-6598c950846f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0185bcb6-2706-48d9-8e52-c378096c7490"
        },
        "item": {
          "id": "7177c33c-8645-40c5-b147-af8e9bc97908",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6281a97a-a0be-42af-917c-e9b7a76b1889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78888a4-aa51-48a5-a4c8-4b359a08c01f",
        "cursor": {
          "ref": "00c7dcd1-bc6e-4449-a0b0-832de83666da",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0a81ee31-d14e-476b-8383-4f0f8ae20b15"
        },
        "item": {
          "id": "a78888a4-aa51-48a5-a4c8-4b359a08c01f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "08e2c48d-521b-4e1d-a7a7-8d479dcdcff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea185f3-d27f-42a5-ac16-8d3778400739",
        "cursor": {
          "ref": "805d832a-88cb-437d-a5d8-b373af3ee992",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5b83ff2b-d92d-495c-9dfc-fecf9edff136"
        },
        "item": {
          "id": "5ea185f3-d27f-42a5-ac16-8d3778400739",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b312a379-fe3e-4cd4-86de-7d9e196bb2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd43b01-0431-462e-b2d9-cccf11fa099c",
        "cursor": {
          "ref": "71152603-d534-4a86-819a-e0a61b2aae32",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cdef95be-6cd2-4a24-9a3f-4c5a2d0d6e9e"
        },
        "item": {
          "id": "ccd43b01-0431-462e-b2d9-cccf11fa099c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "06c9abb7-1000-44dc-8462-5656e9b315ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc651231-c988-48ed-bb2f-9a5d9762f7b2",
        "cursor": {
          "ref": "5253490f-ab13-4e75-8d87-1feccdbad580",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5a4b2449-786f-41a4-9dc7-35b13df44f1d"
        },
        "item": {
          "id": "bc651231-c988-48ed-bb2f-9a5d9762f7b2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0f58b552-4b01-419b-9696-5552143db7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289f7898-46bc-4ee0-8762-6905037f9d56",
        "cursor": {
          "ref": "41a69df0-3a36-4b3c-80bf-33f4b21dec8a",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d7be1adc-e8f3-40cc-99c4-594c8e6af743"
        },
        "item": {
          "id": "289f7898-46bc-4ee0-8762-6905037f9d56",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6956d2ce-2ec4-48c6-a64d-086a49c44aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc79c85d-3121-4e68-87ca-c069361b09c7",
        "cursor": {
          "ref": "6e438c6c-1e7f-4d96-8398-af2fb9491ded",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f9886dd8-e3f6-400c-a474-435c4cea1444"
        },
        "item": {
          "id": "dc79c85d-3121-4e68-87ca-c069361b09c7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8567ddf9-58ce-447b-b76a-9242d1b5f597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3172949-357f-4daa-bf56-274de9dabe46",
        "cursor": {
          "ref": "84dfe9b1-b927-4fad-8ae8-16ae1dc79706",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "33974d56-bf7f-46ca-8ec6-083acaf6e4eb"
        },
        "item": {
          "id": "e3172949-357f-4daa-bf56-274de9dabe46",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fb366081-2357-476c-9b3b-dcdf128f11f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2f7af5-3fc9-4648-880f-6087eea67cb3",
        "cursor": {
          "ref": "4bf13882-74b6-42c8-a853-6e074175976e",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2cfe3108-900c-4b25-be07-726e04f2dc1a"
        },
        "item": {
          "id": "9b2f7af5-3fc9-4648-880f-6087eea67cb3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "11e07e6e-a12d-49e5-9b6a-afd4981d64c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b6463b-1179-4dd7-9653-c0b2ea009c7e",
        "cursor": {
          "ref": "84e44bc7-7ac3-4095-a572-aaecc138628f",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c6d8baf4-956a-4c6b-9679-7a60b7160e86"
        },
        "item": {
          "id": "c8b6463b-1179-4dd7-9653-c0b2ea009c7e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "66ca1714-6dde-465f-b208-5ee461921368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308b3e7e-5d45-471c-8ffb-8559c641ce1c",
        "cursor": {
          "ref": "d80ecc70-7e82-4435-9977-6d4d56f4513c",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ada30a76-471d-40e6-a640-65c18470138c"
        },
        "item": {
          "id": "308b3e7e-5d45-471c-8ffb-8559c641ce1c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d3ac42d3-13cd-40ce-9ba0-10bb7d54e804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771118d6-cdec-49a3-a426-f8f5c9d1d0ad",
        "cursor": {
          "ref": "fa0adca5-f48a-4e34-a2eb-4aefdc3b554f",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "688e70b3-205e-49b7-bbb3-5e5fc5029526"
        },
        "item": {
          "id": "771118d6-cdec-49a3-a426-f8f5c9d1d0ad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "325538ed-9ee7-464e-a156-dbf3d6165893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6794f9-fe5e-4c59-b27f-5fcd1a5d0e98",
        "cursor": {
          "ref": "1ebb4d70-82cf-4714-bad6-71678b6ab4fe",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cf34ddf1-c28e-415f-b91f-f37f0c6bc225"
        },
        "item": {
          "id": "fa6794f9-fe5e-4c59-b27f-5fcd1a5d0e98",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b1718b4a-0d41-4da2-87a9-4034ee889705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b829822-8406-4b2a-a3fe-615840eae984",
        "cursor": {
          "ref": "0e3b615e-5e46-47bd-9035-5433975b3995",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dcac4e98-aa27-4306-aeaa-cbc6c83fe07f"
        },
        "item": {
          "id": "2b829822-8406-4b2a-a3fe-615840eae984",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ae415e00-e3bf-4740-b332-1a2258d2d7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0b9d2a-1af7-474c-b119-04a25bfc9b01",
        "cursor": {
          "ref": "3e0e6a0d-12a4-4bd6-a6a2-7ccdb6454c81",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "79501eb0-acca-44c2-978d-890fd8ca0509"
        },
        "item": {
          "id": "1a0b9d2a-1af7-474c-b119-04a25bfc9b01",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "661a35f9-2a4c-4b4f-976e-16a9b3fa73e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbcebd6-a079-48e7-a414-793f02bd9a0d",
        "cursor": {
          "ref": "a57f1a15-97e6-4012-a97e-e35a56082f1a",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9464689f-0815-411d-8f34-4fac00ac4194"
        },
        "item": {
          "id": "3bbcebd6-a079-48e7-a414-793f02bd9a0d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ea5efa00-e86c-4891-b629-acb51d9e1d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da65205-6462-4646-b931-fbf9bdf6d200",
        "cursor": {
          "ref": "45068a90-fb32-4e7d-986b-085bb015eaaf",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f355bad3-c674-4fc5-a676-b665f1f7c27a"
        },
        "item": {
          "id": "1da65205-6462-4646-b931-fbf9bdf6d200",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d02f7653-5b9b-422a-bf02-044213a28e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a269de-b3a1-4221-8035-ed28ec1b7db9",
        "cursor": {
          "ref": "541884bf-71e7-4742-b972-82c56b3c47a0",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "91d0c39e-3123-4b16-a250-8dd23be3ec93"
        },
        "item": {
          "id": "49a269de-b3a1-4221-8035-ed28ec1b7db9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "227e1176-d915-4c33-94a8-d108ba49a70a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475a063c-592d-42b9-a8b6-2bee8ab68ce6",
        "cursor": {
          "ref": "afd94ffd-caee-4b2c-ae85-a7564a47cb24",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6b44c2d9-77b2-4eb7-aa43-89dd6556e34a"
        },
        "item": {
          "id": "475a063c-592d-42b9-a8b6-2bee8ab68ce6",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "17978c00-114f-41f6-bde6-e6a08c3ec07f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d946ee-2367-4ffc-ad34-311f20dc1098",
        "cursor": {
          "ref": "3f9ba495-f86a-4b57-83bb-9640157051f9",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "01459252-e043-4306-90b3-66cbc97f2ef8"
        },
        "item": {
          "id": "c6d946ee-2367-4ffc-ad34-311f20dc1098",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cce53090-a0ed-41ec-8af3-15bbe5aacae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d946ee-2367-4ffc-ad34-311f20dc1098",
        "cursor": {
          "ref": "3f9ba495-f86a-4b57-83bb-9640157051f9",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "01459252-e043-4306-90b3-66cbc97f2ef8"
        },
        "item": {
          "id": "c6d946ee-2367-4ffc-ad34-311f20dc1098",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cce53090-a0ed-41ec-8af3-15bbe5aacae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a835e3c5-5243-45de-8057-300350cc5021",
        "cursor": {
          "ref": "d77c8c29-8029-4f3f-9e8b-9bd1ffbac81d",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3a4e5f2e-3d4b-4507-9571-324b450a4e3c"
        },
        "item": {
          "id": "a835e3c5-5243-45de-8057-300350cc5021",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "64569af4-a391-44ce-b217-24e341007209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888835a4-f72e-4ac1-bb0c-955d19bce9dd",
        "cursor": {
          "ref": "84f02fb1-2779-4507-aee4-6449757f7488",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6a4a1a5a-0a5e-45df-ab42-8efc97240ef8"
        },
        "item": {
          "id": "888835a4-f72e-4ac1-bb0c-955d19bce9dd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3185ac8c-53ef-408d-be83-726509c7a9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae412435-4b7d-481e-b950-9d27e90c8883",
        "cursor": {
          "ref": "39eea55c-b764-448c-9762-09e4d7dc909e",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "91d4a9b0-0b4e-4082-9804-0293aee578b2"
        },
        "item": {
          "id": "ae412435-4b7d-481e-b950-9d27e90c8883",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5a93e0f5-f518-47dc-9d42-8e63940bcc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8fff11-cd15-4919-83d9-2cd7fda97c52",
        "cursor": {
          "ref": "9e940411-6e65-4069-808a-55588af7a9e2",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c17d8562-593c-4239-bf67-5d89b96fa576"
        },
        "item": {
          "id": "1f8fff11-cd15-4919-83d9-2cd7fda97c52",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e31c16b3-b5ac-452e-8b58-43e125ca46f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9144ee4f-e0df-4f42-898e-fddf9021d820",
        "cursor": {
          "ref": "be973e95-3fca-475d-b803-c96ec37e48b1",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0ae4e6ad-d6f3-4dd7-bef1-5cc04a546042"
        },
        "item": {
          "id": "9144ee4f-e0df-4f42-898e-fddf9021d820",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6ecaae47-c409-40b9-a897-2998da788d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383b8412-daa0-4952-a53a-2770db7c8779",
        "cursor": {
          "ref": "2e32f37f-df5a-4ea5-b199-44b38bfc1241",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eb6660d7-ba57-4638-a3bb-fcd07c05c53a"
        },
        "item": {
          "id": "383b8412-daa0-4952-a53a-2770db7c8779",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6d660944-174e-41bb-802e-8635ce912b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc1c12c-3b90-46e8-b684-acd3b00542ca",
        "cursor": {
          "ref": "921b09cf-36b4-4409-88f3-474184e73bfc",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "370a5096-52ab-421f-8492-d6c113dfe8ff"
        },
        "item": {
          "id": "cbc1c12c-3b90-46e8-b684-acd3b00542ca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d4b2ee69-ad65-4bfe-a91e-1148f7a332b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6100bbee-25d8-4a71-be56-6ef8102d5338",
        "cursor": {
          "ref": "ea6e1b5c-2a17-436c-a7e7-4a7cf7f998ef",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "099a7b1b-295b-4929-a27c-27e4326bb5a0"
        },
        "item": {
          "id": "6100bbee-25d8-4a71-be56-6ef8102d5338",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b932c65a-7d39-422d-be7c-809966cb0e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b828cf4-63de-4b5b-b202-bcc68f1232c1",
        "cursor": {
          "ref": "4f531d40-6e48-45bd-92fd-117eb67ff6f4",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8375801e-17d5-41a3-9972-a98500b482ca"
        },
        "item": {
          "id": "7b828cf4-63de-4b5b-b202-bcc68f1232c1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fb6c46c9-6021-4e64-99f6-9656cd558092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cd1e16-404d-4eca-a5ae-9e288024a15c",
        "cursor": {
          "ref": "add51ffd-26bf-4b23-b054-5c5b8fbf3074",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9703c617-5a26-4c96-89d6-0cf57fc628f0"
        },
        "item": {
          "id": "e5cd1e16-404d-4eca-a5ae-9e288024a15c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3836eced-0e6f-4c8f-b1cd-273c7075f183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d0a524-0f87-42a6-90d8-2adbeb562e09",
        "cursor": {
          "ref": "4799efdb-e454-4491-a8d8-3472b14f35a0",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f237d38a-014c-4a2a-b970-eb24ec7bf4b9"
        },
        "item": {
          "id": "48d0a524-0f87-42a6-90d8-2adbeb562e09",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f1a88acd-cee5-49ef-a323-9b94c44f8267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c73d89-ef22-4be3-8506-9afdbbd155a6",
        "cursor": {
          "ref": "9c2d4a75-f0d2-43a1-83ea-bf6dc9d1345c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "258ec13a-a882-4304-b23f-ef0d5e1e5f50"
        },
        "item": {
          "id": "65c73d89-ef22-4be3-8506-9afdbbd155a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bdfe422d-e4f1-44ee-8ce8-03bceaed1197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17fcb16-dcc0-432e-8338-1f1421f29744",
        "cursor": {
          "ref": "b094c904-0409-4be4-953f-55ce094b1919",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a4a56501-e8a5-4425-9d10-c774616c5490"
        },
        "item": {
          "id": "b17fcb16-dcc0-432e-8338-1f1421f29744",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7ed384ee-0370-423c-8fd6-3436ed71e101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60fb00e-0610-44f3-a1f6-f9c6390dd4d4",
        "cursor": {
          "ref": "31f7cd66-3069-4940-b8a0-35fb5a65e8c6",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1c8c5e2b-a27a-47b7-9191-4fd8e1714b47"
        },
        "item": {
          "id": "e60fb00e-0610-44f3-a1f6-f9c6390dd4d4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "821e7b56-40ba-49e1-9350-b346e8bcdebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f8273c-8077-41f3-acb8-b1728faffaf4",
        "cursor": {
          "ref": "7d8e44a3-9aea-429b-b1dd-136774900383",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f9d12b2f-2398-4ef8-97eb-6f369d0473f0"
        },
        "item": {
          "id": "f9f8273c-8077-41f3-acb8-b1728faffaf4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a3bfa9da-2876-4054-81cf-91251ed97af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a70ba9-aec1-44ef-9ff0-e1bf7cebc4d9",
        "cursor": {
          "ref": "c7113f81-ce0c-4849-ab7a-2892c34ae1e3",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8892e88a-e8ec-4ac0-9fd2-42b63463b725"
        },
        "item": {
          "id": "63a70ba9-aec1-44ef-9ff0-e1bf7cebc4d9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7e12a04b-fc0e-4358-9765-0f638bea459e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4aef68-34e4-4489-a8bd-8c454549e0dc",
        "cursor": {
          "ref": "d0fc466a-06ba-4d20-b661-3824bfe23d54",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b69d46f5-9867-46ac-986e-d60d83ff0d64"
        },
        "item": {
          "id": "4f4aef68-34e4-4489-a8bd-8c454549e0dc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6c1c24eb-d645-41a6-94ee-687dae142b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8080350d-ed5e-4c61-ba64-5b3f3ce49f38",
        "cursor": {
          "ref": "7e5ba723-c62c-45f8-909b-7f665b95a801",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f415e622-b3df-4cd7-bdcd-cf57c6d19f64"
        },
        "item": {
          "id": "8080350d-ed5e-4c61-ba64-5b3f3ce49f38",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "76064142-3647-48c8-aca1-5dcc602b7a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ea5c91-545f-4f7d-87d1-27e4a3ebb69e",
        "cursor": {
          "ref": "36c63c76-6ad1-4162-b9b1-0ec5f7fa9708",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6218e8cd-8625-4df6-b94e-83c4e974f541"
        },
        "item": {
          "id": "c2ea5c91-545f-4f7d-87d1-27e4a3ebb69e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "26bea344-55c7-418d-8b6b-aa1a2d82c482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5075e19e-90c4-4481-ae64-74d172984350",
        "cursor": {
          "ref": "9610f797-c830-4fe0-8250-46de32ee1968",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8655dede-117d-4fa8-94a5-cefad898cff9"
        },
        "item": {
          "id": "5075e19e-90c4-4481-ae64-74d172984350",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3ffd4d28-e974-4bc2-8c91-56db9549974d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eacb7fc-02f8-49c4-8b14-d5e98059a79e",
        "cursor": {
          "ref": "09bf0977-6c1b-4347-b303-e8cbad62a387",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0f29e7c8-333b-45ec-9bda-1003d176e564"
        },
        "item": {
          "id": "8eacb7fc-02f8-49c4-8b14-d5e98059a79e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "be05bfe8-190b-4a87-a6d8-709db39630b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1a118d-a4a7-4211-9fc9-95758c194e28",
        "cursor": {
          "ref": "852a3b86-3bd4-4e4c-b503-06fb344451cc",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c47b11e6-879e-423c-ab0c-d38955d6a3ed"
        },
        "item": {
          "id": "7a1a118d-a4a7-4211-9fc9-95758c194e28",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "008012b4-423f-4d5b-9ae3-169b0cb140e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f0df31-0674-4deb-a84f-b6d9283020c2",
        "cursor": {
          "ref": "9de7fb71-1624-4de9-b2ae-5890bb1afe3e",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e9114a2d-1364-47f9-8b00-90308996de6f"
        },
        "item": {
          "id": "a9f0df31-0674-4deb-a84f-b6d9283020c2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "527d41bc-fc27-4fd7-841b-4eb29b827b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de30848b-8df0-4339-9632-8409fecf663c",
        "cursor": {
          "ref": "2abce39d-3b34-49b3-bdf2-7e3ebdecfc37",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d2e97e21-8dbf-415a-ad39-1efa0ba57990"
        },
        "item": {
          "id": "de30848b-8df0-4339-9632-8409fecf663c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dfb67d71-6a5d-4fc9-833a-e43969f31156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f3e96c-829c-4ac4-9917-8ed8d877864e",
        "cursor": {
          "ref": "38946136-f09e-4c3f-a04c-a1b7b5a1f18c",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f02dd7d8-7f89-4917-b4b9-2877d27f97a4"
        },
        "item": {
          "id": "a6f3e96c-829c-4ac4-9917-8ed8d877864e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "789aafef-7b3e-4632-a2cb-30e3c60b7678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b852209-912e-453f-bb15-9757c87020ae",
        "cursor": {
          "ref": "c347ad78-b98f-4d47-b542-44145b47c214",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7784bd71-8c4d-4296-b503-6255e9fdde95"
        },
        "item": {
          "id": "7b852209-912e-453f-bb15-9757c87020ae",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "05b0e415-69a6-4c05-96a2-52f50f7646df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ff194c-f2bb-4cf0-9802-4526e4a60b9b",
        "cursor": {
          "ref": "10a2d3be-7b8f-412c-87a9-79f03f9dcb6b",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "881afd50-a4d5-462e-8c57-6fc8b14fd459"
        },
        "item": {
          "id": "89ff194c-f2bb-4cf0-9802-4526e4a60b9b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "804f9b77-b18a-4732-bfdc-30d153cfe714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8aa6bc2-afb2-46db-899f-2f38574db2fc",
        "cursor": {
          "ref": "1a8acafa-08ff-4159-885d-99de2e463a8c",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c85673f2-c8d0-4ee4-b45e-2b5babb219e0"
        },
        "item": {
          "id": "a8aa6bc2-afb2-46db-899f-2f38574db2fc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5058d7e7-76da-44c3-b75c-6edb6579d259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45249d1d-b81d-43d0-9db9-e688f68e93d6",
        "cursor": {
          "ref": "dcd42b68-0ff7-4f0c-8b98-045b50ed03df",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6e0a0d4a-25ef-4217-9a69-df16b43bde44"
        },
        "item": {
          "id": "45249d1d-b81d-43d0-9db9-e688f68e93d6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9ccbf8d3-16e1-4c48-bd0f-ee542dfb141c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77165f08-2d16-4a6a-8ec6-fe600b0ecd7d",
        "cursor": {
          "ref": "5b825a05-414d-4f0c-9e36-39346991e72f",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "355924c9-b92f-46d0-9e6f-637d0d7fba8d"
        },
        "item": {
          "id": "77165f08-2d16-4a6a-8ec6-fe600b0ecd7d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "10d47277-0147-43e0-ae92-6f87fe0aaf01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678ffead-6e88-457b-9c56-b2702c54c967",
        "cursor": {
          "ref": "f6996c2e-2167-4db4-a1f5-053e05edaa42",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3f3c7006-a858-47d6-8b29-14ad474d9340"
        },
        "item": {
          "id": "678ffead-6e88-457b-9c56-b2702c54c967",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b0c5d49e-40f7-4d07-8306-243dceb6a4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b5dd73-e191-486e-960d-264dc5acabbb",
        "cursor": {
          "ref": "4fd66410-aa60-4298-bf93-eb4b1216e8fc",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "57660773-2bf6-437b-8844-68cf7152cbd9"
        },
        "item": {
          "id": "81b5dd73-e191-486e-960d-264dc5acabbb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "97622ddd-6a60-4d1a-87f6-6c26b85bcfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f53688-dd8a-47c0-8701-cea82c05aa29",
        "cursor": {
          "ref": "b8511a1a-40af-4ef2-a4b4-066e003ef374",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c393bf17-7858-4784-8ed4-e211de5a39bd"
        },
        "item": {
          "id": "c1f53688-dd8a-47c0-8701-cea82c05aa29",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "db58ab55-03e7-40bb-9f82-2381b5e52173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb07071a-ea9d-4599-8fed-24ead469a870",
        "cursor": {
          "ref": "7b3b0803-530d-44d8-8b2e-270bc8ac0732",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "82c27c70-b327-4c0f-b9c1-58a3697977f7"
        },
        "item": {
          "id": "eb07071a-ea9d-4599-8fed-24ead469a870",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "20985a70-7a84-4de9-a009-a50d25a7450f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682e20f4-b894-4e2d-8ae9-c6fc4e767b7a",
        "cursor": {
          "ref": "16407f13-7a3c-4039-bdfb-1268182c8cb4",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "10141cb1-6a43-4bff-86ef-01dcf1d859e5"
        },
        "item": {
          "id": "682e20f4-b894-4e2d-8ae9-c6fc4e767b7a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0406180b-5dce-448b-b16d-32bb8a20f223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6055b978-c379-4416-912e-59be16029ad7",
        "cursor": {
          "ref": "822e86a8-921b-4c60-a715-58f79a909059",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "835ad90c-2c59-4ce2-aa9d-e9e01708b5af"
        },
        "item": {
          "id": "6055b978-c379-4416-912e-59be16029ad7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "318e2c7d-6c5d-4e84-a46f-a58a1f467795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfc454e-fead-44f1-9629-fcd301c7e9ac",
        "cursor": {
          "ref": "4c8b9212-cc52-4b07-aa6b-be7f3db23539",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "93d7ceed-a6d1-42d0-9ea8-1ea7d7350e6e"
        },
        "item": {
          "id": "fcfc454e-fead-44f1-9629-fcd301c7e9ac",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1d944564-da36-4ed2-b541-0f378699e9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff634fd-415a-4467-84b0-6cd9c6f39f66",
        "cursor": {
          "ref": "d4a1b4ce-5729-4e61-a671-ae3607fc254d",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5a93cd72-e2bd-472e-b048-f584d55ecdbe"
        },
        "item": {
          "id": "dff634fd-415a-4467-84b0-6cd9c6f39f66",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "94e1a5b6-3c6f-4760-924e-e0cc867445aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9409b7-1afa-401e-ba4f-1a59f08a6e86",
        "cursor": {
          "ref": "a2275b93-7665-4b46-a08c-cad7b2033d21",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1d34397b-7ea8-4dc7-a6f4-d40c43ddd197"
        },
        "item": {
          "id": "8f9409b7-1afa-401e-ba4f-1a59f08a6e86",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "412c4c27-1f14-4938-8998-3df44d529dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d88962-3fe8-414a-a7de-f74b26f1caf0",
        "cursor": {
          "ref": "ccb6cee5-e338-4865-b301-94557449c0a8",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "375562fa-213c-40ec-b937-376bd5a2e129"
        },
        "item": {
          "id": "68d88962-3fe8-414a-a7de-f74b26f1caf0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "50bdfba5-eb4d-45ba-973f-d8577dabfd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f7f098-2dfa-4a73-857d-2d609ff2b399",
        "cursor": {
          "ref": "af1f61a5-48d1-4aaa-8eea-5a698e7b0351",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "da58d84a-a19b-41d0-b9df-28068b5f6024"
        },
        "item": {
          "id": "a7f7f098-2dfa-4a73-857d-2d609ff2b399",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c1d0e061-0e6e-4eec-b63a-9049cabebdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dec08b-7e3e-49d0-a327-b855c146aab3",
        "cursor": {
          "ref": "68b6307e-8303-4b02-ad05-adb5ddf9043b",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b8089380-8c2a-474e-89a4-fafbc7164f64"
        },
        "item": {
          "id": "95dec08b-7e3e-49d0-a327-b855c146aab3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8eea84f9-436f-45a3-aad0-b0dda7cf0ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe22cae-af8c-4887-845d-ab469bae9689",
        "cursor": {
          "ref": "68396fae-da02-4f08-a54d-ed75f042c4aa",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1b89e8fa-5c95-41b4-b0cc-9ae6af302361"
        },
        "item": {
          "id": "cbe22cae-af8c-4887-845d-ab469bae9689",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5a5a76c9-fac4-4818-9456-1eeb21684dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc799429-a085-40ad-ba25-6ce8b71f3366",
        "cursor": {
          "ref": "b4ea208c-447d-4ebe-9bcc-53256d5c5afd",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d492633d-3d52-4251-8b4d-c0917cf7c0d0"
        },
        "item": {
          "id": "cc799429-a085-40ad-ba25-6ce8b71f3366",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "556ca3e9-1309-463c-bcbd-102b6356e727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f214ed-27c2-4b72-bc15-0aaf180a00c2",
        "cursor": {
          "ref": "6fdf9f45-9575-4fe3-b414-1be07ca356fd",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "eecbe932-cff2-4fff-9271-064dcdc6868c"
        },
        "item": {
          "id": "13f214ed-27c2-4b72-bc15-0aaf180a00c2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b187977c-4689-4a6a-880a-b972a7dba21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54ec565-1881-45e9-872d-4718b7fd1e5d",
        "cursor": {
          "ref": "7da8deac-eb36-45cc-9a62-9edd6acf7ec1",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0759901a-5ca6-4555-b101-446033f80754"
        },
        "item": {
          "id": "f54ec565-1881-45e9-872d-4718b7fd1e5d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "853983af-c2ba-4030-8230-7d2d3b8c4a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1fe88c-4413-4c9d-bbd3-9229847cab99",
        "cursor": {
          "ref": "25b7469d-58dc-478a-b430-5e2b671a5ff3",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7d53fb83-2c9a-4a8e-ba7a-24593bc2ac73"
        },
        "item": {
          "id": "3c1fe88c-4413-4c9d-bbd3-9229847cab99",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "240f532d-cf57-489a-9d32-1d82fbf613e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09c2825-ae97-4ee1-9138-ebc4417d41cb",
        "cursor": {
          "ref": "8c9c2d3b-5d92-47bb-bd5b-31a779f5cb9f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fe3449a1-252f-4476-a86d-2233b85e455b"
        },
        "item": {
          "id": "a09c2825-ae97-4ee1-9138-ebc4417d41cb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "68975cb6-5ea6-4488-a8e2-eebc6ee7c8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121932b2-1d9e-4c7d-a09e-50c6b40cc44f",
        "cursor": {
          "ref": "7facee42-65ab-4f2f-9906-0bd871b141d1",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "185d2af1-e72c-4a1a-9185-811b704b45d6"
        },
        "item": {
          "id": "121932b2-1d9e-4c7d-a09e-50c6b40cc44f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "69679c72-ba52-4584-ada4-a004905e0033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2981ec3a-8701-4a28-b5f0-acf92941dcaa",
        "cursor": {
          "ref": "1f61bb9b-0432-4ca5-adf6-af447c3a3bed",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8562ab23-bd76-4c78-a217-2cd2f053b37a"
        },
        "item": {
          "id": "2981ec3a-8701-4a28-b5f0-acf92941dcaa",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "422a3a55-d554-4146-82a2-171c35b324b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce6cb7c-8298-4a37-858b-48a9a5484a35",
        "cursor": {
          "ref": "bce5fe51-ce6f-4d77-a2df-156c5fd7106b",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5de6add5-42db-4073-9d38-5de3800c893d"
        },
        "item": {
          "id": "5ce6cb7c-8298-4a37-858b-48a9a5484a35",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7265df2f-32c2-4b2b-9781-1a3e2327e81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d821f237-f9dc-4dc2-a2c7-f22892c7f181",
        "cursor": {
          "ref": "887b32c3-4a2f-4979-a252-5a3e37b18bec",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "125c8772-90d3-49e7-ac3e-ca11b545f192"
        },
        "item": {
          "id": "d821f237-f9dc-4dc2-a2c7-f22892c7f181",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3fbd77fd-70f4-400d-b49d-78245e0d759b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c0cdac-8e5c-4f9d-a375-17e48b1f817f",
        "cursor": {
          "ref": "c3ca0496-76fb-42b4-918a-0833ec4b3df5",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8e2b5152-d7c9-4895-ad30-1a6ba4983ceb"
        },
        "item": {
          "id": "77c0cdac-8e5c-4f9d-a375-17e48b1f817f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "91ec2801-012a-4ce0-8727-9d0c1288baac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbe5d47-abb5-41e8-9050-80be25d86f8f",
        "cursor": {
          "ref": "638e5912-9f37-4f33-ad68-9f09b1cdf494",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "38c2885c-9548-4f07-a957-17a3c214226e"
        },
        "item": {
          "id": "cbbe5d47-abb5-41e8-9050-80be25d86f8f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "60d7eab7-43fb-44b3-9fe7-d9d5f952c5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9d76b5-ec82-4183-a7d2-76a430f2a524",
        "cursor": {
          "ref": "7e2d637c-9645-41dc-bbf7-3f1cae43fb8a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6e841a4e-e4b5-4aa2-88c9-f5407c65c871"
        },
        "item": {
          "id": "fc9d76b5-ec82-4183-a7d2-76a430f2a524",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bcba1b49-3a0c-455f-a9ff-365ee6d84da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fe6f37-c758-4f7c-8a62-fbf1f9ae90b7",
        "cursor": {
          "ref": "befffbb0-98fe-4bba-a0d9-2016e367fa5f",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0863b267-82cf-47a3-8f17-2cf64306f694"
        },
        "item": {
          "id": "a1fe6f37-c758-4f7c-8a62-fbf1f9ae90b7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1ced4148-d2b9-47c6-bdaa-7c8b2174b019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c931123b-9ee5-4049-8db9-248dd9b43840",
        "cursor": {
          "ref": "63788423-3464-48b5-aea4-4946ce3f955d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ced5583d-a1aa-4d7c-814c-ef38373a0979"
        },
        "item": {
          "id": "c931123b-9ee5-4049-8db9-248dd9b43840",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7d803d82-aae6-4c6e-a158-78279480d6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c7f511-41ad-4b1f-be6e-3c08143e8cf9",
        "cursor": {
          "ref": "fe5337da-c3e0-42c7-a81d-1dc00573dc94",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "01c16ad4-7119-418a-bce6-274b57acdd17"
        },
        "item": {
          "id": "a0c7f511-41ad-4b1f-be6e-3c08143e8cf9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "79963242-39df-4ebd-aaf9-17d5d8015655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9834c9d7-33d4-450d-90dd-4dd6efa911db",
        "cursor": {
          "ref": "0319fd1e-a20a-4cdf-a5d2-1c3d80d62f0e",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "320d431b-98f5-446f-be4f-8e45227d742f"
        },
        "item": {
          "id": "9834c9d7-33d4-450d-90dd-4dd6efa911db",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "691a4097-1cde-4019-a379-f5a7e2218420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80afc56a-1dd7-4bb6-8719-944b180fd05c",
        "cursor": {
          "ref": "276c57d0-a6d7-45eb-98ae-1b8580a1f9bf",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b6fa3750-ed5c-44bb-b46b-3712180f708c"
        },
        "item": {
          "id": "80afc56a-1dd7-4bb6-8719-944b180fd05c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d0a20db4-b531-4e6c-90d4-ec29170d78cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebfea82-ec84-4d95-b552-4a9bc340e6f4",
        "cursor": {
          "ref": "41b4cf20-4c36-4a67-b881-49ee642de7e9",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5e454fb4-a78b-45c1-be05-106ecb51b428"
        },
        "item": {
          "id": "bebfea82-ec84-4d95-b552-4a9bc340e6f4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "899d6efe-0fec-4db2-8999-38d2d1d02236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a125cd-46b5-45fe-aa85-1df1a4bacdb9",
        "cursor": {
          "ref": "7d4e3a83-341e-4971-8299-1f8ee6d49a03",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "58a249be-0f43-4d68-a401-e7d7369e559f"
        },
        "item": {
          "id": "f0a125cd-46b5-45fe-aa85-1df1a4bacdb9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cc1993ac-9827-485a-ba43-790b2ee8ff77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f9dbd-5154-4bd2-a975-7f8726aeda5f",
        "cursor": {
          "ref": "59529b4f-46c0-4082-b83e-65bda8e7e76c",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f5d84a23-8d1e-49f2-854d-a53b5b0dbb94"
        },
        "item": {
          "id": "b33f9dbd-5154-4bd2-a975-7f8726aeda5f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "79a43daf-2285-4c69-9186-b069b7ac1736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bd4957-00f8-4132-81da-01206fecbc3a",
        "cursor": {
          "ref": "7c13e35b-ee65-4dce-81c2-3022bb7dd257",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8c7b5e37-b968-4bc7-87bf-648a51b7fe9c"
        },
        "item": {
          "id": "17bd4957-00f8-4132-81da-01206fecbc3a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0dcebf98-1759-4a29-98ce-a43c6d9af09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5ed0dd-856e-4bbb-bc0e-aa8bf4ab226b",
        "cursor": {
          "ref": "e93259c9-d91f-4ec8-bf16-7fe8bfb4832f",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8d5ab389-b734-4e1a-894b-f62488e7c9f9"
        },
        "item": {
          "id": "9b5ed0dd-856e-4bbb-bc0e-aa8bf4ab226b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ca13f6e2-7629-46ea-961d-7a7e6c9d4143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9504c7-b2c2-48d9-b316-1810bdaaf961",
        "cursor": {
          "ref": "a1b2ede5-3026-430b-a525-210ab0b2809d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6840e0a4-7399-45b4-a611-b56ad58229af"
        },
        "item": {
          "id": "7d9504c7-b2c2-48d9-b316-1810bdaaf961",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "004fe702-994f-461e-a2f1-f73c2bb3265b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad83fe63-50d0-48ea-b161-1f5d9a90ad73",
        "cursor": {
          "ref": "95d902ab-84b2-4c3e-8ed0-6225d47cbeda",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5ac73375-6f8d-4453-8cdb-ff658aebd5c3"
        },
        "item": {
          "id": "ad83fe63-50d0-48ea-b161-1f5d9a90ad73",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ef05051c-59f6-47b2-9703-0778ea658c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab814ec7-bdb4-4e9f-aaa5-8dc3014664df",
        "cursor": {
          "ref": "938866cf-d136-439f-8f40-e7dfe7498c1c",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b9ee08f7-8025-4f4f-bc89-0cc2c0cc9ef2"
        },
        "item": {
          "id": "ab814ec7-bdb4-4e9f-aaa5-8dc3014664df",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3a034b42-b0a2-4aaa-a695-d72db1bd6102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f132484-5a76-45de-b03d-81d2b1e5d767",
        "cursor": {
          "ref": "787d4cfe-9ffe-49bd-82ea-fc2d14dd083b",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "90c6142c-afc5-48eb-9046-644a9e6f8733"
        },
        "item": {
          "id": "6f132484-5a76-45de-b03d-81d2b1e5d767",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "69cda5d5-e249-4084-8ed7-222b8936f895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99498ff-44c6-47c6-967b-cc593977c1ef",
        "cursor": {
          "ref": "514d8f16-4926-4207-a28e-868b71f28337",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "05640897-3f12-428e-ba16-c2167582a75b"
        },
        "item": {
          "id": "a99498ff-44c6-47c6-967b-cc593977c1ef",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cdfff0af-277a-4c96-8ddd-3b4f8be2b438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a22a807-d88d-4290-abd7-0d2b328046f0",
        "cursor": {
          "ref": "2cd2a26c-bc84-4f62-9998-8b9926f5734b",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6da07120-0905-48ff-a9e0-e71461e6808a"
        },
        "item": {
          "id": "5a22a807-d88d-4290-abd7-0d2b328046f0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ebb9df37-7b6d-4a75-a67a-97137d6d54d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e560266f-c0a0-42af-a408-a518eec97f17",
        "cursor": {
          "ref": "b89c3b4c-51a7-40ab-87ae-d0f728a8b658",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f78792cf-935b-42dd-911f-4bd2ac1ab1b6"
        },
        "item": {
          "id": "e560266f-c0a0-42af-a408-a518eec97f17",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c5905797-5e59-4eff-bce0-4385f20af4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330bdf47-146c-4ccb-b94e-f44e4ed9d130",
        "cursor": {
          "ref": "6286c99d-d088-49e0-b5b3-9b118cf7c3ae",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9ac4c241-31a0-4c99-8c02-39609bc8c108"
        },
        "item": {
          "id": "330bdf47-146c-4ccb-b94e-f44e4ed9d130",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9d4e289c-485f-4c4f-9e3f-ce0016a9cbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bc7a8e-f48d-4630-bda0-de5883bb6726",
        "cursor": {
          "ref": "758aa6a4-277c-454b-8ef6-d82e3e1a7961",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1f2f9584-566b-4d0e-b5b1-ca9967dba244"
        },
        "item": {
          "id": "f9bc7a8e-f48d-4630-bda0-de5883bb6726",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d346ae33-c4ca-4218-8d06-1f00f4a3fc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c469c321-9b6d-4200-8508-9a1bc9d89a84",
        "cursor": {
          "ref": "dc3c879d-53bb-41df-8ab2-3bff9e3a4610",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "21142a49-0ce1-40a3-aaf9-fc789e8a8bc5"
        },
        "item": {
          "id": "c469c321-9b6d-4200-8508-9a1bc9d89a84",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "984eb840-ba4a-4898-b9c6-835cda0cf50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d01ba56-711a-4098-b659-3342cc966bdb",
        "cursor": {
          "ref": "68132229-15e3-4076-94b6-f16f75fd8d4b",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d4e702e0-b81f-434e-9495-193f705f9d71"
        },
        "item": {
          "id": "1d01ba56-711a-4098-b659-3342cc966bdb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c4142cac-410b-4b87-9b48-59be38f742c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cc52d7-f9ab-4d79-9e14-75ebc7046f22",
        "cursor": {
          "ref": "5aed53df-c5ca-49fc-8734-4c821e6c4032",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "87f82e6d-dabc-4436-9d4f-17cf9c538ea8"
        },
        "item": {
          "id": "14cc52d7-f9ab-4d79-9e14-75ebc7046f22",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "29604a8f-3e9e-481c-8502-59c541e36142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd5b797-9ad8-4697-b087-d0443c7ba995",
        "cursor": {
          "ref": "7b0e151d-2e34-4d4d-ae72-23c302a2a686",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eace476e-7218-4aa7-b8d3-6fad2b869b0b"
        },
        "item": {
          "id": "8cd5b797-9ad8-4697-b087-d0443c7ba995",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fba6d4f4-ae27-4801-ba12-ca82ebb55c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d664c4a6-f9b7-4cb3-8690-bcc9850c9086",
        "cursor": {
          "ref": "45bbb5b2-e148-4799-b37a-908969e2cf34",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a82de561-d37d-4ee0-bd40-944b51a8c648"
        },
        "item": {
          "id": "d664c4a6-f9b7-4cb3-8690-bcc9850c9086",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2906daec-70a0-406f-99c0-3e15e4e3f390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717670f9-59ea-4461-a09b-98c0506edda9",
        "cursor": {
          "ref": "0e7c8db5-ea90-43d2-9cc7-22d68c504ba7",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b402d4b0-67e0-4262-8694-b65cf7c178de"
        },
        "item": {
          "id": "717670f9-59ea-4461-a09b-98c0506edda9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "de24a90c-48d9-4392-8518-1d7735a24c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2eb2cb8-d279-4ebd-b873-17d2c2cff034",
        "cursor": {
          "ref": "7d15469a-c5df-428b-864b-f8fc6c49fc52",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "810baaf8-0dcf-490c-b6ff-e57a100b73c5"
        },
        "item": {
          "id": "b2eb2cb8-d279-4ebd-b873-17d2c2cff034",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "46d17d8b-1291-4e5f-9725-27b863d4d9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed59a21-28e8-434e-b1ec-0c4a6d9a58fc",
        "cursor": {
          "ref": "350c71c6-11a1-47d7-a570-0362111c0de3",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "823a7809-fe6e-450a-a6df-a9e0daeb74a4"
        },
        "item": {
          "id": "aed59a21-28e8-434e-b1ec-0c4a6d9a58fc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b1bfa9f7-90b5-496a-aa9e-2db73341c017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60943e1-d78e-4489-b030-535a90473d23",
        "cursor": {
          "ref": "2fab7f76-1577-4449-b366-e8eeedb007f0",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a712d31a-0728-4743-aca6-66ade45ca29f"
        },
        "item": {
          "id": "d60943e1-d78e-4489-b030-535a90473d23",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2858d6c1-7709-49c6-b901-bae982b56f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555d87b3-6a13-4936-bdd7-7d1af34796b3",
        "cursor": {
          "ref": "37d65aba-ae5a-424f-a9ef-03e27b356306",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f6048f4e-18ed-4d6b-b3c3-50d5ea3828f9"
        },
        "item": {
          "id": "555d87b3-6a13-4936-bdd7-7d1af34796b3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bce8903e-b234-4e05-958f-072da2e07508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e545ddf9-89c3-4d04-92a7-b19f802f3c7e",
        "cursor": {
          "ref": "dcb5ba54-633c-4219-922c-8b6e80856ede",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "046e6728-619e-404e-8e32-19420034477e"
        },
        "item": {
          "id": "e545ddf9-89c3-4d04-92a7-b19f802f3c7e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1142f181-ff32-45aa-a691-005aa3419b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b39ce7e-9c41-4997-b5ce-d2dd58e90c67",
        "cursor": {
          "ref": "af9650f6-d5e8-484b-8a5e-31d5d4ba451c",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bbaa82a3-2ed6-4fd2-96e6-319addbef18f"
        },
        "item": {
          "id": "1b39ce7e-9c41-4997-b5ce-d2dd58e90c67",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b4945452-8b57-45fa-aa74-880269a986ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0b211f-b066-4bda-9617-317115894e7b",
        "cursor": {
          "ref": "291e3957-7e94-4dbc-85b4-06e558e6d8a7",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "178b84f3-c403-4194-a56c-54234eb8c730"
        },
        "item": {
          "id": "ae0b211f-b066-4bda-9617-317115894e7b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "807a3173-c4f4-447d-92b1-92e3e09f2d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c204a8cd-2a6f-4ee8-87c9-a6c6de19c1aa",
        "cursor": {
          "ref": "142c4910-5186-4120-904e-96c782a0373b",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3f497ae7-9a35-4463-958d-f47bd8499143"
        },
        "item": {
          "id": "c204a8cd-2a6f-4ee8-87c9-a6c6de19c1aa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a8e12681-cf72-4f9f-9f28-f64ef8300b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd8acf8-5574-416e-adb2-5af6e6a66329",
        "cursor": {
          "ref": "2ad8d652-c162-42d2-9320-a2a9df219349",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "40f40478-01ee-4378-a198-5f29d1fd3d96"
        },
        "item": {
          "id": "5cd8acf8-5574-416e-adb2-5af6e6a66329",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "891191e4-2d80-4783-8170-6da017394a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e478c9-3162-44e4-917e-d3bf7fd5b955",
        "cursor": {
          "ref": "9b3f2dc1-1dbf-4b17-9a69-4ed5a3353552",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "651cb1d7-022c-42a7-b722-87c12cf3483b"
        },
        "item": {
          "id": "a1e478c9-3162-44e4-917e-d3bf7fd5b955",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e5bbd64a-3345-4555-89fe-bd40327df8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655c88aa-93e3-4e21-bdb4-e5fbb95bd050",
        "cursor": {
          "ref": "f714bf0a-3f57-46ba-91df-f0ecb5b5137e",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f9159dbc-b472-4fb9-b164-541984dd6734"
        },
        "item": {
          "id": "655c88aa-93e3-4e21-bdb4-e5fbb95bd050",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d85c045f-f38d-4793-8cb3-2036adc9cf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b392cd0b-d321-4cc8-a0d5-6016aaad8ebe",
        "cursor": {
          "ref": "069ede14-c009-4b7c-8700-9a2af9621378",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4f0c8a59-48b9-4fce-ad21-7a006add9a7c"
        },
        "item": {
          "id": "b392cd0b-d321-4cc8-a0d5-6016aaad8ebe",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "16bc070a-ad78-40f9-bef1-e84e2e7127f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6239b44-5264-42c3-ad4e-00142c511f3c",
        "cursor": {
          "ref": "2e3f9a73-2113-49ad-8865-1344c181fbe0",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "86749e23-e73c-4604-a050-74d931aab639"
        },
        "item": {
          "id": "a6239b44-5264-42c3-ad4e-00142c511f3c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "48c13274-3337-467e-aecc-28427879bdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eef3686-b957-4a07-bddf-0337181430e3",
        "cursor": {
          "ref": "143ab854-a153-4b4d-8669-c7add8ccc897",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cf0a284a-5109-43a1-b1a0-888dab2f8c09"
        },
        "item": {
          "id": "4eef3686-b957-4a07-bddf-0337181430e3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6a16eb49-45b2-40d2-bf74-043bd597566c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccb8f6d-54dd-4cf2-a858-3d08244dde77",
        "cursor": {
          "ref": "1f20c3bf-0023-4a02-9194-6af072bfb173",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6be0a397-1cee-4462-91da-6283b38b0d65"
        },
        "item": {
          "id": "8ccb8f6d-54dd-4cf2-a858-3d08244dde77",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "af27f9ad-6e64-4c2d-a77b-0996adc47c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a51be7-9433-41b6-9b7b-3ce3885700de",
        "cursor": {
          "ref": "6b819ce8-6c43-410e-a6fb-9b4515f76adf",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "16af9d64-60c5-4e39-ae13-574b34bfbc4d"
        },
        "item": {
          "id": "a1a51be7-9433-41b6-9b7b-3ce3885700de",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0168ecde-3cd2-4ee2-85d8-d419f019f797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443c0d62-6059-47cb-8d4f-a961c12eab72",
        "cursor": {
          "ref": "5d14ceda-3f38-4dc3-bf98-08a763dfafae",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0df8b961-74a7-4a0c-a773-ed79dc3a925f"
        },
        "item": {
          "id": "443c0d62-6059-47cb-8d4f-a961c12eab72",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "61d7d0a4-af63-4ab8-bb8d-eec3746c5f2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a769b7be-fdba-4cc2-8b0e-055d0cface5e",
        "cursor": {
          "ref": "62d99242-e954-4cbc-a25b-31c953d883b8",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "30988e29-431e-41c1-b98c-ebfe3fd25389"
        },
        "item": {
          "id": "a769b7be-fdba-4cc2-8b0e-055d0cface5e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7ae86817-8335-4f9b-9d32-223982415213",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91485d57-b5bc-42bd-a5a8-52af660dd1a8",
        "cursor": {
          "ref": "aba3bfd9-2010-4f83-af2d-30bbe88cc841",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "de82dcdd-65a1-4f4c-a1d2-759cbe05529b"
        },
        "item": {
          "id": "91485d57-b5bc-42bd-a5a8-52af660dd1a8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d85406d4-921d-4fbb-979c-1cb0c277b48f",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0022b507-db2e-4495-adaf-14173019aa81",
        "cursor": {
          "ref": "b8edf082-61a6-4846-be1b-9a034e8d982a",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d6988104-5d32-44ee-ba33-2995b598385c"
        },
        "item": {
          "id": "0022b507-db2e-4495-adaf-14173019aa81",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f616055a-1e38-469a-8ea2-3c18dde1a04a",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe83fae-618b-4fb6-bcf6-b96d944645c4",
        "cursor": {
          "ref": "9c3fdcbe-3143-4158-9a8f-b5d03a2f4a44",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "078ae672-f1a3-4c73-b1db-1cffe99c2d4f"
        },
        "item": {
          "id": "abe83fae-618b-4fb6-bcf6-b96d944645c4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b00eeecb-2463-4cc7-b8f2-4315c4e641d2",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94bfd4d-64ee-4954-9eba-428b3e73e252",
        "cursor": {
          "ref": "fc5596c6-47e9-4528-87f0-5be5334fcb42",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "89033615-adab-46b7-af14-9f3220f70857"
        },
        "item": {
          "id": "a94bfd4d-64ee-4954-9eba-428b3e73e252",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45f1aae4-2d2f-49c6-9355-a446e54f0909",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94bfd4d-64ee-4954-9eba-428b3e73e252",
        "cursor": {
          "ref": "fc5596c6-47e9-4528-87f0-5be5334fcb42",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "89033615-adab-46b7-af14-9f3220f70857"
        },
        "item": {
          "id": "a94bfd4d-64ee-4954-9eba-428b3e73e252",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45f1aae4-2d2f-49c6-9355-a446e54f0909",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94bfd4d-64ee-4954-9eba-428b3e73e252",
        "cursor": {
          "ref": "fc5596c6-47e9-4528-87f0-5be5334fcb42",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "89033615-adab-46b7-af14-9f3220f70857"
        },
        "item": {
          "id": "a94bfd4d-64ee-4954-9eba-428b3e73e252",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45f1aae4-2d2f-49c6-9355-a446e54f0909",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05834cf9-9810-4290-8b7c-0c3daca81d57",
        "cursor": {
          "ref": "a6bd7809-8087-4f18-8fa8-f8bb1b6bc232",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "feaedaa8-07a2-4756-9fb4-224df1ce462f"
        },
        "item": {
          "id": "05834cf9-9810-4290-8b7c-0c3daca81d57",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "04604a51-e4a1-4410-95ac-8678d6d01ca4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74c273-8ac9-426c-9170-93ea58727f8d",
        "cursor": {
          "ref": "2192b314-db8b-495e-9365-140f94107379",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "661d0c4c-fd5c-474c-8d82-1faada348b11"
        },
        "item": {
          "id": "bd74c273-8ac9-426c-9170-93ea58727f8d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "256e9bd7-3e9c-4b5b-ba1c-e8bd6fa3c2e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74c273-8ac9-426c-9170-93ea58727f8d",
        "cursor": {
          "ref": "2192b314-db8b-495e-9365-140f94107379",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "661d0c4c-fd5c-474c-8d82-1faada348b11"
        },
        "item": {
          "id": "bd74c273-8ac9-426c-9170-93ea58727f8d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "256e9bd7-3e9c-4b5b-ba1c-e8bd6fa3c2e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae310e5b-be46-4576-9e70-d1036747cbea",
        "cursor": {
          "ref": "f44a468b-4def-4df1-b215-b6524cc762e8",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9cadf987-38a0-4650-bff1-bc51447204a6"
        },
        "item": {
          "id": "ae310e5b-be46-4576-9e70-d1036747cbea",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3414db49-f006-404f-8aef-9cd1fdf47502",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 47,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fc25a7-86f5-4e79-85db-dd50d67b3007",
        "cursor": {
          "ref": "92541bbd-a46c-4c73-aa92-011c85aa6fab",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1a3b849f-5e38-4e23-b040-3ce661155f0c"
        },
        "item": {
          "id": "e8fc25a7-86f5-4e79-85db-dd50d67b3007",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4f6e29fc-50f3-4c65-b062-133b6eb1d0b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fc25a7-86f5-4e79-85db-dd50d67b3007",
        "cursor": {
          "ref": "92541bbd-a46c-4c73-aa92-011c85aa6fab",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1a3b849f-5e38-4e23-b040-3ce661155f0c"
        },
        "item": {
          "id": "e8fc25a7-86f5-4e79-85db-dd50d67b3007",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4f6e29fc-50f3-4c65-b062-133b6eb1d0b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26a9408-7c1e-4d01-8b35-566cf10b825b",
        "cursor": {
          "ref": "d2fd7d18-0b3f-4219-b2c1-4bc5d3af78d8",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "919d730a-40ca-40f3-87dc-c31be94dea19"
        },
        "item": {
          "id": "a26a9408-7c1e-4d01-8b35-566cf10b825b",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "677755d5-20f4-4111-ade4-3ac93f0e4e38",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}