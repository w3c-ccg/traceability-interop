{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "17553943-db9f-4bba-8fc5-b5b7de023298",
        "name": "Clear Cache",
        "item": [
          {
            "id": "14ff5dda-e727-4f94-9064-70e0301404cf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab7450d6-772c-46ed-895c-ea4a158826ce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "36a06193-cf5c-414f-8fa0-1d9101106205"
                }
              }
            ]
          },
          {
            "id": "fe147135-b5c5-4c3f-9167-675139408cfd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb3bde6d-e75b-4515-ac99-0943eeaf8e88",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d0ed90de-d2ce-48ff-8912-1a3ec6cd7134"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ed6420a8-c31e-4176-9981-97019bf6ebdc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "917eb7e4-5636-4418-94fd-a56f3a3be7ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb96019d-9db6-4eee-9d03-5fb77721ab89",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49a178d3-f822-4ce9-8e49-21f548f3c580",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4485f5d-f061-47f9-afb3-f4c162d27648"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3b23e88-62a7-4d43-93f0-8a24076ea7f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b869b48c-3126-4327-a3d9-b97bef45824a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "98e6c39c-0f74-4825-a929-e9f926416a8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "084448ea-3a53-4bee-9b8f-3ee56fa95110"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e8ae1bd-b902-4ece-b96e-a7504a591ca8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "273dd1a3-19ba-4d35-ad1c-77b4b2d24166"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "289a49d2-d651-45d0-88cc-799bbbc5d27f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2675c419-6c4c-4ee7-8047-1d22c12e67a3"
            }
          }
        ]
      },
      {
        "id": "ac9d03c4-18ea-4400-9d02-28c683625c49",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "13bb91f0-c7ec-4982-8103-b5f6581a001a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6be99bcb-1ba3-4b7b-be25-d1893378aeb0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86aaa50d-0b46-4cc9-b5c3-e9890fb7b792",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45bbad4-f1b4-44e8-8d67-d4d5b3fd12b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d314656-e40b-400b-bbc9-84aad1d4d8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d41044-2579-4ef7-a6c0-703509c9bc93",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a34b66-ac08-4efc-b793-30d42bf82df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a59b291d-46bb-40e4-928b-6055a3ce21c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52be5386-4084-427c-8054-749df2f2b634",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604aa410-ecfa-4f9a-9b45-bbf55ceb50fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da9c7c43-b881-4988-9489-0163542973ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eea065f8-c9a0-4eea-95e3-df9b33691d71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "994100eb-2218-4272-aa9a-f2878672b182",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3974374-ceab-4f74-9091-946f80a47161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85c1c9c8-b19d-439c-9176-9116e4b6f6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107c6097-a536-4186-b1c7-ed31ef3267e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6a0da3-4453-4958-9baf-ce7e0101d8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b83667-458d-48cf-859f-9a621cf15072",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc0e816-6332-464d-a7e5-a81f60e04de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89809656-7171-43da-8fb3-3194da410eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dadffc-11bd-42a6-b92a-dfa66c94eba9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "9008fc4d-98e2-4c28-a142-9f1da488e918"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "66f36bd2-59a8-412a-9dd8-98fefc56111d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1597da16-20ac-48fa-aebe-f5c0b397d1c0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e056584-707d-4180-84ad-bac4753f4382",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6945a505-0aeb-4b50-b90a-92901f7d1ab1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "343095c6-b468-4293-abbf-f2649e4ea708",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "114eecaf-0680-48bc-a299-d65bb294e378"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "995e4b42-4749-4a52-8e74-966e3f9b7a33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "323ea142-4fe9-4b41-b44f-02903fa4f244"
            }
          }
        ]
      },
      {
        "id": "b3aa9edf-614d-4051-81a5-1c279fda53dd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "51ace640-e478-4ecd-b081-367168d7a6b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "205cfaf6-e803-4225-888a-f4c3de99dbd7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f7700d15-48a4-4b5f-8af7-4902fb85bf54",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7a046c-1621-47ea-b648-90095fdc794f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c247a60-c538-4b71-abd8-1c269c9e544c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014cd211-b707-4d4c-9df6-3f39b9be5003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd9162d6-668d-4414-be25-94daa9bf6cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89174313-9b2d-43e2-9a0d-c4d50e3fffd3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d5364a-2389-4ce3-81ab-87228de9fb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f40da0-52e9-478c-a18c-c395604d56ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1037cd3-015d-4e2a-9a40-a302d1f27f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10551a43-ef4a-43bc-b794-b8137800a8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901ad362-5c74-4387-b60d-3d24604acf2d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfcf146-f871-4d6a-a0d4-01a997f4f584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0578c0c3-85f6-4ad4-ba3b-27d83c6e1a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a8a679-2d59-40a0-97a7-86c6bd98a643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a2bc182-e1be-4a50-9a68-7582dfe320ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d19ffd7-19db-4d3d-86d1-40e724fe5e44",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b63353b-be27-4d9f-8f6a-569f26f8f4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c018cb-486e-43c1-b872-48010ed81621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36fba24-8dfc-4e17-8ee2-8161bbe7f194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9adf293-1a55-4fe5-8585-69f388c26137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5936559d-ab17-48d5-8f2f-f6c58a78412b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f468147-8f26-49a0-baf9-30ba0614cb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e458439-0125-45c7-8d86-c760a31f25fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04b9260-50cd-4576-b74b-0d479e5ccee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef1d21c4-fdc0-4bbd-ae02-00c993aa963b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34467c7-e444-4a3c-aab0-5fb730efdf64",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03992bf7-02a5-49a0-99e1-ed1fc740cbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f36357e-aa30-4239-ac3b-b5ef64e4aac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67bb57d-d73d-4a03-978c-e349e858cfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1377e3c-26f5-4896-8834-56dd29d4c2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c497e1a9-3062-41d9-9919-3efd148f8402",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b117e0b-0d24-4a8f-8146-481c0b83c9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611bae00-f794-46f1-b624-d6c45340e787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbad877-3a43-4eb8-a0b0-84ee96bb794d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e0eba24-f575-4dbf-9936-17b50e53cdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a2fcc1-5859-49ab-8d0e-cd00c0b43e7b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4d1b80-a266-4c11-8361-2996addb7ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed2547e-74c0-460f-b343-f24758b5371a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addd5aa5-11bc-4a37-807f-fb1f53004cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2bbb374-208d-4af0-b8ce-bd6705fe1931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ee9117-b86c-48ff-8f19-cdb711f51a13",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484249bb-5611-43e1-a81b-245b62311970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43bc38d-0989-49e5-a380-74137dbdf51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130e4d8e-1285-4bb7-adfd-aab34d8de8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0755614a-d3b0-4d5a-8b5c-9da496bd2f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572d94a2-624c-4128-b494-d8d06be3b3a5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27be13ef-65f3-4403-8dca-f96da192e5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21e1620-a305-4ddf-adab-8477e2bdc83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b75b54-ef75-4618-8388-79cfe6c16f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b541fd35-beae-442d-ad37-08dedf63af94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de628f2e-777b-4aa4-8b84-686c7d5573ec",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d1e040-8808-4f7a-9c0a-49c427625c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c64cc31-5feb-4499-b217-f56b7a62afff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c6c9ec-1fe7-4cff-8d00-4490720eb593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df3565f8-fada-4cbb-9de2-4b944014bea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e65987-4af8-4f45-9d33-5e0a098adb0d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0407fb5-a53b-4f03-8128-5ca139b262f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e19f2c7-866a-456c-a187-83a6141f981a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e5ef3c-24cf-40c8-bae7-eca6c63005a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3053bd27-22c4-463b-af16-9fdb52a42840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466a7a7b-27b9-4d6a-9d0c-8be594bd8ea4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d0d7c4-a2dd-4db1-bbd9-2d390a88f675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284794cc-f242-4d92-9700-e2e8ae1c5666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f52b7b-1208-4031-a2d0-92bdecda6330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6cc20be-86e2-4ec5-b0cd-69e84ab65c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda7dbef-d147-4b0d-b94a-0be6e5c474fe",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6efe334-56b8-42eb-9c0a-f59b48d0065c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0900aa-f004-4d19-857b-6ba764a5cc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2021a779-e7c2-45f8-941d-8733c3fba836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d0a3138-414a-4e4f-8033-7e6f532345b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721d5192-c721-4340-9dd8-72ee77e081a1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446fff78-cc2b-4a4d-92fb-faa6ec50b1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcd76c2-d5ee-46e6-83c0-303a95959d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5d494d-c11a-4732-97e1-0c59d2a3c06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcf73721-bdb2-4be2-9f4f-bf179078b428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8504cc47-98d0-4a68-a290-7b2a2e9ba813",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57af267f-9fd7-41dc-96a8-c6dd68373824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3262c30e-2e45-4edc-85b7-7e59c0762af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60af0ad3-4361-4ebe-bf4d-5f957bd30bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bd6b31d-258f-42f2-bb20-7715da267b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437550de-b2d3-48c0-8530-1d18e3359016",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6c085b-ebd6-424a-a9cc-f5bce08c35a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb691e04-92cf-4545-bfe0-617c189015cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e46abd-3938-4cab-991d-4e968c8eaac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43c0ebe3-1bfa-4a10-82e1-754474d89a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdff4b3-16a2-41e4-a757-07e10cb6fa57",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6617c821-7a41-4836-927c-441c0f927601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd501ec-c9d8-46ea-9530-343d9a7d51d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466cc2be-d6e5-4d19-8983-6bedbe14bb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5646f2-f5f7-4937-ac9f-5995e68f3950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657099eb-e6c2-4b1f-a87f-4b30d4236d65",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13caa8a-1381-4fa8-9c4a-07b058b50e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3917d61-5f3a-41bc-89c5-2cc690075593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff459135-3543-4173-b049-4947075a78f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7600e7e-5f87-40f2-b594-e404b7a839b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4c13d5-e1db-48db-8652-0b264cb7d642",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee9ed0e-3c47-4946-ad67-b0d2571cd45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1223c6ea-6d4c-42a2-aabb-1bcfd4d82ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aab65f4-7e6c-4cd5-9d92-a30b84e69b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0f934c-d1bf-4192-9caa-0de265f07abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9b7e6e-e07d-4081-90e5-cc20abaa18d4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c11e222-b104-44d1-aaec-61b5f6c424d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb38125-2033-4655-9c18-31f718b0500e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2653c10-e2be-4df7-95ea-a58ed35c2937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c151a2-2a06-4248-9b26-58d68722ad82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48c6aaa-300c-4b6e-9c92-19c262caf53d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49b542e-a380-4641-b46f-d99452aafcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa55d8ed-f732-4a8d-9d45-7dc39dfeccfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0415f2f1-c7db-46d0-94c6-b5d2e5ee63bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "953e25cb-a6ca-49ce-a4e5-88b94e867a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a041abd7-2ef3-489e-9834-7821b5fbeff6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287c80cb-2c74-417f-b92c-ffcb4b91b9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b8b788-a8c0-48f0-909d-ffaa899f0f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17621d5-c6f6-49b7-810c-9e8834598efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cef26fe-bd9f-4919-ba50-ae16c7894387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7180f146-931a-420f-9718-d85fe6cf4bd2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135259f9-3666-4e05-a513-0e95abd2249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff8e917-650b-4935-9c08-a3460023437c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e18580-9140-45e9-a85f-0f387b769bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9d0742-83e9-4e3b-bb9c-aebb49ecde2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ebb793-8519-4b7a-974f-c5b67ef0952a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cdb8ef-8a4d-4802-8bd6-a7cb79e9f234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b94ac6b-0f56-4d14-8177-44d48777270a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdff01e3-2347-4f91-a12a-26ab97947184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "987c76c3-f5a5-4047-ada8-e4c287f06ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081591d6-03b8-44d3-b869-dd249b3d50c7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43eeb46c-8935-46e6-a66f-01c12ba2c7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0f76eb-db54-4b17-a963-ac1cc261ec23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2c857d-217e-46ac-8178-c39a7c1c060f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "255f6a61-f062-42cd-a34a-ce1dc1a4298b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1307c0b-202a-4e9a-97c7-59fad2410552",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d7bb5-9dd5-4d7f-97a7-f0ab3cdffbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e984038b-6bd8-4836-b812-00f71458c8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82627707-3acf-4622-98cf-06998d380705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13328108-8ec4-47ee-92bd-c76ccec32b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538110c7-1d5f-42b7-b444-d785cb93484c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff2e105-38c1-42c8-a13a-0ac922b20d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3e0281-c66d-4e0a-a326-04a0afe7746f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b436e9-b539-4ba3-83ef-759b51ff37da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7b18da-d47b-4dcf-ad04-205db2fb4ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2388b0d-7d70-4d33-887b-742fc692f7cb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb51809-9956-40c4-bd02-bd75f4563800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27b73ae-cb22-4e59-8108-0a7d21c4a83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ed9ee5-1f28-4887-9e50-b28787d22a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea7fc77-f361-4378-843f-0f5c9bbebcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4377ee-d375-49a8-9b22-bea87117d3e0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585c3a2b-2424-4f6e-8038-25c9f0b1c943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703e14a8-a805-471f-9f65-599b78dd3421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3015f13e-1a14-4175-b218-a2f894b11f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ecc7c2-6c7b-456d-aa29-9b0e3b8f93ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d59147d-c33a-4f59-82f1-6be1ccf8621b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a20cdbb-3ec4-4c0b-b489-ac12f66a3958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62ee0e1-b54a-4053-9f65-2df6ae0d0686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550c1908-6a3f-4635-85a1-8986f26c43eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a77dbdb-8598-4a4f-9a1d-859949a1e85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793e672a-dd6d-4318-8c43-fa20e323ad13",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1348da82-e7c7-44fc-a3c1-d1701ffd263e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660a1d91-2701-4eb6-b50e-652e21383f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb95e3d-77d0-4967-b8d1-e8bb1f403e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30742a70-fa16-45bf-9bdc-f5039f2d4cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d82983-61a8-4b68-92bf-5b2476d49823",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e323cce-f63f-4060-acaf-3a6355095a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab883e3-25ef-4a02-8364-5fba9eca387a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40d9c0c-9668-48bd-8d8c-ab64a8986dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7031c36-3a82-4290-a1a4-39e677e0474f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6c2e84-2874-4144-a882-5531f39e9b22",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00b9fb6-032c-4d47-af4e-504736e65e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65f2e53-8777-441d-98a1-0eaf91eedd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7012cc9c-3c4c-4a91-a56b-cbe5c37086b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d97c34d-a236-4356-ba01-ac6c93cfa691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313f8bb0-5f75-404d-8cb6-44a381f7d63b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d5ef81-ec4c-4ee3-8fb8-2de137e8e2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2694d70-59d6-4545-bf3b-44ecd1ab064f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac93a05-6d43-4cda-b365-cb112e167588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9b668980-d504-4168-a974-5b4c6a02fb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8e7bbe-80ea-457e-8fdd-6562cd33f44a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea876a1b-15af-4e35-ac9c-c3c07d47d2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36121f41-5dc2-467b-a92d-ba309a217641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86209bfc-af95-46fe-8501-e7274b122976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f057b2df-9838-4c28-be0f-4549b283446a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5babd03a-da1d-429f-982b-c4b3e1886e0a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592b6214-5a65-49b8-b336-9f20fd872a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dffe3581-c402-485a-9807-185686783835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd357ec6-6c1d-4d0a-b230-f4df9cc9c535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "539409a5-c678-4ecd-b896-ce511e732d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b77ed2-ec16-4f9d-a9f6-d766cd140725",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcfde29-c2e3-4e16-9e7b-165a43efa7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20e3682-5792-48d9-aa27-be331eb5d93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446dc45b-8624-481e-9895-ebbfd6c31836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6deb0ac-c2dc-46f1-ba10-949475fbbdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c434d26-a160-4b11-8db1-6ef3df91fd5b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9afd78-7d48-4d2a-b6a7-4cfbeca8dd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1d170a-e656-40f0-9e5a-d9b1e7d28c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617241de-64e9-42b2-ac3b-c5b553e257a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bb0d1d-f495-48e3-a094-55a741acbc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce29df9-1f12-4600-8838-caa6fb776446",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58d4ad7-d605-42d5-a70d-428775a543b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e528b10-3136-46f1-b577-3f15642bafac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff54883-d13d-43f6-9e40-aef3afb0def1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b218874-2a59-47ec-82d7-1625929ce639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88773b7d-49a3-4b75-a061-8867572e7440",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4c9522-23e6-4c94-97bb-0999f6cebcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09c9ab1-e881-42db-ab01-6ecfe882e4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4718aefd-3969-4480-8707-45446729b8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95fb398b-1203-415c-a78c-647c042e1323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5349d481-5774-4006-a4a8-d79cad5311c2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6841fd21-e75e-44f0-969b-154e6eecf483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afc179a-0e62-4e1e-ac86-418a06448545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02effe16-a7b7-4201-bdf9-2d0bc6d01240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "db4c3bf0-2e67-4e15-8a0e-b46771080626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca4d500-047b-4dc7-a050-333852ca0303",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd550dc-4995-4fcd-8493-58f4ffb71912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451120f9-7a35-4d38-bf83-9b3faaa56152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4441303a-fb08-48d3-b1cd-b4e676de2076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc37c92-aaf1-491d-b89a-36a739fc0fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576054cd-3fc3-48a5-a8f9-bc9769eff4ba",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8954e24f-856b-4fe5-bbb2-9d81cd30c5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254c39dd-34f5-4ae7-b3ec-5e147843df93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5317cfe4-b904-4dbb-a586-f10568a92cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1d4cc1-d28e-4e5a-9c80-cd76a42210e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e6a767-c296-4b0e-8354-84769116b65b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162cc23b-1cff-48f1-a627-dbafed0afb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f21ab7-3d87-476c-b7a3-98e20c5d4fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798dee9c-1c0e-454b-8b81-142012f3f86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b78ec6a3-aa3e-440b-9b61-70b1cc6a367b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de24db6b-b32e-4e06-923a-bcf95689039c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811ee2a1-bb8d-4cb9-bb36-cd1abc4eefa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fefed2-ee7c-4872-845f-8a6459f7a9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28756edb-d789-48e5-8e58-9fba9957ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8102367b-11ae-4b68-9388-adf89c3b84fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739baec3-79c6-4921-9409-7749389bed52",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491e1139-bfc8-4cce-9619-ed089ceb2be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03dae29-c8b3-4e12-9d61-1c49f710e975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14104a61-b195-4068-afe8-180d24112113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7bdb89-2a3b-4d66-aa59-dca217a454c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b001e3-2d1e-42be-a82c-b0542bfa8f27",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e28b9b6-ee7c-40ee-b6d6-cea63ae37643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25fca97-1872-4107-9279-8f776215b46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2248a1bf-fe74-41f5-ad38-4bc742d76583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b88f14-106e-4ee1-b142-c22739a97caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93814f75-6d46-4b84-a214-4110760c5895",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0932123-f992-47ed-9fd0-9662d11e8aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8498d3-f436-45e4-8ed2-88c341527369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e84277-c770-428e-96ce-6301270bd220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c694c82a-c6eb-4335-9a06-dd58bcef985b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fe9bdf-cc60-4f14-af9e-c8a2d8abddb1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa88a6c-0ad8-4fc2-a49a-665ef92fb420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341c8a66-6c27-4082-856e-9b8493b0e2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee56565c-edad-4795-9612-23e48088995a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d40b18-6eb2-47ce-9114-d7952bc7817d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac51ae1c-dbe4-484a-b61b-6eec8d5a478c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b565ec-35b6-405f-b434-9dfe7b71f822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf695a0f-98eb-4e9d-a3e5-5802ad2da7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c691ad-c3ca-4935-b073-df3e250ff0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d30ace10-6968-44a7-a56b-4ec7f19c3fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c010747-0432-4fde-8b66-67cf5efb30fe",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af3769e-ab83-4f67-b0b1-f2c60675d85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b03b80-00b2-4926-8835-b4564a121120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10beaf3e-33cd-4593-9829-4c659d29c86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2b1f62-cac3-43a7-be9b-329720fdb7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465a894c-899f-4a4b-8524-bc79fd495bf9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539d7b3e-7a23-49e4-927f-a8e2ee3c68c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08872a49-2ea6-47b7-8d98-1c32ba9cc6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae1ceca-bc9d-4598-97a3-bb37ab5f54a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b618d5d1-33b8-4179-8d24-1baa642f9dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8baff2-ca5c-42dd-9842-40f3d0e5e09e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c064626-c3ee-4284-ac6b-c37bb4ea7940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ee650f-574a-4a97-acff-3cedefc9bf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f994eaa4-8bc9-4089-84b9-bedb66ae19ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e33bfa-c257-4633-bf5d-dfac0370e11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d24b3b-296a-416d-93ce-4902b90ccdb2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8d9dd4-92fa-4996-a25a-48b72b0dac69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f79e21f-3932-43b4-922e-f26c8701a78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c8f0ec-8588-4093-ab70-10662a2f4366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a62539-55a9-4b99-ad0d-e01c16af43e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c8b766-1f55-4b6e-892b-d085512a754c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea79a6d0-7a35-4b7f-93d6-2d96b709202c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9b740e-c9d6-4626-b384-bbb536de197e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4280dd6-3587-475e-8b28-de528c348bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "26faec6f-192e-423e-b869-6d795a1c60e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22b1712-d678-42a0-ba3e-27b4cfd4133f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1263d0b5-4487-40e1-9219-c64800a33e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a784003-37db-4e07-bedd-2d7e4dc937dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8e69e2-f46b-4246-be34-a48e9edd590e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfaff463-b9bb-4184-8534-1c5d7d09a67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db79d244-eac8-449f-95d5-8f6241fabfd9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164ce555-54eb-400c-8671-19c4b6c7e726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fd0c0b-0d18-47ac-bae0-f450ee4ce017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12de200f-c75e-480e-a284-f095c8853905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3892cdce-0932-4ac0-a29a-11dac213393a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bbc6a0-a436-45e6-87de-81a6d460633f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe651d1-3045-4c9c-8cb1-95f2f1d47540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f7b237-2023-4e0f-8189-9057fc506080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a61881-a337-491a-9763-b1ec4eede0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "395ecdaa-bb21-4984-8464-6cf5f10c1914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183aec95-90f5-41c6-a02c-599c3c67805b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60f74fa-713c-4da1-a9ec-2a7a53c7e94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c074e41c-1d0e-4549-b2cd-1cd4c9dcb594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1225356d-74c0-4215-ba17-8faef38c1890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6788da95-49a0-47a1-9761-0aaa76fb3d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eccdf3-d3bb-4d36-85bb-7c475c4ef83c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e14a17-0e3f-4913-b070-06c2c6d66741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d834ef2-2503-44a5-9b9f-412969d82655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4c7318-ea9a-4aa9-954c-843c2ab3cf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad5c13d-a574-4781-89cb-3765610013db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bf2481-97b2-4b38-bbe7-2adc69cc36c6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6130df31-43c8-432f-b24f-28df1fced93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36fbda3-de17-4177-81df-82d98e7a6025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24edc206-296b-44ca-8843-d0728cb5b0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e03018b-ac3b-43ca-8aa0-dfc7c081bced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23d4030-ad7e-45d9-abb0-8b0a2733a6c3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb70e985-e245-4199-971b-134f242b08fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ba630e-793e-46bf-826e-682fa0837e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6552f67-9a84-44b3-8a3a-f46ce2f11eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad58f81a-5bea-4950-abf2-da5096191577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e91884-2853-4fdf-8da0-b460ddfa52e0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c560404-a381-47ed-8b33-ee3fd4b7b2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fb07fb-dbc2-4349-8cff-df0f6189e550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a7ee28-28d3-48ff-ae9b-a4a1c7bc3276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c88c9c62-6ec1-4a1a-89aa-7cee8128249e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c1d8f5-7d24-4867-b3ea-d0d70b087d89",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efb7286-0cb9-4373-9a6b-ca35c0cd3146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575bf670-a9ba-41f1-8ffd-48640c32371f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d3a150-ead3-4b4c-8f59-2dbebb762b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4827ce22-6796-43e3-b721-b3441e30b857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf729bc1-7c95-488b-82cd-dbf9e8fb85e1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b090954-6700-483c-a92c-ac09230c1ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feac790f-24bd-4b33-a2ae-2a2e7ffb0236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890fa1cf-c8f8-4a29-baf6-e4bb3da2f1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "300661aa-c24f-4454-b8cc-859060207c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f00f74-91aa-4c4a-8917-96cb20e6b381",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6e0fec-8983-4065-82cb-f57477b80042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e66ba1-8365-459f-b7d7-1c98a4277e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77067a67-ccc8-44ed-8ce0-acf525adf655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cdca80dc-342b-483f-a367-239fa4588412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bc23ec-d86a-4300-8c93-19ac4a2031de",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57e4c81-03c4-4153-a6aa-f8c9ec4c708a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70b020e-fc84-4905-9e6e-ce41542129b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45472bb1-f706-4f91-bbda-9400a30cdbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7eb6860-f549-427b-9e3f-d2b11586822e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec6591d-41bb-44bc-b8b5-7dc0a01be4ad",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7811d71d-f802-4995-b2cd-b61c008d7fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7fac0b-cd70-4403-b3e2-055aff09227f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2df6af6-4072-4d75-a3ff-33c881d58670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "feb3bbc1-be63-4ec2-bf18-d5fe8905669a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358c890e-8f44-4ade-bd18-2a0ee7d7d698",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41932a4-bead-4c89-ab82-2a643980c87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac8ee7c-347c-4a69-94c2-a359d0a36cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c400d78-9ae6-4adc-96ae-7aa753244d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0136af-9186-4f27-b9cf-cf83883692c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65586a4-e2bb-4110-bf3d-7d809568ef55",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e30e7bf-2a64-4d5d-89bd-633f2f733e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95864b66-d7f8-4ef1-8be3-68ae6b6992e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e4b1ac-e1f8-4261-a129-27d2ce4dd47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "634584ce-81a5-451f-8b24-2ceb0117ea5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f021752-a77f-48b5-ab2e-d3d315f05401",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ec07c7-666d-4e4c-9b7a-91c4b927e992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785d8910-bcb0-4e16-b7dd-626940341360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201adc08-b12c-4399-a0b3-fb4e653debd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c777adb5-b9e4-4c26-8766-17153092eac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e723396c-3678-4ae3-926f-e522572774f9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfef4123-7d53-4694-bb97-6c9c5eca785f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c273dc-62c2-467e-8cc4-3839284e836f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a999e80-e615-4a08-b563-d5dc6f249082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d158486-d4e2-4a73-a36b-b1acadfc2d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca18fcc3-0a2e-4963-97ed-35d8b8a61188",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5c44e5-bee7-471f-997a-4d2270ad429c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12767949-56ad-4164-8fd2-8d5b4aff8382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cb6159-3edc-4213-ae1a-658978f6af19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13547804-5350-4545-ab05-5773e3f7b356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d61e1d-0483-4657-9989-31e15d1505d7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae543f7-1082-42f7-b695-01be8366929b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b979db8-7c7b-4c0c-b967-fe311474569f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ced41e-2043-40be-a1e4-66e724094187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f72101a-d5e4-4900-95c9-05736962fc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c290108-b461-4c91-84d0-357a85c1488a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c898d7f7-9496-4ece-a077-a572e539a333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036b86f3-794c-4cbe-8e32-5ab6f0a145a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2790a42-2942-439a-9e15-e956c3e05feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "699da025-0edd-44c1-b906-21f7126e6740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d111c3-68c4-4e40-92bf-6ea99eaabaed",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cfdc1b-5a81-4a23-9640-9356e7dc68ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac44724-8d51-4689-9883-4f093b177d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a482de85-3327-4664-98f0-b30012066392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec30db40-e9a3-4dcf-bfee-3a67cfc41aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60edbfc-6bfb-4aef-92f1-b6c0210e1854",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b785792b-8151-40bb-98cd-b473a1993d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6cfbe6-8ee3-4b32-b560-c1305b26b565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1658da28-1d72-4e1a-8232-f0ce5e575372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c34543a9-6fb8-4d9c-bf9b-06e948fb69f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb702c0c-86a3-4936-9368-9f64a408e365",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b311a244-d706-459c-b1fc-fa9e9d813eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bf548e-490c-4abc-8968-28f5ba919d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8ace89-4a7a-44f7-aaaa-d2f6673bbf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7c3d3c-7055-4929-b476-5c8309e521ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40b3802-017a-4150-a95a-37c8b16e8875",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49157b7-2ef9-4adf-bfd9-bba78205ab8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dcf1e1-8b29-492b-a925-bdf38738a52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8284a65-302c-40df-9f86-62fb513bb13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2af2eba2-d227-42a0-894c-72fbcd4bf643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c64dac-ee12-429e-9edd-466ffdf2ff45",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bdfb21-39f5-42b4-890f-26156dc8c33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580dc9ac-0ac4-483b-9201-3da338596f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de534757-a026-4d7c-b3f4-8b0a480cadb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ff5210-cdfc-4cf2-8db9-44ed2d8884eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9c1834-4b7f-4a2a-8da0-95cbfc9ccece",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458385f8-ddb4-43a2-a82c-b3805d8a0e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efdf0fe4-073e-4fac-83ca-5313507e7236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa48f161-84cc-4ff6-a711-f99e81e5b221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e93ae88e-d5c3-4fb8-a442-a42cae8a6829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aca6e2-827b-4cc5-867a-5382640372d3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a614d4-7f71-4874-9bb4-a089b50757e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1c5fb6-8652-4fa3-9a0f-60978fdc8230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd73106c-9c72-4564-a3e8-d38f0eb7ae61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63e260fb-84ff-4ea7-a3a4-d9c7eea49e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286ba486-7027-4366-b59f-821d6c849363",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b420b42-de38-48a7-a765-8b8953cbbbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16472433-16e8-4ff9-9bc0-57be64eb4e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d14497-096e-491b-a940-55cd4a347e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "daa164d3-40fc-4448-8613-25bc8188d386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bece008-b700-4ba9-ac50-f0c18f80235c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f02dd7-14e6-48ea-bcd9-015079d55b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140c456f-badc-43b3-b103-e7afc45c7982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bcb732-dea7-49aa-866d-3419aa9430c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c97932b2-33c1-4bb9-a89b-fa38963513cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aab682-6795-42a4-95ad-08d8760d2aa7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ac410d-e5aa-4989-9f26-50dbbb3af029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e9c136-7b74-4abc-ba18-652a235829cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6171918-2711-44bf-8e16-d5039ff7d6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43ff37ac-dbcf-4708-befe-c48d12eddbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304f4ca6-f84c-4ee7-a065-fcf2cee6a75c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c189be6-fd20-4d50-8b09-be2b05113797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca794c70-dbe9-47ba-a3b4-512b190e76ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbb715e-a13f-42cd-9254-5b58bb29f2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "49d69b11-6213-4967-aa23-a006d27b983f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e91a7d4-5935-4e5e-9cf0-2620b7f34d37",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03e65db-b4a7-449b-b885-519b05350b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5d19b0-cd5c-494d-84a5-6a559ced88fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a9efa4-141d-4200-a9f5-88aae0c5c965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf7cc0d-bb9b-43f2-bf07-18741f631ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b5f9a5-23ec-4063-bdf8-54c0e8326d6e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaac30b2-58a9-47c0-a10c-1a08042d4682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffa919c-31bd-498c-ae94-28e65e8b8b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33ba8c5-75d3-4da5-864f-954f53d96809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c22878e1-7df2-42bf-88b9-c766afcd7fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2993099e-8655-41fb-875f-90a84ad6ec24",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c226ca71-a236-4cbb-9042-1b32b5409c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f03b86-c736-4f52-9f34-5739342951ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85f3ee2-4f88-4ec2-8b31-7150cd23b701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d771f20-61ca-4ea0-9501-a0634d6a3083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaebe09-bbaf-41ce-9fbe-01786424ca7f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ff250a-0638-47c0-af52-30815a281687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e47388-87c3-4466-81c3-2253e5245580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02adce28-4ec3-4270-9c25-20b0c8629950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "25fa9aa3-1c72-44b3-8cf7-df2a15bb5200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d0321c-1acb-4ec6-92a4-71d0cf16fc41",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b531fd04-5f53-4645-8736-0621d63e80b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e8aa0eee-abf4-423b-bc3c-547eb2b1fe48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e833829-564c-434d-900d-780b6539f074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf87decd-2c7d-4d1d-ac59-7f7cce46dfbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49a8c7d3-15cf-40b1-94ea-fb14f1e5e816",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e81a7ad-8444-4791-bc87-787f1c17698b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146c6e92-9b2c-4e6f-ba91-cd02bf5c0f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "633d5b3c-300f-4e6d-89fc-f4a74deb6b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab0f48a-337e-4a97-8740-3e3876a30d88",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9539c4c-50cd-472f-82e6-f2a6d853dcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0f40dc-c168-41c1-8fea-1b9acb90c468",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfd0823-0d7f-44bf-8564-04a3bbadd299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f73a6014-84d8-4657-9697-dc182da17d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ef43f4-ec3d-4dd4-869d-318fa83be313",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7822e539-6c68-4e6e-91d8-aaed6fa69434"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0189837-bbbe-42f7-84e1-73af01d6a0b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a215dae-f6b1-4638-bc08-7c65b952257d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfe2cba3-144a-47cb-9506-01ff4f127632",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b57d388-8684-4eb8-a427-31a857ca8d0f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15e389fa-f006-4334-a8fa-4b7d89bee36a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f9451ab-b70a-41a9-994a-ef8c8f51b052"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fff00352-2dc2-4e97-bde3-e53a602e6e2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0ef70db-d7f2-42cf-9315-91fa0222f83a"
                }
              }
            ]
          },
          {
            "id": "d91b2b95-66dd-42f2-9034-29584e81d906",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c0dc40f-4f85-42cb-901e-ac6feba6c88a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7498bda1-bf85-4dfe-b25e-c0092677ed78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f8e1500-8066-4c1e-ba2e-1022bd91a401"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c5cba68-0461-41c5-a5c4-905475c0e737",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f88c7a0-68fc-44e7-b960-bc61a6185c83"
                    }
                  }
                ]
              },
              {
                "id": "ca9bcbd4-07f5-4215-8661-ddcc0bb16537",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27929ab4-3f43-43e1-8b75-1bbe1157c8d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db6cea9e-1276-466e-bcac-08f1593d8589"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99f8aa9c-c44b-4c0b-96a8-29e86beec527",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00c541f7-9d27-46cb-a652-8fa97a7168c7"
                    }
                  }
                ]
              },
              {
                "id": "7da61c0a-1a67-4e7e-85e6-257d5afa37f1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62c5ea52-612d-4a67-a8f6-cd6581291fa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06b6d01c-335c-4af4-b68d-abf02b3e886c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b52c069a-c827-4243-81fe-7d3c7cd61386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac2ef6c7-b1f5-4e7b-b3cb-3c9463d2fac2"
                    }
                  }
                ]
              },
              {
                "id": "2896d2d6-6aac-4031-b861-0504f8f4a5d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "939b0238-1b3c-4d0e-a060-37eb2cdfd245",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0952db1b-18a0-44f3-8015-9112cca587a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "746768f4-495e-4d34-812c-dc01823faa1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "60a81af1-6347-4b97-a9ca-1016a8c73fad"
                    }
                  }
                ]
              },
              {
                "id": "5e8c7a03-1ba0-473c-90b5-170c8ac7ad75",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68d35fd4-1ddb-42a9-9219-42a6eae6143f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc3fe898-5d97-4d1a-a106-2d92903c779f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d57eff8-3405-4120-a4ea-5186904cdc2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8760ffda-5487-4ce4-bb1d-f21fc7b11d5b"
                    }
                  }
                ]
              },
              {
                "id": "78a02f3e-4fc9-4b9a-a37e-97f2e97df7df",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e5a5447-bccd-4cf6-bf5c-dddd5084a70c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cb38331-c9ac-47eb-a60f-36828bf7d0d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d625eb3-0cac-4c9c-b746-c22a3752e6e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5bb15fe-d88b-4f1f-8ad0-4c047a39e6be"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c445168-7c9c-4ca5-8561-c0a7b6b30605",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54a25ff3-7f48-4379-a920-4dcd07d2f086"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eaf6d516-5400-4f5d-8756-f8da31a4fa30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22afe2c2-5e39-4561-80e4-f4a1269645d4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5bd2576-dfc1-4b66-92b5-b76bcf331599",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7c57bfe6-d9de-426a-b2e8-829b2521fee2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1bd2bf3-0af6-414d-b591-69457f8f233c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb0c1f93-9a7b-4a67-9498-e8473f478081"
            }
          }
        ]
      },
      {
        "id": "c010c03e-9433-4c85-86c0-fbbe44fb3a8c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "597de189-cdc3-4979-8579-091383bf82ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbe054be-40c0-4249-a5ac-d62d5b4452dd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c4ef4fc-38a3-4a12-91ef-dacf3fac9685",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1bcc68-423a-48d5-a59b-f275fc41d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1407734a-22e4-4f0c-9dc1-0b5cbdd6a4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229f9111-b3ef-48d3-a028-bea8ec702602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd06a6f-57a7-4a0a-9e26-05355c3b7cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5db91d-c832-4ec0-a6bc-4625549fc91a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608fd687-4593-41ff-8096-1ee64c3e62bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c256ec-202d-41cf-9f83-4c6b666b1bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4842d7a5-8eb6-4874-8313-ea312489ed3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdaeab7-ab35-4385-939c-85e691eba9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57235d83-8942-42c3-80c4-1245d62d751f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0cd6e7-fd8e-4ea8-bebc-d4e2877ad548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231dd194-e94f-4271-9be2-3a4eea296228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c026b5c2-3e8d-44e2-8de8-b74ae95676a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc7db53-a3fe-487c-a598-169b333ab873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d4f44a-a6fe-4fb6-a2b7-fb08b919b4f4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901d1cfd-6f00-43aa-babe-015734c49519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b871bd6f-d50b-4aed-bf20-83fe8b92d534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5748ad-251a-4667-a560-b754046b7b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "596e5253-e8e8-4ee7-92f1-b72a08e20af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf51ade-09dd-4b4f-9ece-e94414bd7860",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d758cc-214f-4dde-a335-fe4a1ea2339e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ccfb852-1b5c-431a-95fb-259bf9adeccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e445aa8-1cea-4d2b-86f5-48055a480ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7efe4c12-813c-4df8-981d-fa5ccf906c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686c5bb1-19e8-423d-90fe-d83cb142ab9b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8aeef2-11ce-436a-b187-48ea71145a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff54fd0-c166-4770-85b5-5600bf25cad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4856dd78-b409-4958-812a-7f6ce223f9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "954c3a46-99ba-4549-bdc6-87c1fd1998b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861606a6-45d8-432c-a0b5-0c463bfa4d73",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c26e23c-4cf5-4659-8d83-e00e41a6b338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d6f0ec-8bbf-4c3c-a734-96bae994ed8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c55e26-8b97-4c1e-9f73-c0149b945434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeb19bd-fa19-472f-a809-d5e9b23ab6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01126571-773a-4abb-8734-9de219638f68",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9720a5ad-f9c4-4eb1-8d99-c167ecdce4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab27cadc-3852-4eda-8be9-cff9d507ce23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33acd71-b9e8-4dab-a220-f3e308c842c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7211ed84-1ada-4255-a836-ce73ea5dbcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61527ce-3b0d-476a-b6d4-643b24821de7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebfa8ea-4e91-4ff9-9f8e-f4141888bf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c646bde-fc3f-44f5-a5b1-be1270b5af77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbe1449-583b-49c1-a651-cc28402798d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc16cd6-fd45-4917-840b-c0ae66ee2347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfea898a-c845-4022-b1ed-78fb3f384c36",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a555e3-6a2d-4e1c-93d9-d0cceafd25bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cfc62a-413a-4fc0-b1a0-770e6e9f9362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51131eed-c732-401d-a050-60f538494142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f03d3a5-ab83-42ff-8b8f-a6a4654d3992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dbc019-b7fe-4bde-8537-e83e1da4c702",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8f3c45-3577-4cfb-a3c7-a2c40ed79fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce40391-e2da-4af2-9b99-6588a5844da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84578aa-65f6-4c4b-be4d-ad2285e8f8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "353b8ee7-d2d8-4792-a31f-733e002f1dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256e0e5a-e2b1-4175-9b25-8fc93cfd997d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606e7640-f416-4c37-aa3a-0276db96bfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0f09e0-751a-454d-b15c-bc78714b88f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0563525a-e4c5-4b06-9914-a80254dfa160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c619c0d9-6103-4767-b979-55fe074dce2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1943306-c513-4796-9a47-ba94fad82cb2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a698e8be-7dd7-48e3-a042-ae371adf4c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79195806-36ad-4e5a-a0f9-923fa5ae9cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf57611e-b698-4b9b-a165-3575184c1bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "466d82f9-c587-4ac9-84be-7c77c57d69be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59221ae1-a704-48de-87fe-2fa3d6abef94",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1ef914-1997-4741-a3f3-3d24fa3038b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5315a02-613f-4031-855d-f081a5daaa52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3310288-fec1-46e3-b0d8-d652d8ec6b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8f978b-0eec-4bd6-8cf6-8413380ca019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13425981-56da-4453-af09-3f7f387c6e82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f311a3-bc59-4984-a68f-35d984d666ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec99759-e6ee-40c1-ac99-53b079ea6b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9270bf64-d0ed-461c-a1b8-94c4ca1155c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd48a7ed-fe40-4fce-8f12-dfac1f741bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3aa0a5-ea9a-409b-8133-32069ae6e61f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097c4e45-c07b-4c01-a68e-4448e2065764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe49e617-0a9e-4110-8b7f-fc7a83693147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67aa4b74-d35f-4e9a-8d7c-01789470c8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2531ec53-b619-4331-9008-516dd87adaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eec40d-dcf7-42d0-870a-c526184e1d5d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c60c5f7-e58f-4fb7-bd4b-788a70775829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9217a76b-18c2-402d-872c-95a481e6b404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fef978-a159-436a-9c39-c2fa4e5da069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "27583f15-6fb9-4420-b9b3-1ea66e171758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9ac4ad-a533-4f65-838a-fa27af0df9ed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c610251-c712-45e3-8634-11923fed344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed86bd4-7dbb-4ce4-898b-7602441fab4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ec46ad-3f84-4209-90e2-1b626a6f38bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a2e9d6-3925-4b82-8492-8e76bd3a0a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88e437b-3fbc-4cf2-acda-a2973d3ccc32",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd5ab0a-e505-4cdb-9280-80c271cdeb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec13ebaf-3ab1-4a40-9993-35ba7bd8782e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064ddf39-6992-4400-a2cf-691fe3f66166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6c5e9c-05d7-4ee8-8a19-e8d73d56ebb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eded29-cf92-4be7-b971-b6471c367146",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0367548a-a35e-4502-b529-c61e3b814b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b650d13-9444-4ffb-b6d5-27b2c3338415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df289700-4702-4a42-abbd-279e698d3510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6f995a-51fc-4487-bceb-9a1084a31658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3599b3-7180-44ce-af75-a7ee5c567a07",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b44b69-35b1-466d-bfa8-7c7f81c879c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3a2388-f175-441a-8ad8-26b258493dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba57040e-f511-4fad-b65a-aabe49092835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7933132-8a11-4fe9-bebf-3d15d75db3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc085b8-280f-4385-8f6e-df6fdf814c65",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fbde13-a812-4589-a73d-802e2f79a88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3d7791-ec97-455b-b751-c4d965f3808b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9cce18-92ad-4320-940e-4ddb861683bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dedefe8-3517-4046-a46e-b9f48f2ba4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d00eb5-553a-4166-9dd4-173d878ddfa4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79035a55-1948-4e38-8985-12126bc9b51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf75169-22c8-4efe-8e69-f2cdc3337981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66637945-07c6-457a-b9f3-a3ee9be1db28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcf48a5-a6dd-4cba-9ae6-a75be153f185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0be1eb2-7012-4d6f-b567-3dea3eba429d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24235657-91af-4ceb-9b02-6820638ea017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8625ae-69da-4668-91d6-52918585dc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae03ff0-5e9c-44a7-8e96-e1a4d6bdeae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b59d4b7e-b55f-4788-a16a-bee7c1036e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4c79b1-fb27-4d88-8b5f-5cbabf5f7348",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b1c91d-fd04-4979-a158-af2a28774dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eafdb09-6c39-4691-b8a9-5d3f46f65a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53654e2e-dbe8-4f7a-aa0e-187864cb5645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f85925-baa1-4ac3-af17-c6da855c5efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e374c19-f5b1-474b-be31-6cbdcbdef457",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997fbee9-eae6-49bd-a829-db4a05e6eed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30694ad3-204f-4efe-afa6-1201bb3bd467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2872c9-93e2-4f02-8948-225a046ae0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c45c1f-1dde-4eb3-b22e-578e0dc2da95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed7b16a-9518-4482-808c-c49b681ef7d9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89021eb1-112f-412a-97fa-b042dad77dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0f8d21-115a-49b1-9739-f3c2dfb7e364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd336a3e-7607-48e3-bf36-b2b46332ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa8ce02-bbdc-40e3-a371-51a86de5e507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b53f5ad-0749-4279-aa4e-4c325d5f4687",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255321dc-c830-49ac-9905-fdca22e9f580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a883c7ea-d488-411c-8f0f-5eb8a6be0e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9abca79-f014-4f2b-ab7b-0d8a432f23e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e258f5-69ff-4178-ac10-2d4ad356aac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ea08c2-9dae-4d86-a10b-6a867c459a97",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b3a601-432e-4c38-9366-3b4ebaccab35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4919aa-a5ef-4b2a-8f3e-5a419c5b437c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39873a3d-5837-4ff5-93fa-3472bb478579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf15b61-4c27-43f3-8ebd-8136e35e3075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36ba69e-7727-4b54-9ecc-44b9248e64a5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e014c718-844a-42c3-9471-fd92287401ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49782d90-eecf-4ee6-9b15-f654aecff24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf3988b-7d41-4cf7-993d-46d961460e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "417f1519-57c0-4b51-ad13-2b0ea01de949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244678b6-2da5-4ba0-b54a-95ba9a9131ff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9974fd-4d4f-4611-8caf-13bb73f86121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4592dfab-e876-4838-8c5b-b955004938b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3143098-8301-4b1b-8620-30f1f6db9c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc4d8f3-7a28-4e1b-8fe9-f4ac6679c4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0866b8eb-0418-45a6-90ad-79462cc6e30d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6ffa0b-c320-48d6-a27a-3500a8fda00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acc173b-1983-48ec-a0de-fe3a2c858017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16398f3f-bab8-46dd-b40a-e668d0c26325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35ec3a3f-fc56-4d81-a1e6-b5fbb1173190"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25f72894-c087-4e1d-9841-36c7ae598dca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a837ad2-d103-4a1d-ae8f-5815fb21dfc2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf7c605-de73-44da-8997-351dc12b0417",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "56b44de3-9f68-456e-8d5b-2dd554252785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e34373b-2978-4248-8695-f8ac4d8dd3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cbeb28f-ba02-4c35-a476-d540c190aa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c44aef-17f1-4c26-8352-43e5b48e3ba5",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e85aa95-e65d-4904-8023-36d84e71bbf8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ba6255-fcbb-456c-a72a-64ec0a7561ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9f9e95-899f-452b-9ca4-19915d6cbfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f94dc935-cc05-4d77-bea9-aef8408d000f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "049c1eb9-2d74-43e0-a2af-32a68d5eb6cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0252dd00-85a2-4012-a1c7-233a58988ad1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f74fbe2-0d3d-4ad9-bc8c-370069fc7ece",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ff82027-f0f4-4fc4-a8ae-ce3fa06acfe5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f562ee9-8364-4cb8-bd1d-df39834d733e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c58497b-a9d0-4a36-b847-fb401fd9082a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d422cf53-fae3-4fab-9b73-cbd4c12f61c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d5148a3-cb1e-4b1d-8b71-b6ce15ab80d7"
            }
          }
        ]
      },
      {
        "id": "e92ca24a-c0f6-46f7-b9f1-240dd4dbfa2c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "69b8c0d2-a41a-4a92-8910-cff88e9baffa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b16a6c7-9763-44c5-9dfd-3816a945aa49",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7cba70a1-5280-4bf0-a9d3-155e7606512e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eb8a4d-dd3f-47d4-bc85-f46f7e5d95a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d84e223-fe22-4cda-9268-1530152dbd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eca177-b8d0-4c5c-8be7-eebcb89df9a6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86c4a7e-19e7-4df6-a0bf-f78514d5184f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9493c784-9bd3-4c77-8767-6b89ee186ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d01667-296c-46ec-81cf-2e3d73e3b1e7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea9e60d-d63a-4f5f-838a-2f1b437e2732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cfd675-0856-446c-8919-aacb4cf589ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7c6350-53b6-4813-812d-ee534c1a7410",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9649549-5c8a-437a-a32d-3b9aeeb945b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27bf5e1c-78e2-45d1-a9e0-3fa09c79f182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcfb852-58fc-4efd-8a75-cc4fbe9b94eb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef41a973-12b5-4846-8514-27023b20762a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe7059f-3433-46f5-83af-92f2d80f005a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5855e8a5-b60a-465b-a54f-9e31e41a08ec",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a527d62-e9ec-4313-8156-2ce585b2a8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7722a5c6-ac8c-4de7-adf5-658a9442c5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b0d0b2-1820-4990-b2d2-057a0a3e16e9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4481a2e5-3833-48c4-8d17-67096329d5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98b101f-6a74-4edc-9411-a766f7f2a4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d190066-2f46-4ba2-89a8-6883435fc295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e281fd0c-57a8-458b-a668-742a07a7a2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968e63b5-6a08-4b3e-a69e-c0760dc56950",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6436ee7-1943-47e0-bf61-0e74f0464fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1631e8e-853c-4362-ae46-a67d06f51d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223c66c0-8f6b-4629-b33c-7af2a917898b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f8683a-542d-4da4-9985-c2e614134e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d93248-d5b2-4bce-b780-7158a6ce9198",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8989733-3926-4edc-a353-9526842d60ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c5cf38-bbee-46e3-ac55-695c4a6f4f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b48180-48e4-4f91-843f-b183fea4c873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc289509-71f7-486e-9bb5-4b67e7b35829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d09e86-0f0a-4743-b39a-b8aa57d396d6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868f4193-836e-476f-8bf6-6842e8ef3837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecfdee7-f63f-49fb-adc9-b26375e58b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5573535d-0191-4be5-b627-1600fb6191e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f960ca27-42b5-463c-aa8a-e4f7377e4188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1a49ea-cd00-4388-a81d-ba837dd8c5b1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968cac51-7466-4606-b606-cb5e397aa6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b81a16-2834-4261-b336-80ecdc8818fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065f75a1-7016-4314-ba33-f9e66c898d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e3c268-b2ec-45bb-949a-3bc45d2cc67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7687621e-d40e-4918-bd87-c6638ce8b33e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6eeb28-ffcf-4cb1-90e0-258dea9cf68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f3aa8c-9a9a-42c1-ae1c-569230b941aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89cbfc2-5ed8-43ae-8277-30cc686a0ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be302da7-361a-4822-ae5a-5e06b9704069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705aace4-1801-4524-8fdb-06c7d1592e22",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98a5220-9171-4c97-8ea9-b13e39b70d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0d5027-0634-4ea5-8032-b5d4960c8e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318785ae-3e6c-49d4-aaca-eaca941f6582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faaee33-9de5-4b39-a830-81a084b6b1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a279299-0ea3-4600-8b4a-2a6b46a9941b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d47026-2793-4a50-b1a1-5ea8a5ab9e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a7238a-844f-4125-a4af-63dc198ac2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b79c840-260c-49be-a4b0-af1988f8e311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5097558e-1836-4dfa-822c-c4f63cc9e1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4e76ed-b032-4af2-ba10-8ac1573449b9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d0844f-3f51-43f2-a220-9d052d6b3f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "034726c6-84df-42ba-9ff0-096b1d791e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf3873c-a97c-4290-8ac3-d9e2f70d44ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25db7b88-34e6-42ec-bcef-f24f729878be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c847fdb4-8d0a-4ca8-ad2f-db4c46f28ea8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bee14af-1751-4de1-a6a7-c56a83cf1d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931da173-a68d-44ca-b61b-6f6c8d0a3b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a0b83d-15b0-4cb9-841d-ab5c7fe20ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de068425-7ab1-4541-a97e-6b80fa17e9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5ac59b-f670-4d6c-8e20-ffa524c1bd3c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4b7371-71fd-44a6-a717-037e4a49cb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3cb80d-e56d-4ad0-aad3-d29af21503bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984a257f-1db2-4d46-bf90-436ebc210604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22acfb6e-6140-42b1-9a03-975f9c736864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc088f94-1ef6-4003-a1d2-04baa6aa4602",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8f7d38-d290-4aad-9842-73924e1a5055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74023c45-9803-4df2-92dd-ff5c6d2d6252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd39806-ece0-42cb-a582-d3917b57197e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5aed50-bd3a-4d0a-a8a7-a6d9ffd47322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f3c307-9cbe-43bc-88c8-6473712a66ae",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b6b341-70f0-4df5-b6c6-dec9a1e3e3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9140daa-7a07-4056-a430-21adffe4299c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a074d381-d9fe-45bb-8983-b52331b39337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619b66cc-aeec-48a5-afba-b429f7393dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6a856d-fc0f-435e-b030-ce098e818ed8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4913bb4-a70a-4c09-bfd6-cd55774f239d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc46a14e-62ac-4e7f-bee3-699d834ee3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cebf2d3-7ec0-479e-a7a9-f2cf3648adb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1ffb42-6ca0-49bd-8893-73530f28ce2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe325c04-771c-4cb5-a499-b45f8141f93b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277bfc78-0f2d-424a-887b-eb14ecead086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77be7ee-56c1-4031-af9d-5bf47ea806bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487335bd-85a5-4c2c-b395-25275f48a985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55fd3455-8fbd-4208-9492-bc79ae0e58bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b40955-345e-42f5-98fa-dae2d2b6983e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd81a34-0381-43cd-b782-ca8b0d75b43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b348fe6-42ec-47cb-9211-a100ca477367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b654518b-6067-407e-972d-a2ba5e19682f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0632f8-8b87-4781-a550-8c024bde946c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ec82b0-e0dd-4780-811c-ae410780dd0d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262e40f1-cde5-4eca-ae6d-256e8aaeddde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e346269-2224-4cc2-8315-5ba503ca3ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c284ac4e-a0b7-4686-8490-f07f633269e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1b3615-63b6-4ee2-b6bf-95d0778777bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53155f77-3482-425d-aa27-f543923d2c53",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd6fef9-776e-49a0-ada7-2b912a4844a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19165a8c-376e-4044-921a-a9932daf62f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e18fae-2dfe-4cac-bf14-553209b15319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5af26a-ea62-47fb-8cc8-353d2431e8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43010b19-22a3-41b2-963e-a2252f28b92f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0330caaf-8d81-43cb-a748-bc099199fc4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "226bba9b-4d41-4cdc-a981-35c5268b6641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa1e00c-0adc-4166-993b-0ec00b47a6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e774738-1b3b-4872-b082-446543942e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e7f697-47dc-4aa9-ab80-ef87cddead2a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad84935c-0b76-4701-89f7-a06ed51b0da6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aae5a05-4711-456f-bb34-b1ecb7aa68b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7e006e-cd2e-4cb0-9670-01e4bfaf5f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cb7597-74d4-4378-ad56-30d2be4ed905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588dcb55-ec4a-47c6-8660-d81438bdf84f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d777a6-071d-44d7-b29e-8d567ae29eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804ddd1a-c626-48a0-b8a8-79b950101547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9532def-df92-4b73-a4cd-3a4410f22e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0432ebd4-e45a-4307-ba6a-b58e65b9f2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b662b30-249d-433d-b0eb-99a960a37350",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1714e689-4d72-4792-ba64-f437d0c62e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc392e1-ac14-421b-af94-f7657159dd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012422a3-2fb6-4aa3-9183-12587f4e20b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1f5b77-969e-4a94-b9bb-5a5a842ac467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f75e330-920e-41bc-ab0a-6f47fcf54b0a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2315dda-9715-416c-92e2-36fd1cd27c61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9a42f23-a7d7-4749-912b-12752d4e53b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10eb8bc6-327f-4584-890f-f5d1d15c54a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eb78a5-6467-42fe-9962-48aee0f27d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f291246-2770-46d0-85a7-e0413c1dbef6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8c3b45-451e-477b-8702-676d085a1be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a616febd-9a72-4e02-8312-507f398f42c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008e1b99-ee3f-49bb-9183-ef7bef95745f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32fee02-cefe-4690-ac00-026a1fd4991b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87763d7-b7b5-4b25-8502-b53f7a34943e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a492bd6-e1a5-49d2-960f-cb1f1783cc8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f194eea0-d001-4175-8b6d-7dfba765c197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c9858a-8219-4764-9bdb-79b2fbc6921f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e675d20f-3e04-4798-809c-f0fc720447b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2eead9-f684-41b1-816c-f383f382d84d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16996866-0766-4d89-b9c4-275d0566d586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec47faa0-a24b-4c57-a910-242a8ada5a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72dc826-ecbe-4437-8c4f-95d5634ee8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742a2c0c-9290-439a-b801-eb4b96bdf48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608a6e76-589d-460b-ba15-cdf2ca84c189",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefd9e8e-c9ef-4f0a-87b2-0957e3b191fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a9f2bac-2483-4497-a2de-f8784f98ea34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39a92d8-9334-48ec-b1b5-6f2b40811e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd25930-82ca-4ce2-ab8c-312953b3c33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c5fa81-0a0d-407b-930a-1f9f92372a90",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722f5e6e-5c10-48df-9028-76113059ace9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b80c06c-5570-4a96-9d68-8f7691514e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1deb23-36ab-467f-9557-842743237db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc17aa8-cdcc-4385-a024-fd565747c3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b824f13e-1aba-4121-a654-fe3ca40cb017",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26bc3f6-377f-4114-b659-fe27d14cc93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b92682-9551-470d-9f81-d27f6016bef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdadff29-51ad-452d-b7f1-09813580b80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c847f116-f874-4a87-b708-7a21073e5466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c48ba6-82ac-4d53-9e32-64ae23dc058f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fdb30d-e0c4-4971-b96d-f32533afcbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafbbd0e-586d-480b-8127-60e3b2f12c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c5b0a1-6c87-4936-9b8e-784b250029ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9541d30-917a-4d57-bdf0-ae57f2073042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326e3895-b7c3-4e03-98ff-ee49b818009c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f864a1-2eb8-4e6f-a66e-d8cb092cd48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd71a31c-40dd-4b51-8471-ae397a1c0d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b5fef8-06cf-44cf-9483-7582b0bafe96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69eb1f0-41c2-426c-94e9-1b065250a2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2a7998-a295-46d6-bcca-98d414175750",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488a64aa-de50-4063-9380-445fbb6f2047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c529af56-7ea7-4dd4-8ba6-90a2fbfc4065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5bb3fe-41ad-452d-a87c-77f86102f27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6893c9-fec7-47b7-833a-c4d12ab1a6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c65b90-112f-4934-822b-d8bbe51aa575",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb61f51d-c798-4e03-b448-e2978c52f763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dc90c4-b762-4352-8dd0-5f12a8d63bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468fc0b0-228a-4a86-af56-1dfca30176fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731ea109-8ad7-4740-874e-92aa6c5732fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d401d1-2d6c-4c27-a2e2-59f8330547bd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e4c220-5551-4244-bc57-647f83124678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628a89d2-3375-409a-898e-f8e060930557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddbf8f0-cb5c-46d4-a484-578a2e02cd91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22e810c-ccc1-4e30-8cf0-77251f7c1fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276d21e0-fbd0-4017-8099-cd4440a4581d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0448eda-6365-47ff-a55d-fe31cb84617c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fffd33-b7c2-4c1a-a97a-0f045a92d4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074f38d9-cb92-4b91-b060-a9f8f0600b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0d641a-aa57-4905-9680-86ba13236d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8166058d-ed31-4d14-b250-c6f20080e99c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08d119a-5d94-4555-8eaf-2e32d4829bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be474f0-272b-4dbc-ac6b-07d5ef71ce5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3b2b4c-5fd5-4dc0-9ee4-054ad605e010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4659c4f-e6ac-4ff2-a3a9-684a77813662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9867ac8e-4063-407b-92ef-6e820c0ad043",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5ac230-10c0-480e-8719-3f3fa03f2ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21dfd69-9df9-4edb-8734-7c8bb2faed21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5efb72-b2b2-4ced-a946-84123ae15902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc428db-eac7-4c2e-b78b-c51cd5d51e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1e018c-0e4a-4f0d-90d4-b4f3ecded050",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8a231e-35a1-48b6-b254-1f566c2b75af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae767ee2-8c19-4c89-937a-b2b82357358b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a98bef-7e72-407a-bb46-3aab76dd019e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaedb3bc-384b-425b-bc2f-bb9c07c3093a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cffb4a-6943-4a56-84e8-10297d99ecec",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754569d0-ed05-4da9-9175-761146819712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72274da-61f6-4906-bec0-39ab84e98de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d334285-0d27-4b8b-978d-40b84d9a6db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0f4f57-9dbc-4861-bf09-074f6bacf9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b9cc10-91a9-4d05-b842-bd86735a6fe6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaca068-b476-4863-a63c-0618941137df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafe9031-a59c-4645-afdf-bb5cef808ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcfda34-f023-470d-ae3b-44053b151236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96da4ccd-a5c2-4d15-9355-667bf58ccf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56eb7b7-0c2e-42fe-84dc-3ffe4a5effce",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb51b9c-6c36-4381-9893-2875daf5f928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075ed298-efc2-48d5-8a38-fec0feff2619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ee08d2-e71a-40b1-9229-f9bc684a490c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8894f8-e507-441c-aca3-068885aa2374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffb1996-0f10-4422-8766-2fef485a70fa",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a6509a-b0ca-45ba-8f5a-6a43e07a5a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e16108-8f0f-4e6d-aaba-947061e2d568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2616ec99-f815-471b-b0f5-becda01d4c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f2aa1d-f4e3-45f2-8531-8d04d5d772bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e826cc1-d044-43ea-b3b4-59b0257339b0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e05cf5-5a2c-43dd-a908-c21c79eb329d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b45e75-b835-4ae1-8523-b3f8b83583a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b708197-89db-4758-a8ba-e06e8b00accd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abb1b83-6b45-436f-9d6a-bcf1df6a98f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2155987f-be25-4c4b-971b-3004a2b49054",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c8ff84-4345-4ab6-a017-fc160fc0fdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaebd90-f173-4261-88b2-cec5693ea76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc2cf32-cfea-4b3b-948b-2c3d4c982a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105e56db-6c73-4674-88b3-ab5ebedd4d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc7140e-f849-47fc-848f-d493e107fc18",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5744bb6b-641a-45c9-a393-5fa807b928b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18cdfdd-263e-41a8-9a4f-77c89eda317f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33a2f94-7022-460a-83d9-7283fa494ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa23eea-e92e-45f6-b13e-c104f3dcabf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4ac97f-257d-478d-be85-c2e989c69ce8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612b10f1-336a-48f0-82a1-44b795c06c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5de290-2e26-40d9-8c85-469c28dfd964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd80ad6b-c569-4ac0-85e5-47cd4e380d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a22287e-1641-4c2e-88f7-078651080900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c724d8-7c33-4640-9b43-2bc3e0572cbd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1db1b41-55c3-4b41-aebb-5c7c419222ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea537c0b-a4d3-44a8-9120-8653fbb85049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38d0302-d95c-4c91-abb4-8e606e67326c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6059339-1850-41a0-b1ed-507fa768a258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8500cbdd-022e-4f5e-9d79-449ffa2a1e41",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ce1501-c341-4c9f-a2df-28262789d165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0861e89-6418-4916-8da3-af045030eb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa58216-8d7c-4a32-8fba-b2dd47345089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0782e387-041f-425f-a461-61124188dd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7446232a-583c-4853-8625-2b19ad4e46d9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3ee6db-7050-4f57-a679-04775bcff6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966b7ce6-4886-4d17-b0d2-6fd6475247ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026e7e7a-9914-442b-b1e3-f9fadc27421d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4c5525-f286-47a4-a151-276dbf89e84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2b890f-ae90-4ab7-9d96-cb387bed4164",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a83c2aa-3cc3-4392-af36-263f88e653d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c5243c-cfa6-4f06-a383-4f150b5e3e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f86594-3d4a-491e-8848-5ce4e0c466ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606286de-2419-445e-8e64-c6837168ec86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c5d338-205f-4922-80ba-c5fddc98c3c9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc9b226-c076-4979-81c3-d126cfd72414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93331860-875e-4880-b880-1f9d6d90501a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bacc16-db87-4fe3-81bd-145715b48a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1820473d-e52e-4db7-afc1-877de66515c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb61f468-8864-4e33-8928-736827aba504",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e3daef-c19e-4536-8668-55d4ab162c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43409d53-aab8-4ff2-ac6f-634e1c224bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2275402c-da77-4ac1-bb3f-6cc79fde2464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18dab72-7b26-4af3-a359-8d004f6f4231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29dfe80-e3f2-4538-9dab-36de9cafe98c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca5b52a-3ee6-4e59-9850-9cfa6671891b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b43760-8c7f-4abc-bca2-4b7cb9c51d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e1c28c-8c93-4a13-ab6f-93546f972dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1691bf66-8bcb-4781-806b-aa44fabcd054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59bfce6-b909-4a65-a0eb-04befb1694a8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fb2007-8846-4cc2-8a92-6db2e56c9fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8732565-4b2a-4c9b-9566-421c9f10dd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96e0cbf-9595-4c09-b4af-b6a07fb77cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecab9fa-4f7a-41f4-b246-2a912258a251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454611ea-2b7b-4278-9579-1933d4850f0d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb37e342-bffc-432c-86f3-5bdb48c2f64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a857ffd-47c2-449a-bf03-385029ea93fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ad92bc-426e-4f11-8f2f-6b78bcd35cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bdc634-47ff-432b-85ce-0665422c954d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9963e931-3552-44b3-8867-67fc2911fecd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a65523e-1688-46dc-befa-52b2961e6f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33916ea4-db5d-4da1-8bff-999e55483e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebe8187-0a4c-4512-b62b-df52628fb10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13804021-f2c1-46b7-aef6-bf9b053aecac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daff232-da86-44c6-88a0-b293c395a689",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348397f5-2259-47ed-9fc9-bb4d827f8b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541078b3-4cc9-4bdb-a25e-8104fb7632b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec1fdbb-4080-44ff-a824-9df59c392516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e94a19-24f1-44bb-98af-27b502cedea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d19219-e607-4d44-9418-7315a9821462",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8736d9f1-c7b8-4f8a-9487-2afd3554276a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83067470-3905-408b-82f2-0d07db285c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ada100-d310-4cc0-999c-9e833897c318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea33e61-149c-4894-9488-d81ac6fa5ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88b9b8a-1096-4fcc-a174-2b409502e5fe",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583038dc-18b5-48f9-b1e5-f3df11b07c96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "368de34e-2efd-4285-9bdb-15055b82318a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae51ce1-8286-4eb3-b0c0-224d719abd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82291c68-dda3-4602-baaf-f4fae1e6684d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f60c54-6a25-47de-8495-2ff4e6979138",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763c4ac4-80c6-4173-910a-8f8f87e4f817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef1259a-cf15-4c8b-a8d4-e40d74b04596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd86683-bf91-4e40-90f2-4adfea4b0799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47280679-af0f-494c-8870-d353c5275272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b14109-1677-4586-acfc-a1bc9225d8ee",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f57842-b375-48a5-aacd-b371f88a5b38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9516814-1106-4276-8664-ce7bed2d34c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ff2f9f-7246-4cd5-8d2c-7356016d77af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bac5c2d-afbb-4b3b-92f9-855c1259e724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87da3b9d-54b4-4193-9fb6-2d01acd88831",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f71f226-a6e9-4278-ac43-5dd620a09049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5127e5b-256a-4d7a-b8ba-42de9ae3655f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70176898-6371-4de8-9556-18dd730c8037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cccc7ec-ba4b-48d1-a323-4444a81dce87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a8770e-9905-4665-ac10-8fc21913120f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f99150-6e43-421f-86bc-e16558169414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e0a8e76-7aba-4132-8359-f6148cdaf7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c4bffe-0d43-4d72-aa90-6170aa1b056c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be669576-70b1-4ee7-b611-57654df51ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b05851-aa95-4ff1-ae8b-c89c4b69cb75",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f320c7f-39f4-4a1e-aa3b-a99e4f023bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7110cde3-c2ef-4371-8cfe-4e5345f7022c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0faaf2-4835-4591-92ef-852e670b4ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55836a0-a848-42e1-abf8-5df00943baed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb31f699-4d25-4075-b278-8bd9a89cbf5a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5175301c-2b9b-4b53-8ff8-32cea03f5887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "118d64b7-a0a7-4779-a2bf-2199db20e0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10d5652-da04-48c2-b826-16c1dd79d30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7ad121-6b96-4f61-9c5a-6d157abe6e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1067e4a4-10bd-461e-aca3-cadd92e9941b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483d4c7c-ecc3-46f5-bb19-f3afa0f90eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d004d63f-574c-4b3c-86b2-10515deedbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54e20a5-4b5a-43b6-9ede-1ff4c28350ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488657b3-24dd-4237-811b-56e53c60f6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc279b7-de1f-4ba8-b9e6-46ba5b17ce8f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ecad96-d941-47b6-8230-fdc03badf25a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62aa526-f33f-4e5b-b675-c02b9b65a126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8228b96-b0cd-44a6-952a-42aeba5045ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75668ee2-ea68-4335-963b-03d78435b624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644555b2-2c8f-43bf-a377-536e00929f85",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47da7f6-2c23-40d9-8e5d-6c177d649898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28fc9a33-a6f0-4ba7-bdda-1f7d8f5e8010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c35f8cf-0be3-44d7-8562-2c4a7243139a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de068958-bf09-4187-b243-5f5edd522749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd76c7ff-10fd-4764-9203-fc9525b6d191",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c83c9f3-352e-47c4-873e-294f961c409b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d18d761-be45-4ed6-a57f-e1092a003b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94c14e0-80e5-452e-b0b8-db12126a4376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e49f37-7048-42d4-b612-9c12f20c571b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f10cea-9fe8-470d-97ea-ce8e9eafadc6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24de7b0f-e2d7-4195-aea5-c05bac2c55cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a570cdba-09ec-4b4c-9f8a-764901f1e04e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf1125b-a984-4cbe-a6cb-38c23a92f291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a664fa92-943c-49f6-985d-fe80d224f3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa4232f-b2cb-4fd0-88f0-04399322475a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a81ea1-a20a-417f-998a-b5d5d50402d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b314456-9e3f-46b5-b422-6d2cb0aa9b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7775b801-f566-4d93-a784-761ad9d1ef6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97ecaaa-06b2-444f-9135-b85a8bceebe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc997095-c55f-4c7a-a38b-e7dacfea385b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84bbc40-cbad-43df-9756-841cae589684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac0281b1-7474-4750-94fa-b3199f17845c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089173e2-9e46-4744-8131-15c21c48b4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f96d7ef-db68-40a7-801f-43f70d1d0a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f000b257-3c79-43ed-b3a2-8771e9574011",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7e722d-a135-4a50-bd0d-93f4bbc109dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be6c88a-ba76-4b8a-bbc2-8a25a4e8251a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226dc6a2-0ec4-4066-a6fb-3dfe606e4ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4c2dee-2d98-479a-9b4c-556b6b6760d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25d9a8e-5f8d-4d85-9c01-537df7001019",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155201dc-37ff-49c9-a4e3-58563327796b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce418d89-fd94-42f3-88ff-ae3e78b2a6f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2509cc04-5af6-4f01-94f7-a4a5121eab48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a556ba-9f33-4b90-b737-0f94669cc3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3a8bee-2bf5-45d3-86cf-15548bac10c8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00346edd-7dc6-43b9-afd2-4ddfb58ea207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aced6f9e-2199-4448-9d6c-5fe5e8658d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bac68f-7293-4ec3-91bd-d895e5a1c4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc0eaec-ef38-4d21-bc6b-1218d086218a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e51c55-8a79-44cd-9820-d6cd7562f9d3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178c5faa-91bd-40c7-bedd-4574e6da1ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a54f64b5-30e4-45ca-8279-fcf83afc4238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a8e49a-4765-4b1c-839a-173ff9b12cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b44e306-c76f-4394-bc68-a597b6124783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e4bc1c-8f9c-478b-b5fc-3c8ecf65b38c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51c0513-a194-42a4-88b1-d14847f7917f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148539ff-acd1-4656-a716-8d5208d38c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaf6a38-169b-415d-a2ce-bdd21ebb1afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22e6d03-0781-42a1-b2f0-003d31deb426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637e5de2-6f09-4cc8-b1f5-211fa33d8411",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7474c6f0-812e-4220-8f3a-47ce1823b37f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1ac5f4-5324-430d-b052-12b956f6877f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e8bb30-f3c7-4b48-9497-e0cdf6e2cb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d012a5-7b12-40c2-b967-eead4e50fc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29ac4f1-a2b6-4f7a-b452-b5c5d0ae1e8c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ffc0fc-225d-4f08-87f8-7634c244fed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8265bf36-95da-4cb1-9e38-279dcabc85a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e8bfa8-6462-4ae3-9a63-ff5cfb622719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8276bb55-1fd1-4ca9-9e9d-fa01d7fa1fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4072a35b-9029-4177-ad1f-eb4c26bdfd26",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c49a3ba-336f-4c47-99ba-c5a7c28cb5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af28a929-2de3-4efc-9d44-0d73d67fb74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c696235d-a2aa-4b18-8520-eb7440128bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012acbf7-366a-42cd-92f6-269ef0823b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc54726-e862-4776-9885-b0d27ac7c06b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eff0dce-0182-4e06-a689-b0028d2cf1dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c45a17c0-a340-4180-80da-7e5c16aeb427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b58fe59-46c0-4536-a5be-95dfbe51a818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed1be36-036f-4dbd-bfbd-0269cfcf5a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5583c1e5-fbb6-4a40-93b6-20d3b910cc4f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57116751-3329-4a74-878d-3f52f3b9d443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7360f20f-86f7-46eb-92f2-2295a1b8027d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ae6296-ce90-4b52-912a-8041e7ae21b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be75ddab-7804-41c0-b608-632aa1012d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4224da83-4ffd-4b6e-b035-2f61ba764d9f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011da6da-6302-4843-b99b-82aa17a6dcb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d150f6-45fc-4ff3-a951-a017855c91bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b478b7-a9b1-45f7-bf2f-85628132b7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdceaed-7237-4ef3-b86f-00baba675d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c052f95c-3a89-4e49-bba5-ee6c224d0f9f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e61811-e7f1-4c7c-be42-56f8ddfbe072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c686067-69ad-4bc9-ac60-136f4859f0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c80157-93c7-4800-b6c8-2ecfaff44322",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc87bd71-c923-4e33-b9f0-dac7d168804f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9fc42c-1569-47db-b7f4-7a62e12f0415",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71163f07-9226-4ad7-86c0-3c295b4e5e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc891d60-565e-4bda-8c3b-11d5fb1b894b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ca8da8-e8a4-45c8-a353-3294e5b104a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e49cdcd-f13c-4eb3-a009-fff539caf80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6922b725-8ebf-462d-bfce-fb736b349052",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dceae3-4ee3-4d6d-824d-8460f7efde0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "164e725c-cfa2-45aa-a4de-2a2c0ce0ee31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0fc55a-af1c-4b46-85ce-2c07fd4868e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32327bc4-4a91-4009-bbf6-ccf60d30be60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d14511f-f17b-4289-845e-2f1cb2485a88",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fdfff9-d0fa-4c11-aeeb-efd18add3fa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e10df7-ad50-4432-9457-a5fd0ae0e89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af41eb92-ff5a-46d3-893e-6c6ad468654f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7beb00-2ba9-4f0b-93c5-9e54860c8081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031b397b-22fb-4e22-80ca-df7bc5d566f3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee851953-3cda-4f32-920f-c8deab95886b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4fd2db-5439-4e81-b567-6f090d9babf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18e979b-ac69-422e-90c0-f8403b729e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19087ecc-b590-4a8b-92e5-d0f9bb3a99b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4db4697-b47b-497e-930f-ba3b609bde24",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c10817-6d8a-4a9a-95d8-2cf38a634d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33ebf831-3071-4b47-af47-0a032e6c970e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62074c51-9fdf-4e4b-96df-922a20f34823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efff76ee-f694-451d-8e5e-135d02818918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10b20ce-475a-44dd-8f25-b10a7a549a9b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ef3553-cb85-4af1-a474-0b8b0565cba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac4a018-56d8-495c-88b5-36fa5d539909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1db5b9d-1c6f-4ead-9a63-31f87040cd37",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397ae10a-fea1-4055-a635-a6ef1a90fa12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0698db-5208-4e0a-a23e-d97a96fedaa2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbd5848-b74b-4808-8ff6-db14b884ab72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "653df450-679c-4562-b84f-285ed5705ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc5ad56-1dbd-42ad-92d3-d502423efb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96cc0b8-947a-4933-85f7-2364e475d95f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "971de088-fff4-4cc3-95e2-22244c27713d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a197fce0-c998-4aa1-81a5-95137a6bc8a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0d77971-f7fd-4292-97e3-8d1b54dce732",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6499cf2-b3c9-4d89-851d-d80f92ac62d7"
                    }
                  }
                ]
              },
              {
                "id": "1602c06f-4963-47e9-b98a-7c9d0a0c469c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0fbbf07-be99-488d-a683-7db1fb8c961a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3ce15a-2aef-4a50-889f-b04e9acb42a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fc840afe-ac6d-428e-b746-698f17ee495c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8da8352-ae8e-4951-84b0-be2b3a92d6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1730d34a-ec55-482e-aec4-951fc8a6bd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3f5e2a-23ed-4448-bc82-5cfae8005214",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5df315-6288-41e9-9998-d3c209628166",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3dec5c68-1ee8-43dd-9c8c-ddf5d6bc299d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19006121-5beb-4c5e-b0b2-23255dd55292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fbb689e-f639-4842-90d7-ee0137a4d0c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2cd42f4-87e9-478c-82bf-2ac0e89e2a54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8ee5b2e-b139-461d-946f-327e4088222f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c5753bf-1b2c-43fa-be80-b10c343c2e87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3c4be61-5bf7-4443-b091-6ee583c36f2e"
                    }
                  }
                ]
              },
              {
                "id": "79df9a47-e6f1-4c4d-9fee-6a0e9d2cf84b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4cc90fe1-4dca-4aa4-b39c-77cda5a4c929",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9f514f-9e73-4133-92fe-3f2bf55a7649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "068d29d9-7cf3-4d6e-a3be-95995a776fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd68f607-b769-4766-be2c-d5d1dcde9841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d83e69c-f6ae-4f31-a99f-bd5204cf05b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a3ea29f-a80e-411e-902c-b08e39654fa6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23bc41ce-81ac-4079-b05b-faf3026455e6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5943b5ab-3d64-47d3-8990-0115f350dca1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4b69b127-4ec8-43b4-9097-ffee1f78c12a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5f955d1-24d5-40b8-8efa-f7de916139d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "546db4fa-8a84-4101-8115-4b92cf4ddd1c"
                    }
                  }
                ]
              },
              {
                "id": "f33d9048-9cdc-4529-9ff7-3d195bf96424",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86131c02-e03e-4c64-a7c8-2bbb40e130ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c26cce14-e287-4229-8d56-717815e0278e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8243fdeb-bec6-4851-9bf8-967ce8551d67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c98670e-43aa-4e9f-b844-51abda7437e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b269d17a-2b4e-4c5c-b76b-a4ed6658d4b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "97cc01ac-491f-4009-859f-b9250f872a5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fec2dfb-0af0-4fd6-a3c7-5044d6a2bd1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bbe5c82-f4dc-4c9c-bb68-d3e2a0acdde4"
            }
          }
        ]
      },
      {
        "id": "2558aa55-0a25-4ed4-b62d-1bec6d0e4d3d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e60f18cf-c3ca-49b9-80cc-fb95a923a0c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ee3b8e1-e362-400b-91a7-c10b24e08682",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d9641c8-ead0-42ef-a72b-062d7fc38272",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559dd944-d03b-419d-a6b3-a1acd78a1ac7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0b829780-084f-4c8a-a500-62187cd662be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a74a175-5b40-4248-9897-3b1825c4be06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97b15d24-d87b-4bf2-afb8-434ddb6650df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4257c6-1382-408f-9f90-76df966d78bc",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5fb5d3-7f8e-4580-87e2-a79f3118641b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7f1038ac-5a52-4881-a20d-75342a804f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397a3b3f-7034-4c7e-b145-fe6e08c60836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b7e588a-2f41-4b6e-b560-3b8b9b3caaaa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e5bb9a1-17e7-4156-a8d1-542588bf65a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad8f3ed3-a786-4a3d-b532-a20c089426fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6ca7592-c7cc-44c4-8823-7a031a0fadce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "683e2c4b-3de7-4862-b2ac-224ecdffa4ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6862059-7bb8-403e-8eb5-140c45780d82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a664002c-9683-4cec-b88f-901ee8c48edd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b32d055c-98de-42ec-be4f-dce6bee29dfe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb5ee13e-5a00-4fd1-b88e-237ed238dc2e"
            }
          }
        ]
      },
      {
        "id": "ada8b4ab-989b-4dfb-8870-770db511ae59",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d2c1f64c-0b04-434e-8953-a8d51b8e224a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "308762d3-9583-4e08-9f98-cc54ed391cc0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b651bfe-e5ef-4cae-b319-53789d0cc47b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e5397a-b6b3-4a47-ab6a-ddf8d3501aeb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55f8b8da-fcc8-49e5-84e1-b3524a836d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44271ff-d4a8-40eb-b24f-37ceda24a124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "028c7b97-6e35-4c02-a472-87a4487192d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86163eeb-0dd9-4fae-aa49-4c33708195e1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb462aab-904d-4d6f-b3db-1816249b928d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "66f95c05-6807-4239-869d-03c8b2cd2886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df30fa8-069e-44d9-a3e1-9c61cae024c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25d003ee-78d3-4020-aad5-92d36275a283"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12af42e4-e26e-4bf2-a2f6-c5a3ec85d220",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4aebee5-d16d-4160-82fa-e04ff8c98d60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c20b4fe5-58bc-4feb-b959-3b45fd33ba5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf646d71-c032-4a9c-9da7-b88bd3e24cba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5cc587c-9230-4596-99d6-d617d9c525ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cb2703f8-f392-4bd1-a7f2-b4c3991908d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94371e86-bd3a-4323-a43d-c09e69e374d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56e50d03-681c-4e59-98ff-97d5dbd299d7"
            }
          }
        ]
      },
      {
        "id": "89d35cb9-0c36-4126-ae56-cad86c92a683",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b5813448-442f-4e82-a482-27bca9627161",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52a01c59-5c93-4c80-a326-55ab21946d79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06342b38-0ad7-45a5-a00a-29741ee96b74",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2d5577-9c80-444f-a4d1-f312ec896499",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0e2ac5d-d123-476d-95d0-01e9c053e13d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209d8013-9684-4fc2-9ecb-0ea84a390601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed4e98cd-018a-4ee0-af7a-acda0b7085fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58613852-7f2b-4f97-be8e-120504028244",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2117a766-2b67-4146-8bca-4cbf86fdf805",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c428fae2-bf30-4e0e-baa7-1d3f8bba9eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf51c8e-fcfa-443b-91de-1aae2fd81e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce51b2c0-82f2-4d45-bed0-8d540e160084"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0c78914-9b7e-49c8-a7e3-6944b7eb5f40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f479220-e320-4031-a5c6-808251962b2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85070103-ee31-4a70-8eae-f5a939e07ced",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b077fec8-6aad-4581-8d10-617a58772a4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "739ab012-8f8d-41e7-8f2e-a175d0df6a14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29a159f0-8994-474f-97c5-a5951de8ea9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd7390ff-0e2a-411c-a5cc-c51ee3db9d1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "623a2de7-2d67-405c-9a62-c0be86e8ac4a"
            }
          }
        ]
      },
      {
        "id": "e75d6cdc-c2f1-4ec4-9ee9-a8174f89fe34",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "244a9068-3ea1-421d-847a-74c2b7600ad6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38610018-f226-497c-81a5-70b3b79e5567",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4225a1e5-bb00-4f90-a47f-5f44f9159c95",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b01a447-ed94-4a03-a557-cdc0f00514df",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efacf626-77fe-4db2-bcb2-62e7d1315fea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.684615384615388,
      "responseMin": 3,
      "responseMax": 515,
      "responseSd": 45.95843182291254,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685147958379,
      "completed": 1685147972686
    },
    "executions": [
      {
        "id": "14ff5dda-e727-4f94-9064-70e0301404cf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "91abe3f3-4c92-48c4-8be8-a970cf58070c",
          "httpRequestId": "385b5ecf-cee4-497b-8061-36302ce3c710"
        },
        "item": {
          "id": "14ff5dda-e727-4f94-9064-70e0301404cf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "605d1d4e-4384-42d1-a9d1-0b3a46dbebcd",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "fe147135-b5c5-4c3f-9167-675139408cfd",
        "cursor": {
          "ref": "66f02656-4258-4eb2-8978-3d6dfbb26341",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "96bcf412-8c5b-4fed-9300-a75215365869"
        },
        "item": {
          "id": "fe147135-b5c5-4c3f-9167-675139408cfd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "26ac7c85-133e-4478-8f18-4cec07f5d38a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "fb96019d-9db6-4eee-9d03-5fb77721ab89",
        "cursor": {
          "ref": "e4f32d57-d316-44c9-9bfa-d89b7784e948",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7a55570c-81e8-4327-8844-28b927733040"
        },
        "item": {
          "id": "fb96019d-9db6-4eee-9d03-5fb77721ab89",
          "name": "did_json"
        },
        "response": {
          "id": "4de5b707-6853-45e7-91d0-8b65c3441fa7",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86aaa50d-0b46-4cc9-b5c3-e9890fb7b792",
        "cursor": {
          "ref": "2f6841ce-3480-4e35-8f85-e7faa1a6b0dd",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8c61db91-4c76-4988-b734-d33882f5b17c"
        },
        "item": {
          "id": "86aaa50d-0b46-4cc9-b5c3-e9890fb7b792",
          "name": "did:invalid"
        },
        "response": {
          "id": "612dd348-ffc2-47ef-a64a-24f7e2fa9b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86aaa50d-0b46-4cc9-b5c3-e9890fb7b792",
        "cursor": {
          "ref": "2f6841ce-3480-4e35-8f85-e7faa1a6b0dd",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8c61db91-4c76-4988-b734-d33882f5b17c"
        },
        "item": {
          "id": "86aaa50d-0b46-4cc9-b5c3-e9890fb7b792",
          "name": "did:invalid"
        },
        "response": {
          "id": "612dd348-ffc2-47ef-a64a-24f7e2fa9b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d41044-2579-4ef7-a6c0-703509c9bc93",
        "cursor": {
          "ref": "0778e20c-b36f-45b1-a637-788b235f35c0",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1c2fc1e2-1cd4-4dcc-8f3e-e434e17ce559"
        },
        "item": {
          "id": "84d41044-2579-4ef7-a6c0-703509c9bc93",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eb0a27d7-ad03-479e-88be-88c94683b4e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52be5386-4084-427c-8054-749df2f2b634",
        "cursor": {
          "ref": "4e87ed47-33a5-41d2-a05f-e67a2dd59427",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2472e743-85d4-4a84-bf43-6db20406edd2"
        },
        "item": {
          "id": "52be5386-4084-427c-8054-749df2f2b634",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "de9894d3-e40b-4ddc-8d7b-7ac9a8929ec6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994100eb-2218-4272-aa9a-f2878672b182",
        "cursor": {
          "ref": "c920820b-6162-4484-8e2a-eaaf0147350c",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a23e777a-f5ca-455b-abb6-251da986b4e9"
        },
        "item": {
          "id": "994100eb-2218-4272-aa9a-f2878672b182",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9cc26ebc-e9ca-4f95-a951-a9a424197ffa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b83667-458d-48cf-859f-9a621cf15072",
        "cursor": {
          "ref": "2565648c-dbe0-44f5-9b4b-0acf419d1d91",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7dda5188-5f0f-4e37-8a38-3c5c7b23553e"
        },
        "item": {
          "id": "a4b83667-458d-48cf-859f-9a621cf15072",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cb5760bc-6b4b-4939-8983-d73dcb4eb040",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b83667-458d-48cf-859f-9a621cf15072",
        "cursor": {
          "ref": "2565648c-dbe0-44f5-9b4b-0acf419d1d91",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7dda5188-5f0f-4e37-8a38-3c5c7b23553e"
        },
        "item": {
          "id": "a4b83667-458d-48cf-859f-9a621cf15072",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cb5760bc-6b4b-4939-8983-d73dcb4eb040",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1597da16-20ac-48fa-aebe-f5c0b397d1c0",
        "cursor": {
          "ref": "be4b9bac-1223-4c29-bbaa-3e2208087374",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b75e208a-a8af-4859-b870-056bebd8e250"
        },
        "item": {
          "id": "1597da16-20ac-48fa-aebe-f5c0b397d1c0",
          "name": "identifiers"
        },
        "response": {
          "id": "c2f7a7a2-d712-40bf-9731-b75c192c6697",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7700d15-48a4-4b5f-8af7-4902fb85bf54",
        "cursor": {
          "ref": "a0cd2c6d-ac43-490d-b2dc-639eddec6e7a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5ebf99c-2000-4f32-9cab-5df83d104c4b"
        },
        "item": {
          "id": "f7700d15-48a4-4b5f-8af7-4902fb85bf54",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4dd4ad76-30bf-4db8-a483-e3a5505f913e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7700d15-48a4-4b5f-8af7-4902fb85bf54",
        "cursor": {
          "ref": "a0cd2c6d-ac43-490d-b2dc-639eddec6e7a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5ebf99c-2000-4f32-9cab-5df83d104c4b"
        },
        "item": {
          "id": "f7700d15-48a4-4b5f-8af7-4902fb85bf54",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4dd4ad76-30bf-4db8-a483-e3a5505f913e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89174313-9b2d-43e2-9a0d-c4d50e3fffd3",
        "cursor": {
          "ref": "861c7f2f-997b-4547-bb57-96e1bda8d93f",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "408984b3-3f3c-473d-8e3c-390ba0b2d83f"
        },
        "item": {
          "id": "89174313-9b2d-43e2-9a0d-c4d50e3fffd3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0b49f845-18bd-41d4-86f6-a6d95eba77b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901ad362-5c74-4387-b60d-3d24604acf2d",
        "cursor": {
          "ref": "55159f16-809b-49e6-8a6d-e0d19924154a",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2b536676-9638-4177-9d97-88a2c29e0dfe"
        },
        "item": {
          "id": "901ad362-5c74-4387-b60d-3d24604acf2d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "19227121-4eec-4439-a25b-3266a61c416d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d19ffd7-19db-4d3d-86d1-40e724fe5e44",
        "cursor": {
          "ref": "06dee94c-3115-4e72-8e09-f70e045ddf94",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "58231ca7-e65a-4d4d-983e-2df43b2384cc"
        },
        "item": {
          "id": "3d19ffd7-19db-4d3d-86d1-40e724fe5e44",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c4e053c2-8719-4e36-9eeb-571a5d545d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5936559d-ab17-48d5-8f2f-f6c58a78412b",
        "cursor": {
          "ref": "343ee27c-552c-49ad-b8dc-0174ce0be124",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "45c2ac6e-4963-4e0c-b914-c99c10072445"
        },
        "item": {
          "id": "5936559d-ab17-48d5-8f2f-f6c58a78412b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ef41a36e-190d-4d87-999a-41c137d2c908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34467c7-e444-4a3c-aab0-5fb730efdf64",
        "cursor": {
          "ref": "e49d0307-19e1-4c56-a21e-f1fac73a0bab",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "deee874e-0d17-41ff-b922-45d9b9e62ca7"
        },
        "item": {
          "id": "a34467c7-e444-4a3c-aab0-5fb730efdf64",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b6e2c574-e9f7-4549-b1a1-4b650472e46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c497e1a9-3062-41d9-9919-3efd148f8402",
        "cursor": {
          "ref": "0278712d-ee37-4676-9816-5e498a4d129e",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e0b8f7c9-c5e6-4979-ba0c-39ed6743aee2"
        },
        "item": {
          "id": "c497e1a9-3062-41d9-9919-3efd148f8402",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c1b84fdd-f992-46e7-8d01-ffca0af6b3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a2fcc1-5859-49ab-8d0e-cd00c0b43e7b",
        "cursor": {
          "ref": "6a71ea2b-1a60-4229-b777-2cb852554490",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "90f72bd1-0fa9-4deb-a576-4fd67e117162"
        },
        "item": {
          "id": "15a2fcc1-5859-49ab-8d0e-cd00c0b43e7b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "70276249-1df9-4919-9ee1-c912c975ad4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ee9117-b86c-48ff-8f19-cdb711f51a13",
        "cursor": {
          "ref": "1a89cbea-8fa7-431a-a670-f111f3b4fc46",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dc37a018-4fca-48ea-879c-afdcb61fbb08"
        },
        "item": {
          "id": "58ee9117-b86c-48ff-8f19-cdb711f51a13",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7f7a231c-3131-47f7-a020-047de7ccd7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572d94a2-624c-4128-b494-d8d06be3b3a5",
        "cursor": {
          "ref": "185d5c5f-1c5a-4bad-86af-d50fbef8e198",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7d6f4fab-d88c-42f3-b555-0411dbb84ea3"
        },
        "item": {
          "id": "572d94a2-624c-4128-b494-d8d06be3b3a5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3d29a857-4555-4bba-a33a-4d70676d0f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de628f2e-777b-4aa4-8b84-686c7d5573ec",
        "cursor": {
          "ref": "e25a0693-48ba-413f-9cda-c4cc272acef7",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7809e8a5-64d8-4ce1-bea8-a908763f9caa"
        },
        "item": {
          "id": "de628f2e-777b-4aa4-8b84-686c7d5573ec",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b061dd71-7187-4535-85da-4596ce430ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e65987-4af8-4f45-9d33-5e0a098adb0d",
        "cursor": {
          "ref": "1bc5d537-4c71-4adb-bd4e-7d416208d53d",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1792f8c9-f2a7-4486-b296-31fa63bc1505"
        },
        "item": {
          "id": "33e65987-4af8-4f45-9d33-5e0a098adb0d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "da310951-19a0-42b1-b853-4aecde432d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466a7a7b-27b9-4d6a-9d0c-8be594bd8ea4",
        "cursor": {
          "ref": "ee77a9f1-93c8-451f-a164-7bc28c5f8eba",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1fbf2041-1043-437d-905e-22b771aeb893"
        },
        "item": {
          "id": "466a7a7b-27b9-4d6a-9d0c-8be594bd8ea4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "60f63728-8aa5-4d01-af17-dad012464979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda7dbef-d147-4b0d-b94a-0be6e5c474fe",
        "cursor": {
          "ref": "b4ce0a96-41f6-43e6-aca7-ad66c2d13c76",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "37b0fac9-c638-4a38-a9ef-82c3adcdc89f"
        },
        "item": {
          "id": "fda7dbef-d147-4b0d-b94a-0be6e5c474fe",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "15221a7a-73bd-455e-b3f0-b92ace1fb1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721d5192-c721-4340-9dd8-72ee77e081a1",
        "cursor": {
          "ref": "0a43deb2-32d6-419c-9510-6140e71928ca",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7c65c801-8dc9-4fe5-9a4a-7747a913a595"
        },
        "item": {
          "id": "721d5192-c721-4340-9dd8-72ee77e081a1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1bc13ac3-124e-458e-ab9a-436e092e0f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8504cc47-98d0-4a68-a290-7b2a2e9ba813",
        "cursor": {
          "ref": "20d60dae-4255-4f45-9dd0-2d176a35f550",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8bfa6bdf-e6b8-40c8-ad39-34e4d0a15817"
        },
        "item": {
          "id": "8504cc47-98d0-4a68-a290-7b2a2e9ba813",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "70d26719-b765-4360-9aef-dca67ad3e9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437550de-b2d3-48c0-8530-1d18e3359016",
        "cursor": {
          "ref": "0c3fd35c-c231-4199-b97f-55f7e163871d",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a754fa86-aaec-4997-a6dd-5c38674f4240"
        },
        "item": {
          "id": "437550de-b2d3-48c0-8530-1d18e3359016",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e0e5c7e1-9644-490e-874b-f856405515b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdff4b3-16a2-41e4-a757-07e10cb6fa57",
        "cursor": {
          "ref": "721af9e4-5489-40fc-8d38-75e5ef923e72",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "38c97a8f-5a5f-4ad2-acf0-005b451e0bd1"
        },
        "item": {
          "id": "0fdff4b3-16a2-41e4-a757-07e10cb6fa57",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9d1861bb-5352-4199-883c-b796278ab9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657099eb-e6c2-4b1f-a87f-4b30d4236d65",
        "cursor": {
          "ref": "1a02b081-6fc0-4a94-a239-faee43961981",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8472d4a0-5682-49d4-88c6-eb12c1044f9e"
        },
        "item": {
          "id": "657099eb-e6c2-4b1f-a87f-4b30d4236d65",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "434d0be9-842f-45ae-91b6-83129234f719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4c13d5-e1db-48db-8652-0b264cb7d642",
        "cursor": {
          "ref": "1f6560e6-728a-47f3-beb3-f5f44f422f57",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b6730fc7-52ff-427a-bdb0-7807fd3471e4"
        },
        "item": {
          "id": "3d4c13d5-e1db-48db-8652-0b264cb7d642",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bcd74ae8-62c8-4874-9fb6-7745c3b58105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9b7e6e-e07d-4081-90e5-cc20abaa18d4",
        "cursor": {
          "ref": "e6e5559f-a95d-4cc3-bd95-a5e96b318598",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1e7be4b5-8b24-4296-a85a-6e39cf9ac6c9"
        },
        "item": {
          "id": "1f9b7e6e-e07d-4081-90e5-cc20abaa18d4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fc6bb196-c085-485c-aa68-6d3415b0cf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48c6aaa-300c-4b6e-9c92-19c262caf53d",
        "cursor": {
          "ref": "1d46ba3d-9ad4-4611-a639-d8367861f5a4",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d17f67ff-9446-407a-8fd8-1609ca2a4976"
        },
        "item": {
          "id": "e48c6aaa-300c-4b6e-9c92-19c262caf53d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b81648e5-56c0-44b0-b1e0-be0a23b3e115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a041abd7-2ef3-489e-9834-7821b5fbeff6",
        "cursor": {
          "ref": "044a1bd5-f493-4060-8adc-ddb53f8d2a76",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "832f065d-e4a3-4cf4-bfa7-44adf955de3e"
        },
        "item": {
          "id": "a041abd7-2ef3-489e-9834-7821b5fbeff6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2d76ed0a-9501-4d5b-aff9-1fe4e0722fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7180f146-931a-420f-9718-d85fe6cf4bd2",
        "cursor": {
          "ref": "90430109-f0ed-43e0-a873-86db0833ba06",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "30867bbb-9583-4b27-bac4-d2866732860d"
        },
        "item": {
          "id": "7180f146-931a-420f-9718-d85fe6cf4bd2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "af85df54-6522-49f9-8b91-7a9b35d8696f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ebb793-8519-4b7a-974f-c5b67ef0952a",
        "cursor": {
          "ref": "0dfeb19e-967e-4b03-8cf7-91f76e31a1d3",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b5738a30-c632-42f6-af8a-57168bda5982"
        },
        "item": {
          "id": "63ebb793-8519-4b7a-974f-c5b67ef0952a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "274c5bca-5c80-4b58-9214-7010127fbebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081591d6-03b8-44d3-b869-dd249b3d50c7",
        "cursor": {
          "ref": "3231d59e-77f0-4c26-867c-1f777ddf5df3",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4ccafedc-8d58-4cd3-82e4-f2a2babb1264"
        },
        "item": {
          "id": "081591d6-03b8-44d3-b869-dd249b3d50c7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "03328ea5-4c84-41b3-92ce-4554b7bf51de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1307c0b-202a-4e9a-97c7-59fad2410552",
        "cursor": {
          "ref": "554a94ac-0d92-45d3-8ef9-5ad356ded17f",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9ad959dc-b012-4f4c-ac1e-f334a2fa9dd1"
        },
        "item": {
          "id": "e1307c0b-202a-4e9a-97c7-59fad2410552",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a7b11672-f40b-4afb-877d-79538648b189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538110c7-1d5f-42b7-b444-d785cb93484c",
        "cursor": {
          "ref": "e21eba82-8478-49aa-b7ac-45aeafe7ede8",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5b755829-db5b-40f9-8f84-44d0a0caf9cc"
        },
        "item": {
          "id": "538110c7-1d5f-42b7-b444-d785cb93484c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a161cf73-ca1a-4d02-8053-a378ead83e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2388b0d-7d70-4d33-887b-742fc692f7cb",
        "cursor": {
          "ref": "5955b2fd-b153-430d-ba76-1241ef3de18c",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a6a0701d-ca49-480f-96e4-f741c49f8023"
        },
        "item": {
          "id": "a2388b0d-7d70-4d33-887b-742fc692f7cb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a90c6417-8c45-4a4a-a009-89c1c126ec0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4377ee-d375-49a8-9b22-bea87117d3e0",
        "cursor": {
          "ref": "2250815d-d1b1-48fc-a17f-d1dcf636d783",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "88c864be-c01a-403a-801e-140de71ed666"
        },
        "item": {
          "id": "ab4377ee-d375-49a8-9b22-bea87117d3e0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5acde91b-19e8-4be5-bd9a-383c4ec41f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d59147d-c33a-4f59-82f1-6be1ccf8621b",
        "cursor": {
          "ref": "e6b8343e-cf0b-4f0f-b5fe-33507a4565c9",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "641bc790-6100-40cf-beb9-c3b029610331"
        },
        "item": {
          "id": "9d59147d-c33a-4f59-82f1-6be1ccf8621b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "df53c234-97ca-4825-930a-73e3ee232194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793e672a-dd6d-4318-8c43-fa20e323ad13",
        "cursor": {
          "ref": "3a2b6488-b71e-44c0-9895-1f6ddb6c121f",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6552c8f3-4493-497b-bfc7-7d668a2c8324"
        },
        "item": {
          "id": "793e672a-dd6d-4318-8c43-fa20e323ad13",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e45ca53c-9760-419c-9d0d-d3645699647c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d82983-61a8-4b68-92bf-5b2476d49823",
        "cursor": {
          "ref": "115897c4-080b-4578-9b18-4d12a59a1c76",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e89184ca-993a-4877-87ac-eb192a96609c"
        },
        "item": {
          "id": "14d82983-61a8-4b68-92bf-5b2476d49823",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8e53973f-c6c0-4ed1-a588-805ac9666f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6c2e84-2874-4144-a882-5531f39e9b22",
        "cursor": {
          "ref": "ed88608a-b25e-44ba-92a2-969115eb3e41",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "837b85df-df79-4bb1-b0e7-7c3b4e19e59e"
        },
        "item": {
          "id": "3c6c2e84-2874-4144-a882-5531f39e9b22",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "049b83eb-0d68-41b0-a548-bf2f1532327e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313f8bb0-5f75-404d-8cb6-44a381f7d63b",
        "cursor": {
          "ref": "7428e76d-9c70-4897-8f04-5a4ce2034dc2",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b8530e69-8163-4aa3-9235-2a981eed3ee5"
        },
        "item": {
          "id": "313f8bb0-5f75-404d-8cb6-44a381f7d63b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "70133934-1d87-4e99-a261-d4c39cf8344c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8e7bbe-80ea-457e-8fdd-6562cd33f44a",
        "cursor": {
          "ref": "888d39bd-9b00-490e-bd02-e839c4e5da20",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "692b308f-d2bc-4e75-b3f2-7178844bf65c"
        },
        "item": {
          "id": "ea8e7bbe-80ea-457e-8fdd-6562cd33f44a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a9d03e00-7f90-4a28-8054-1e5f7f9f10f5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5babd03a-da1d-429f-982b-c4b3e1886e0a",
        "cursor": {
          "ref": "3255ca93-714e-4a1f-9769-e30d20e9f69e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "021abd6f-0b52-4504-b3b9-5c4c48bd1039"
        },
        "item": {
          "id": "5babd03a-da1d-429f-982b-c4b3e1886e0a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "26d417aa-d928-4648-b0da-4e87b7b1398f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b77ed2-ec16-4f9d-a9f6-d766cd140725",
        "cursor": {
          "ref": "ddd51021-3f32-4af8-adeb-fd22997f52c0",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0055780c-28f0-4f83-84df-32d5cda0b524"
        },
        "item": {
          "id": "04b77ed2-ec16-4f9d-a9f6-d766cd140725",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2997d5d1-12f1-479a-988c-51d49c4216ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c434d26-a160-4b11-8db1-6ef3df91fd5b",
        "cursor": {
          "ref": "3fa792c0-05f3-4bb2-86bc-9f3a013d2b46",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "074737f0-c500-4ddb-9eb0-04f516ba4d0a"
        },
        "item": {
          "id": "1c434d26-a160-4b11-8db1-6ef3df91fd5b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9843f245-7d35-4d92-b9f4-5cd4bb861eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce29df9-1f12-4600-8838-caa6fb776446",
        "cursor": {
          "ref": "cf4967f8-acd0-4d3c-a296-0c29e93b8038",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c64ce1a7-d5a1-47dd-a43f-035b0e441b7c"
        },
        "item": {
          "id": "fce29df9-1f12-4600-8838-caa6fb776446",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4a885bfd-d311-4dcf-acdb-5be8bcaeb0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88773b7d-49a3-4b75-a061-8867572e7440",
        "cursor": {
          "ref": "0210ee1e-fa34-4ee0-bbfd-9e867fd08907",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3af44f80-4645-4a49-a90d-ac4695ac242f"
        },
        "item": {
          "id": "88773b7d-49a3-4b75-a061-8867572e7440",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3a5dde3b-829d-4ad4-8d68-fbf646978663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5349d481-5774-4006-a4a8-d79cad5311c2",
        "cursor": {
          "ref": "3ceeb818-e508-49fc-b13f-5a4304285972",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "95a93834-50e5-4184-81ed-d662225f6a68"
        },
        "item": {
          "id": "5349d481-5774-4006-a4a8-d79cad5311c2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a0559f6c-9c6c-4357-9b4b-21b2ed10c2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca4d500-047b-4dc7-a050-333852ca0303",
        "cursor": {
          "ref": "15743177-64cf-4001-98a5-81ed52d71d11",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5c192cf8-47da-4ef3-8308-7ca8b77ee328"
        },
        "item": {
          "id": "cca4d500-047b-4dc7-a050-333852ca0303",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6178a873-6f21-48bc-9e92-884ab6cdb084",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576054cd-3fc3-48a5-a8f9-bc9769eff4ba",
        "cursor": {
          "ref": "4360a89d-d124-4f1b-9c38-daf43b670ac7",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0eceb523-cd04-4d55-ba33-506d437fb30a"
        },
        "item": {
          "id": "576054cd-3fc3-48a5-a8f9-bc9769eff4ba",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0edec267-4203-4ae9-8abc-a36ddd4d5157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e6a767-c296-4b0e-8354-84769116b65b",
        "cursor": {
          "ref": "a11b0b6d-d0e7-4900-ac2f-03b4a490fcb1",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "66ab2ea6-a775-4627-8ab8-cc79d9b5d00c"
        },
        "item": {
          "id": "46e6a767-c296-4b0e-8354-84769116b65b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4cd65638-24d8-4b03-b73a-0368163e14c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de24db6b-b32e-4e06-923a-bcf95689039c",
        "cursor": {
          "ref": "9f061929-0371-4e28-92db-bfa0e040e860",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "24f775e3-48d1-4d3d-ab82-0c19beb6b946"
        },
        "item": {
          "id": "de24db6b-b32e-4e06-923a-bcf95689039c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d76dd13d-f996-4344-8965-4547fa438f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739baec3-79c6-4921-9409-7749389bed52",
        "cursor": {
          "ref": "47acff6a-dfdc-479a-8c5d-1ffd7187f2d9",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a55d4b88-f126-4843-a51a-1b9dab71d049"
        },
        "item": {
          "id": "739baec3-79c6-4921-9409-7749389bed52",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8f961503-d1b4-4c55-a4e9-f59c86e2b3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b001e3-2d1e-42be-a82c-b0542bfa8f27",
        "cursor": {
          "ref": "78bfd9d3-21b1-4f4e-a7fa-8328e1185214",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4f3e6e0c-9251-4825-aa0e-5e253483ab8d"
        },
        "item": {
          "id": "47b001e3-2d1e-42be-a82c-b0542bfa8f27",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c2b35a15-b32f-4621-93c8-6a612fa78cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93814f75-6d46-4b84-a214-4110760c5895",
        "cursor": {
          "ref": "df5f3c10-b187-4bd7-b2be-98a5f2ecc7cf",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "86a51023-ba92-4e37-88a5-2327c123b9a5"
        },
        "item": {
          "id": "93814f75-6d46-4b84-a214-4110760c5895",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "16fad1a8-9687-4574-9992-1b769df04cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fe9bdf-cc60-4f14-af9e-c8a2d8abddb1",
        "cursor": {
          "ref": "ceb413b6-17c4-482e-8039-5dde9c752774",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6f0d6f95-c953-4884-94ce-2629bae38d09"
        },
        "item": {
          "id": "22fe9bdf-cc60-4f14-af9e-c8a2d8abddb1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c494f202-e9d2-4757-bece-b312f2ac4ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac51ae1c-dbe4-484a-b61b-6eec8d5a478c",
        "cursor": {
          "ref": "25498cc3-a63c-4eba-878c-408f1357bfdb",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ac38a481-e7ea-4fd1-b3c3-40eac001d77a"
        },
        "item": {
          "id": "ac51ae1c-dbe4-484a-b61b-6eec8d5a478c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "195527df-eaa5-4986-90dc-7087cf750525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c010747-0432-4fde-8b66-67cf5efb30fe",
        "cursor": {
          "ref": "74b66079-aad9-4182-b9ce-9e10c7ffffc3",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b090dd4a-ab37-4808-8bb2-c4014bf4ef04"
        },
        "item": {
          "id": "0c010747-0432-4fde-8b66-67cf5efb30fe",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "020bb6bb-ae49-4680-b07b-9a9cff9b9dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465a894c-899f-4a4b-8524-bc79fd495bf9",
        "cursor": {
          "ref": "5b081b69-3673-42c1-98b3-27b284f8b028",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b20b09f3-9a96-42ec-9987-7e6addeb6d32"
        },
        "item": {
          "id": "465a894c-899f-4a4b-8524-bc79fd495bf9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2988a774-8bfa-4a04-9ce3-956425d59f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8baff2-ca5c-42dd-9842-40f3d0e5e09e",
        "cursor": {
          "ref": "bcf6bd1b-a676-4754-bc15-3033a276fdcb",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3df79266-e8a4-43b7-ae06-20d28920b4c9"
        },
        "item": {
          "id": "9c8baff2-ca5c-42dd-9842-40f3d0e5e09e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "17ffafd1-dcbb-4dc0-88cf-9d1e68b531a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d24b3b-296a-416d-93ce-4902b90ccdb2",
        "cursor": {
          "ref": "d4a0c338-5179-4443-9c61-654534d922df",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "77905c89-9f5e-4fe2-8d44-420657ecc10d"
        },
        "item": {
          "id": "f8d24b3b-296a-416d-93ce-4902b90ccdb2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3e0755c0-90f9-4669-b9e7-8dc8990777c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c8b766-1f55-4b6e-892b-d085512a754c",
        "cursor": {
          "ref": "c580b859-9e97-4726-bdaa-735eb0716ae2",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e1d78f15-4706-4532-bdd7-089c5f658c53"
        },
        "item": {
          "id": "42c8b766-1f55-4b6e-892b-d085512a754c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2fed967a-050b-416e-834f-ce7ad784a8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22b1712-d678-42a0-ba3e-27b4cfd4133f",
        "cursor": {
          "ref": "b5358ebf-2624-4fac-ab2d-657322183dca",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6debd161-6198-429b-b948-2c190b30746a"
        },
        "item": {
          "id": "b22b1712-d678-42a0-ba3e-27b4cfd4133f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bf4974e9-f98e-4b94-8a88-4abac61ebe7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db79d244-eac8-449f-95d5-8f6241fabfd9",
        "cursor": {
          "ref": "113766bd-05e9-4aa6-9335-de535f94294b",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b3dbf33d-d647-4e29-8582-77c212129926"
        },
        "item": {
          "id": "db79d244-eac8-449f-95d5-8f6241fabfd9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "86fc99ff-3c23-4cc7-b020-1740d7703ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bbc6a0-a436-45e6-87de-81a6d460633f",
        "cursor": {
          "ref": "cb1307ee-a3b0-441a-a993-a2f3f5bca95d",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "51fdccff-70b9-4f2a-a665-147a41083864"
        },
        "item": {
          "id": "a7bbc6a0-a436-45e6-87de-81a6d460633f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3b7e10bb-9a39-48d8-ac70-1b86d578a46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183aec95-90f5-41c6-a02c-599c3c67805b",
        "cursor": {
          "ref": "fea6fb6a-9803-4c44-9280-18a16b02188c",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0f365142-66e3-4ff5-a21e-65b08874fdcd"
        },
        "item": {
          "id": "183aec95-90f5-41c6-a02c-599c3c67805b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6510d660-5ddf-4bbe-8819-b551e350776f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eccdf3-d3bb-4d36-85bb-7c475c4ef83c",
        "cursor": {
          "ref": "b8ef07fd-9d79-42df-9fd8-44e70fc40938",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "65e7a05f-ad4f-452b-82e9-c906d1df3aac"
        },
        "item": {
          "id": "93eccdf3-d3bb-4d36-85bb-7c475c4ef83c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a5b5e23d-a740-424b-aad4-3a2ff625b5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bf2481-97b2-4b38-bbe7-2adc69cc36c6",
        "cursor": {
          "ref": "7ce28ce6-3ebd-43db-8cc8-ed11c110f1f8",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "67aef533-960d-42e2-8cd4-4cf4d30db6f5"
        },
        "item": {
          "id": "42bf2481-97b2-4b38-bbe7-2adc69cc36c6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f30ab3eb-966a-40f4-973d-ee6afea7f923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23d4030-ad7e-45d9-abb0-8b0a2733a6c3",
        "cursor": {
          "ref": "7fd2a73d-4b22-49dd-ba17-91759de810c8",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5cca30bb-fd6b-4d81-b1b3-e6ec37c4adf4"
        },
        "item": {
          "id": "b23d4030-ad7e-45d9-abb0-8b0a2733a6c3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d605ff3c-25c0-4150-a1da-7f685902a212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e91884-2853-4fdf-8da0-b460ddfa52e0",
        "cursor": {
          "ref": "d9d89fd3-4436-4963-8d43-b56806b74332",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ff6a6e5e-be14-46c1-879f-f2d17ac68d77"
        },
        "item": {
          "id": "d6e91884-2853-4fdf-8da0-b460ddfa52e0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ffd90063-1a32-4210-91d1-9d10fe988411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c1d8f5-7d24-4867-b3ea-d0d70b087d89",
        "cursor": {
          "ref": "0e8a5174-c161-45a9-a72e-85330152ffc9",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6f1b1d5c-f70d-4b84-8e36-bfe7fad9595b"
        },
        "item": {
          "id": "66c1d8f5-7d24-4867-b3ea-d0d70b087d89",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1c806b16-dac1-4430-bb0c-e6892024b4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf729bc1-7c95-488b-82cd-dbf9e8fb85e1",
        "cursor": {
          "ref": "dcf73069-7863-4b1a-b168-971aa452b801",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8b60f4b1-d3ee-4d6c-b736-f8c472184b65"
        },
        "item": {
          "id": "cf729bc1-7c95-488b-82cd-dbf9e8fb85e1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b564be34-406c-4890-8106-648ab741d4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f00f74-91aa-4c4a-8917-96cb20e6b381",
        "cursor": {
          "ref": "bc70690a-6009-47fa-a61a-d1e4befa8fe1",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f01c33c3-8d93-42ff-8337-6e050eafdd25"
        },
        "item": {
          "id": "71f00f74-91aa-4c4a-8917-96cb20e6b381",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4e28a688-9081-4abe-9c21-ca1c5880a557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bc23ec-d86a-4300-8c93-19ac4a2031de",
        "cursor": {
          "ref": "d8dbd79b-fba6-42f7-9d75-18659759c0e6",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f819184b-b3d3-4fff-bb55-e6c30270ce96"
        },
        "item": {
          "id": "e2bc23ec-d86a-4300-8c93-19ac4a2031de",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "440886eb-7c35-4857-999d-69953e45e98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec6591d-41bb-44bc-b8b5-7dc0a01be4ad",
        "cursor": {
          "ref": "cf878e77-2852-4c1f-9de0-efcc7aca19f9",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e1a23ce4-0b6c-414b-8ba8-d32c5a202bca"
        },
        "item": {
          "id": "eec6591d-41bb-44bc-b8b5-7dc0a01be4ad",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "24e8d39c-fcf8-4e71-8422-8c3ec9c0662c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358c890e-8f44-4ade-bd18-2a0ee7d7d698",
        "cursor": {
          "ref": "bebdae76-32e5-4f25-967a-d7618aafd943",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "71be6762-84f5-428a-8d7f-e452cf85fa85"
        },
        "item": {
          "id": "358c890e-8f44-4ade-bd18-2a0ee7d7d698",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1205ce84-7faf-4bd1-8a28-c9fdf4af5bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65586a4-e2bb-4110-bf3d-7d809568ef55",
        "cursor": {
          "ref": "d8540858-fafb-4078-bde5-861c9a478f88",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "192327b4-a378-451a-8636-0fb9f435974a"
        },
        "item": {
          "id": "d65586a4-e2bb-4110-bf3d-7d809568ef55",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "90923edc-b382-462e-8452-ed173bbd9c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f021752-a77f-48b5-ab2e-d3d315f05401",
        "cursor": {
          "ref": "322184c5-a1ed-4e05-bc01-9cac6714f6dd",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "500e377d-dce2-44b4-bea0-ae3369fac7dd"
        },
        "item": {
          "id": "4f021752-a77f-48b5-ab2e-d3d315f05401",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2ebf6c64-0a3c-4d35-9a9a-ae594ca6fe32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e723396c-3678-4ae3-926f-e522572774f9",
        "cursor": {
          "ref": "f1bc3109-27d4-4a5e-99d4-c1c332375163",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cc3dd6f0-7fc2-446d-907b-fd0f45e1cd2a"
        },
        "item": {
          "id": "e723396c-3678-4ae3-926f-e522572774f9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5eb40c69-c38b-4dc6-a3e7-cf0b6410606d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca18fcc3-0a2e-4963-97ed-35d8b8a61188",
        "cursor": {
          "ref": "b27c56e4-de93-498b-8259-2092c05e7b35",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bdb8ba29-ac53-4152-baf6-f722ca1b3a26"
        },
        "item": {
          "id": "ca18fcc3-0a2e-4963-97ed-35d8b8a61188",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d41e0793-591b-41a8-9867-516378190e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d61e1d-0483-4657-9989-31e15d1505d7",
        "cursor": {
          "ref": "9fa6b122-d85f-4944-a709-7cc817ae2025",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a10e9048-b4d5-43da-9b3d-c50eec345353"
        },
        "item": {
          "id": "a4d61e1d-0483-4657-9989-31e15d1505d7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "49c7db52-05c4-43df-90ef-384d36b22ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c290108-b461-4c91-84d0-357a85c1488a",
        "cursor": {
          "ref": "17cd447e-8a2c-4b23-9a7f-59d76cfdc329",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "df2d2df2-8f86-4c5d-a68f-dbe35f5995b2"
        },
        "item": {
          "id": "3c290108-b461-4c91-84d0-357a85c1488a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b04f4b2f-c02d-4780-b7f3-866f33352710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d111c3-68c4-4e40-92bf-6ea99eaabaed",
        "cursor": {
          "ref": "46e951d5-1ee3-43cb-8663-71eca506d095",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dcc4421f-f0b1-4974-990c-4f953e46a74c"
        },
        "item": {
          "id": "b7d111c3-68c4-4e40-92bf-6ea99eaabaed",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2394fd7a-aa35-410f-a041-6c6807058298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60edbfc-6bfb-4aef-92f1-b6c0210e1854",
        "cursor": {
          "ref": "4682bd95-1ecd-4131-8aeb-3959fea43965",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c7609847-b2e4-4c0e-a85a-d1fab1606886"
        },
        "item": {
          "id": "f60edbfc-6bfb-4aef-92f1-b6c0210e1854",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dfa96337-50d4-4d0f-870a-95e390a39ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb702c0c-86a3-4936-9368-9f64a408e365",
        "cursor": {
          "ref": "4cbc2079-d36f-4598-b8d7-72a010c1574e",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3bbfc89a-230f-43ef-a361-285c8d62ccc5"
        },
        "item": {
          "id": "fb702c0c-86a3-4936-9368-9f64a408e365",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "52ea686c-90f4-42c7-8648-7f03b71efa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40b3802-017a-4150-a95a-37c8b16e8875",
        "cursor": {
          "ref": "978ecf6e-3b89-4c27-8b96-f07357c8977a",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6277cbaf-06d8-40b9-bb4f-a4eda8f06fa9"
        },
        "item": {
          "id": "e40b3802-017a-4150-a95a-37c8b16e8875",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f7932ea0-ced6-4962-b046-e990a0382978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c64dac-ee12-429e-9edd-466ffdf2ff45",
        "cursor": {
          "ref": "96a6bde8-f9ae-4238-b4ca-b257efb1751d",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "be45336c-61b4-4469-ac38-614dd9ab091a"
        },
        "item": {
          "id": "94c64dac-ee12-429e-9edd-466ffdf2ff45",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "18038db6-d977-466b-a291-4bd72aedfe41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9c1834-4b7f-4a2a-8da0-95cbfc9ccece",
        "cursor": {
          "ref": "b92bdc9c-e876-4fe9-bbc6-fd06e57213ee",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c732c444-3bc4-4a57-bc97-75f849ecba5e"
        },
        "item": {
          "id": "8d9c1834-4b7f-4a2a-8da0-95cbfc9ccece",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9754117e-06da-44aa-9d84-090aa3255a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aca6e2-827b-4cc5-867a-5382640372d3",
        "cursor": {
          "ref": "f2dffadb-6271-4f95-9e69-2bd4a421fcc3",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d18a527c-89ee-4392-8d5d-3627d1ae2c0d"
        },
        "item": {
          "id": "57aca6e2-827b-4cc5-867a-5382640372d3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4bec211a-353d-411d-9ef9-ca4ab63f90cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286ba486-7027-4366-b59f-821d6c849363",
        "cursor": {
          "ref": "75dd0eff-c911-492b-a7f2-8451b99a4736",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "05283600-0506-4282-9756-7b66a38f06e0"
        },
        "item": {
          "id": "286ba486-7027-4366-b59f-821d6c849363",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7a14b2df-337d-47c7-abb6-b52ab2f38c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bece008-b700-4ba9-ac50-f0c18f80235c",
        "cursor": {
          "ref": "b178664f-d787-4bad-905b-fc5cd9031318",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2ddc0ed7-a628-4252-b512-e2f66fb98759"
        },
        "item": {
          "id": "5bece008-b700-4ba9-ac50-f0c18f80235c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "70e4ce8a-c64e-45aa-b25d-ac8f41995c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aab682-6795-42a4-95ad-08d8760d2aa7",
        "cursor": {
          "ref": "92cc603c-f396-4b88-a16f-2d78f9bd1050",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "553993f9-3861-4904-9765-bc60e1704bb0"
        },
        "item": {
          "id": "06aab682-6795-42a4-95ad-08d8760d2aa7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d2519b82-397a-4b64-b72c-fba8f0749a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304f4ca6-f84c-4ee7-a065-fcf2cee6a75c",
        "cursor": {
          "ref": "e097095e-cacb-4b1a-ac4f-93dc64135e62",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8d7effdd-ea9d-45a4-86dc-1a4b6b1a1690"
        },
        "item": {
          "id": "304f4ca6-f84c-4ee7-a065-fcf2cee6a75c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "60fc7f75-f127-4b84-b3b6-98676bce96e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e91a7d4-5935-4e5e-9cf0-2620b7f34d37",
        "cursor": {
          "ref": "7ed7e7f5-daa4-4fbb-8439-034bd84e131d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a6e2497c-d03c-4c0a-ae09-cf808e40dcd0"
        },
        "item": {
          "id": "3e91a7d4-5935-4e5e-9cf0-2620b7f34d37",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "68817b02-3626-44b1-8809-4b7866aac237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b5f9a5-23ec-4063-bdf8-54c0e8326d6e",
        "cursor": {
          "ref": "b822ed35-ec21-4af9-8c2c-1bf67ab34fcc",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c9513b18-246d-4be3-87fe-851b7b7c80b6"
        },
        "item": {
          "id": "e6b5f9a5-23ec-4063-bdf8-54c0e8326d6e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4d950946-7d9e-4a7a-af9e-ff675f1ce7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2993099e-8655-41fb-875f-90a84ad6ec24",
        "cursor": {
          "ref": "9f96b27a-26ff-4afd-b8e5-c61a1b4504ca",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5fcdcb10-cfb8-4e4f-b14a-201040ff8042"
        },
        "item": {
          "id": "2993099e-8655-41fb-875f-90a84ad6ec24",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a29a702f-bcc6-400a-be33-089706f0ac95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaebe09-bbaf-41ce-9fbe-01786424ca7f",
        "cursor": {
          "ref": "bfb41338-64f6-4784-977e-cc08e66ad225",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "02c48f0a-b7f1-4fcc-b559-8d74163798b6"
        },
        "item": {
          "id": "9eaebe09-bbaf-41ce-9fbe-01786424ca7f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e4e1b247-56c2-4144-9260-ca6b1c38eb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d0321c-1acb-4ec6-92a4-71d0cf16fc41",
        "cursor": {
          "ref": "5a3a0bb7-c59c-45cd-99fc-1c8c342b1d69",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2af42a3f-78a3-4900-bec9-0667c3b6a530"
        },
        "item": {
          "id": "21d0321c-1acb-4ec6-92a4-71d0cf16fc41",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "584f26c5-63d9-447e-89e1-1ce79aad08db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e81a7ad-8444-4791-bc87-787f1c17698b",
        "cursor": {
          "ref": "0c87fe54-341b-4753-9efa-3c333bfa4933",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6c6260c5-0374-4172-8e3c-bb8d5bf67152"
        },
        "item": {
          "id": "0e81a7ad-8444-4791-bc87-787f1c17698b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "589705f1-0f1d-48de-a7b8-dccfea978708",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0f40dc-c168-41c1-8fea-1b9acb90c468",
        "cursor": {
          "ref": "d729ad37-3f78-475b-9342-9ead103eaebb",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8dc57b9f-8a56-4f84-94d2-fd9e0e4beb2f"
        },
        "item": {
          "id": "df0f40dc-c168-41c1-8fea-1b9acb90c468",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "36c20d26-d384-4aa3-b099-1df9f95c6bb1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 43,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0dc40f-4f85-42cb-901e-ac6feba6c88a",
        "cursor": {
          "ref": "cefb16b1-64ac-4121-8c29-2bc4766f170a",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "28c58488-455e-49e4-b7fb-da6e17ffe463"
        },
        "item": {
          "id": "6c0dc40f-4f85-42cb-901e-ac6feba6c88a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "65648bfa-7001-46fc-b7c2-b4b950a40bd5",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9bcbd4-07f5-4215-8661-ddcc0bb16537",
        "cursor": {
          "ref": "36ca54f9-1864-4327-950f-31e8b1ea0fed",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2774be2e-fb1f-4859-ace6-ef69af3be3a2"
        },
        "item": {
          "id": "ca9bcbd4-07f5-4215-8661-ddcc0bb16537",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f8c34939-e925-4423-8054-3d8c42b96797",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da61c0a-1a67-4e7e-85e6-257d5afa37f1",
        "cursor": {
          "ref": "a2bad248-9681-4d86-99a7-30e376247cb6",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d083b9ee-a361-4949-ab26-14c1c246ed9c"
        },
        "item": {
          "id": "7da61c0a-1a67-4e7e-85e6-257d5afa37f1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c2373b92-7048-4e1a-b5c1-4f133f1da89f",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2896d2d6-6aac-4031-b861-0504f8f4a5d4",
        "cursor": {
          "ref": "ccf424e5-e4e1-41e2-b0bf-8e0235a02dd0",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7bdb8bd4-6816-49ec-858e-ebb7a67ff9f1"
        },
        "item": {
          "id": "2896d2d6-6aac-4031-b861-0504f8f4a5d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1060e72a-1f36-4b70-9f69-83615f6e8649",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8c7a03-1ba0-473c-90b5-170c8ac7ad75",
        "cursor": {
          "ref": "d0d5e6f2-d0d1-4bdd-bb43-2abb961e4b50",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "680bfa93-a8ff-4a66-87ef-610314363f8d"
        },
        "item": {
          "id": "5e8c7a03-1ba0-473c-90b5-170c8ac7ad75",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1bce0dd9-4bd8-482d-9d00-3577466d2ddf",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a02f3e-4fc9-4b9a-a37e-97f2e97df7df",
        "cursor": {
          "ref": "89243212-f410-4cc0-99d6-6795c57c492c",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "31d18de0-9598-4df5-b833-a6b11e80902b"
        },
        "item": {
          "id": "78a02f3e-4fc9-4b9a-a37e-97f2e97df7df",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bde25c18-ea79-4c76-919e-3f91c698a8d7",
          "status": "Created",
          "code": 201,
          "responseTime": 20,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4ef4fc-38a3-4a12-91ef-dacf3fac9685",
        "cursor": {
          "ref": "f7b75c91-de70-4fb5-8a02-d5e9e770b9bf",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6f7d4b6d-4140-4e81-9546-11370d65cd05"
        },
        "item": {
          "id": "7c4ef4fc-38a3-4a12-91ef-dacf3fac9685",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9b78f6f5-aa88-49ca-aa88-50f3969d9cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4ef4fc-38a3-4a12-91ef-dacf3fac9685",
        "cursor": {
          "ref": "f7b75c91-de70-4fb5-8a02-d5e9e770b9bf",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6f7d4b6d-4140-4e81-9546-11370d65cd05"
        },
        "item": {
          "id": "7c4ef4fc-38a3-4a12-91ef-dacf3fac9685",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9b78f6f5-aa88-49ca-aa88-50f3969d9cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5db91d-c832-4ec0-a6bc-4625549fc91a",
        "cursor": {
          "ref": "49017ccd-90f9-477f-b990-3c3a3d70e5cb",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fcd0fa71-6aaf-4ba2-90a5-d1697fc40b1f"
        },
        "item": {
          "id": "6b5db91d-c832-4ec0-a6bc-4625549fc91a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0fe57f47-dc27-48e3-9339-5b4f3ba86778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57235d83-8942-42c3-80c4-1245d62d751f",
        "cursor": {
          "ref": "b5a8e4aa-c345-41ed-807e-04c004cf74ac",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "17b5cd82-2e9a-4715-a7e8-d0a11451ed5f"
        },
        "item": {
          "id": "57235d83-8942-42c3-80c4-1245d62d751f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a5a89a5f-c0f6-421a-91c4-2aafa42c3ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d4f44a-a6fe-4fb6-a2b7-fb08b919b4f4",
        "cursor": {
          "ref": "5fa78f3f-754b-4868-aad3-f466d77cf7ed",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "21b397af-bcab-4f6b-8575-c96d38d7e420"
        },
        "item": {
          "id": "c6d4f44a-a6fe-4fb6-a2b7-fb08b919b4f4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "546916c8-dcc7-43a5-81da-7d5866f7b9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf51ade-09dd-4b4f-9ece-e94414bd7860",
        "cursor": {
          "ref": "b761c437-4b05-4aab-8611-e084cde7493a",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4d1d2e99-29c2-4174-b64c-5ef47dc96a1f"
        },
        "item": {
          "id": "aaf51ade-09dd-4b4f-9ece-e94414bd7860",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "796138e4-bb32-4dd9-955b-9551d31bd1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686c5bb1-19e8-423d-90fe-d83cb142ab9b",
        "cursor": {
          "ref": "856da632-02d9-44a2-afa3-1cb4e4286196",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a9cc44ff-4c7f-428d-8a7b-466f08e34d55"
        },
        "item": {
          "id": "686c5bb1-19e8-423d-90fe-d83cb142ab9b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4a6bc499-696b-451b-acd4-a05406eb9ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861606a6-45d8-432c-a0b5-0c463bfa4d73",
        "cursor": {
          "ref": "ab3f63d1-1470-46b0-871b-5c669c963eb1",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3765e2b7-c44b-4593-b393-e992e187cfe7"
        },
        "item": {
          "id": "861606a6-45d8-432c-a0b5-0c463bfa4d73",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "af33e8f3-b7fd-46a0-9ff4-89cba15e91ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01126571-773a-4abb-8734-9de219638f68",
        "cursor": {
          "ref": "ccfa2841-3b07-480d-8dae-ab8a1e875118",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a7d53c63-ebbd-4957-a15b-6935286c3cf8"
        },
        "item": {
          "id": "01126571-773a-4abb-8734-9de219638f68",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "55e0cfe2-7793-4627-aecd-3e38f6a3b8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61527ce-3b0d-476a-b6d4-643b24821de7",
        "cursor": {
          "ref": "ce29baf4-9d4e-426e-8de6-15d40a6ea760",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "53ceda80-b385-406a-a224-9e113535422d"
        },
        "item": {
          "id": "c61527ce-3b0d-476a-b6d4-643b24821de7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "da7b77cc-48a4-4bb6-a8a4-b06c8e77f4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfea898a-c845-4022-b1ed-78fb3f384c36",
        "cursor": {
          "ref": "3321219e-73c2-456d-b36c-69ac678f72e9",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "239eb1d2-b06a-45a4-9f32-1f4262ec5ac7"
        },
        "item": {
          "id": "cfea898a-c845-4022-b1ed-78fb3f384c36",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "355a1f38-1585-4281-8f0f-5116d23fc9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dbc019-b7fe-4bde-8537-e83e1da4c702",
        "cursor": {
          "ref": "ba1b0e36-11a4-41c5-a2f7-8dee30384b4d",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "540b588f-4e69-495a-b74e-8f3c340ab6fc"
        },
        "item": {
          "id": "70dbc019-b7fe-4bde-8537-e83e1da4c702",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ccb7d0a5-be6f-4d7d-9f31-7ce7e12aa521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256e0e5a-e2b1-4175-9b25-8fc93cfd997d",
        "cursor": {
          "ref": "1cf1096b-ea56-4a7a-80fd-0771ae597772",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "65d4145c-e2b2-4c19-aca1-28aca7e330c8"
        },
        "item": {
          "id": "256e0e5a-e2b1-4175-9b25-8fc93cfd997d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1e4708ec-44c5-4973-9a1d-8c5bce5f718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1943306-c513-4796-9a47-ba94fad82cb2",
        "cursor": {
          "ref": "8571b8a2-241c-467f-9732-9abe35aa99ee",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e2b97390-bc87-40d7-8d75-725fcd36e750"
        },
        "item": {
          "id": "b1943306-c513-4796-9a47-ba94fad82cb2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "10adedf4-3fc9-463b-9e3c-8f7671a3521b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59221ae1-a704-48de-87fe-2fa3d6abef94",
        "cursor": {
          "ref": "ec054c8e-5070-4048-a516-ad9b59aea51a",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1f30a6fc-2a93-49a9-9d4a-5800342df10e"
        },
        "item": {
          "id": "59221ae1-a704-48de-87fe-2fa3d6abef94",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f3c8939f-2e8d-487e-b603-43d284ec5451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13425981-56da-4453-af09-3f7f387c6e82",
        "cursor": {
          "ref": "6660f041-c1a8-4179-9343-cc7aa7f22b83",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f4252f78-fe04-4bde-a375-c7dd7bcbc873"
        },
        "item": {
          "id": "13425981-56da-4453-af09-3f7f387c6e82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2242f9b4-ea1c-40bc-a9d5-1880f378460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3aa0a5-ea9a-409b-8133-32069ae6e61f",
        "cursor": {
          "ref": "62553bd6-1d89-47fe-9c60-f9accecdf573",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2b9e8221-f5b9-4584-ad61-3523c404b13b"
        },
        "item": {
          "id": "9e3aa0a5-ea9a-409b-8133-32069ae6e61f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aa6398d3-5a37-4775-91e1-aa785123b02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eec40d-dcf7-42d0-870a-c526184e1d5d",
        "cursor": {
          "ref": "34c6ac3e-51a3-4b60-9510-5289e3ae8390",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "64f75b98-c76a-4e22-82f3-5700b6e5f721"
        },
        "item": {
          "id": "49eec40d-dcf7-42d0-870a-c526184e1d5d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5692a8df-0a97-47b4-a691-63bf3d6b7bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9ac4ad-a533-4f65-838a-fa27af0df9ed",
        "cursor": {
          "ref": "f748a287-c581-4cdf-9b25-87000509d3de",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fd868eac-5bce-4096-a0ce-0b2de90b946d"
        },
        "item": {
          "id": "ab9ac4ad-a533-4f65-838a-fa27af0df9ed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a0be96cb-145b-409b-9a94-817106a875f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88e437b-3fbc-4cf2-acda-a2973d3ccc32",
        "cursor": {
          "ref": "97f29c4e-7cf8-4027-86a4-d003392a2d57",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "01433e9c-3cde-4faa-b5b0-f84e586b5aad"
        },
        "item": {
          "id": "d88e437b-3fbc-4cf2-acda-a2973d3ccc32",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07a7e9c5-bcd4-4791-a4f4-a82fca5acf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eded29-cf92-4be7-b971-b6471c367146",
        "cursor": {
          "ref": "412630e1-b1ab-41b0-8892-7f73aa31add0",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2330613b-30aa-44b5-9c8b-190d75806254"
        },
        "item": {
          "id": "15eded29-cf92-4be7-b971-b6471c367146",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e92dcf01-7576-423b-8c11-456a5961c7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3599b3-7180-44ce-af75-a7ee5c567a07",
        "cursor": {
          "ref": "b019c9fa-f8b6-48a6-9cd1-bb8a77ebf236",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "469dfcdd-6639-4cdb-a5dc-ceee475c12d7"
        },
        "item": {
          "id": "fd3599b3-7180-44ce-af75-a7ee5c567a07",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "46f9c6f5-dcd6-4159-b3a2-eaca82a5ea43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc085b8-280f-4385-8f6e-df6fdf814c65",
        "cursor": {
          "ref": "3f25124b-5679-4169-bf8f-5959f0d22cab",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "03a02b4b-102a-4add-a650-4943b528717e"
        },
        "item": {
          "id": "bcc085b8-280f-4385-8f6e-df6fdf814c65",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1274c3ff-bf59-4727-9e7c-002e5a30d0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d00eb5-553a-4166-9dd4-173d878ddfa4",
        "cursor": {
          "ref": "0001253e-5ed8-47ca-9954-3077bd11b3e5",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "62ef9211-d596-461e-9878-08406cdaf72c"
        },
        "item": {
          "id": "40d00eb5-553a-4166-9dd4-173d878ddfa4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "96fdcbaa-6fe0-460e-a7a2-33d03c667d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0be1eb2-7012-4d6f-b567-3dea3eba429d",
        "cursor": {
          "ref": "7c0486c5-d80f-4c54-b20f-da0c0a3112f7",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "76b309be-7204-453d-9ffc-1ef0bb354cb6"
        },
        "item": {
          "id": "f0be1eb2-7012-4d6f-b567-3dea3eba429d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d5b60fd7-afad-4be6-8781-88cf270302d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4c79b1-fb27-4d88-8b5f-5cbabf5f7348",
        "cursor": {
          "ref": "425386d0-a80c-4340-9cd8-3edfb4bfa7da",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f0ba3d6c-591b-422a-8d4a-44a0805058fc"
        },
        "item": {
          "id": "8f4c79b1-fb27-4d88-8b5f-5cbabf5f7348",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d19bb1e9-5ad1-4e39-8c66-6dcb8c99f75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e374c19-f5b1-474b-be31-6cbdcbdef457",
        "cursor": {
          "ref": "64d7e8c6-72b1-4949-9985-a936214bd4aa",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ecec01e1-b4b2-43f3-baaa-45586a48d17a"
        },
        "item": {
          "id": "4e374c19-f5b1-474b-be31-6cbdcbdef457",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1c025ef0-b0ab-45e4-abf7-d14105692f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed7b16a-9518-4482-808c-c49b681ef7d9",
        "cursor": {
          "ref": "1dc846bd-7abb-4c86-95ce-a29ad5484b55",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "53261b39-aa26-49fc-a7e7-30eb50867d3c"
        },
        "item": {
          "id": "0ed7b16a-9518-4482-808c-c49b681ef7d9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ca9fb40f-466d-48d0-90ae-b7363ce8e16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b53f5ad-0749-4279-aa4e-4c325d5f4687",
        "cursor": {
          "ref": "6f869d1f-d322-4e11-b960-fbfc7b05bae9",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9f2158d1-53c9-4f62-935e-69802a089803"
        },
        "item": {
          "id": "4b53f5ad-0749-4279-aa4e-4c325d5f4687",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "864198cd-d87d-47ac-ae1a-58948b438deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ea08c2-9dae-4d86-a10b-6a867c459a97",
        "cursor": {
          "ref": "38799bee-dc5e-4be7-8373-e911502d64d6",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "64ac89e3-1320-4b12-9d62-5dfa3667e07d"
        },
        "item": {
          "id": "b2ea08c2-9dae-4d86-a10b-6a867c459a97",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0feea1d6-1b5e-44fb-8b6c-796093e91169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36ba69e-7727-4b54-9ecc-44b9248e64a5",
        "cursor": {
          "ref": "0b8d236e-f92d-4e0b-b239-43ca7c5c997e",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a2719862-588e-48fe-aad6-908067b8f334"
        },
        "item": {
          "id": "b36ba69e-7727-4b54-9ecc-44b9248e64a5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5c6a361c-7fe7-48aa-972e-bdcc269c617e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244678b6-2da5-4ba0-b54a-95ba9a9131ff",
        "cursor": {
          "ref": "61380817-7de2-4f33-870e-119ce8e918dc",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c8acd70d-f9b6-4f01-97df-ec5f12b9b70d"
        },
        "item": {
          "id": "244678b6-2da5-4ba0-b54a-95ba9a9131ff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "46f411fb-ff03-4189-afc7-5c9e5e7846b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0866b8eb-0418-45a6-90ad-79462cc6e30d",
        "cursor": {
          "ref": "edb99afe-d992-4ac4-8854-707dcd23e065",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "57c39213-1b97-4904-aafc-743bcfb997af"
        },
        "item": {
          "id": "0866b8eb-0418-45a6-90ad-79462cc6e30d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "613f9436-1828-46bd-9386-df2354871dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a837ad2-d103-4a1d-ae8f-5815fb21dfc2",
        "cursor": {
          "ref": "5effbd9d-317b-4439-a898-3e9470792f97",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eb04866e-2d7b-41e4-8093-6a5514b63f3d"
        },
        "item": {
          "id": "9a837ad2-d103-4a1d-ae8f-5815fb21dfc2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5acdfb5d-985b-4095-9fc4-91d59456e4e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c44aef-17f1-4c26-8352-43e5b48e3ba5",
        "cursor": {
          "ref": "9e4e9082-b903-4e0f-91bb-50a29cacd422",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6f7020d4-90f0-4f6e-9e1e-46b300f29279"
        },
        "item": {
          "id": "97c44aef-17f1-4c26-8352-43e5b48e3ba5",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4e2cab22-f753-4918-a7e9-6c3f4ac63f40",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cba70a1-5280-4bf0-a9d3-155e7606512e",
        "cursor": {
          "ref": "575ca9ef-f297-4d46-9a71-de36f6e3e5fc",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c196cac5-aa38-49e0-9834-9c4ac53ed783"
        },
        "item": {
          "id": "7cba70a1-5280-4bf0-a9d3-155e7606512e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b0b7dfa3-bdff-4ad0-b2e0-69d3ff84cfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cba70a1-5280-4bf0-a9d3-155e7606512e",
        "cursor": {
          "ref": "575ca9ef-f297-4d46-9a71-de36f6e3e5fc",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c196cac5-aa38-49e0-9834-9c4ac53ed783"
        },
        "item": {
          "id": "7cba70a1-5280-4bf0-a9d3-155e7606512e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b0b7dfa3-bdff-4ad0-b2e0-69d3ff84cfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eca177-b8d0-4c5c-8be7-eebcb89df9a6",
        "cursor": {
          "ref": "9918faa9-e2a9-463f-91b2-25148ba1a388",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6a157d1e-e1ab-4903-8fa3-eaa85d0fa41d"
        },
        "item": {
          "id": "15eca177-b8d0-4c5c-8be7-eebcb89df9a6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9db22aad-2ce1-4ecd-ab5d-5ece0bc56aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d01667-296c-46ec-81cf-2e3d73e3b1e7",
        "cursor": {
          "ref": "997897c0-0b3a-4ed8-aa31-91ae524543cf",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1764a8b7-0b32-4309-ae31-040f88577b20"
        },
        "item": {
          "id": "e0d01667-296c-46ec-81cf-2e3d73e3b1e7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cd928722-8f79-4d33-a2df-eac0c1eb2f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7c6350-53b6-4813-812d-ee534c1a7410",
        "cursor": {
          "ref": "dceeca2a-8fe1-4332-833f-95c553f56d5a",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6b14c036-8441-4284-82e5-560fa4912600"
        },
        "item": {
          "id": "ea7c6350-53b6-4813-812d-ee534c1a7410",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5a6bc1c8-fec8-4a50-b4db-b6754bee6fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcfb852-58fc-4efd-8a75-cc4fbe9b94eb",
        "cursor": {
          "ref": "d38a0492-8f5c-4e73-8692-21538f35a840",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c35c0b86-4f81-4d75-a2a7-b44af602a8ff"
        },
        "item": {
          "id": "1dcfb852-58fc-4efd-8a75-cc4fbe9b94eb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3d2efbc1-c2a3-4557-9c66-cd0fb058811a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5855e8a5-b60a-465b-a54f-9e31e41a08ec",
        "cursor": {
          "ref": "d5e55ae8-14fa-40d9-a9da-2c3db325fae2",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "72fe995e-373d-41bc-a8da-7afc5c0f161a"
        },
        "item": {
          "id": "5855e8a5-b60a-465b-a54f-9e31e41a08ec",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d790c212-2a2a-4558-8ff0-f094367c7230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b0d0b2-1820-4990-b2d2-057a0a3e16e9",
        "cursor": {
          "ref": "b384a8b7-fdb0-480e-b237-b9b3d6b9e3b7",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "061ade8b-abcd-42bc-b698-61b1b9ce3d88"
        },
        "item": {
          "id": "62b0d0b2-1820-4990-b2d2-057a0a3e16e9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "82ea92ff-6695-438d-9c31-d081101a0fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968e63b5-6a08-4b3e-a69e-c0760dc56950",
        "cursor": {
          "ref": "cb1d28ec-1151-46fa-bd06-b94728ee6cd4",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "386be84d-ef1c-421b-98ff-7651bb50d810"
        },
        "item": {
          "id": "968e63b5-6a08-4b3e-a69e-c0760dc56950",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1d246655-9d9a-4075-b5dd-6914a3a18e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d93248-d5b2-4bce-b780-7158a6ce9198",
        "cursor": {
          "ref": "9d85af46-b7cc-4cea-a841-a6566b399cb3",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c94ad742-eb98-4df8-a6c1-961deef18049"
        },
        "item": {
          "id": "97d93248-d5b2-4bce-b780-7158a6ce9198",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0ab43e32-1ed2-47e6-8013-ee0d44c0274e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d09e86-0f0a-4743-b39a-b8aa57d396d6",
        "cursor": {
          "ref": "2d9fc85e-c447-460b-99ba-0319be00d432",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "eb9405d6-ffa0-45fa-ae5b-0dd780a16a2c"
        },
        "item": {
          "id": "c6d09e86-0f0a-4743-b39a-b8aa57d396d6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d75b3fd2-d05e-4f74-a852-535cba615c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1a49ea-cd00-4388-a81d-ba837dd8c5b1",
        "cursor": {
          "ref": "19ef76f8-de21-4b1c-9051-4a5ff990ed2e",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3d9f2fdf-77a8-4150-afd0-f01bf6bc8655"
        },
        "item": {
          "id": "7b1a49ea-cd00-4388-a81d-ba837dd8c5b1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f8da6920-8051-4424-b14e-c7120d063d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7687621e-d40e-4918-bd87-c6638ce8b33e",
        "cursor": {
          "ref": "08aa066b-492d-4a61-a4f4-62b3dbadbfaf",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f1f020a5-2526-4c15-9064-652137b26a7e"
        },
        "item": {
          "id": "7687621e-d40e-4918-bd87-c6638ce8b33e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "88590429-e212-4512-9b05-ff817ce5bb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705aace4-1801-4524-8fdb-06c7d1592e22",
        "cursor": {
          "ref": "8af2793b-f40b-45b9-b129-6685ea65923e",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "959dc7e5-e2ef-4c90-adde-ae80ccb3d8e3"
        },
        "item": {
          "id": "705aace4-1801-4524-8fdb-06c7d1592e22",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c0b58bb0-ffb1-48e7-ba54-40468e9b6c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a279299-0ea3-4600-8b4a-2a6b46a9941b",
        "cursor": {
          "ref": "88dbdb39-06ab-4262-940e-7d25094c4a48",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3a887121-9538-4b66-bc4e-19fc332afff1"
        },
        "item": {
          "id": "9a279299-0ea3-4600-8b4a-2a6b46a9941b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "80d1831e-eb91-44c2-a882-a2406445bf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4e76ed-b032-4af2-ba10-8ac1573449b9",
        "cursor": {
          "ref": "85694ac1-d5e6-4608-833e-6e82ed734ab5",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "65b612ae-f0e4-4a98-9821-2c6f8781864c"
        },
        "item": {
          "id": "7c4e76ed-b032-4af2-ba10-8ac1573449b9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "01a46151-4048-4e2d-b5a5-ebcf58a4debe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c847fdb4-8d0a-4ca8-ad2f-db4c46f28ea8",
        "cursor": {
          "ref": "1b77b23a-7514-4fb7-8e2d-2424dbe701a1",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d209fc2b-934e-4d96-a591-51727d387606"
        },
        "item": {
          "id": "c847fdb4-8d0a-4ca8-ad2f-db4c46f28ea8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "73243ee6-d665-4c5d-804f-b78f76a899e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5ac59b-f670-4d6c-8e20-ffa524c1bd3c",
        "cursor": {
          "ref": "9a65fef6-bd58-46c3-b8a2-9d02c5dd6f6c",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cc54aa53-7973-4860-88e6-5b576ed25ce2"
        },
        "item": {
          "id": "af5ac59b-f670-4d6c-8e20-ffa524c1bd3c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3e1c6934-296f-436b-bba5-035fadf29f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc088f94-1ef6-4003-a1d2-04baa6aa4602",
        "cursor": {
          "ref": "0322dc45-0cc4-4d81-9f38-9ed48ae0dcb8",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4a1a4ad0-0f2a-4d45-9ba6-fb60daff9672"
        },
        "item": {
          "id": "cc088f94-1ef6-4003-a1d2-04baa6aa4602",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "90d16042-1a30-4c8a-b4f9-125a156cec45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f3c307-9cbe-43bc-88c8-6473712a66ae",
        "cursor": {
          "ref": "74c342dc-375a-409d-be26-7b555ea299e9",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d7071809-9a46-4664-ae75-11d3036009bd"
        },
        "item": {
          "id": "88f3c307-9cbe-43bc-88c8-6473712a66ae",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c4cdf25f-72a6-4c10-bd5a-2c5d0acc911f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6a856d-fc0f-435e-b030-ce098e818ed8",
        "cursor": {
          "ref": "03239fbb-bc96-441a-8fdd-f45fd4af111e",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "494ccbfa-3977-4f90-818d-1b2a5d7e1cde"
        },
        "item": {
          "id": "cc6a856d-fc0f-435e-b030-ce098e818ed8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a9da4416-2a85-4829-8a5d-b3486f2e1645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe325c04-771c-4cb5-a499-b45f8141f93b",
        "cursor": {
          "ref": "117dfad1-9508-4564-9d45-f6ad5887cf71",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6badb8df-2a99-4f2f-9524-18c625c08998"
        },
        "item": {
          "id": "fe325c04-771c-4cb5-a499-b45f8141f93b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "274ea19f-6951-45b7-93aa-bfff048ded5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b40955-345e-42f5-98fa-dae2d2b6983e",
        "cursor": {
          "ref": "b3794344-a4d7-4eae-9cb6-27d8f7f8b729",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "44371412-d900-4c6a-ac49-1026cab3cd23"
        },
        "item": {
          "id": "f5b40955-345e-42f5-98fa-dae2d2b6983e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "27f3d8af-7343-4f6c-92e7-b5d45e1e2e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ec82b0-e0dd-4780-811c-ae410780dd0d",
        "cursor": {
          "ref": "b270299d-d646-411f-8584-a290692f3a35",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1d1f37a4-bd1a-4984-92f0-33625e06b1f2"
        },
        "item": {
          "id": "c7ec82b0-e0dd-4780-811c-ae410780dd0d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "28f4f36e-a645-4db9-8242-9da9ff8c4eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53155f77-3482-425d-aa27-f543923d2c53",
        "cursor": {
          "ref": "b1fe4041-e2fe-4290-b870-cc5fc88e7978",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "853ef5de-d5e7-4587-bfa7-3b7399831d39"
        },
        "item": {
          "id": "53155f77-3482-425d-aa27-f543923d2c53",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "512d499f-02f0-43a9-8d0a-38726b0a0c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43010b19-22a3-41b2-963e-a2252f28b92f",
        "cursor": {
          "ref": "1b12df52-e9f1-49a7-b0c6-cfe383242286",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4b18f6d3-34e2-48d7-a2bc-923afe7752d4"
        },
        "item": {
          "id": "43010b19-22a3-41b2-963e-a2252f28b92f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b40c3cc2-fa66-4d4f-b342-802f0daf777b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e7f697-47dc-4aa9-ab80-ef87cddead2a",
        "cursor": {
          "ref": "32e83a08-2b82-492f-ab69-63f71ef7ebe7",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cf72d3c0-f26d-4198-b8a4-b409c7781600"
        },
        "item": {
          "id": "a4e7f697-47dc-4aa9-ab80-ef87cddead2a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0d785968-890b-46ae-a2b3-8ea90b88727c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588dcb55-ec4a-47c6-8660-d81438bdf84f",
        "cursor": {
          "ref": "e87f0e90-1fa2-46ef-a464-f9d4678c200f",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "67ea6914-95ba-44b0-b1ba-35da3e2ed6ba"
        },
        "item": {
          "id": "588dcb55-ec4a-47c6-8660-d81438bdf84f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2d1023eb-c07e-4184-842b-46d48de8d3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b662b30-249d-433d-b0eb-99a960a37350",
        "cursor": {
          "ref": "5be7b78d-6986-4323-9fd0-aebeb35d951f",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "18fd79ae-f97a-4d9a-825f-6c3325850810"
        },
        "item": {
          "id": "0b662b30-249d-433d-b0eb-99a960a37350",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "564e7144-6a86-48fc-9043-35ed5bbeb083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f75e330-920e-41bc-ab0a-6f47fcf54b0a",
        "cursor": {
          "ref": "966b58e3-4b32-4109-982e-848ebe374735",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "51beb609-f473-4122-b69b-1aac0a6de175"
        },
        "item": {
          "id": "1f75e330-920e-41bc-ab0a-6f47fcf54b0a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c7e24357-984a-4d05-8ec0-f63b89920d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f291246-2770-46d0-85a7-e0413c1dbef6",
        "cursor": {
          "ref": "7af5ef9c-5c20-436c-a018-b21c15d5b61d",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "80afa5da-ba02-4ca5-8e71-aa58a8b8ba59"
        },
        "item": {
          "id": "5f291246-2770-46d0-85a7-e0413c1dbef6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "40daf577-8784-4f63-a250-18e331d4a030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87763d7-b7b5-4b25-8502-b53f7a34943e",
        "cursor": {
          "ref": "e0f8e63a-3eb5-4b15-83e4-5c88a261222d",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0468b4ac-ab1e-4a61-9766-bd0c40090148"
        },
        "item": {
          "id": "f87763d7-b7b5-4b25-8502-b53f7a34943e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d000c8a8-2fc9-40a0-9f17-01e75b86f044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2eead9-f684-41b1-816c-f383f382d84d",
        "cursor": {
          "ref": "ff7514d6-0b39-47b9-972a-48afd2a43020",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "788193b9-0f23-4c98-bca6-92f6e33ea293"
        },
        "item": {
          "id": "bd2eead9-f684-41b1-816c-f383f382d84d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cc798c46-4857-42be-b2d1-2ea88f3f2436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608a6e76-589d-460b-ba15-cdf2ca84c189",
        "cursor": {
          "ref": "31e1363c-9aa4-4076-9fcb-ca182a66ea88",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "08be141d-3782-4e3d-aaf9-8b847e94bd65"
        },
        "item": {
          "id": "608a6e76-589d-460b-ba15-cdf2ca84c189",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "71ef881d-aac6-4293-8e76-ac34facf2df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c5fa81-0a0d-407b-930a-1f9f92372a90",
        "cursor": {
          "ref": "abf0d9bc-d8da-4dfe-93dd-cea1984953ea",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ba48349c-d9c3-4a03-a614-9ae97729c564"
        },
        "item": {
          "id": "42c5fa81-0a0d-407b-930a-1f9f92372a90",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "18be20e5-d2cd-461a-805b-eb34469654a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b824f13e-1aba-4121-a654-fe3ca40cb017",
        "cursor": {
          "ref": "3e980128-fa6f-408c-844d-0a692a9f161e",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "633e9202-863b-458d-9bdc-9c43fc41d9c0"
        },
        "item": {
          "id": "b824f13e-1aba-4121-a654-fe3ca40cb017",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a4f829d9-88cd-4218-b30d-a84eac0edddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c48ba6-82ac-4d53-9e32-64ae23dc058f",
        "cursor": {
          "ref": "f88b608b-fa15-49b6-b150-a161fe68e6ef",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4e102108-d215-45d7-8ab5-c37fd6859a76"
        },
        "item": {
          "id": "f7c48ba6-82ac-4d53-9e32-64ae23dc058f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bdcb1a90-ba42-4fbc-9b2f-4515c0ba2bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326e3895-b7c3-4e03-98ff-ee49b818009c",
        "cursor": {
          "ref": "308a30a4-3dec-441b-97dc-a7ebd90f57ff",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "144dfd8a-450c-44c8-823b-94f9d297a341"
        },
        "item": {
          "id": "326e3895-b7c3-4e03-98ff-ee49b818009c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ea7bcae9-c024-4079-85b8-940f7811e26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2a7998-a295-46d6-bcca-98d414175750",
        "cursor": {
          "ref": "8705eed9-22ff-4517-a41b-2c5d6df1483d",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0e87fabd-4c6c-4642-8590-270c34eb48c2"
        },
        "item": {
          "id": "6a2a7998-a295-46d6-bcca-98d414175750",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f16a6edc-304f-44aa-848a-6d9b248763c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c65b90-112f-4934-822b-d8bbe51aa575",
        "cursor": {
          "ref": "b5e7dc5a-bf75-47ee-9ebd-fdc844188cef",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "46657392-ce39-48f3-a9ec-bf88bbf5f387"
        },
        "item": {
          "id": "14c65b90-112f-4934-822b-d8bbe51aa575",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2d885a1e-6c5b-4a7b-a897-f908a45f0a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d401d1-2d6c-4c27-a2e2-59f8330547bd",
        "cursor": {
          "ref": "758300c0-b6c2-43e3-a326-b1c57b2f16e4",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f9b3de66-9907-458d-a0e7-24a5d9ede568"
        },
        "item": {
          "id": "53d401d1-2d6c-4c27-a2e2-59f8330547bd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "279df1b5-77f4-4da6-8e25-43d3a8ca2551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276d21e0-fbd0-4017-8099-cd4440a4581d",
        "cursor": {
          "ref": "7c50710c-9833-4a49-960c-d05d0044bd24",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f69f9645-7a3e-4f53-9f45-d1d42887669a"
        },
        "item": {
          "id": "276d21e0-fbd0-4017-8099-cd4440a4581d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1580cd9d-d4e6-4b3a-9b53-f09df746f106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8166058d-ed31-4d14-b250-c6f20080e99c",
        "cursor": {
          "ref": "6a20c013-bc78-4de3-a283-144dccc7f2ed",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "44bd9958-1017-4fc3-aa3c-bc540765baa4"
        },
        "item": {
          "id": "8166058d-ed31-4d14-b250-c6f20080e99c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "70fc15ad-3475-472d-8034-26413fbff403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9867ac8e-4063-407b-92ef-6e820c0ad043",
        "cursor": {
          "ref": "463baff7-f055-4b4b-b5b7-f35cc406d76f",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "05780c60-3394-4775-b837-0bd8ba015666"
        },
        "item": {
          "id": "9867ac8e-4063-407b-92ef-6e820c0ad043",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "940b5f2c-4b49-4a9c-95b8-817b3a653212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1e018c-0e4a-4f0d-90d4-b4f3ecded050",
        "cursor": {
          "ref": "820812d7-9902-4740-b76d-8f059c8d47a4",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "77fbf530-7999-43d2-8100-d8b869e9f9ea"
        },
        "item": {
          "id": "9f1e018c-0e4a-4f0d-90d4-b4f3ecded050",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2d2f0e23-3046-4cc4-86ed-dd932465e586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cffb4a-6943-4a56-84e8-10297d99ecec",
        "cursor": {
          "ref": "673e717d-9630-4929-bf67-47be6fef461c",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "01caa432-9c92-4975-92c5-802240ffb68d"
        },
        "item": {
          "id": "d2cffb4a-6943-4a56-84e8-10297d99ecec",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e943df1d-9990-4a2d-95ab-493e6c7eb759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b9cc10-91a9-4d05-b842-bd86735a6fe6",
        "cursor": {
          "ref": "7ca0556a-3ed6-4896-a7fc-69f3c4289c4a",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e3ab5454-d660-48c1-855c-4e580b99b7dd"
        },
        "item": {
          "id": "b5b9cc10-91a9-4d05-b842-bd86735a6fe6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "37bca913-f1ef-4e5e-93db-743547e41409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56eb7b7-0c2e-42fe-84dc-3ffe4a5effce",
        "cursor": {
          "ref": "6e98882e-086c-450e-a611-0f4951ab114d",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3a990e42-cee9-41c7-8a88-9ecba3d1e1b6"
        },
        "item": {
          "id": "a56eb7b7-0c2e-42fe-84dc-3ffe4a5effce",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "923d1b2f-dda9-46da-948c-9402e26e0b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffb1996-0f10-4422-8766-2fef485a70fa",
        "cursor": {
          "ref": "c8d1df95-17f6-48ab-afd7-8975f945b485",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "360e61f5-a8be-4083-8fda-0bd88f0a8f71"
        },
        "item": {
          "id": "4ffb1996-0f10-4422-8766-2fef485a70fa",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a8d02720-4fd0-4654-8381-a30f63614884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e826cc1-d044-43ea-b3b4-59b0257339b0",
        "cursor": {
          "ref": "4a3f8e9d-643d-40cc-bb02-028f56b09fbf",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1e143c49-6faf-49f9-b0c1-1c790f5a5526"
        },
        "item": {
          "id": "6e826cc1-d044-43ea-b3b4-59b0257339b0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "56c6eefc-16d0-4022-bb03-9315d8898806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2155987f-be25-4c4b-971b-3004a2b49054",
        "cursor": {
          "ref": "1c12465e-e3c3-4140-857b-f6d7061c2b1e",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0af95d4f-ea32-4d97-80cb-11f543f8484f"
        },
        "item": {
          "id": "2155987f-be25-4c4b-971b-3004a2b49054",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8039c122-43e2-4487-a619-fc9a7aa4cf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc7140e-f849-47fc-848f-d493e107fc18",
        "cursor": {
          "ref": "6b7cff39-3869-4f6e-8922-c67f411a9313",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c22e4361-467a-4909-a673-2f5c36f52774"
        },
        "item": {
          "id": "2bc7140e-f849-47fc-848f-d493e107fc18",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "74449611-dd00-4268-8d64-77d8cab5c77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4ac97f-257d-478d-be85-c2e989c69ce8",
        "cursor": {
          "ref": "dbf3fff4-949c-412e-97eb-e217383df305",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d87edfbe-4c6c-4649-8980-65262e194f01"
        },
        "item": {
          "id": "ec4ac97f-257d-478d-be85-c2e989c69ce8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "873c30fd-a71e-4e9c-8049-30cbe8015252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c724d8-7c33-4640-9b43-2bc3e0572cbd",
        "cursor": {
          "ref": "bceb0d43-b68a-4c32-9c9e-e6abe06ec3f2",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f2655e03-9aa9-41b8-bd53-96d6d18df401"
        },
        "item": {
          "id": "d8c724d8-7c33-4640-9b43-2bc3e0572cbd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "deef11ed-8726-438f-9726-8ad5f5a04425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8500cbdd-022e-4f5e-9d79-449ffa2a1e41",
        "cursor": {
          "ref": "16514840-248f-4363-854d-8b90506c7804",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1e98adcb-0287-4ecd-a18c-49f0d8f92fca"
        },
        "item": {
          "id": "8500cbdd-022e-4f5e-9d79-449ffa2a1e41",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f7e14e5a-f332-4525-8eee-0d592d059833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7446232a-583c-4853-8625-2b19ad4e46d9",
        "cursor": {
          "ref": "1ba18bc9-88a2-4cce-a952-f83afdb21245",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e6cf5dd8-2551-4a64-b4e5-ca8a03b86fb3"
        },
        "item": {
          "id": "7446232a-583c-4853-8625-2b19ad4e46d9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b92b6840-757c-4d7b-aaf9-29187153443d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2b890f-ae90-4ab7-9d96-cb387bed4164",
        "cursor": {
          "ref": "cfadc3bd-03d6-4dfc-ad4e-9b2664409ed4",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ffeedf70-6e61-4cf0-bac8-e3fb8aa321b9"
        },
        "item": {
          "id": "dc2b890f-ae90-4ab7-9d96-cb387bed4164",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cb9b3aca-d97e-4d52-881c-190d4e78f7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c5d338-205f-4922-80ba-c5fddc98c3c9",
        "cursor": {
          "ref": "edff0531-92e8-42a0-95d9-e9348505398b",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b05922d1-0393-4ccf-978d-61ca8758df10"
        },
        "item": {
          "id": "83c5d338-205f-4922-80ba-c5fddc98c3c9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "88dbd936-facd-4d4e-a655-c8c020300ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb61f468-8864-4e33-8928-736827aba504",
        "cursor": {
          "ref": "84bc935a-95a0-40e3-ba78-20b9bf72b7ee",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0205b05d-b791-484a-95d9-3074fe60568d"
        },
        "item": {
          "id": "eb61f468-8864-4e33-8928-736827aba504",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "51d427e0-7620-44ad-90e0-815e284a7df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29dfe80-e3f2-4538-9dab-36de9cafe98c",
        "cursor": {
          "ref": "52679eca-eecf-4300-967c-322b42d5d815",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "81e83f3c-7089-499a-afcc-fd7ae8eac347"
        },
        "item": {
          "id": "a29dfe80-e3f2-4538-9dab-36de9cafe98c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "48587275-26e9-455c-8215-b47d66b6bb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59bfce6-b909-4a65-a0eb-04befb1694a8",
        "cursor": {
          "ref": "f051eb4c-b08c-4ee3-a139-ca30b4f43f6a",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "be0a8d76-bead-4a7b-8728-1eee124ba7c6"
        },
        "item": {
          "id": "f59bfce6-b909-4a65-a0eb-04befb1694a8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ea24de6a-4a0b-42af-8516-824a19d6c643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454611ea-2b7b-4278-9579-1933d4850f0d",
        "cursor": {
          "ref": "72025e01-9798-4657-a759-a194ad7cdb09",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c581ff4f-4fb4-4e75-b512-ac23f08fafa5"
        },
        "item": {
          "id": "454611ea-2b7b-4278-9579-1933d4850f0d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "791894a4-06c2-4052-b491-6070bc1dd6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9963e931-3552-44b3-8867-67fc2911fecd",
        "cursor": {
          "ref": "2378591a-105f-4efe-a978-36d1b6a51cb2",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0ca49ea2-95c8-4f3e-bb88-073499134ed8"
        },
        "item": {
          "id": "9963e931-3552-44b3-8867-67fc2911fecd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1e557244-9546-42c8-9711-0a92cc74b412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daff232-da86-44c6-88a0-b293c395a689",
        "cursor": {
          "ref": "49bf4e0a-c19b-44c5-9b86-1133eefc2803",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ed99933e-970b-4505-92a7-0a3e536fbdce"
        },
        "item": {
          "id": "6daff232-da86-44c6-88a0-b293c395a689",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "498006a6-0519-47ad-9b93-fa9e2bcdb980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d19219-e607-4d44-9418-7315a9821462",
        "cursor": {
          "ref": "06b0bf67-b1aa-415b-b476-785dd89cefd2",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f6a027e-cf44-4680-a231-425492f7c5c4"
        },
        "item": {
          "id": "10d19219-e607-4d44-9418-7315a9821462",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3d332882-0994-4230-8b1d-084b029c0229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88b9b8a-1096-4fcc-a174-2b409502e5fe",
        "cursor": {
          "ref": "1eefda34-45b5-4833-83d8-c582cb6d16a8",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "73c468eb-2942-46bc-890d-16f7777f16a8"
        },
        "item": {
          "id": "d88b9b8a-1096-4fcc-a174-2b409502e5fe",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4fe34b7f-7e4d-4dc6-becd-a17fb070daa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f60c54-6a25-47de-8495-2ff4e6979138",
        "cursor": {
          "ref": "5de6e39d-177c-45c1-9c0a-80dfa9f9d435",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "307a4d82-4d79-4421-9e73-0fccbb5d9642"
        },
        "item": {
          "id": "34f60c54-6a25-47de-8495-2ff4e6979138",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b9786adb-f5e6-4fa1-b6ba-790e00e17ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b14109-1677-4586-acfc-a1bc9225d8ee",
        "cursor": {
          "ref": "3037a139-2f18-4a04-953e-5bbc794a888f",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "13f3d97d-385a-4b8b-b5da-3c8db8b4c810"
        },
        "item": {
          "id": "87b14109-1677-4586-acfc-a1bc9225d8ee",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e9b7c1b6-c35b-4bc1-9181-8e63ab82170d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87da3b9d-54b4-4193-9fb6-2d01acd88831",
        "cursor": {
          "ref": "c30a9887-8cd5-4353-896b-90ddf579d776",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1c43cdc3-e313-4691-9f7a-1e3fd7a7b06b"
        },
        "item": {
          "id": "87da3b9d-54b4-4193-9fb6-2d01acd88831",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0ae009f4-8b15-4756-b684-c98bf2849dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a8770e-9905-4665-ac10-8fc21913120f",
        "cursor": {
          "ref": "64bd0649-ed8c-4493-83a1-47d687538263",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "54235184-6c25-4eef-894a-4a0c7f6c9aea"
        },
        "item": {
          "id": "91a8770e-9905-4665-ac10-8fc21913120f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7d02945a-fb97-4239-95d5-c95638acdcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b05851-aa95-4ff1-ae8b-c89c4b69cb75",
        "cursor": {
          "ref": "28a14d8f-0c58-40c8-849b-9bffcfd141c6",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1d0d2d9e-c3d6-4143-a8dc-f82418fcb6a5"
        },
        "item": {
          "id": "a9b05851-aa95-4ff1-ae8b-c89c4b69cb75",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8562143c-1e0c-49b9-93cd-8710ebcffa82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb31f699-4d25-4075-b278-8bd9a89cbf5a",
        "cursor": {
          "ref": "79ab38ee-5453-40d7-a232-e7a3f80de722",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "14f10359-d666-435b-ab0d-b00174069486"
        },
        "item": {
          "id": "bb31f699-4d25-4075-b278-8bd9a89cbf5a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7016c032-49e7-4926-b273-da1006bfad98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1067e4a4-10bd-461e-aca3-cadd92e9941b",
        "cursor": {
          "ref": "0cb6e1eb-a28c-40d8-a9b9-177346ccd01d",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3554457e-d4f5-464d-8735-99ef2a03fba3"
        },
        "item": {
          "id": "1067e4a4-10bd-461e-aca3-cadd92e9941b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "dc52e293-97fd-44fb-9eda-0322aee01236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc279b7-de1f-4ba8-b9e6-46ba5b17ce8f",
        "cursor": {
          "ref": "d8f301df-890d-4b33-b7b5-e0fe460b1b65",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9d655db9-c092-4c43-9531-9bf3020180d3"
        },
        "item": {
          "id": "efc279b7-de1f-4ba8-b9e6-46ba5b17ce8f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8e6c3727-b3f9-4ef6-a67d-32f52665ed44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644555b2-2c8f-43bf-a377-536e00929f85",
        "cursor": {
          "ref": "ffb949f3-b1b3-42c4-8caa-4bdc28b78b03",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a6df9cdf-a73c-4227-89fc-c9b024748b38"
        },
        "item": {
          "id": "644555b2-2c8f-43bf-a377-536e00929f85",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "681451df-34ec-434f-aebe-2848dc12230c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd76c7ff-10fd-4764-9203-fc9525b6d191",
        "cursor": {
          "ref": "229b11a0-0711-4c77-98b6-f3455879408f",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b004cebd-75c0-4c93-8e82-7fad9ce8c307"
        },
        "item": {
          "id": "fd76c7ff-10fd-4764-9203-fc9525b6d191",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a3c26a3e-5758-413c-b638-21dea2e858b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f10cea-9fe8-470d-97ea-ce8e9eafadc6",
        "cursor": {
          "ref": "1fbf9273-06e4-41af-aebb-c2375f3871d6",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b97a6b4f-bc85-4866-8f2c-3301c2195075"
        },
        "item": {
          "id": "71f10cea-9fe8-470d-97ea-ce8e9eafadc6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f3302a92-e01b-41d3-948a-4d03e645ad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa4232f-b2cb-4fd0-88f0-04399322475a",
        "cursor": {
          "ref": "b09b6bd7-3804-4d86-91a1-1e0881e9fd6a",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a5f9c8b3-9fb7-4211-a9fa-ce8b7e4e27dc"
        },
        "item": {
          "id": "eaa4232f-b2cb-4fd0-88f0-04399322475a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "37ebe789-c7e4-4b89-83ff-b32c77a113fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc997095-c55f-4c7a-a38b-e7dacfea385b",
        "cursor": {
          "ref": "1b71adf3-7a70-4b09-9e4c-2c4bfe3af835",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "20ddd074-bde5-48dc-b483-8837a9575fbc"
        },
        "item": {
          "id": "bc997095-c55f-4c7a-a38b-e7dacfea385b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "431f50b2-98d4-4e56-ab5e-0172bbbf3b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f000b257-3c79-43ed-b3a2-8771e9574011",
        "cursor": {
          "ref": "204e31e6-dbc0-4daa-b366-62c3bca9462c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "214a6fa6-ecd2-4eba-a0eb-add4ea35f48c"
        },
        "item": {
          "id": "f000b257-3c79-43ed-b3a2-8771e9574011",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d4b9604f-28ce-4838-adff-ed8f1e42f9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25d9a8e-5f8d-4d85-9c01-537df7001019",
        "cursor": {
          "ref": "d3ee3370-e224-4d52-aa6c-8322e33e704a",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "11e34df2-848f-439f-96c7-b00c9f3fdbfb"
        },
        "item": {
          "id": "f25d9a8e-5f8d-4d85-9c01-537df7001019",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "811f4f40-d031-4617-9fd8-542f14d6c132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3a8bee-2bf5-45d3-86cf-15548bac10c8",
        "cursor": {
          "ref": "81d7a311-a499-4a53-9183-494e02e3d3c3",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "95ebc344-90ce-40f2-8753-08e8264570f4"
        },
        "item": {
          "id": "1f3a8bee-2bf5-45d3-86cf-15548bac10c8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "eb2543fd-072d-4b81-9b79-c1c6ac9f5f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e51c55-8a79-44cd-9820-d6cd7562f9d3",
        "cursor": {
          "ref": "88620de7-3bdd-4adf-a6a7-d354d4f1325a",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "57b70e0a-00cc-4f3a-9822-f1c338775264"
        },
        "item": {
          "id": "58e51c55-8a79-44cd-9820-d6cd7562f9d3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "82a1d680-07c4-4cc4-a402-b9489b332f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e4bc1c-8f9c-478b-b5fc-3c8ecf65b38c",
        "cursor": {
          "ref": "fcfb8b9b-3d9c-42d3-a3d4-156afcfa98eb",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2cfadcae-dfb8-4c6a-afaf-dcf8c92f7512"
        },
        "item": {
          "id": "f7e4bc1c-8f9c-478b-b5fc-3c8ecf65b38c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2d02d3af-7bdc-418b-85d4-20a936b37f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637e5de2-6f09-4cc8-b1f5-211fa33d8411",
        "cursor": {
          "ref": "93484b68-272a-4d24-9798-bf56a861f604",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3f49e1fa-0027-475c-959e-0f090f345eac"
        },
        "item": {
          "id": "637e5de2-6f09-4cc8-b1f5-211fa33d8411",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cb7aea2b-c9af-4e88-bf0b-2ae41bb2353f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29ac4f1-a2b6-4f7a-b452-b5c5d0ae1e8c",
        "cursor": {
          "ref": "9616379e-ddb3-462a-ba60-91c1fa806348",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "936b8aae-ff42-499c-b00b-cac761a55ee9"
        },
        "item": {
          "id": "a29ac4f1-a2b6-4f7a-b452-b5c5d0ae1e8c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "16a7f9fe-a95c-43cc-8624-22411ed4cd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4072a35b-9029-4177-ad1f-eb4c26bdfd26",
        "cursor": {
          "ref": "680e22d4-a9c8-40a8-b768-1bd367579814",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ed4a6b71-765d-4c33-b2c6-aeefb65cdf6a"
        },
        "item": {
          "id": "4072a35b-9029-4177-ad1f-eb4c26bdfd26",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2af3f534-2824-4918-919f-7fe3df31f9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc54726-e862-4776-9885-b0d27ac7c06b",
        "cursor": {
          "ref": "28249f69-2b89-4232-aa1d-51ad232bb494",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8e7785e6-a883-49cc-a253-77e369067394"
        },
        "item": {
          "id": "cbc54726-e862-4776-9885-b0d27ac7c06b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "574ede47-19b6-4293-b0bf-26dcfd48f86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5583c1e5-fbb6-4a40-93b6-20d3b910cc4f",
        "cursor": {
          "ref": "828ee17c-9f16-4212-a239-1ad82dd99aea",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d6409204-07c0-46e4-8552-0cee10a4677c"
        },
        "item": {
          "id": "5583c1e5-fbb6-4a40-93b6-20d3b910cc4f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "762e342d-c785-432a-8cea-7b4061fcfc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4224da83-4ffd-4b6e-b035-2f61ba764d9f",
        "cursor": {
          "ref": "d9094f9f-0ce9-4c2b-86e2-778e9af44933",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1d8016b5-5774-4e87-899a-6dc348c12eee"
        },
        "item": {
          "id": "4224da83-4ffd-4b6e-b035-2f61ba764d9f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "746b9e08-41f5-4966-849a-dde9fb8b78b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c052f95c-3a89-4e49-bba5-ee6c224d0f9f",
        "cursor": {
          "ref": "82fbeb03-be12-4ba3-a217-76185845b8f9",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9059abb1-eb10-4bdb-b8e0-14ca38891281"
        },
        "item": {
          "id": "c052f95c-3a89-4e49-bba5-ee6c224d0f9f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "425ffd70-7b85-4d11-8474-6e3c717daf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9fc42c-1569-47db-b7f4-7a62e12f0415",
        "cursor": {
          "ref": "290782a5-05f8-4bb1-9ced-c4e17e074ecd",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c9ab92b8-bcc2-4594-8f83-12755f41fcc5"
        },
        "item": {
          "id": "ea9fc42c-1569-47db-b7f4-7a62e12f0415",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f117c125-e907-49a0-bfda-95e531269fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6922b725-8ebf-462d-bfce-fb736b349052",
        "cursor": {
          "ref": "7a8865a7-1cfb-484d-8e07-96436e666fda",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9bb8231a-93ab-476e-aab1-2a88014dbf0a"
        },
        "item": {
          "id": "6922b725-8ebf-462d-bfce-fb736b349052",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "713504d8-a7a9-431b-8665-f0c17a979d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d14511f-f17b-4289-845e-2f1cb2485a88",
        "cursor": {
          "ref": "d9957092-2b02-41ae-940e-1233fc6e0c81",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9d2cc87e-5894-48dc-a018-c9d57db6c9a7"
        },
        "item": {
          "id": "7d14511f-f17b-4289-845e-2f1cb2485a88",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f68f4a07-79b8-4f0c-b695-aa0ebd05121a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031b397b-22fb-4e22-80ca-df7bc5d566f3",
        "cursor": {
          "ref": "a21eafc5-8251-4c29-81f3-4b918366764a",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e92d8e54-37fe-4776-8b32-5069fd3e3c92"
        },
        "item": {
          "id": "031b397b-22fb-4e22-80ca-df7bc5d566f3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0fb900d8-e935-4aa8-9e26-8fc3daa65945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4db4697-b47b-497e-930f-ba3b609bde24",
        "cursor": {
          "ref": "0e71198f-368d-4638-bad2-3ea4da584e76",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ce6d2988-547c-4c79-8edb-459bff16afe8"
        },
        "item": {
          "id": "d4db4697-b47b-497e-930f-ba3b609bde24",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8e8ce4e0-9dc8-4f46-bfcd-8ab02ae7e391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10b20ce-475a-44dd-8f25-b10a7a549a9b",
        "cursor": {
          "ref": "5791985f-3794-447b-b5f5-817d012077cd",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "187d4fe3-890a-484d-a47c-143c7413033d"
        },
        "item": {
          "id": "f10b20ce-475a-44dd-8f25-b10a7a549a9b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "87cd091f-576d-40ba-b59c-b3a618365bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0698db-5208-4e0a-a23e-d97a96fedaa2",
        "cursor": {
          "ref": "1cc41190-6811-4205-a990-3cd3fcc92f33",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "891821ff-ae62-4cf6-83af-acb65fe8342c"
        },
        "item": {
          "id": "4a0698db-5208-4e0a-a23e-d97a96fedaa2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cef035e7-d4d4-479e-9ed1-357eefed9cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fbbf07-be99-488d-a683-7db1fb8c961a",
        "cursor": {
          "ref": "c85ad975-b2ec-49b8-a399-2b5b37018566",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "39ac0ee4-ad4a-47d0-8daf-800041b51238"
        },
        "item": {
          "id": "d0fbbf07-be99-488d-a683-7db1fb8c961a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3312109a-82a3-41f7-adf8-df865c3f3826",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3f5e2a-23ed-4448-bc82-5cfae8005214",
        "cursor": {
          "ref": "bce8fae5-ba2d-456c-b7de-2dbfc73d49cf",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ee28882a-e5c5-4a56-98ad-d2f3ecefc323"
        },
        "item": {
          "id": "6f3f5e2a-23ed-4448-bc82-5cfae8005214",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ef4446ab-c579-47f7-8427-b7362cbac140",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc90fe1-4dca-4aa4-b39c-77cda5a4c929",
        "cursor": {
          "ref": "35120bbe-0257-49bd-bb25-1380d0173b6d",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "de3417e5-2386-4244-ad58-9801555dcd7b"
        },
        "item": {
          "id": "4cc90fe1-4dca-4aa4-b39c-77cda5a4c929",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a22eacec-8089-4ec9-9154-a0a8a481276a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bc41ce-81ac-4079-b05b-faf3026455e6",
        "cursor": {
          "ref": "83d1f97d-bfa0-4850-acb4-cb57af8fa5ec",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6648453f-d141-42d2-99f9-c73e49031fe6"
        },
        "item": {
          "id": "23bc41ce-81ac-4079-b05b-faf3026455e6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e5c2f091-0ded-4b88-8d4a-5655ca024e45",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33d9048-9cdc-4529-9ff7-3d195bf96424",
        "cursor": {
          "ref": "1e036a7c-1496-4483-922d-f1d6ce970392",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d6f408ae-c0d2-47c4-9bdc-a20b88ba0274"
        },
        "item": {
          "id": "f33d9048-9cdc-4529-9ff7-3d195bf96424",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f5143f9b-93a5-49f1-92d6-1de6430d7adf",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9641c8-ead0-42ef-a72b-062d7fc38272",
        "cursor": {
          "ref": "5932a315-874b-4492-b1e6-3ae17751d081",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6dcdd06a-bd38-4e65-a77d-9a7984e3d8b0"
        },
        "item": {
          "id": "2d9641c8-ead0-42ef-a72b-062d7fc38272",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "220fa126-93e6-45e2-8962-4deb613adb98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9641c8-ead0-42ef-a72b-062d7fc38272",
        "cursor": {
          "ref": "5932a315-874b-4492-b1e6-3ae17751d081",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6dcdd06a-bd38-4e65-a77d-9a7984e3d8b0"
        },
        "item": {
          "id": "2d9641c8-ead0-42ef-a72b-062d7fc38272",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "220fa126-93e6-45e2-8962-4deb613adb98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9641c8-ead0-42ef-a72b-062d7fc38272",
        "cursor": {
          "ref": "5932a315-874b-4492-b1e6-3ae17751d081",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6dcdd06a-bd38-4e65-a77d-9a7984e3d8b0"
        },
        "item": {
          "id": "2d9641c8-ead0-42ef-a72b-062d7fc38272",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "220fa126-93e6-45e2-8962-4deb613adb98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4257c6-1382-408f-9f90-76df966d78bc",
        "cursor": {
          "ref": "846a25e8-94cc-4cf6-9358-911dbaffba3f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3363ab81-0986-4676-a797-09a7a4b5b80b"
        },
        "item": {
          "id": "0b4257c6-1382-408f-9f90-76df966d78bc",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "efa7c8d7-e2b2-4e27-9909-2f135afabb91",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b651bfe-e5ef-4cae-b319-53789d0cc47b",
        "cursor": {
          "ref": "91919b73-814c-4a0d-8314-895d698a3cac",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b2945788-22e3-4fde-b00c-8a5793e0a322"
        },
        "item": {
          "id": "6b651bfe-e5ef-4cae-b319-53789d0cc47b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "26fd840c-a4a8-4eea-9841-45bb8f3268d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b651bfe-e5ef-4cae-b319-53789d0cc47b",
        "cursor": {
          "ref": "91919b73-814c-4a0d-8314-895d698a3cac",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b2945788-22e3-4fde-b00c-8a5793e0a322"
        },
        "item": {
          "id": "6b651bfe-e5ef-4cae-b319-53789d0cc47b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "26fd840c-a4a8-4eea-9841-45bb8f3268d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86163eeb-0dd9-4fae-aa49-4c33708195e1",
        "cursor": {
          "ref": "7e23f4df-2c45-4008-bacb-8989d555c5f4",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2cfa20f4-3e82-49ca-ba71-95bc708c167e"
        },
        "item": {
          "id": "86163eeb-0dd9-4fae-aa49-4c33708195e1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5c923055-5af5-4b52-8ab4-ec969e21cb93",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06342b38-0ad7-45a5-a00a-29741ee96b74",
        "cursor": {
          "ref": "ad94fb96-0120-4786-b3b5-5a79f6820218",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "427d67be-81c2-4d6f-855d-d2480d12608a"
        },
        "item": {
          "id": "06342b38-0ad7-45a5-a00a-29741ee96b74",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "44178ffa-b80f-4dff-a8c6-2496ee6e2715",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06342b38-0ad7-45a5-a00a-29741ee96b74",
        "cursor": {
          "ref": "ad94fb96-0120-4786-b3b5-5a79f6820218",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "427d67be-81c2-4d6f-855d-d2480d12608a"
        },
        "item": {
          "id": "06342b38-0ad7-45a5-a00a-29741ee96b74",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "44178ffa-b80f-4dff-a8c6-2496ee6e2715",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58613852-7f2b-4f97-be8e-120504028244",
        "cursor": {
          "ref": "6a17d245-e14f-4191-a115-5516c05ef262",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "60f9005b-6db6-490c-b58b-b3f8555e5ca6"
        },
        "item": {
          "id": "58613852-7f2b-4f97-be8e-120504028244",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d77e7604-774a-4160-8386-59fe8df0b391",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}