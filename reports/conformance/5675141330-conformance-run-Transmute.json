{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "15d7568d-274d-4c68-be49-6d0039e45973",
        "name": "Clear Cache",
        "item": [
          {
            "id": "da82441e-7324-4a02-a0f7-23be464d5185",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "131161f4-571f-45b8-862c-fe8ecc16951f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a3a0654b-317d-479c-b4e5-556d63d05baa"
                }
              }
            ]
          },
          {
            "id": "eae8aa2f-59e6-4b6d-b0a4-d80a75738ba9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "080be4af-ae92-4cc9-83e0-59bb61f026f8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e1438249-77f5-4f36-b0e0-0f9d39e4434d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5ee06447-a83b-400c-8046-6de4b10b50c7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ac4d9c8f-ab8f-4961-900f-8b5d71b4d2eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0b7ca49-7066-4710-b19c-123457411566",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0282ca9c-690f-4eda-a1f2-ca3542c82e92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "782e628d-6c67-4d25-ac64-ae9fdd6f28bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3abfad19-0b26-4e46-8530-4364747bb335",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7df5644c-6b99-45ba-a546-778dc8c649c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0101a35-db60-4e33-bc8f-a2e9bcf12850",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0e8d7ab-21e2-4b1d-8b54-403b4aa61416"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "819617b1-5868-4adf-89b1-60c4c1285ccf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0963114b-88ef-418e-8855-47e15d2939be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08e7a992-325b-47d1-81d8-1c7a4f5fdbfb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "287da73c-2d3e-4456-9616-707021ff9144"
            }
          }
        ]
      },
      {
        "id": "f3375e21-4b66-4737-86b3-ac082be4be28",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ed57e9cb-1f1f-462d-8b68-614cb65fe727",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a613df8b-9a5c-4eaa-98ef-f0a3c11a4651",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1cac77e-87b0-44e2-9c06-b862aff686f4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c161f33-861e-401c-bb3c-7f877ea9cdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f442499e-cf3a-4ca8-8757-962b68a3cae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ae03f8-ffd8-488a-99c9-ef251c1d1811",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74001920-ab50-4d98-9076-b3e115e9fe2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f4f1870-7673-4260-8cbb-f07e7bc48572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c8701c-ebaf-4a7a-b646-2258cee72ada",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d790e6fb-9237-43d7-b6cc-d8e636776770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af793316-bd0a-407f-8e69-9ec2c63e196d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f2ff4f6e-d900-497d-9bc0-03f10ef107d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc87b010-9112-4197-b505-444a65392929",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8e3834-dede-4db1-a69a-ad22e0ccc197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f976c8a-c32b-4854-ad5d-d9eda7ade7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4f5918-ace3-4117-ad5a-52392a31f07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0bd419-320b-476f-b536-ffda0a815183"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "227c8913-ad6f-4984-b515-1e7e4329e376",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fc1bb61-865c-48e3-8fb3-acdf9e5fafc9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "719d3b58-371b-489b-b824-f47d601b5aca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "654f5540-8344-4ee7-8728-231425058cda"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bfcb872-2fed-45d6-a0ed-268f60863df9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c1d9f0cc-699d-41d4-a769-9ca6a8319aba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1a4c2dd-7ec9-4859-9206-208f655aacbf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b661962-ade0-4d88-a360-6a2343feafee"
            }
          }
        ]
      },
      {
        "id": "02cb03c7-81d0-4cc9-b5da-8a46834d2a5a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "81b6d3ad-c054-4973-82a2-440d2c829765",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a13cf1d2-2a1e-4c98-9804-66a744ac589e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b6f11de4-c5c9-4a67-9cbf-513d246962b2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acc3d15-0f99-470f-ab46-7777134506e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c9bc5f-6f52-49bc-8de6-381167adcfa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45288a4f-4c40-412a-8a39-894d38f87bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06742013-818a-45bd-8f52-f32aee34323b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d77546-728d-488b-bc27-1e8ed66b3f74",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3eaccf2-e2a9-45b2-8d70-1efcbd4976cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bf25be-9660-49af-9354-ca7aeb9ae179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d89b9d-d658-474b-8b0d-635b4aa31baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "999843d8-75a9-4e00-8ff1-af0b7b7fc76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc2644e-41c3-40d2-852f-cb3204a11837",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccd75c8-54e5-415d-8206-cdea22adf93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe3141a-572f-4fe1-bb45-194e97496994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9417ab4-dec4-4409-9d20-b20eeaa0e7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a42771a8-4141-45a1-a3ff-faf00d300ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042154b7-8a70-4a56-baf3-351e32b20353",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c74ae4-eff6-497b-9c2e-71a6eaca1080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55007a1a-f845-4bad-a1f4-e527a6fd59fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264e0604-9b9b-4af0-9aa5-89e08cd88418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "384b61fc-795c-4c00-933f-3b660addda5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ef3ccb-acf5-4880-a138-fb2e3db137d2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5eae78-92e4-4bea-9f6a-f930ec314fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4ff442-3276-41f9-9c95-f663d2234ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe0bbdd-ee76-444c-b91d-7d541023dc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b02e536a-715c-4ed7-bb2d-cd511deb5a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7663db51-77c1-4dc0-9c87-47acb4d72e5c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb728d7-676d-4499-8813-2e6bac2a6c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2abdc16-1a90-4c33-b6bd-ac88c8d573ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6304ced-d62a-432c-b6b0-348e45569b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36d55857-9967-4ce8-a2fa-f164e7b15b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584cb15c-92f7-4b0a-bde4-b11152f4bb8d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603f9cfb-1344-407c-87bb-9a8eaff258b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfd67d0-ce6c-4d64-809f-63dde8f98ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6a3563-ce66-4f23-b711-fc75a3372773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0424d636-7a0d-45d2-a35e-8f465c16ef61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f31b8d3-6f1c-44d3-8d69-cb3839cadb78",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30f436c-37e2-48cb-b4c3-de756c7ff200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc414aa-1219-42a7-a9d7-9e45a511386e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae714fa5-47a4-49c9-83b1-fc74d5368204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82b14e5d-f56e-4ab7-a371-9aa121af3709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e38feb2-cf83-4598-8c32-9f60bd0aa292",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee18653-c09f-46a7-ac97-13bbeef2fef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b208c9eb-f606-47cd-b051-3523a4b4dee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4476c7f9-1e3d-4c87-ab35-cf8d688a371e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ad791f5-b6d2-473c-beb7-72bfd2b98e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87f9168-f33a-425d-8a35-c314d0852305",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84a1c34-6e42-4589-9e25-43a8e5f0fcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1883380b-9eb9-4025-b632-53fa345dff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19340b0a-e20c-4926-bffa-445fb9dc7f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f770c95-462a-4149-ac4f-04561525a56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7494546-8697-458f-a183-017c37326bf4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232ace60-4852-4fa6-a1ce-6fdbf17bff72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e993c7-6276-46ba-a97b-5a2917d0b0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3eb6794-e23b-4d6f-97cd-716025ea2aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c37c26f0-2bcb-4906-aac2-27c00d4ed306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0320b24-27b2-4a4d-bf43-512b7e67c24b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78236e9-8685-447e-bc45-5f03e0e29a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6048cc4d-77e4-462c-849f-f07a8b781cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cf0359-8017-422f-9800-ff0f97fd57df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f522bcf-7468-4bab-9332-b1ec93576a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267d2b25-dcc2-4f70-80f8-742e008819b9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d9ecf4-1044-434f-8ac1-ced5e0c3f02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b670da-07b1-4881-b318-f0f5c9fb7bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efce424b-12fe-469c-b98c-3e22a044f518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aca49c06-cad8-43f1-b274-eac4b4205f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17a45ae-cb5f-4f05-84df-f92f99418bab",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3910e871-e4c8-4009-aebe-39f0bc73a0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2255383a-94e5-4466-9edc-e679ce531bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e6e588-c82d-44d5-a3f8-5fecb69ee927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4da1858-d416-45da-b7e1-ffbdf376b0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9775b4cb-ea96-41b1-a148-2d8a9a7226dd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9a2160-4242-4ca1-a2a4-23f9bfed7f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15373b3-8e78-46f4-830b-1cea211044e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e27c66-16bd-4bdf-a84e-72c2bc947cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d75468f-597d-46e1-b807-0093daad33b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8668eabd-646a-4787-8d01-8d7bac7e409c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48b7b95-e4cc-4f14-91f6-89b345377884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6d81d9-10b1-4c5b-8ca8-e012f24c1bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c43e04-f6b8-43a5-9323-a949fe055a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "239bb48c-b59d-4c66-9a6c-41796044b844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7520a073-aa76-4ecb-9bce-5f47e86682ca",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a8fe2d-b44b-4138-a374-e2b6479ab148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfd4091-315f-4c5e-856f-0f6ccd7e2f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41faf3bf-d07f-4457-85e0-e7724d4c2cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de5cf935-829b-4d4e-afbb-d72f6f4c52f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8a7dc6-b255-4cdc-a67e-64407118f703",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b10ee7a-581d-4ff8-b45e-0e2a72386376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a65fd4c-94ea-474e-976c-40b8d5c58ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5938431-7514-403a-8363-266440c8da98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a347f791-a6c1-4c13-aef9-c62543629bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19954a5-090a-4fe5-9a27-426ef164b8f6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd400e16-5d4c-4c5e-80b1-8e5104807d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2a2da2-79c4-494a-9f2f-04ca65bed8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c59d726-956e-4b67-a9f3-8c1df1812e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7d20a8-db17-47d8-948e-2dc7ef3c3f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8a63f8-8eed-4228-b87e-dbaa5d878ad7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b8c35a-0e73-40d3-a479-774c09d51aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2d8e03-c623-416e-a977-839068bd4e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bc8b24-66a2-47e8-9f7f-c3abe7a462f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63e9e339-bcc7-44e6-8109-4fa3ae4611b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14391717-ad1f-45b9-be57-7dd51f51adae",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a2f76c-f66d-4d33-add9-0e4566310f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de2ed8f-8dd3-46b3-9393-ea49695c069e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c177ace-3582-423d-867f-f31fe02844c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a64afd5-4834-42aa-871f-2d445a32b4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e91e64-ceb5-41d7-94bd-c313d04452bb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e737682b-be5c-4873-a4d0-a363e036d62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c116d0-f9ef-4c2c-9684-fbaa94c76dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c747b95e-2d54-4491-b90b-9c6e5cad309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a96e4912-8b39-450e-9c83-cff31b3c5a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbd3c3b-58e0-4092-a86d-f358cff67bf3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbea17de-3f63-4f93-ab87-4e18b7edad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405ff5b5-bf02-4ab5-bb83-ea433181221a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd30f9ee-8693-4884-93c7-6d4ad08cfd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92c46547-07a0-45be-b24e-d5dba6a21db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bf2564-f5d2-400a-809c-8c1761f64e0c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee82b302-4f2c-496b-a692-31cffdd3674a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7272adae-9ea7-4a5e-8a9d-07c9f2fa4017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea47b903-e43f-4aaa-b288-09f1ac84a1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f48774b-37c2-49bf-bbbd-0336d32c32ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc996d50-36ae-4210-a7b9-cf4a76598a44",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1c81df-3c33-44a5-90a6-c34f3c15a2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c32b9a-7383-4f89-8c07-620efa217ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d273fc7-46cc-4e61-9144-7138f3bf8370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5545ee8-a8d6-4c8a-855a-9e4d6a0ee7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc202dc7-9e77-4354-9e01-4eeb68902a4e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4489b3-f71f-4806-b516-c57f14d3d56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7963058b-2763-4d54-821a-a3c9ecbe0c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1d48c2-c2ff-4734-9a82-ace80c64c830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3995bb62-9c53-4347-9dd1-35e865081b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31328354-e284-488c-b8b9-210767a2f353",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29be9ae3-76a3-4915-90cc-a4644f17bdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf1bb05-7e1a-42bc-b1cb-eaf596816066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0a4f05-db76-44f2-8554-0129a8c2ac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e14fd2-02bd-4308-ae61-f525e44c0607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e11847-a761-4fe0-9e5e-91b3620a3c88",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adf2817-06fd-4e96-8153-5458a311b7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6ab477-26ce-4640-bba7-72c964bbc7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3244b1ea-db48-4864-a02b-915c35f5706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5796f03-0d00-4650-93e5-e057badfbdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cb80d6-e90b-4a1b-9daf-f1bb19b9480c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b70e37-6bff-4a17-9fea-be1b98c61a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a229b598-a29b-4230-ba91-62d4d8d90e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9f1d7d-a6f8-40d0-bd2b-d47b21849195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6cb436-4db4-468a-90ff-4c2f4e6a0dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3166526-573e-4538-b815-02044603a9aa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ece3bf4-008a-4288-aea4-8187b257039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9efd72d-79ee-427c-b79a-192d967df0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13cc43c-45e0-44ad-9e55-fa4be1785f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "efaa1f73-5f05-4323-9e16-cbf369ce9c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5754588-1995-4d72-aede-a1a6b5ab4ee2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e6df97-0551-4e25-8672-6206ec535f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440087c3-91c4-440c-af32-e5fffc0a92a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c9711f-aee5-4e8a-ada5-d025a18ff21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9adf09bb-14f3-4890-bdba-c08fb6431b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce7f881-2ac3-40ba-a226-efc88951e201",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f261b42-08cd-4e38-afee-a57039b9c770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d107c5-b630-4b77-bd76-4bab32fb960d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9026395a-2f1d-4c46-875d-565fcca79c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af779f59-6507-4153-b7c3-daff028c39bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1354b7f-7674-4105-8fdb-ee7ca913cf75",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274959a9-ce87-4a64-9c09-c72cec9a28dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c06a13-375e-499a-a79d-d0a796671e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11ed5dc-32ac-4f34-a2a1-e9401d9a9a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27f69695-1a1a-4fbd-bbff-ca9145598a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979cd886-d535-4e65-a42a-94895fe96a85",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25daacff-2edf-4509-925d-1b40a7a8a82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cfa123-4a99-4583-be23-9b5bff44fa77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35eba1a-471e-43bd-b641-dd2ebaea1d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc60a516-c066-464e-a9ba-da10201789b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1467d009-42d9-4c9f-9cf2-b4e6f90746c0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11673af3-ca18-4463-99d6-9ce08a40f811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6fef3f-1383-4aca-a9e7-c341b2124889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00009096-1d02-4d84-9c42-a876ed473ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a35ef87f-754d-4df1-b5e6-d9de33550101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9caa04-1b89-478d-8270-2514b5c04176",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437dcff9-c197-4bc4-8353-daa28a114ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9deaf662-74b4-439d-b34e-17ffb6dc79d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09271da1-7b1e-42a7-b46a-e2b74e129ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "baa31be3-2551-4365-a802-e632e0a8624c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e83b45-0b28-42e3-a138-dbfd67d0e1aa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56579613-97aa-429c-add7-34e334314a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ab2d1a-45e0-45ba-b1a6-e49002f70c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4275a7-caea-4d0c-9b0b-8af6597ce785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "836e961b-4c55-46d0-b69c-6df323466f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2f74b9-adcd-480f-ba83-f375589d0ed4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf68c88-bd61-416b-af81-a37eb35179c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3e12c8-a059-41b6-8001-4ac1f8980b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9999a94e-4207-47ed-9877-1b29f184ef84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d8d1dc-a51e-4897-8b8e-e62220d66325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1103693a-d813-4279-a288-60f38bed57e4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383415c5-d0a0-4a6f-9d41-56202cc1ef4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1a7019-06ff-4f8b-8314-b91f99b31ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8561eea4-c177-4fd4-bb55-2a752f51a149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "be24d484-1076-4afe-871e-7a252df091bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7db4a57-3c96-48f1-9e6c-441f39825014",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7225ee3f-e9f5-49ad-ad61-aff22b25c5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4ffcda-9604-4dea-b7eb-94e6d5382e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1965f86-31fe-4b2d-9c03-654804e89c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e824137-e04d-486b-8f6a-3f450660a7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6865ae25-d0cf-4fd6-ab49-e08a02305226",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2046c2-a70b-4ab4-9af2-208b00ef63cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111c19ba-d653-4648-9671-55ef3f622380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1f8a22-eb79-455c-b516-ac9a078f1179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d38718c1-3daa-4afa-9e83-5860e299429e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac79b2a-06b2-494a-bd59-fa54e0c5d699",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643855f5-54c2-483f-a4ca-997bb84f6bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765c350d-2743-4ccf-bd5e-14b026bc8168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f091067f-0df7-45c3-b7dd-111a27f33dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3927946a-c466-4c5b-b659-d21b91580e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae42868-b699-402e-ba62-632f5e152b06",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ae9351-a1e9-45c0-9be9-a3599d6b54d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9334e6c-522d-4cff-9517-403a219476cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18301cb-dd99-4577-ba2c-b61ab07da724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "410157b5-4f36-4f90-a04a-dcdade9e73f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d212a856-f706-4a84-9246-c325d122063c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2d6a1b-8da5-483f-b963-097679dd3100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0182663-2436-4406-b8db-9f80c909787e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7437f07-e3e6-4f30-99eb-4342f2182c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5689742-b85a-4bc0-86b1-e8594d561f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b38dc2-8ee4-4b8f-ad78-64adc48d5ce9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99257e4c-0d96-4dd2-8bf4-2a396c65cf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97d56af-b7e7-4d13-9e97-9705ab93c2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af261bc4-4058-49ea-bd1d-c11b7d664d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "222a694f-202d-4255-a310-c5941ad07100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574fb5cd-7b23-4dde-bdab-bfb60539e063",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99b9bc8-31d8-41bf-acd1-08a790e1d200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bc9794-1060-4fbd-b928-3ba6f2570fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c0c07b-21d0-4ec1-808d-3a94738fc033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d88088-fb64-4d1e-9b55-64f916e97e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70c8279-85f2-4b6d-a320-92c3fa938715",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4ade46-1648-4687-9756-a0a6afe39f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4da637-277a-4fd0-a037-0126452132fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5676fe9b-811f-4578-a972-b471e8bffb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5474acbb-09c1-4cb9-b7c5-811989c98789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7deae1-cf4e-4791-b808-bd8600d2c950",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205cfe6b-3fc1-4ac5-967f-9af723456141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a2c687-139c-4003-8903-294e80d09141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf81b41-20fb-401e-bf0c-104533aefe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e210a1a8-9068-4402-99bb-0d650ebe0a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626167e8-ec09-412a-9b97-4a0d1766002e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7498beb7-7730-48e3-bda0-2902eeaa31d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cec97bb-35d7-4f71-bf6c-35bd8b3227d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98004992-a1f1-4fb5-9c89-a3f8d632203c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac31ec34-c067-4bc9-8d8f-76393b71267e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84fc4fc-17ac-4082-87a0-2509783d13f9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d248ff26-54f3-43e5-bfb1-8964b798b098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4a7c4a-6bbf-4a96-9f35-bd4be2a39055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92aa891b-5cba-4778-a74f-99ba798f0ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1480addd-bad7-4435-819a-15d5dc384c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b99a7e-0d3b-4a9c-8cb2-c40e2a549b52",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1387ba-4986-43a1-8790-0f0d4c4d66d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea19ded8-6653-4097-9ea8-df026dee568b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a21457f-b0d0-47f6-be7c-7a427a4e01ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8624eeff-3542-4a3b-a5b9-83e3b81dd1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739dcfe2-32b2-489b-afc1-b2f4d5318dc0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaa2bb1-0ec2-4ee8-938e-2c43cc752c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9ead00-fe13-4969-aed7-35c8c13adc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc83852-7d2a-4963-bc15-50e08fec21f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8140ea81-3350-41ce-a3c0-bc00bddce5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff93059-8a53-4669-a5d4-f7fc528912f9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369efffc-2cff-42b1-baa6-44dd8cf1598a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff1baaa-b529-46cc-b4d5-edb509ee04a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f83291-fad0-4b8a-bcfa-a8a5333a11d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e598e56-cfb9-47fb-836c-2c5d9c612fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083cf4b2-9c9f-406d-8167-d206eb1412fd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b777b1f-abb1-4f48-b75f-04478ef7602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fb3663-1839-478d-82b7-2a2609c904d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f089eb7-6d07-4777-bfdd-6264685a98e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47515899-6e1a-441e-8078-c0418968b5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80e5d5e-5b54-4f0e-a849-83c2385f3e91",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad380058-e7ba-476f-bddb-894259ea6468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ece3aa3-08b3-49b3-8e82-f466c4a4c434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a989e11-6a58-4c05-a7b2-58fd2e184375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdcca0e-953f-4039-8a05-397ca8b105ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d07fcdb-78b9-4135-aacb-2f24d3037bed",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4741bc-2b0f-498a-a583-08b5102b0c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83dcc53-a104-4ab8-adbe-ce74f3f2eb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd61bcb-4811-4986-9aab-5ec548aee4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "519c3a8b-a412-4be3-a65b-199d6b1c3ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fc9c45-4e4a-4b94-b870-7d07452595e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c86af7-6cbb-48ae-84d4-fe5502971289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5dae598-8ea8-4c70-a082-4d3a3cb917c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c19be0-0d28-4794-941a-984c60f386f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4d54da-b0f7-4ced-8381-4721b94d744a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e12408-b151-460b-949b-6496864f3843",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bd4413-4822-4d97-8dfa-3b7ced4c5180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbaa339-fabe-49af-91c5-0c0f195e6488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e07e5ac-d5a5-465c-a31b-f9e7088d21fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0635ac27-8a45-4170-93c0-ac2b71fa91f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfa5329-1ccb-4fe7-af0a-77e6168b1cc2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832c2b24-afdc-454d-829b-b20da90ecea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2901ff47-fb03-4b63-bbf6-a59dbce17ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76309b4c-1fab-41fc-a682-e619fe5432e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "16cb2fd8-cea9-4b81-b781-fef03e34e510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a22569-b047-4bd4-abb5-b6a453fbc451",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c70a44d-6b77-46ae-9130-36fccd62240d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0b989d-aa07-4ec9-9318-63ad8ab39666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484dde1f-c602-4b6f-a784-5a9f00068cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d1922e-f1e1-4f4d-bac3-f88ea5271862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1869b2b7-a439-4326-9dc8-6d55eee8b65b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe3b32c-3380-48a2-a9af-e7caf9fd5b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059e856e-cc2e-4a56-a685-ee9c0d2d87d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c01ba60-e1e4-478d-b241-f13d8afeeee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b53d4270-9ab3-49ed-a9b5-8341ae7b172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aa6f65-065c-463d-8444-064b8ce389c2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01e768f-b5ab-4707-859f-34ac9454256a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2793aae4-5dc2-40ac-bd0c-a26e81ea3100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09fee7b-1541-4bbf-ac04-5dc50c59d579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c47c61-fc67-4b12-8000-13518e11c46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5236e6-9441-48de-b883-b37038ed2b57",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc9071b-45c0-4e85-9759-83cc208069d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494b66ef-0a5b-4a0a-aed0-bd85ae74e076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77c50d6-ec50-4cdf-ab00-019d0f56f1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "417443dd-ded3-4db6-aa7c-169cac0e7930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b942cc75-acbe-48fc-8614-661e9489c2f5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09f2085-1343-44f7-a651-8d99895869fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5b3fd3-1e2d-4e1e-8adb-1886c5426f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d0654f-5e04-4dfb-8106-7adbf21c9e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe2b4d4-3ee4-4076-b0c8-779cc98704b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13ef59f-485b-4363-a8c6-c22808d34266",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89079ed4-352d-49cd-b689-6aa8b23c1d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ef6a3c-76fa-4386-9df7-e6bd5c18c27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d066757f-ef43-4381-8d46-381279434400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e75e7cb-9513-4629-9333-90da5cf5c339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19fd8b9-8f94-43c9-90bc-0a586f0b55a3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcd8bd8-9e36-4f7c-8f09-d6e55a26e50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18597285-e13d-4587-8d4b-ad0e17523b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87637a52-085a-4eef-97f3-ca71ec92baad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0da3ab18-028f-4af7-9385-fee92e899719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f64268-186b-4eb1-9ec6-ba024dc009b8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff1cbab-3423-42ff-b526-734aa4b7e287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7749096a-3441-4d23-9878-002b1349744f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42efdbc4-bde7-4304-a67f-0ed8a08344a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6397e649-cba8-4a59-8f6c-df95c6526677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776037b1-134f-4f2a-a645-240f5ce04091",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4378313-103a-4d80-add3-30d70bd289bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e201c1-9e0b-4b89-81ca-919f6700e741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18592353-92ca-483a-a4e7-d2f209f543a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d36da72-0407-4a54-8534-afe7abf93289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9042c4-dced-4313-ba57-1880f36539a5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca22ad2-85ec-485f-8b4a-953fd322540c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ddc2cf-d397-4f91-b266-acb85e473a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b951bcc1-b3fd-4818-ae72-dd8cc255b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99fddfbd-16be-4988-9ad6-a0ac8ac7d0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb33d78-fb4b-416a-af0d-ec165c372e66",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fa8c32-6d97-4f10-95d6-3e3a925e8c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f64222a-f3b0-45ac-b3bf-bed85c21812a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d911764a-229d-46b3-a687-7073a13ffaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5122ce3-76c3-4334-8cab-56de94797af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71723711-5b35-4e81-b137-f9bdc99e0b68",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35617e68-acde-4fc9-ab99-9c5418cff963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcff123-149f-413f-ab76-bf3b284817e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba57402a-830b-4265-975b-6530ce8bac66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8dcf81-6383-4d5b-954a-ff7f1638d115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f681edfb-f3ac-4310-9d4a-3d4879eee747",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222bec87-a9e5-4e53-aaca-6a0b5198c47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f400ec51-bc27-4101-bf8d-8b329ba1dafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9996e2-c53d-4420-a931-2795bad7ff46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d4532d-cf0b-4ca6-a6e5-f3ac1cd2c962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f7f006-29a4-4f45-b34b-9ec0220516c7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d53432-a153-4fcd-88b6-d13942cdb404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faf7dc5-b4d7-4088-bd9d-9cac6a3afccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b87c7c-bc01-4dec-b41b-cdd098acb43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95acd5b6-8629-43a6-aacb-f2a43aa36c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02a0915-48c7-48ac-9733-44fd30a06ac5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6c3738-076c-4b37-8c95-ff9dbd5d3dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58c540c-568b-492c-a58c-b2e2cdf167ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0add5859-9268-4d7a-bc64-072860573197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "891544cd-8d5d-4cff-88e1-b34f6ce122b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f5cfaa-cb16-4533-993b-65d15fab8f9d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5212e8-61d4-4e32-8646-f0ac2985f31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28f7dfc-2faa-47ca-96cf-92b3ff209fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c948c973-f29f-485a-b19a-4486a3e3b4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7ca4ca-41ec-4110-957b-2009ece9e601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1f1a98-ec13-4500-94bf-701cba42e20b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5676798e-c6d0-498a-8f96-3cbb0f23fee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6505393-30b7-46c5-bccf-b7b66864f35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7986fe6b-6f14-430c-aedc-16851059d189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "641b1166-3945-478c-abae-a7f2a89e48d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dacbc7-af28-44d8-820e-ec47c4f1ecd6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a08dca-6c86-48c5-b682-79808525184a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c7a67d-5c36-4667-b2a0-593538d00faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7829e3-ad88-4c3f-b5fc-74d85b09e822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ade4f9c-126c-4993-a3d0-38e222e0c063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60a743c-aa13-4dae-b076-ad6455e2d2f3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5a5d01-a10b-4703-b322-9b948e846d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11405a0a-ab2b-46c6-8677-3f487dd9129d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cb7ac4-f628-4113-995d-bab86f591e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c946d3f2-cb8e-4717-a06c-2bcb34bedf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1246b7-c574-4e3c-be80-34eb904a4563",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234ca337-2544-42d5-a438-981f22c209b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84928537-7eba-4ee4-b501-8e3f647926db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbff2910-5c14-4fa6-8533-f93eb85010e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a15a3969-3d34-4487-a003-bf068a2dacfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cfb46c-2f2d-45b7-93f8-8be72ea8e5de",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562ab3a1-3083-4bf1-9014-3e0c7bc012e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73ffe1d-9a29-4a0a-a3db-371a3b17bbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc963911-a740-44ff-becf-7e475e4a50fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbb8bc3-d1b7-42bd-a4d4-1b2d749cb293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7c6ae5-0e39-4df5-9d02-d30a4a39e63d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b6869f-da64-41b7-89b6-5c5b3d37885f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41f84f3-14b0-4a2a-9e92-5c1a8c6caf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dc644c-a1ca-4e4f-8793-ed3c4114c3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "02c855ca-7ba6-4306-b873-6df2d9c0fa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfb0966-09c8-48ea-af39-47b5149f6846",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65486ac-c5cd-4bc6-b8df-7b2cc885f339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5eb78b7-4730-4645-abce-757a50f68905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7b67db-f8cb-4a3d-aa5a-acf6d01ed8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f97e39d-64cd-4bb7-9dc3-f2fe506be131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2149e27c-b2ee-466c-9599-0312392a92ea",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e1bb85-690d-4ebb-bb92-102caeeda2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588f6803-67f4-40b2-8118-a052c8cebd01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f10a2b7-864a-4cfe-a86d-38f5334506f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8274532f-5453-4ca0-a1c0-fddecaf924ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95c3ece-fac7-4279-8586-19dfbf07df3b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090f1820-28a0-442c-a89c-6e140dafc253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d516f4-7e59-428f-92d7-917f9aa0912b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aef7e26-25e4-4cf5-8b98-9a28137ac699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "146fe6c6-295e-452f-9e92-a20f2fed52a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6b5410-db98-4efe-93c1-1d57a13acabd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f8b0fb-3291-4dc1-aca7-93868e938136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd75160d-c08f-48c9-af32-55543e0ade78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad08272b-d4b5-4a5f-a4a5-e7b8d77778d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47734882-27d3-4732-b1a5-93588123494a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f7e440-8c8f-4d3f-8b4b-c4457a3e0118",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5438ffb-ba87-41dd-9794-59b69ec57462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956e1f11-b689-49cd-a0a4-0defc9a47fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccbf477-2914-4dea-839e-169066a6e42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48ddc659-b35f-4b88-b4e8-a6f37ca954bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91ccf32-df6a-4a73-8d90-dbe95b50fcb9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8ba933-4642-4ab9-9062-ba5944dd73e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ef5162-bd66-40a3-a0e8-51fc7ff39620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f6de94-5fb2-4f95-8707-77f73b986360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7ae6a3-f966-4d03-a02a-41fddfd0db3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98c743a-735e-4369-b93b-9e7efbd1bf8e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5b052e-8c18-4ccc-a8c9-73e1a34c1779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d4da18-bc7c-4b47-8c71-04f8f672b3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338bcfe9-f181-470f-86a0-a087cd87a628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdcfe8d-d561-47d7-80b7-ac7165a6c7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d451ad-0de7-47fe-a63a-f42ec56795b2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba6e3de-f050-436f-a0e3-6623bd41836a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e812217a-0196-4795-a00b-e847576a8fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4e08ae-23e8-470b-8919-adbb8df97db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9bff43-ffc4-48f8-9829-5bfc3fd2516d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04add650-b92b-47c2-8b5a-08217e65a68d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b16083-1cbe-4d71-ad0b-bef4de80c5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fcce7e-0d61-4c1d-a98e-736982ac7715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac15fef-7e35-4067-9598-1f2e56a1edda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "60996c2c-94b3-4217-9752-788390303e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e4eff2-ba2e-4f59-b0a8-4f1f8316b562",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a0d830-6c1e-4557-96d0-e5abe044072d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a10e2d-ec37-4953-863c-bae6ffec5367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c0e96e-5e92-4f4a-af19-83551983841d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d927a0-dfa1-4065-85f6-5bdb61c0bc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c822d6-84ae-4a58-94d2-3e9687ea661c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f590c7-1dc4-47eb-a040-f579b141ec7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a51f288-34e2-4622-bbaa-eb4035c68abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38900c7f-f970-4f18-9820-2f76a508c497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6ac406-ec8a-4cd4-aa9f-948c4c8f86bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92bbbd6e-4ed1-4ebd-b381-01d685f6813f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a808e051-8e25-408b-90ac-9e40a61b56cf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d304ffa5-179b-4365-ac37-c15f2303defe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "614af8f3-195b-4a30-87e3-89a8987d2128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfc1505-772a-4507-a3ff-bf6b6f1ba40a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "901aaa41-ed0f-4a43-b1c6-fa41a14a79a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "510cc010-6bce-4086-b3e4-1ba48b825795",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7ecfabb-0224-434d-bd98-a93cdae522e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9f2fecc-f9d3-4c02-9464-7c76848987df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f88f9e2-30a5-4aa2-bcf1-96bc9ce919e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fffe732-7f72-4cef-9717-1e3cd1db2809",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ffad8d55-57e1-4bd9-b57e-0993efa47d2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c9515af-88f8-4b16-a2c1-c245c6aab973",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "438fff22-7c6f-4356-88c1-9a6b9a5d327e"
                }
              }
            ]
          },
          {
            "id": "d3ce05ff-b00b-4c34-9616-da86a06b99cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f374b1e7-a969-453c-a932-428b67b21dee",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fa35579-92c6-494c-b061-31e30a30fb80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec7504cd-0d4f-449e-b4b1-5d317319b7d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e8243d2-a784-495e-90a9-56285b1f57bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2cf2b227-2ed3-4da0-ad96-47dd79c1815b"
                    }
                  }
                ]
              },
              {
                "id": "ead26a8c-e07a-4dff-8f8a-a30558d8785f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa85ad38-a24d-49ce-8831-c6415a099df7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71c22c90-3cb8-4a71-9bd2-1d676fd832b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd3a0775-9158-4ae8-83fc-8dec927c2d9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e3fd00c8-b1ba-472e-9405-f334a58f8535"
                    }
                  }
                ]
              },
              {
                "id": "c94fb459-8982-4c16-97be-b405e94f0ca7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8eb175c-d432-42bf-b532-dd63d3b979e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d11636ae-1316-456f-a64d-96f4284c5f56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1b86faa-e6ac-452c-a415-33f9f4f93cc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6eba5a21-b424-4d32-aa8d-f5f9b0bd04de"
                    }
                  }
                ]
              },
              {
                "id": "a43aa526-0516-416d-a7bc-20a5b12d3c84",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e611d99-9925-4e47-82fb-91cda637dd70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55d96654-8947-4c43-9e89-4797515bc385"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb87506d-bab7-43b8-b905-aa8325ad4568",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "67f84f1f-8a54-4da2-b96e-568e597d9a45"
                    }
                  }
                ]
              },
              {
                "id": "e9ca5691-88aa-41d1-b581-6495c75b4122",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aa10e28-069e-4327-81d9-1c9d09d64a9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1a73b25-e40d-4da0-9c13-4155ba59772b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81ccea5d-b2e3-422d-9dd0-aee06fddb386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e20f3aae-d8ff-4610-bae5-784e4e28677a"
                    }
                  }
                ]
              },
              {
                "id": "2843b5ac-8331-4275-bcba-607b1d5b6459",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c206fb3e-9444-4170-ab04-d7ae4c533270",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5eca23c1-e9e5-45db-823e-26ee1a0555ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30a6fb83-06da-4210-b6bc-4b4a7223c1b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8bb4c03a-8676-4cf9-99fd-8c75aa3be450"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95c8f7a3-ad4c-4db3-9ff9-73b2ee0cacdc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29037eaa-2701-45e3-acab-69cdfaf07015"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ddecc374-7555-4d66-bd9e-eecc7eff162f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff9b2c6e-1742-4612-8fec-529de0a3bd1c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4eeac4dc-7815-4d57-a1d7-0e333cf6a455",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "085c1e16-74c5-4ef4-9eca-610806d618e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4353a2e-64ce-4173-9952-15522da4d055",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3839c940-2772-4293-ba63-0be39206f925"
            }
          }
        ]
      },
      {
        "id": "18134ecf-ec3c-4e19-8141-ff7d4d3eea9d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f74f7f58-8935-4cc0-8877-fc312736710f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba1cc079-f5d2-4721-b8c1-f2f98be765cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d8c6d84-c11b-4448-b30d-428674787498",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d99092-e1d4-4db7-8aaf-efd93763d636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c53c870-5387-4122-8fa6-0422a51688b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e40354d-377f-4535-9e2e-c5817b06a18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5f738f-1cf0-44d6-9e3b-d50c923eb01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e35942a-dcb2-47af-a84b-98a9a07259c6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91227dde-9541-4986-91b7-5b97b874a6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1078fc7-a652-4d31-bd27-082a9b1f8030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f719526-adba-4de0-be13-dda34636d14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "956c5547-52f8-46e1-8e9d-5f700ac2f207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550770a7-96bb-4b24-a159-bdc69426f9cd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8aae91-a708-4d95-98c1-9facefa4a660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542f2ed8-82ce-4ddd-9324-11fdbad64f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7e856a-134b-44a5-a40c-02a18cddf47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc193772-6bea-4584-ad18-a73b6572c136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2d70f6-596a-4960-8893-b8903c040e25",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfe632f-e7b7-47d9-aeee-3d734027b79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72adf81-e545-432d-9aca-830f008f7fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26ec1f1-7b9e-431d-b04f-53ebbabe17ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6469f928-d05f-44f3-bf49-9c9196066b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29f5cf8-2ce7-4692-8378-447b3681b307",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd087757-585a-42c5-9d23-aeb6eb579981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b787c3f6-7441-4bcc-a246-439f78161a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6f3d83-1169-4044-b1b1-9aaf63f733e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ee82ce-4586-41bb-bbbe-5b8779d41716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f19b56c-5ad4-4fb6-8906-b56335ce5513",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6d3c37-7c72-408e-a6b9-c3d876ff2238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bce275-c2b0-4c81-9147-f16e3bb486f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daed081-33cf-43bd-bb7d-d69f389e1d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b4b622-777e-44cb-b67c-2de0bc687657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362c87aa-4275-4cc1-b4c5-d83eea2a0eb2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e5c77f-04c1-4581-a083-fc0041533d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d82c8a-1a39-44af-9370-a229c67beaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58961cf9-06e9-46ef-9182-286fd8c5188b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "24968e7f-8036-4893-bee6-29275d7b7e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e354f59e-4e14-43dd-875c-838f706a9bd2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4887f7-350c-4bcb-9be8-b6eb32197c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814c2f37-f444-40da-ba80-257f7236cb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4583bea-1a2a-4488-81c2-b55658edca68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ffdc93-6b49-4c24-9344-b90372ef16fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b046f00-b8b9-4c45-8794-ca036d2cdea9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fa42dc-5fcd-48e4-a2db-ade62fc593b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20cd769-f5c9-4c97-9e08-fec7fdd53891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776463b0-d7e6-423d-9162-cf9dde699c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe7daea-1a67-475f-9aab-326074976d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9ff3e5-9517-41fe-a9b9-cf2a6ec0bf37",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595d8d28-df43-4a22-a888-4727715093fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5fc5e3-35ec-402e-ae0c-b251bd176cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7933a811-3538-4bdd-9559-ad9ddcf120ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f44f7ba-0c99-4ba9-b1e9-d2a02b0e3b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75565a5a-5d1e-4248-972e-dbf3ed49780b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9c53c2-e490-4ecf-8049-9df4bd9016d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b8b6c1-1016-4dbc-80cc-aab9de251c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ead1e1f-5db9-4f47-997f-0fb9eda8ffd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1be0ac-8597-456d-8da0-a170e6ee91e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c2e933-7f75-4d95-8bde-61a16327491c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c5d618-d470-412f-9adf-309a9383bafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df89e63e-f3ff-4539-92ce-8ef4ff6105b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c4eaaf-9ad2-4387-bbd1-1e6cd14fb0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9532b3-bdad-49c0-8171-fee700fedc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18469f96-a8aa-44c7-9750-2ba7c03a5121",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c9d9ab-8243-4621-ba8a-0f4dc00f22cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f72112f-d5fe-4bd2-b157-5cc512d15cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead7481b-01b7-4ded-a7e4-02984d09a202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e45124ac-c3c8-4903-919f-96c4e1f223ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ab70be-c380-4456-8451-3c41df579b9e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c52d6e-bfb8-49cd-8037-2b77e9aac162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c47153f-8fe8-430b-a032-593c22ff3af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132251d0-322d-459f-8f9c-978dc7c0dfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "783a628a-fc84-4b9b-946b-953152612e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edd612a-bc5f-491b-97c7-f2b8dfea7358",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88a0f5b-4470-45f0-b41c-d3ee9c90de30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67724e97-1c8e-414e-b9ea-907d4c3c55ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b422ec73-d112-4ed7-a333-8e5a6d20585d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce0b2f4-c070-41d5-a671-ca2e5e304579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb4f5a6-e8eb-472f-928a-69f74b09134a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719d6d85-e481-4ef2-a895-9d8fdc167add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442ff5b0-13bd-42fa-b24a-164266054556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d834072-03a1-4710-b400-bdeaedf67d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d06d08-1c4c-431f-8d3b-249306059710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefd54c3-ae7f-4e72-8fa7-1cd547041636",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c2a1c4-395f-44b5-8635-10e6deaf2bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2487bab3-38a4-4c33-b572-c8cd5fc06ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6947b6a0-396c-4552-a77a-2cb2df3c2a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "be7ab9df-5b2c-401f-894d-07940051e2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e8b509-55e7-49b9-b705-9738be094ab3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53aad0c5-cd27-4abe-88b5-914ea44d7e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab82e0c-3c6b-465a-a2af-6ec06a8afa43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08268049-530a-43a4-a9f4-104cbacb5d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a42ee1d5-1812-4f05-8146-a0ec413836c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e296a6e-a3ed-40e0-8507-49a01f45af5e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c632eab6-f1b9-43cf-a792-a42f8a991e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8693a9b1-7f2e-423c-9d68-44d00d480e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94263077-9835-4584-9991-49894e77db09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eecfef2-b553-42b0-bb55-c63ca6d07a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2456666-a58f-4521-bd71-72aacf3c49ee",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4849a9f6-929e-4f6e-9328-75fcb9aa220b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482f0433-ccf3-4c41-8a13-fbf58b8648cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8178edb4-1a3f-48aa-b88d-efde9110f85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "174c30bb-391a-453f-9580-2535da778506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d5b778-e43f-4e0c-aa2a-1aa25078f523",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb9c178-9d12-4904-994f-a17066f1e123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874bd189-b716-4883-a219-df9d84d017ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15c469b-58aa-4342-bdef-cdd1dd1b0975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55540696-5303-4270-9643-318412f8b364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bde8c91-a098-4653-b094-f456595f5204",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2363984-34ad-4031-8b18-e61f565a32f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e41d94-e6ac-4127-8f7c-fbfcda96d8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fe50df-bf63-4b17-ba19-35902578cc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e229e49b-28c4-43e5-b8e7-5019f6d3287d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dde5848-5f5d-4c29-b967-40d8aa4f54d5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341a4c0f-addc-4a4e-8698-9b93681b20ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961ea65a-ddd9-46f6-9acc-d7971dfc252e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e6498d-ae89-428b-9d08-b8c0807f27f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c4a298-7cbc-4fd9-940e-f2abe6a2d972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99941c7c-05c5-40ba-9a65-f3e01b41fadb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b90bdd-5dff-4e94-8e70-2431ea82cf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff9b610-fdd8-41bc-ab44-4875b4710bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891db618-6d6a-4abb-b762-04309fdb3fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60f6a44-9c61-47bc-ab1e-dc954eace81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17393561-381a-4694-a654-0d387719509f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2030176-fd6f-413b-95b3-ec2f86bb4f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207f568b-dc4a-4188-9d11-b4a1c836601e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96027380-9f16-42b0-a71d-046fddf489e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee78946-52c2-49dc-b3f2-1b3b7a23a845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba38291-8852-4f15-8c3d-2e16ea11e2f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e719e7-337f-4717-b5d4-409d8b696d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d72598-8f05-4cf9-948e-3ed58618c2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29ece0b-12d2-4cbe-90c4-b37f675c0217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8b3a26-6147-4a48-a368-2fff3c33c9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39a63a9-8c9a-4114-9af3-b5cf47a41bd9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca6edad-01d9-438a-ab43-02e849fe97a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794a8613-6639-45b6-a76a-dd9373825338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85af99d-b8df-475a-9051-09bbec73e5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45def750-8670-427d-a496-12374eb2568b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7af0d0-9870-4193-9f8f-8a1983e74f97",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0f0bc6-012d-473e-9c2c-a3c45f1995e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e16873-f6ab-4fe2-8f65-7cfae0998260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6eee3a-1c52-47dc-840a-1bb5ee4fde99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72076e8f-e632-4aef-beea-2980bea475a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c818c39-2639-46e2-9f01-b4d187fdfb6d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56649cc4-9d89-41a7-8924-41ea868b2aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1dd6f3-ff1e-4c6b-862d-c5bc15f25b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcc3bba-77d6-4571-abbd-d0df75ed4192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6631672b-b02c-4601-aeb2-2f15e3aaf4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf3caf2-5589-41ac-b12f-f10502b5e48f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a1fed7-03ce-482e-b5ea-67f878eb3155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0a3317-8c79-4494-a14a-3a8d85cfe70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b31b3a-90a0-4d18-b042-8fac80b5b53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d54d964b-2bfe-498b-9631-aa4e55b6d302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21127fbe-6b72-469d-a3bb-8b161a382503",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f8bc22-aef3-42d1-a687-d6a260a74048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab198afb-cd9c-4ad4-b9a4-11e69cde8aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763a11ca-0c18-4991-a745-d1c4d8ad6c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a21f03-07cb-488a-b9f0-ddf194b3f18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11003826-ba8f-47d8-a0c1-1e2bf9f4d709",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c253b7-6c29-46bb-b88d-76bb175dd846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f85ca2b-16b2-4ab3-bea8-a81800a5ce74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4c32ab-7759-4f35-aa04-0b71432391ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8170bc0-1899-4f7b-83e6-4ce648611a46"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25ee44fc-af71-437f-bddf-c9b90a94c10f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0dd51f5c-8ac7-4be0-9b0f-77c04b66247f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e53c1bb-9425-412b-b2d9-2f0282b8d7d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "adc0b8d2-9005-4df0-9e73-e6259492fb2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0fbd07-e2dd-4bea-96b4-3e23e621a78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03964e31-93e7-4d9b-82c5-5e65b24b7ce7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb3fc318-4427-4e62-adca-bb785bde30ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3785896-75fa-4b74-b1ac-f0194257dc79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5c379f0-27be-4c9d-90d1-1c83320c433e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "337396bd-0702-4822-81a4-c64c4964549f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2308513b-7478-4c3a-8627-9c7dae742cc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3bcb24e0-4bf4-49ab-86b5-a053bc25266c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99964925-f97c-4fc1-bbab-3f181f7decdc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6468577c-2891-4a12-822a-23b325908448"
            }
          }
        ]
      },
      {
        "id": "5577b838-1eb7-49bf-a541-5cfdf6772203",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1f119e4c-f6bb-46e0-a23a-d65bc75c4796",
            "name": "Negative Testing",
            "item": [
              {
                "id": "617cea33-cbd8-4375-8c33-5dec9a15a011",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "94b61288-e587-46dc-bbbe-9576e9d383f2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ec774e-6a84-43c9-b320-a579b414c2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31195683-8390-4edf-a552-d9145b463285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f524cce-4b1d-4f58-af84-43252582aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "17d1dc59-6ac3-4c25-a715-825b535866de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7c1996-19e2-4def-bf17-a3262aae6d50",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184594a7-e72f-477c-88e6-f2620eacefbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8459a2-8ee1-4196-b49b-ebaeaee15ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675c7258-f55f-43e6-97bd-3716455bf29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bc638a-116f-4518-bdeb-77240decab0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8ea310-12e2-4bdc-8b24-17912830d9b6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84bc4d5-2d56-4a2d-b9e5-047079943222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a38138-a9e7-4e7a-b143-e79136e8f0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ea916d-a2af-421d-9dc0-037c23b4cf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc442c5-6324-4fd7-bfb3-aaeea05bd08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dce1aa1-85ab-410e-995b-51f173b3996f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd2cdbf-4884-4c2b-869c-7b1ac31f422b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7848de6-d742-43bc-b32d-1e227e66191b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e508ee-5469-4699-bc56-162d228aa57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a6073a-b398-4c99-9277-4dad69ec2b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e1394b-e0b0-4b87-aa02-c3b99ad26bb9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc59bc53-4458-4ebf-b668-d888c6964ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91351f4f-7753-4b12-8a1b-99b2d7fd8915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708c404a-044c-42ca-8ca8-b1ddf1693a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e80bf90b-ae25-4049-a74d-d070a8537ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d817cfa6-1a52-4679-a1f8-e65cc2a931a9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fec39e-e89b-465a-b7ae-efbf2b52178f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e63183-376d-4b8c-9ca8-1194b0cc03e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec57aed-dce8-430f-99ab-7afa5c8ab99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66debd92-af78-4bd5-a1a0-135c52a0dbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956be36c-2c99-486a-b8ac-e8271013cfa5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeee65b-f381-4625-b79f-93b5524fe1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e51eae-9c73-495e-b029-cea6f791fa51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1a14b3-e987-4cf4-b5dc-f51c5480d955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "864ff39b-e49c-4caf-93e2-ef5c00895cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb35f39-290e-4b16-9526-72f639163bf2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bed15c-c368-42f4-a86e-88fb726ed010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9b9f14-1a63-4301-bd4d-bdf96af14ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8928cde-9685-415a-874c-b7e803b1f0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d93121c7-4191-4431-b874-4b0294f157f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4f5415-0012-4331-be53-682bdc745422",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b00e9d5-5486-46b4-896b-ee6e5d8a117e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9194a833-debb-47e0-a7d9-3ad9198b9f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e912a2b6-30e5-4797-a285-49db3aa89252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89bfd9c6-7e75-4b9b-bb6e-b5ff2d39f33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899214e6-5d84-431f-81f3-ffbb6c134a4f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d06f86-990b-49f6-ab61-920f3100f2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e269a8-fb76-4d6e-8c74-b633fa1f8871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a263523-ee86-4893-8828-1324230fb73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d14f968-5980-4f2e-9eae-328825b43adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23083bf-9430-4d5a-8d60-97baa2deb004",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797d2446-cf02-4a88-ab58-280fa4ac8e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63756d56-3443-4555-9e13-b819f589a043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d11a6fa-35cc-49b8-b686-ba1dbbdb1350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0b949abe-250f-4635-95c3-2ca2f3b5378a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a175b1a9-433e-42c7-8189-a2f017754fed",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3226aa9-de95-4b10-a1a1-0f45428169c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8be5cbd-ef3d-4a66-a4e6-c8d74e61dd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146132f0-0eae-4c8f-90fb-55ca4dffd4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac586532-50ce-4b59-a123-44f1e7aa5d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6ade71-31a3-463d-b204-6d2576e657a3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34213d14-4b3b-4054-9055-cfd9097959c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b969b74-d7fc-4eb4-8766-c2f4be4f21ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f38ae30-8a46-4f31-af6b-00036f59893d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40c15467-2076-46f1-b099-471a05e21ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c7020d-a11b-4d51-8048-07373727d629",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d20cfa-6a93-4899-ae7c-15d6ada6f357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c13ce2-25eb-43b4-9dfe-c5aae50e5f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb552906-0924-4ecc-ad00-9c4ee269424f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "033ce4a1-7cda-4d41-aeeb-13dedee83339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05ccbdc-9352-4d2b-b0df-3144f0f32123",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f0425d-a905-4459-9ec5-bab7c587621c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a1fd1e-e927-4960-b462-358a4bba69e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c0ffad-dca7-4791-aa44-5c1c5b8be51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be284c92-e3e0-4e6e-885e-803827c29490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3084d9ef-7fd4-421a-8568-854ac34f638b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d57b1c4-71f9-4840-a615-a96e87ce6954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55985a0-04eb-452a-aff7-ca3f1447be65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44374fde-6398-4fab-b17c-36c0d96e5fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad72b15-8d05-49a3-96d8-abf113ad4202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9aecfe5-90c0-46d1-85e8-31b075054726",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbc1c88-0b36-49f1-b422-6d2edbf6734e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4b1e12-1ccf-4be1-8aa1-2943ca7bbbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e1cc65-2f0c-4301-b676-6429b18a90fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06f5a12-25d0-432a-816c-d964fd2ca67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8178a1e5-6560-4f2f-8dbb-b53b4809dc71",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa148b50-c6a7-416e-8e97-ac00887358b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e430aa0-e875-4323-a020-82357d2d4a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f6da9b-ab54-413b-aff3-a1323d9e972b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c38440-e105-4f57-bb48-764dfced1bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f12fddd-bc33-49df-982e-6df6ac82e766",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acd5960-ed6c-40b0-ace4-82432ccf4829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9359881-0e70-4a68-bd0f-b9b469b46928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7964661b-54f4-4520-b001-1de69418dd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a73b5d89-31df-4012-82e8-2f3fba4f307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a0e9e5-44b1-4312-86c1-be20174eb5c7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76db2a6c-a630-4232-9199-0bd9ab49577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631da21d-6c2f-4181-b721-e5a9b0279c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee69f6a-5802-4fb6-b063-531bc7260720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b263580b-d673-498d-b1f5-4a263525c617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3337c7bd-ae1c-41b9-a891-905b976ad1e9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa45de12-0965-488a-a8d7-4fb027ff6c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667df77f-59ed-4327-b0e6-1ec6f26b585e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a2a22d-09ab-46f3-9c44-11d50a792ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bebb6aec-3b2d-4403-b382-8e0940e70715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f67d7f-8443-4d30-a46c-65f5eaf438e6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb47376e-5b41-447d-a283-562f936e1bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7a6c05-69fe-4757-9e7e-6913c134ae97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bb5c6a-89cf-4206-9f7d-b50604e7758c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f37b6e77-89c5-4385-b809-abe4c62e74b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64c5ba6-5a11-4a55-81f0-a770753f2efc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aef1446-d899-4d3f-95d8-ede8a3f3d3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e37bbe-6cd9-4b94-847b-bf4d22aa26c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a221c16-ae88-463e-ab62-9e9f87130fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d12e9422-2858-4a42-9e1e-6cfd22d8494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c24335c-fb23-46bc-acfa-638120ef31dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35408a83-5ca6-485b-8d73-058838777555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70883197-549b-4ba5-b067-3a8b49b29bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb86899f-14f7-4356-b35e-06e40ccfe4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0634f4-6994-4b6f-835e-9aa41a79afea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd36d19-d910-46ef-80de-0ee28cf37132",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6658680-b528-4ee1-a527-58a81ca9d49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04474095-d67a-4454-819d-dfb3837da93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64264c85-5435-4cf0-8649-5376f0e85548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a48dcc-943c-4c2e-ac3c-42842985b6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3831d71d-11db-4f00-bee0-7156674e20aa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d8f343-df7e-4a24-8304-6c1813f0a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa96e7fd-63c5-4766-85d0-fb5821f44e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2123979-ab42-4597-ade1-691c6a521353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76fbabef-e6fa-4ca5-b710-d637d3d24a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581b79b2-9754-4082-a029-a37775f32993",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e59ae0-512b-453b-abfc-bbc6a3210aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43db3689-4dc5-4ae7-85bd-5579f0cf9449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743f8244-dd9f-4eb4-8081-bb172c5f20ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd5ca25-0868-4b54-ba90-be915bc11499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e79939-6abc-4088-b8c0-5de8c93820f8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a321ddc-7e64-4a85-9430-87d38c460a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5b2225-1541-47ce-9c82-c48300c96bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ac6943-eea1-4b71-8556-86954445cbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfec2658-e6b1-4544-a172-6a3b1d01154e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487a7b5b-e0bb-4be8-8378-cc2688f66c19",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6681ff62-5a79-4906-90bd-3db0bd9c7698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57db7c4e-c04d-4f5f-85e7-c73e194ed433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0813f29-8e23-488a-9d72-35556651d28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee0f5ae-2b7f-48a2-8b7f-3838b55d2b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b6ac2b-e9ad-4c61-9809-08a946b7f9db",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296ec3cc-8c67-4c64-8127-6a3a1bb3ac05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472686f9-3219-4a1a-b19f-b300387d4fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41832868-3e75-4169-8ab6-6ba4d2fb2cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ef7c6f-f82c-4b2a-bd35-280566e8cd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c732ceb-9df0-4f98-8063-f1c6145a800b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94e10f7-c705-483d-a7c1-3a7a316d3c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191a7461-1490-4334-851c-1fa71e9dd08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c624fc-e6d3-4ee9-ad69-9573d2ec2cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398f8d80-f1a2-430e-8edf-d586851f7062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd01e85-4e9b-4741-846d-ab6b4681fd69",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6653bf62-bed5-46be-9ffd-214360100296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fca95b-9033-4b8b-b16e-b4570f5ad5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684fc214-b906-4db7-a19a-c8bf1d34ee88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac77a42-72df-4f9d-a825-284b5ae82a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dffa6e-9b98-4015-bc29-2ffd82c6bf2b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837f18cd-0b40-4140-9bbe-af9de9ebb73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2f071a-99e7-4a4a-8f88-db131c6235f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33e3fc5-0c43-476e-9d14-0331afafb2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2100ac8d-8f01-4f8b-9dd0-d714da7b8eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2ac110-5866-4422-8888-33bb65e1bbba",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21765cef-c91e-4547-9913-7e7406b04a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd26224-0f68-4caa-aa73-560858d72230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1f1880-f25c-42a7-a13a-1bcc840cb163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9838b0cd-e8ef-4e42-8f27-4245a8a6bf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6859338f-a0f3-4847-b779-f85628823544",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c667bf41-f2ea-43be-8c11-a1c385ee9263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279733a4-11ab-4b4d-a3d6-e5ca579625d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b5702e-b1f1-4b43-ba13-53269ecb6a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55252e84-1c1c-4259-a935-00b73e96b77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93733cc6-cab2-4fbe-86a3-e96a60a19d79",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c683b55-a0f6-472f-9412-5beac139a2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dbba02-4b22-42cd-889e-93ee6f03f089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f41d610-d871-4ab4-8099-2cf7885a385d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5bc575-1eb6-4b9c-8573-acd34cf6240a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fcdcd2-d334-4538-97cd-46c1748c99d6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c36a9c9-73ae-4699-b73e-baeccccb1660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e2bcdd-41d0-4cbb-bd2e-9745b26fe624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b241cb3a-5af5-4035-9d6c-1116e0d2d826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3527e2d6-e7b5-4c7f-a556-f6ab4c56d0e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e33e1a4-b567-4c02-881b-d5c75c30e5a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0555ef8d-a748-45fb-84ca-e8be7cda2daf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cac97c-f3bc-43f0-b33f-4b601ec3eb64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c357a154-ab2f-49ad-9df7-09ba311d39b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c180c51-fce0-4d1d-8e88-0722561da9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0fb7212-4237-422d-9148-98699bc7daee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4074bf78-81e3-4a5c-a578-9c2f7e3117dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13d2e321-a8e8-43e8-9e4e-b4f0c109a70c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "262814a7-3bde-4051-9692-ff4af924fcfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c64b902-16fb-4f3f-b5f8-2d26de5e45aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a95ccbf-a335-4fc1-81aa-c1ea021c356f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24e400c7-a5ee-4679-8900-c3f68dcf38eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1ef126e-699a-482b-a514-6db797b4a124",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab2ff246-26a9-4198-80fe-5986c544cd19"
            }
          }
        ]
      },
      {
        "id": "e870c889-d746-4ded-9912-7f0f809b05fc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "79210d19-c067-4887-87ae-1505d0647af9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "113cc4f8-0b5e-4057-8d50-0774f19dc662",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "582509c4-144d-44fe-94cb-fa8a45ba8ef6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55b445d-55c2-4a38-b8dd-51e790e983db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f810db8d-374c-4d03-bf81-666a0ae95edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06070d46-643c-4024-888c-f16226877155",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3991ba06-e7bd-4145-85cb-476882deeb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8c993d-610b-4d99-b702-25ffe035c5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be54de06-68c2-40cf-8ef5-97d889a1a050",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade94a8d-1f4d-4131-87d8-4e4ff4bf4bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37269127-7205-44cd-a5ad-19c1286bdd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc98c468-0f90-4155-8071-c13b4a4f51fa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78f2d09-a654-4b4c-8d6c-852daec0c685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79ce038-e28a-4225-8ff9-87e9f425f671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4264166d-1853-4bbf-b2fd-a3203483042e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca84abc-169f-443c-9918-2c84a0051b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cca550-e8e7-423b-801a-46fbec7bc90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbd64a6-3c84-44b6-87be-cb63d69203ce",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f316d56-1661-4a45-a186-2ec0640d06e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5cea60-1bc2-4213-bc79-5b80cdedd796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0c6a9a-4c6e-450f-8a7f-81ed9d937938",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a714fdcf-0b1c-4cb8-9a93-6ef9ce5ab3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1535c74a-3ea1-4dca-8404-c3ff27ec202e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d49460a-8785-4e85-9b6c-c7596d76b092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1ff732-78a8-4645-9c1c-48b3caf968ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e641e8aa-6cc5-42d8-bf5d-9b8477ad89a3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d1c2c0-ab04-45c3-801a-abc2a64450eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40d7b8b-2998-4a11-a1ac-460e9353e725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc73b767-203d-46af-bdfe-540647f94638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1ca70a-93f3-4617-bec5-c18cee6bfb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443a2f11-d4a5-494b-bf74-37f894a7f2cc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7c5fdf-06ba-4689-b917-9e294891608c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c4be4c-52b1-4dc2-b206-0bde183e8bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a28be6-58cc-4ce8-934f-5a9cc73aaa9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e91fa0-4229-4b20-8da9-6ecb8cd71a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1548f1-7b94-4d2c-9466-22bf1e5d1b42",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888253cc-be22-4e09-abbc-0dad8e851262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a151b860-1740-4d6a-9194-25bf31e7a9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8d9c2d-7871-4e9b-b5ff-3b8c06dc7650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f06fed-966d-4efb-92e3-56cec065545d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7542725a-7d5c-43e8-aa02-896d8fd32226",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd05c84d-2d31-46fd-a733-ac6af7689a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35615e2-33b7-4842-9075-804c751d547e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c044f4-169c-4f95-9915-817e55f1cac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d051d070-23c7-44f7-ac4b-a82f803943ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48289c09-1171-4be1-b586-9ea79d8240af",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e853dee7-a134-4860-aaa0-947ebab5453d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27384df-26aa-4e05-8aa4-50809556d1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0803a627-fd01-400e-9048-3f6e426820f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1ed627-f890-4aa5-8661-4b83c17fee89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca437c57-ab09-4158-bba9-f0db3faf8670",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8062cf38-0353-4f61-b279-291c9c2c41fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2288fdc3-bf22-4d9e-a463-ac51b954ae76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588f99ea-5b0a-42c6-82c1-99b41950a7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22abab90-a49d-48ff-8b41-c980fee8fbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31af130d-b37a-4fb2-939a-45db8b49affa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526bf6a1-1364-45f7-a0a8-b6fd6fc18e60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6462a30-e1e5-4d06-8576-292413e64e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4f295f-e2a1-4f3c-90b2-ed84e658b02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5986f46e-abc6-46ac-85c1-a19d1f6a1e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d48861-7955-4a7c-a2bd-cac0f9993a7a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e00c8b5-4409-4a22-8f24-3c90e6047364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6de8712e-2dd4-4252-8a83-e7288043f0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b885ced-1baf-4d08-bc9e-fad3678bbed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb90b7ad-6aab-4189-9583-31f71e0caeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf70ef69-99fe-4c89-8007-550b359144bb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5943e53-9f9a-4a28-8a15-19a329a4c1fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51a4db1-b2ee-4f04-954f-ba995ac40139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cebfae3-785c-46f7-8ddf-96942974e29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e4b3ad-3f9d-4ce4-9f09-090f267cd283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728f10ca-5a00-47b7-bd19-215084f1fa8f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2575a2a-2053-44fd-940e-7234313bbc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829dcf56-6054-4fc6-bf81-fa665fe15fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecfd4d3-5a22-4c07-b641-8264d6852160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158221f5-e1bb-4647-bd43-3151407c567e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866c857c-fe1a-48be-ae23-8ff5fc43ffd2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6aaa1a1-7627-49e6-9e73-8316f9e49c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4b053f-214e-4474-9a20-a607bd03f8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ea2dd0-6092-4a67-afc8-6b561059fc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde093b0-63ef-4b20-a55f-a02196eb4eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7cc5f1-b1d2-4ca7-b1a0-37902533402f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb888f53-b722-409f-a30c-9aecaa174f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8379cfc9-54d5-4e14-a240-c27be2660dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01124e70-aa66-4d12-b954-a238bf72c795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22be85b2-252b-479f-8e68-4bf9fd191221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9719c90-041d-4547-a23c-7f64a1f5be4f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99d5927-17af-4e48-977a-c8831a69763d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d4ac44-48b1-496f-87cf-971317594fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51498d62-0a75-4540-9120-66519537ca42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35363237-42f5-44f4-b597-4fb29e80e3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c6ea6c-33b4-4f5f-b6e9-afd179a75210",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911e08e1-3868-40b8-951d-66f5a12d57ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd21e3a9-7678-45d6-9d42-78e95559a89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fc2b22-1ce8-4c16-bf0f-8bee300bc1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05359bad-2c6a-4695-a0ff-94ff29da1b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785e0775-24cf-4a52-9314-717cb5e668a8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1ff1c9-ce06-4bdb-a4da-0c7fab081001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8794302d-e95e-4311-bf3f-db0140a2a9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d9a4ce-5244-442a-b07e-310d01ff278b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503d0822-94fe-405c-a66f-fae234e5937e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7f088f-e7fa-4ce0-a2d7-4d841b116130",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d96f4e-9688-4747-9e47-7336885a4072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03044b1-bf9a-426d-89cd-a8c374dacf82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a06d50e-5387-4a0d-b401-6eb9181147a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2577d21-80e2-4b52-bfa7-fe5a51cc8044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25712be-0b70-4eac-86ca-df788451bfb2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb79bf5-5917-4c4a-900f-82f13b5c892d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab588513-efa2-41f1-8aef-b5463f1c64d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2804cc45-66fa-4cc5-a5fe-1a9ec8dfc8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5743cf87-1f9a-49f2-a267-8eada4c1e682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2311898e-493c-4d5e-8132-c038d01949c3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727a0542-635b-4fb6-91b5-ff0e09005233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f46428ae-2d9d-46b3-a6e1-a3959f6cbbe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eb8ea9-1146-4e29-ae8e-20b0cb4e2caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee63e64-7af8-44d8-8477-c6665fbd703d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf65bb6-8577-4ac8-8062-bc78e4ae66fa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a9c689-fb9b-4faf-844d-025df19daafc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a2d30bb-ce8d-4183-90bd-9ef533d807b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b391b76-d684-493d-aa82-4a75f72065cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ba1eb9-f878-48ea-8724-b972c4044d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425b95f2-1098-4a31-9b0b-a3608d47d2ac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d8cd26-0790-4df4-a817-889f4a18b027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30056c7a-c974-49ae-bbea-a7f7a2556b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b565cf-526e-4eeb-8e80-7479e5023a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223e3c51-ef4b-48a6-892a-779ad7c3f674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9083881-712e-4489-84d6-53fefdb5b3fb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc4194a-5900-4778-91bb-29c2ff91e8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74d079a-a2c0-4734-ad94-7f660de72a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855189b5-d8ae-4f4b-8b8e-77cad531857a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6385ce1a-9c7a-4d12-acb6-fe1f6ab259cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67552efa-5e68-49dd-b64c-83b57c34fa3b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5e4a66-e36e-4ea2-a61b-d80f96e64b0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311474af-010f-4ecc-9283-0f858312f93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e9aa0d-f116-4f73-9ef2-5bc9c7bce14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4462d777-07ec-4a1c-9242-a4bd59970e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d63f87-84a8-450b-9c6a-c4b80d7ad2b4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fe6876-8f37-42d2-ab08-8a8842f00f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec61a35-8e1a-4f8d-ace5-0736f4ee91a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ad7880-6f80-4e57-b087-3b000cd4695f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4859b551-02a5-4bb1-924d-fbe15139e79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81b1936-f332-488b-8e7d-891f25d106fa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2f958d-8f2e-46d4-9f0e-779c40e04e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09addf26-7c9f-4ba2-9be6-43da04be2580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb9fb20-ab8b-48e3-9260-f4ae7813bf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4727a7b-7b79-4962-8404-422a4200f805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4c24d5-1294-4e18-a62c-849b75feface",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8630e3-fef3-425e-af39-2bdca223ba4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd77aa6-cac6-4734-9e0c-2339fa534201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83ef62c-bc03-44ec-9eb8-a87072982edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26b949e-79b1-47cb-93c3-db8fc5fb1a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5d4195-1ca4-4bb5-af3a-34d7904b7036",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93263880-17e1-4c29-bf09-2d21f2f269d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ceba91-867a-4698-92cc-34287a947629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d458b1f-835b-4ecb-9f07-d98e4249c875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0335a91b-0a51-4721-8363-d824f86d0db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1228ba-b5cc-4877-98f2-aada525368e3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf86a9c-19d1-447e-b840-1b3a5a3cadd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "569992c4-8f01-4aa3-8be4-0c85b659ee9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b926e4-b4de-49e0-91ae-7ce0278b6f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62e81fe-48f8-4078-bf61-6a0f61e6f045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5154fafe-aaa4-4f25-ad24-ef0c79bc1e58",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956655f9-0c98-40f2-95dd-3a4a63b4ba35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b1fc47-1585-42d5-85fa-bf0825dd2c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d783d6-326f-4d6c-9c29-4fde2e746d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e907fc6b-9e01-430c-b7a4-1f85700d80de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0eacf2-8c31-4fdf-a840-26bf0c2e5cf5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3504ba3-792b-4470-8310-9f101d371793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881041f0-d5d0-4a33-b513-00969331b51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd7166e-3857-4c15-8ca6-6095d716ea74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1527b501-8c9d-460d-aac7-7236c9829767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfadc312-47d3-45ad-b8d0-6b2fc1f6a55e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2842de7-1a47-4384-8cbb-137b99d7bcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e915403-3dc1-41e0-b4ca-d5afb9bb9260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e60578-9564-44c1-bdd3-b573aacab0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7b175d-fb88-4521-b9a3-f633db28b23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f53ef92-383e-4cf3-83a0-a3c515e91aaa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec40c8a2-d753-4c7c-bea3-e28226d26d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27d54e4-8e5a-4c86-a97f-24e34c4bcdf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3500add4-5734-4677-93a2-61dafad5f086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415f1c08-8333-49e2-b14a-362d1013f833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d133c1e-c623-41d9-a1e2-801385ba572a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7759b7-a955-4ee3-9437-d5ac99a30651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a2f934-71e3-4748-a9d3-47f74f928b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad380ab-79c8-475f-9224-0f933966c4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02440ff-976d-41fe-b07f-f4d751a44c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886f60a7-281e-46d0-b2b5-0e4f250e061f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002d2f4d-4c25-44d2-a4c6-66525e5e00b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea559d8-8429-45f0-8cde-a244f587ecd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc56e795-c092-4b9d-a9f6-273eba8a832b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938d2db2-2e0d-4f4f-9d58-97e2a5dff63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6227cdab-92ec-4cb0-9144-e81a08603110",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b49afc7-0c6c-4c6c-9e3e-a6af3ea873fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6221f4f0-8876-42d5-8eef-d44462360d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe33e1c-422d-40ea-b54d-9ffd6c43be61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99ea8d7-3a75-4e0f-b42b-8196592af600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f62016b-b0f9-43c9-b5b5-f4f5cbc05d7c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b393719-b21e-4fff-a9c3-ade1ebf94b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095893da-9510-4071-9a94-c8409a415307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1d6336-8ea7-40e2-ad32-0e353a97a672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d62560-e033-4d72-8583-629d0b532327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ab4ce6-946b-490d-8070-b7de3a30714b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6625b36-655a-409b-a93c-c2dd848d508f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca86fdf5-a714-4b26-bb6c-623218ae1ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df66372-e3ac-4697-9499-0ee53b7cb69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a39715-aa9d-4fb4-bf36-40c7a75787e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe655e46-4240-41f9-ab2d-a4308c2a88d1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea50fa9-d844-4ce2-9c5a-bf98181e6808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d9ac88-a1a9-4950-bfbe-666a74644e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36b069f-27bf-456c-acfd-051fe8939dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93504296-2811-4b84-9d88-8f3bfff54e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e045931f-a644-4e27-a7e2-b40bd7be5d89",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f5c8b4-cb63-4874-aa96-172eb1865415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a32920-5c07-4e1a-b82b-30a4989ef3f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a123ae-4373-4fbf-858b-e6a36c8e6f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892e69cb-1e49-41a6-a4b1-33ceb606853b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3bcce4-a050-4b89-8149-706423d3377e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c65cc2b-b08c-47ee-86bd-00adee28e83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6036ff03-fa48-4b21-be54-a7b704e75266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1627ad61-9ccc-4218-b961-0a1536d11213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4390a04-c3dc-4164-8285-f8c4d985a88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87aebbd-e4b8-40e2-b194-1fa2bbcc08b8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5648b5c8-98dd-40f6-9789-eb71888ea556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e25c00d-581c-4ea0-a59e-abfe6ebb9288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f401b3a8-830a-4ffc-8d3a-77240e081dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b6ccd4-12a8-4201-aa91-85857ba9e671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85f9701-b94e-4b46-bf85-5e484215466b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d82bf5-be7a-4dce-978d-2fdb2b35f28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d57f0f-d732-4831-b9a1-c280c2bf3761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac2648f-3505-4ec0-9a61-c383e8977faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff8b2fb-e20f-4dcd-b5c3-eb98d37eb46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be78f83-5a4b-4dcd-ba6b-f9e41cf595d4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc39b7c7-0c53-474e-a685-e6982c7978ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2c7dac-289e-4b99-97cd-8c445600f6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9145eccd-ec37-40ea-928c-3e5b473d3fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80308bd-c5fc-4fd8-aab4-2e17075eef3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc33bca-28b0-4266-80c0-29c39c3319d8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ea0746-dcc9-48e5-9017-5aeee684d917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7773fe5b-94b0-45e9-b579-19696879ce13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3528714c-99b7-4ce2-99d4-855c0ebcb168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f97e56-c8e9-43a3-8ec3-3144679f65c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b038787-51ba-4be6-916b-79992ab378d8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ea383e-b4a4-44cc-a131-59a7e39a89d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88aa0e1e-6c51-4f57-bb8a-96e7e84d7bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b429fd8-4bc6-4f81-b1f0-3d9eb140f7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a2ea74-6910-4d9c-b9b2-6da59245212b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b50f5f4-3ca7-424f-b9f0-fa4d62d773b0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8568e156-66f5-4a3e-801b-3d5bc77bb7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb7ad5b-e2cc-4cbf-af8e-f18e136d56bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b86aa0-d062-42b9-92dd-c60a26fa9fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e043fe-b927-49a3-a22f-4d0cf52b2237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1715f1-ecf3-4f5d-9b7e-2346776afcad",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5344e94e-5f0d-4863-aedf-1c001737cb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755fa331-a6a9-44d1-9b6d-f77488a129f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1d44ac-c7c2-45e8-a54a-75740e64f844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8168c7-2e78-4f32-bd5b-93b20bd850ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b0b3c1-062d-4562-a1ef-013f702eda78",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679247e8-e5fe-4795-9336-6f090d23935b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377e6256-183c-477e-9a58-03edb3aff3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af0fb99-105b-4fb2-9bd2-8b4cfc1a95d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88749d2f-c86f-4849-a106-bb86f06a2495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb551007-8e4e-4384-990e-1207b2523061",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc41668-40ff-42b2-987f-dc45d6debd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b087db12-39cf-4b37-813e-ee78e6926363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a5f70b-9357-4845-a637-f3fc0be4e61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92088137-4324-4177-8042-57529613a410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5061ba-57c7-4652-9353-de68354e30ca",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9f595c-30af-4100-8c8a-8e6ba35696eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50519368-c513-4711-911e-82d6f796c3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d4f7c6-104d-454b-9355-d1f80a393a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ea6f93-92f4-4cd6-9c34-8485544d8938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1228931-a1cb-4d8c-8b48-fba285a82af0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dadbad-5113-4059-b481-16bd39fac82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31551738-4c93-4c7d-b497-1c5c62954f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c04dbc-e4b9-4d3c-b889-7d4f702b2615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2356fa1b-c309-4ace-aec7-8df05b7407ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7361e68-4b84-4246-87da-5b3d749e83e0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37f9fa6-cebc-4a85-aab7-c815cff12de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4383091-83fc-418e-bd59-b5ca3fd71ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e00539c-2ba8-4efe-8a5f-b83f95024f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00839293-bd77-41c4-8784-b2e388fcf424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef24ccd7-ae5e-41f7-ab16-f1efb34711b7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec43109-6f35-42fa-a812-58e5dd4dc865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f48789-5867-4e4f-b8a8-f7d3f9a8f78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428d91dd-2401-4751-8072-69ecc7ee5313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40559261-1be2-4576-aec8-e074c0efc7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525e94bf-dec4-41d2-8ad6-2125fd67e98c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbf6d90-4612-422f-bff0-7d53a5ba5a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3267c1f6-677a-4cec-9a2c-a28d7e4a420f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27d9a0a-494d-4fc9-bcd0-9b6d937ad2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d649c2-0009-4e59-9cdb-e08e52509f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d2b58f-1d70-40d5-be45-bf4bb2d4b114",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5f16db-7d3d-404b-b002-abbc7311b806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50df6ec6-98a1-45b5-baae-83a4530b6efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aff422f-0322-4aa9-b3d4-6eed6017d82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436974ec-ea0f-4708-9e8c-0ee6f36171ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5062deab-785e-4341-8179-e963f1bcf3c0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19d5c5e-baa8-448d-9656-fd441a4fb891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a4723c-2d21-4e74-a0e0-dcb23f5e1877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5442225-ff92-450c-951e-77f68fa7133a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfd0981-56b7-43b3-84fb-ca33425c2b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f8eddc-5d21-4934-aaf5-b5fb968659bc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01683d6-e5a6-4556-b29f-e9909b5dd8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef6e298-6ba5-4415-b3af-08bce35b1723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f7d98-4020-4e4d-a6c7-cf0b1710a2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681b4eb9-7050-4c2f-aba9-2838fbad6356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65797b88-51a0-47f7-bb97-650503d6fd41",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738c409c-5c58-468d-9ce0-7c535fdcdfa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232f5268-ddcb-4b53-87ef-314b1335dbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a3cd3f-f6bd-48b9-b461-4fc47e29a3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9eb3b2-68ee-4174-b052-8b3550eae4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b24448a-9076-4e3b-a893-6a8adc8a8f8f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3d8ea1-59c1-4220-864a-17132288a41b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa03454-7fe7-4893-8739-3ad450f2aedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29bdb79-067c-47aa-8c6a-1293bc12e570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a3602e-6b9f-41a3-ae70-06d835d517c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d999ad-6828-488f-864b-228d258c30a0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91587c2-0d2f-4029-8938-db0a17c74eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "004ff159-58e6-4d8f-933b-084fc35acdaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179addab-12d1-4393-a568-2327aceb92a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df343736-0bb7-4ac3-b036-ce61e768e10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db3a854-0157-49cb-8ef7-cf9e8edf485e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32138fba-c592-4988-af3f-03d9149fafdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b0a2d7-2cca-4eb2-890b-3a1a096ee7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25340900-33d6-49fa-9de3-74474b0cf0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe948a31-8f56-4138-a73b-8786192a78a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05e556a-49bc-440b-8bd0-bf8cff2b4d56",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d36bb03-ab23-4caf-9c26-7f66ff8da447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287adcb5-366b-4b4d-b789-e5a9e013d951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1cd009-4de3-406a-8905-66b7e4858255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4a25e8-ea10-4dad-8a20-84d13950e666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9d1cd5-b61f-4b20-a6bf-5171faa954a1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16827e0a-98b7-46f6-a2de-8d8d83051998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba6024e-edf4-4212-8197-b4a5cae4bb9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c290f64-7de4-4113-a24d-72c0e11d913c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5810bcd-498d-4575-b9a5-970543a94098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c14df1-c41f-4db1-b964-21ed15ab2bf2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fa9e6b-bef6-4423-a14e-7486e6d44712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7adb5ab8-144d-4a51-af3a-bd7bd7f8a319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02e8059-fc2a-4886-9729-e8bf89ff8e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52117902-7f02-46f4-8d54-1d87701a248a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c3a614-077c-423f-a82d-cfe57d4ed78b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9640f65-386c-4229-8f90-40e57e7850e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d598b3-096d-4466-97e0-92452d68da1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5150f3-9a05-4c78-97f5-52606749b6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33adcb6-4963-4fe9-8b34-a5ed3d739b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51132c8-a40d-428d-9072-02cfdcf694d6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea194c3-b8da-46cc-84c4-0a6d0386448c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861199af-ea4c-4044-be53-7f8bc1fd7c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc2bc4b-e32f-4e7f-bb0e-f5e20a58f5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba75943-2318-47aa-84be-83875f9756b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfea051-7213-4517-85f8-88b8e3955c21",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3f067f-d698-4a62-b94a-acad90165ed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64666c71-d7e2-4121-bd46-fae446cd868c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d0752a-f077-4f6e-95d3-a2ab18229ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a950b7a1-7307-41dc-bd7a-602ae45637b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073af7fe-b15a-43c6-905e-d0b4a3d67b93",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3db907-f0a5-4bf7-ad2a-fa1a2720f3cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b18a18-7a7c-4045-a1c0-c5b22e411395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479d4d31-6ec9-4882-8e0d-0beb03e16764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fe91ca-a286-464d-b3d5-467c07a7c2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fd27db-917e-4b12-b6ee-04ecfc94b9c8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574938dd-31e3-4d33-882d-f1dadcb71a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1495fa0-bf09-448d-8275-ce8d9d3b8432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0962fc2a-c3b8-479f-a9a8-0af14436f161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91c8be9-4215-4e3e-996f-dcb9b740d796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2749bf-04b3-43af-a6be-86197166a96f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc1e278-5998-46a2-a85c-d4a8b0701e45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d89eecfb-f296-4a6b-b220-03288eef6069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a733e8a-6b93-4891-8ef3-8194bb21f3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b04721-6750-4fd3-ac0a-103c56d99545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2e4361-9596-4afb-a052-8c3f8505d674",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecbb66f-7d67-4082-8d5b-ecc42c6af92a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8196567-e694-460b-912d-f313e7eedc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bee9ee-f0c7-426b-b09d-abda746e9cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c48898f-e8d9-48c9-a59d-2f7c221dc1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2980938-2519-4e9c-b649-616d4ded61a2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9230ee6-cb77-4f6f-a562-0c21804c65e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a03b4271-1594-431d-a906-ed3c56f7b811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ac4382-6b44-4b80-b4e6-1966c2b93a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab69873e-6d48-443c-890d-f3fa6e90d218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b72cb5f-b761-4ea8-bf63-3144b7f28457",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ce3c21-6441-41a1-b5a1-9383adb17a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e54ebb-264c-40b0-9ffc-551d14684482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de35dca8-0bc5-4a10-94fc-5fb80cd951b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6314c49-8eb6-493b-a2ab-9358b7dca182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a201d44-fe60-4b97-8faf-4249ecb491fe",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52cd2e6-3003-44b0-8846-2f5ee48c277c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147623a6-36cd-4fb1-b3f0-c9ca0e8a9a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "968e0bad-730c-4a8d-bce4-ce987b22c2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4fb226-5848-423e-bf32-cf3a951a50d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d2875d-466a-4731-ad65-f864abd36161",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc09bd5-626f-4584-ab9d-f6ff7757d3b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61292036-0e3f-4694-946e-e1515b833494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50d4875-bbd1-4fd4-82be-35ee968466be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5083fe-46e8-4155-b1ca-78b54f2424d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf2f437-3b90-45a9-b913-f904edef71da",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731105b8-dea9-4be0-a6f0-0ef4b2dbfcf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70fb0f04-07e7-4871-9e6f-c4adf3cdc608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d91f985-ef3d-4cc1-bda0-974649b71339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc93bb3-752c-4fbc-b535-bcf5d4a8ffbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bcf756-c15c-466c-a43e-f544e6f6d6de",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b53e52-67e7-4a96-b6a9-0f5a700b6b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45265490-6845-4065-995c-3d8e3348b93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a829931-a8f3-4fe9-bf2d-f8756a9066db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84c045e-1ef1-43b9-882c-6f0a0ab35366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4ecbee-b395-4d31-b7db-c43582174db3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201211b9-026e-49c6-887a-dbc5b728ac2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a04f33-2b7c-49f8-a70c-e0e01c0bba22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bfd222-8b47-482d-9b2f-56ed49ce6b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa929b6f-27f3-484d-a8d5-0f3179f3241d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db17fbe2-faa1-4951-8f44-99bf240277f0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2e0a18-f6b3-4d67-9c29-7f0c4b7705e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a35c73-8900-40b4-b1c7-b7a519195932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921c7b61-1e8a-4578-9d4b-577c4f03f160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391b1484-ce0d-4ec4-bdfe-59317e9560a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6ceb81-aabf-4882-a8f2-eb634c5aa7b7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c943f4-3082-40f6-a3c9-ac496aadfb55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aefcdaf-d5a3-4665-944d-b514ae29fe82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811fa13c-d6fa-4bc8-8ab7-545209875190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55a3064-52e7-427b-b86a-b5bb5ab9e552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f7ddb2-edd7-4abf-9e0a-5c14c0f9503b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b8c400-2f10-44cd-a0f9-b30931746aad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b452097-38a8-4624-bd70-383cecd50027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068bb6bd-e8cd-4cf5-b755-0d1f741c51dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080e36d3-3ee5-44f6-9a32-9e89cb04a881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38f3dc4-3e91-463e-bc43-a484bdeb5c11",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaec481-aa14-43a9-8a07-05d1a79389a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f04f82fe-4748-4a2f-8317-6dc7c2be6e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b11fa5b-15cb-4346-9010-76ea8a76cba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ca87de-f473-444b-9787-b92271f9425c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e86a76-15bb-4c95-b27d-227409384b5f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fdcb87-0a94-486f-b005-97b19483094c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a625e0-af03-41fb-a9a8-dc3ede25c9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e83c30-468c-4034-9db7-7e053e5e56ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881dfe0a-a39a-4670-bea2-3837ec95c888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bbaae7-998e-4146-9991-eee275b88d19",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20790c37-1255-461e-9f76-079a66febc3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393ffb9b-08d7-461a-8e33-10d681f8a10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2728ea9-25bc-44aa-a108-4b4a9f4b1e1e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9c5904-9a50-475e-bf3e-d41c0d1f8181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d05c19-b5b2-4420-aec3-de5057ab3102",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50b7e49-37f7-4079-b5ef-1f165f6ed337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41cb80e-83fe-4c79-baab-1d51ac7f57e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650a3b1f-b5a4-4b10-ba9a-e84dd0005094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480f6e66-ec18-4c6d-a4b8-b84fdf260076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6362660b-0286-47c0-a046-3186a0b7f240",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253527f8-895e-4d12-b5c4-83974a9cb696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e49cdd-5f31-4947-a6ef-e60d881af84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ddd26c-a41b-4ad6-bb8a-529fc397ca8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992cf66f-3ea5-4738-9d5a-a2ab7eb69339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de1614c-f34c-49bd-b966-fbb2bf91ac2d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27db5bd-9ae9-467f-acbb-fca11bafb15f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52282561-57eb-4034-9c11-7f2bcaf81304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6345b7f0-a836-4b45-a90a-6cd8fdcbed6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42140b18-c839-4db4-a2e3-c432701072c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c197980-c30a-4a43-a462-248b2680721e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f26f70f-7179-481b-a980-0f7d4b9ade51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12a9e00e-38b8-4923-9794-f9096896f3d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ea6b18-02ec-493b-a758-7b11a33846d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152953d6-65f4-4053-ac3b-5c35bae8184f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17e1ff8-6334-4621-9ec3-28e610f6eb1c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48495797-235a-4257-981a-04220757757a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1d5074-9651-4cfe-88e8-1ad98997b7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61269b5f-dcb3-4b5b-85b4-d010c0649ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162c3c1a-e255-4b86-9a6f-9a424fbe9673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62999963-58e2-4a87-9667-e18d30f0af3b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1191e08a-f241-4c6a-8e7a-dc392b5ace0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f85e70f8-9a04-420c-8ab0-97bb2ddffb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cd71c8-2054-4aa6-beb6-73c6bdc463a5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2a8596-8645-4eb0-be93-8c28b6b526af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ec9003-17bc-4b3a-824f-756454b25231",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d123a182-60e3-49dc-a403-3ca8a9101910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab3be6e-5a7a-4a47-88aa-df465a2fdd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc9569f-5cd0-4471-9fcc-36e0ba126e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85c5cb4-b379-4f35-99b3-db8855026114"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "357632e3-50b8-4722-ba56-601cc5277ad0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f708438-7df7-4c51-bf4a-cfa7879c1f58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b27d641b-fd05-4a6e-9b33-8df0e0321f9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f5f2b45-2abf-490f-a88f-7caa81bda126"
                    }
                  }
                ]
              },
              {
                "id": "6a1aed5c-5d80-455f-a4ff-0b863f366878",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb7dfe78-064d-4572-8981-dc7023dde84c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c9d010-1692-4f24-87cc-84552205d1b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ed21d50b-d6b6-44d4-82ab-1a866b4d3df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171df411-b322-4e0b-b956-38de1ca82730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c9aebe6-2089-4813-b9dc-efb4380bd911"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73d993ec-0549-4c51-9ac2-f096e763c789",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a7f5a67-05b0-4212-9a88-edbc80b6c51b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfa691fd-845a-499a-bf18-556254101180",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e537f5d-b096-46cd-a7ae-f463fe4793e4"
                    }
                  }
                ]
              },
              {
                "id": "29747d71-f41e-445c-940a-a5f17243eb89",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fc8b9a43-3f7b-409b-9302-b27ac403943a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca41bb10-dfc1-4fde-b8ea-94193b1905b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "570d0335-5a33-4a6e-a7b5-d4de0fd66474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9703d62d-e407-4e57-be1b-e99788950cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3260a0e0-afd3-41b9-9b89-0e3e7d8d4966"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1684aaab-6324-4380-a0e7-bdf4b0419e4c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee621c49-8e93-488a-8b67-7aa735d51219",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6e7d42b-d4eb-467d-af5d-1badc4180817",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b564efc2-2d6a-422a-a500-0fa15a99e2a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5631573-2a85-4b1b-82fe-bbdad8f69db1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83738f0e-ca9e-461c-987f-db0443b7633b"
                    }
                  }
                ]
              },
              {
                "id": "8043ce25-5025-4c4d-8b20-b6031a73d58f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4456ae3-03b4-4a3b-a5c2-f008b941d6f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b51e7271-081b-483c-9e18-b4197dd5f95c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00d78122-94ec-44f0-b7fc-3888e6ea718e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47c0d0f3-46ec-4f5d-b2f8-3fa5ecadf0a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b2ad0dc-cb2b-4703-a3dd-ca1d5d27b7a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3c61c41d-d69f-4e03-9ba4-621433b780dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ff7785d-f833-4b1b-818f-6543ca50fc00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46b8706f-6224-4778-b637-bb5970ff33d8"
            }
          }
        ]
      },
      {
        "id": "e0833aed-78f1-4af0-8711-1c8cabf9ea0d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "752225bd-e968-4236-909f-15e1681aa947",
            "name": "Negative Testing",
            "item": [
              {
                "id": "268d0ee8-e07e-4876-81ee-8857bcab8fc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75ffd876-305c-4915-820c-d847d5cebaee",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6e6a0b-3859-42eb-acde-e90f0b67b3fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f179071c-6828-454f-9863-0df590242a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada2ad10-a597-4852-bb9b-f6613a59b8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96b40dca-89ca-4aa8-97cf-fec0544fecb7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7353e2a9-6b70-4162-9725-faa12cd0e9fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec95e73d-e9f1-41ab-a766-e8eea7a40549"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cff29344-d6d7-4d2e-a9bc-d7afa8e6c5f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80ca552e-1f7d-41af-b572-4b4b11c04000"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90bcf8fb-aadb-431c-a46e-d041955208ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dbd1a7c8-0b50-4469-a4d3-76b1ef7da18a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b828104-1699-4026-a9ca-25263d9cb216",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1ca3d15-66bb-4128-be21-1e3c4360467e"
            }
          }
        ]
      },
      {
        "id": "0c373044-db57-4a9a-a0a7-99cdf652417d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f27586c0-f3d0-4835-8438-0595b266ab25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d3530a7-f39a-443a-b7a0-7715ce063c08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "025433df-dee6-40dd-ab9a-31d72cad1961",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c95b19c-bc42-4ecc-a170-ddd56f930ee6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d196e318-c919-40fd-8c64-c8e079687557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0680cdb-8d50-44ee-81a1-58e84d79807b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3483f33-6e94-4d11-a9f4-fac934fd2232"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a07f53a-6373-45d0-8d1a-8fc84bcb9a44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2726a40-8c09-4790-ba80-5a3b7edc5d33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb8b166f-647a-465a-b924-eead77cdbd2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ef1d0e9-6912-42f9-9389-22a9ebc88ae8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "397ff005-03b1-45d3-b14e-eeb3bde257d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3117f9f0-7a3d-4a6b-949d-4bc4822cc440"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e60da80a-46bd-4279-8de3-fbfe828b065d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43ad3ac0-e6f3-4273-b5a7-21c2ee0f81de"
            }
          }
        ]
      },
      {
        "id": "847ec4a0-114c-4df4-b922-a71bfe9f2cb9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5881fe72-4d78-47aa-982c-45ec201cf2d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62879921-6b39-4290-9d3e-af7d9811b4fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79719917-dd70-4857-9a55-bd02ec01b218",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07414c50-da42-41cd-8020-721dab83388b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c5ec10f-3473-448c-8bbd-9608d740f51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bda9a3-1f64-4bed-a1d1-7b22bc871a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70221215-de60-4dda-bd86-cf46edbed0cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a9d6878-8577-42d4-bf3a-7e06ffc3a054",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15df9e4d-515c-4023-9ad1-6d687c2aa2fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f78cb3ed-27c0-4e6d-b55d-e18cec6be5a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13758560-d177-4b90-93c8-ffe0567254bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f4dab1f-2bc7-4738-8a79-4e4735d26693",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8285ed0a-ef2a-40f3-9c5a-ff5e97997919"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfd63ffd-aa1a-4483-bc3a-ab048f0d7f88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fec2e263-af07-4e62-ba07-0aae2b939ba6"
            }
          }
        ]
      },
      {
        "id": "7c927e49-744f-478b-928d-3be7cf23ba04",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ebc5f40-51d5-4714-af9b-cca72a903fd9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9cc6695-3ab1-4e94-8174-ef839ac3c5f6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d41df34a-5552-4267-a8e8-bb58ebb0b311",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "803df2e2-f03a-40ff-8992-2000988f767b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff630581-9103-48ae-b672-e8295067adec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 228.7676056338027,
      "responseMin": 11,
      "responseMax": 8460,
      "responseSd": 533.1820193059481,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690418278294,
      "completed": 1690418354934
    },
    "executions": [
      {
        "id": "da82441e-7324-4a02-a0f7-23be464d5185",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "91f4e7c6-7b66-452d-8cfd-70be893f0b72",
          "httpRequestId": "9f573f04-32c8-4577-9eb4-ce3493b1e56f"
        },
        "item": {
          "id": "da82441e-7324-4a02-a0f7-23be464d5185",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a92862b1-c543-44f5-bc99-6342277ee22f",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "eae8aa2f-59e6-4b6d-b0a4-d80a75738ba9",
        "cursor": {
          "ref": "a54563ab-5ac9-4613-b244-14c2ca8773fd",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d6d8bdcf-dbb5-4673-929c-df54a18c4001"
        },
        "item": {
          "id": "eae8aa2f-59e6-4b6d-b0a4-d80a75738ba9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "65dcfa12-8316-43c5-9bb0-0c536342ddee",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "e0b7ca49-7066-4710-b19c-123457411566",
        "cursor": {
          "ref": "611545c0-8ad0-46d4-a79e-fe6a8c25b45f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a7eb0aaf-9ce5-41a9-a375-ef67f868d2c7"
        },
        "item": {
          "id": "e0b7ca49-7066-4710-b19c-123457411566",
          "name": "did_json"
        },
        "response": {
          "id": "ece8971b-49d8-4101-972a-12525bf62a18",
          "status": "OK",
          "code": 200,
          "responseTime": 1829,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cac77e-87b0-44e2-9c06-b862aff686f4",
        "cursor": {
          "ref": "57aaf404-74b6-4850-830d-f04d568b25ee",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bab9b73-798f-4f8d-98df-5a5ffdb7ea17"
        },
        "item": {
          "id": "a1cac77e-87b0-44e2-9c06-b862aff686f4",
          "name": "did:invalid"
        },
        "response": {
          "id": "d9fd52c2-188f-49e4-859b-9accfba32a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cac77e-87b0-44e2-9c06-b862aff686f4",
        "cursor": {
          "ref": "57aaf404-74b6-4850-830d-f04d568b25ee",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0bab9b73-798f-4f8d-98df-5a5ffdb7ea17"
        },
        "item": {
          "id": "a1cac77e-87b0-44e2-9c06-b862aff686f4",
          "name": "did:invalid"
        },
        "response": {
          "id": "d9fd52c2-188f-49e4-859b-9accfba32a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ae03f8-ffd8-488a-99c9-ef251c1d1811",
        "cursor": {
          "ref": "757b37b0-f117-42ce-aea7-55e08a11f5d9",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3bd38d8a-144b-4fd0-83c4-7d95daa2515a"
        },
        "item": {
          "id": "05ae03f8-ffd8-488a-99c9-ef251c1d1811",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "75155b6b-3441-4a91-b461-4fd7320e6e80",
          "status": "Not Found",
          "code": 404,
          "responseTime": 368,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c8701c-ebaf-4a7a-b646-2258cee72ada",
        "cursor": {
          "ref": "21a744b4-d039-463e-95e6-348f95088453",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "88bbb268-ca04-4feb-85af-e3034dc1b363"
        },
        "item": {
          "id": "57c8701c-ebaf-4a7a-b646-2258cee72ada",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4207aa49-2bd2-4565-a9d8-ca4a73c8b79c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 255,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc87b010-9112-4197-b505-444a65392929",
        "cursor": {
          "ref": "b9e25951-4b9a-4897-ab3e-b1052d54ce39",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bc16d35d-80c7-486f-8f7a-66d3b933d2ff"
        },
        "item": {
          "id": "bc87b010-9112-4197-b505-444a65392929",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5c0727fb-ce31-4bf4-bd6c-cd6b515427eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc1bb61-865c-48e3-8fb3-acdf9e5fafc9",
        "cursor": {
          "ref": "2cd29a9f-4606-4965-9ec5-817322f2973c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "18e86e37-9a02-40e0-8ef1-8139a4b3c63b"
        },
        "item": {
          "id": "7fc1bb61-865c-48e3-8fb3-acdf9e5fafc9",
          "name": "identifiers"
        },
        "response": {
          "id": "5ba93ace-2688-4678-8a39-525b3dd3c08f",
          "status": "OK",
          "code": 200,
          "responseTime": 1406,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f11de4-c5c9-4a67-9cbf-513d246962b2",
        "cursor": {
          "ref": "f9ade46a-da3e-41aa-b3b1-039c3fd4105d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "eea4b50b-cf90-4c3e-9f32-5b34406ec945"
        },
        "item": {
          "id": "b6f11de4-c5c9-4a67-9cbf-513d246962b2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e715d4cf-07ba-4bec-b813-bfc07409fded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d77546-728d-488b-bc27-1e8ed66b3f74",
        "cursor": {
          "ref": "b3d4afac-c788-405c-8026-09d635f3a4fe",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6d8c9b5f-eefd-446b-b679-9c593f4cd30a"
        },
        "item": {
          "id": "31d77546-728d-488b-bc27-1e8ed66b3f74",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9da432bd-2827-4256-823e-e6d418021de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc2644e-41c3-40d2-852f-cb3204a11837",
        "cursor": {
          "ref": "fbb4350b-cfaa-49f8-8f8f-a880a5222371",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "066d8c19-366b-4ee5-a4d1-a3e37dd39300"
        },
        "item": {
          "id": "adc2644e-41c3-40d2-852f-cb3204a11837",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "44a12df9-f48b-4d1a-9bfd-6fc074dbb5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042154b7-8a70-4a56-baf3-351e32b20353",
        "cursor": {
          "ref": "bd7dff88-54a5-4cd7-9196-5bf9322b4c85",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2e4536a3-743a-43fa-be67-9a871bb19b12"
        },
        "item": {
          "id": "042154b7-8a70-4a56-baf3-351e32b20353",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "87353f4f-af78-4c41-9aba-7c31646562ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ef3ccb-acf5-4880-a138-fb2e3db137d2",
        "cursor": {
          "ref": "8ec84cae-2ca1-46d8-8d40-046910f1c7d7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "307758c3-65af-49f2-bb47-ae97b7c52834"
        },
        "item": {
          "id": "46ef3ccb-acf5-4880-a138-fb2e3db137d2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "687b719d-b752-4833-94b4-cd01ca395cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7663db51-77c1-4dc0-9c87-47acb4d72e5c",
        "cursor": {
          "ref": "a2af804c-b37c-416b-a3a3-2d272792f6d6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7ad8c713-cfe4-4770-bb0d-7ceb9ca6d978"
        },
        "item": {
          "id": "7663db51-77c1-4dc0-9c87-47acb4d72e5c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b5448d4c-3b40-4d18-80c3-a723e581894c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584cb15c-92f7-4b0a-bde4-b11152f4bb8d",
        "cursor": {
          "ref": "061ca397-d518-4768-846a-5b5f7b41a3c1",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "57e2f2af-847d-4f31-a370-98c49a839ac3"
        },
        "item": {
          "id": "584cb15c-92f7-4b0a-bde4-b11152f4bb8d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9a9c9264-8b4f-4f9e-8142-658f6f24822a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f31b8d3-6f1c-44d3-8d69-cb3839cadb78",
        "cursor": {
          "ref": "4cdf1c4c-9ccd-44f5-b5f8-d3335fdeaacc",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0ccfeed8-2063-499f-b782-ebef1993be2f"
        },
        "item": {
          "id": "7f31b8d3-6f1c-44d3-8d69-cb3839cadb78",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "64b0e094-985e-4590-a475-f5aa16b92a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e38feb2-cf83-4598-8c32-9f60bd0aa292",
        "cursor": {
          "ref": "7299bd64-18d9-4e6d-8af9-a89aebbc9c41",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "63f20265-d41b-4c7c-a314-c59cceee8a55"
        },
        "item": {
          "id": "1e38feb2-cf83-4598-8c32-9f60bd0aa292",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5b7934ad-27a0-44fc-8042-5936070a034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87f9168-f33a-425d-8a35-c314d0852305",
        "cursor": {
          "ref": "16134a50-b8ed-4c93-8b46-999ef9ed2b5e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c010be12-9258-4c5b-8117-8ab531f9beb2"
        },
        "item": {
          "id": "e87f9168-f33a-425d-8a35-c314d0852305",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "20d32692-8056-4b3f-8eef-403f376b7e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7494546-8697-458f-a183-017c37326bf4",
        "cursor": {
          "ref": "54fb863f-e862-46d9-b9b7-97c14e8fb69a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "13a79135-86b1-4c45-bff4-fcfd7d88c78c"
        },
        "item": {
          "id": "f7494546-8697-458f-a183-017c37326bf4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "41ba681d-7296-49ce-9a3a-ed09eddeba8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0320b24-27b2-4a4d-bf43-512b7e67c24b",
        "cursor": {
          "ref": "e1f7e6aa-2634-4f9d-b014-8209ffca827d",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "eb503315-ea44-4756-af0c-873d2c00c393"
        },
        "item": {
          "id": "a0320b24-27b2-4a4d-bf43-512b7e67c24b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2a5b178b-578e-4956-8da5-fc0abfa37a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267d2b25-dcc2-4f70-80f8-742e008819b9",
        "cursor": {
          "ref": "7fb4c3e7-82f1-48a5-98a3-938a3aa369ed",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8dfbbad2-ddd7-4934-9c07-4db58e1bf0af"
        },
        "item": {
          "id": "267d2b25-dcc2-4f70-80f8-742e008819b9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4e706ecc-a3e9-4f04-8160-3e5047547582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17a45ae-cb5f-4f05-84df-f92f99418bab",
        "cursor": {
          "ref": "17cbb02e-60de-4c17-9970-c3883ce95923",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6da33943-4716-49ba-8a6f-95f5cbce5d4c"
        },
        "item": {
          "id": "c17a45ae-cb5f-4f05-84df-f92f99418bab",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ad32d450-47ba-4307-8dbf-7dcad48216e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9775b4cb-ea96-41b1-a148-2d8a9a7226dd",
        "cursor": {
          "ref": "72db0930-ee1b-42de-ab95-cebce7e5ed0e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5cfda990-d6f4-474b-9073-28f35b51e4cc"
        },
        "item": {
          "id": "9775b4cb-ea96-41b1-a148-2d8a9a7226dd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "057f115a-5d2d-4ab5-9319-e06f5d121b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8668eabd-646a-4787-8d01-8d7bac7e409c",
        "cursor": {
          "ref": "2f8ea575-dbca-446a-b858-54afc75e8b61",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "254ac28a-de78-469a-aad4-2a15ad3f88ba"
        },
        "item": {
          "id": "8668eabd-646a-4787-8d01-8d7bac7e409c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "91f28641-9fe6-4eef-893d-761786090ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7520a073-aa76-4ecb-9bce-5f47e86682ca",
        "cursor": {
          "ref": "c8e177ad-21d2-4537-b6ee-daaf26acf5dc",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "83907fba-30f9-45d0-8f74-9941bd4e3cbf"
        },
        "item": {
          "id": "7520a073-aa76-4ecb-9bce-5f47e86682ca",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "59bc01ed-2f35-41be-a28d-523f0f8cde96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8a7dc6-b255-4cdc-a67e-64407118f703",
        "cursor": {
          "ref": "a572a411-a273-4ab9-8cc6-80444c47c477",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fbbecc1f-694d-4053-82a5-5381cda04a3d"
        },
        "item": {
          "id": "0c8a7dc6-b255-4cdc-a67e-64407118f703",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bcb70155-c4ca-413d-a4db-b33ef848bdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19954a5-090a-4fe5-9a27-426ef164b8f6",
        "cursor": {
          "ref": "efc479aa-4150-4b82-9f11-209a42fc340a",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ea670b76-d40e-4387-81db-6828f19130dd"
        },
        "item": {
          "id": "e19954a5-090a-4fe5-9a27-426ef164b8f6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7a290654-ee74-497f-87e1-1cb529377720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8a63f8-8eed-4228-b87e-dbaa5d878ad7",
        "cursor": {
          "ref": "171baf66-618b-4288-aa13-17b2ff298f0e",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fb966a9a-88e9-44a6-9ec5-3da63aad4274"
        },
        "item": {
          "id": "7d8a63f8-8eed-4228-b87e-dbaa5d878ad7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8eb93455-73a0-4ab5-a92e-709828651d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14391717-ad1f-45b9-be57-7dd51f51adae",
        "cursor": {
          "ref": "8a9e5aa6-be0d-4154-9fc9-320987fa5b75",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "951b24d5-f414-44ba-836b-c9c6467dbfe9"
        },
        "item": {
          "id": "14391717-ad1f-45b9-be57-7dd51f51adae",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e483137b-ea25-4f46-a055-592284f80ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e91e64-ceb5-41d7-94bd-c313d04452bb",
        "cursor": {
          "ref": "1d07f485-7460-486a-8d6b-2ffe0e0ef641",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8ef64b77-e13c-4872-acef-4421ed9dfa56"
        },
        "item": {
          "id": "a4e91e64-ceb5-41d7-94bd-c313d04452bb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0a8c9d68-019d-45f0-aceb-e9b2a9354450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbd3c3b-58e0-4092-a86d-f358cff67bf3",
        "cursor": {
          "ref": "02a50eb5-a0f6-4a9f-89a5-821f4b946c03",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c98eca86-e6eb-4d53-80e1-3de3b2b21a24"
        },
        "item": {
          "id": "dcbd3c3b-58e0-4092-a86d-f358cff67bf3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "52699925-a0e1-451d-96c6-9a621a1bce55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bf2564-f5d2-400a-809c-8c1761f64e0c",
        "cursor": {
          "ref": "5aa8356f-4dc2-453d-bcfb-26c7499f32b4",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bb65c7be-014c-442f-abdb-99f7db74baca"
        },
        "item": {
          "id": "43bf2564-f5d2-400a-809c-8c1761f64e0c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e0e9f531-ef27-49bf-9d13-62e558d25270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc996d50-36ae-4210-a7b9-cf4a76598a44",
        "cursor": {
          "ref": "d09063df-545f-4714-9ae5-2d98a2ce08dc",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fc42f2b9-c0ae-4742-a8fa-94af32a6e466"
        },
        "item": {
          "id": "fc996d50-36ae-4210-a7b9-cf4a76598a44",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "02f50234-0f94-4ab1-8dc1-7dcfefdc8c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc202dc7-9e77-4354-9e01-4eeb68902a4e",
        "cursor": {
          "ref": "529add2d-50db-41ab-8d0b-96a9d6a1387a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4c2328fa-1562-4356-877d-eabb9750c826"
        },
        "item": {
          "id": "fc202dc7-9e77-4354-9e01-4eeb68902a4e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5db81cdd-3426-4456-8048-027a7fa24699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31328354-e284-488c-b8b9-210767a2f353",
        "cursor": {
          "ref": "41ab86b8-7da2-449f-b025-b7794b463cd0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "219f0f0b-cbaa-46d8-80cc-328475b98f13"
        },
        "item": {
          "id": "31328354-e284-488c-b8b9-210767a2f353",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "105cb3af-569a-42c9-8c2e-13d6751383b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e11847-a761-4fe0-9e5e-91b3620a3c88",
        "cursor": {
          "ref": "bf44f334-ed29-40f7-a5d3-fae40d43415f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5ffb6804-4da8-46e8-b18f-d987ee3fb1a2"
        },
        "item": {
          "id": "e0e11847-a761-4fe0-9e5e-91b3620a3c88",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d5bfbff0-a0f6-46a0-ba41-c355b16ca9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cb80d6-e90b-4a1b-9daf-f1bb19b9480c",
        "cursor": {
          "ref": "d34f2ea0-785c-40dc-ad5a-c5188902fdb7",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ee9ee465-acda-4042-a9c5-2d0114249066"
        },
        "item": {
          "id": "51cb80d6-e90b-4a1b-9daf-f1bb19b9480c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "433a755a-f0e1-4c25-9175-2f8ba61bb101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3166526-573e-4538-b815-02044603a9aa",
        "cursor": {
          "ref": "38cc44a3-d129-4716-ad14-d7c045a2a6c8",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dffafbbd-534b-49d1-8c30-3d6b46a40cff"
        },
        "item": {
          "id": "d3166526-573e-4538-b815-02044603a9aa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "09e8110e-6a55-4375-a7c9-04105c02834f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5754588-1995-4d72-aede-a1a6b5ab4ee2",
        "cursor": {
          "ref": "63ce10dd-9d9e-459f-8ded-dba444c51857",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ff8f839b-3bb1-4616-9412-11ed6514e7c4"
        },
        "item": {
          "id": "d5754588-1995-4d72-aede-a1a6b5ab4ee2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "719d3d0a-bc71-4a39-b7af-4ccb15698a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce7f881-2ac3-40ba-a226-efc88951e201",
        "cursor": {
          "ref": "60aa8b79-8381-4656-b934-7155df2b25a5",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9e803851-f4fa-400b-b7df-90e85d7958f7"
        },
        "item": {
          "id": "8ce7f881-2ac3-40ba-a226-efc88951e201",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c87c8978-c019-4bc6-aa50-5a716d2997cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1354b7f-7674-4105-8fdb-ee7ca913cf75",
        "cursor": {
          "ref": "36a5e3e9-593e-4a5b-a091-1473d6690fe6",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a07c473a-508b-4aac-8a7e-0f54371a3166"
        },
        "item": {
          "id": "d1354b7f-7674-4105-8fdb-ee7ca913cf75",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f3d6716b-6b34-4847-bf76-634da4d8d3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979cd886-d535-4e65-a42a-94895fe96a85",
        "cursor": {
          "ref": "ed8df4b8-a3d0-4be4-a1a7-1f8747f6c0ca",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "20b3caf9-c5da-4710-a08c-c0e2450d4914"
        },
        "item": {
          "id": "979cd886-d535-4e65-a42a-94895fe96a85",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1f1abf94-5c77-451d-a19c-65d935032687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1467d009-42d9-4c9f-9cf2-b4e6f90746c0",
        "cursor": {
          "ref": "8e307c93-6c7c-4057-8bb7-74a0df73a8d5",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a06acfc6-6c9d-4b14-a9ae-041aaf206ef2"
        },
        "item": {
          "id": "1467d009-42d9-4c9f-9cf2-b4e6f90746c0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "84dcd7eb-b14b-4896-98e1-3b8fbe02ce67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9caa04-1b89-478d-8270-2514b5c04176",
        "cursor": {
          "ref": "bbb65b2b-f215-47c4-ae94-ff152cdaa3e7",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6592f01a-a384-49cd-babe-85394e37440f"
        },
        "item": {
          "id": "2d9caa04-1b89-478d-8270-2514b5c04176",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0b4304f2-2471-47b0-9801-956624868657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e83b45-0b28-42e3-a138-dbfd67d0e1aa",
        "cursor": {
          "ref": "1b860f57-8fb3-441c-9938-5100c9cb6eae",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f3d47fea-45e2-4823-9562-05224b28bd7a"
        },
        "item": {
          "id": "47e83b45-0b28-42e3-a138-dbfd67d0e1aa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e53f9721-bd83-47d8-8303-f324a1ad5710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2f74b9-adcd-480f-ba83-f375589d0ed4",
        "cursor": {
          "ref": "a8921a59-5a20-4c5b-bc3b-b3f66946eb78",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4e8c3926-58c9-44b5-926f-f8f6cba84db7"
        },
        "item": {
          "id": "ff2f74b9-adcd-480f-ba83-f375589d0ed4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d92d2f07-659e-45da-acf7-51286897bcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1103693a-d813-4279-a288-60f38bed57e4",
        "cursor": {
          "ref": "9e5e0547-d023-4e86-84d5-ff37f0338f63",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "302a938f-c411-4e85-a769-78aa5bd9a2b1"
        },
        "item": {
          "id": "1103693a-d813-4279-a288-60f38bed57e4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b1df5f66-8e6b-4694-9bd9-994c91f3d87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7db4a57-3c96-48f1-9e6c-441f39825014",
        "cursor": {
          "ref": "19926928-ed62-497b-869e-b22f5f3aaefb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c107f3ee-5d4f-4fcd-aaf5-402eba85bb5b"
        },
        "item": {
          "id": "c7db4a57-3c96-48f1-9e6c-441f39825014",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5b133f97-88fd-4d62-a85a-92d7ba9ddb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6865ae25-d0cf-4fd6-ab49-e08a02305226",
        "cursor": {
          "ref": "e5b160b1-8906-4d99-addb-38fb9f88c4b3",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1b3dd95a-9e8a-48c9-a125-56f618c33d00"
        },
        "item": {
          "id": "6865ae25-d0cf-4fd6-ab49-e08a02305226",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7c65cbd1-64f3-437e-a49f-a98c2b75cf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac79b2a-06b2-494a-bd59-fa54e0c5d699",
        "cursor": {
          "ref": "b75d9c88-8985-40b3-b5c4-e24a8f780b6f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5548a294-5d55-4175-86d9-f6263ad00e21"
        },
        "item": {
          "id": "1ac79b2a-06b2-494a-bd59-fa54e0c5d699",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "291e2d36-534b-4dda-898d-d9cd6ba88417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae42868-b699-402e-ba62-632f5e152b06",
        "cursor": {
          "ref": "9411d6d3-0cf6-4699-b1e7-d2d6e43e3f65",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3a5d75f2-f0e5-407b-9151-2968a166ace7"
        },
        "item": {
          "id": "7ae42868-b699-402e-ba62-632f5e152b06",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d998760b-66b9-4820-9758-10df9102926c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d212a856-f706-4a84-9246-c325d122063c",
        "cursor": {
          "ref": "4ca789e9-9879-49e2-b516-af16ea7630b5",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0fd9b70b-8afc-4e7c-9960-911c6c6cab8c"
        },
        "item": {
          "id": "d212a856-f706-4a84-9246-c325d122063c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e39cf88b-3a7c-4663-97a3-b98d105e170b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b38dc2-8ee4-4b8f-ad78-64adc48d5ce9",
        "cursor": {
          "ref": "d154e694-22cb-4b1f-aaa4-30bda6def834",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0446e0af-2116-445e-9b1c-fa0128950274"
        },
        "item": {
          "id": "88b38dc2-8ee4-4b8f-ad78-64adc48d5ce9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9d7b6e73-5d39-4885-bbc9-fefb6379bf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574fb5cd-7b23-4dde-bdab-bfb60539e063",
        "cursor": {
          "ref": "732b5b22-2eb3-4767-b339-b82f72b48c4a",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "693f5106-d8cd-4d11-af4c-c89a24d6c6ef"
        },
        "item": {
          "id": "574fb5cd-7b23-4dde-bdab-bfb60539e063",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9b41e11b-5a31-40ba-a087-ab396e4a5d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70c8279-85f2-4b6d-a320-92c3fa938715",
        "cursor": {
          "ref": "a099c4ba-7baa-4636-b7be-a99d8e3279ce",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "300fd8df-6c8a-464a-b196-f48e46b44d29"
        },
        "item": {
          "id": "c70c8279-85f2-4b6d-a320-92c3fa938715",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7cdad265-767a-44a3-a9d2-040cc45d3de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7deae1-cf4e-4791-b808-bd8600d2c950",
        "cursor": {
          "ref": "57fbd57e-8f6b-45dd-9caf-46b99a5295a1",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "19b3abf3-ef2d-45db-989a-2179d581cbc8"
        },
        "item": {
          "id": "3c7deae1-cf4e-4791-b808-bd8600d2c950",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b0ab76db-141d-49aa-b3fd-ada0244c9829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626167e8-ec09-412a-9b97-4a0d1766002e",
        "cursor": {
          "ref": "945cad8e-87c5-4eb4-8322-9de43f48084d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d65a5bfd-0073-4327-bd4e-4f1ea134e61b"
        },
        "item": {
          "id": "626167e8-ec09-412a-9b97-4a0d1766002e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0661f331-456c-48d1-b6c4-4b19c527ba2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84fc4fc-17ac-4082-87a0-2509783d13f9",
        "cursor": {
          "ref": "313b10ca-5980-4683-8ec4-19692f106f72",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f667b3ff-edc6-4399-8a11-c2a415c2c19a"
        },
        "item": {
          "id": "a84fc4fc-17ac-4082-87a0-2509783d13f9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "00a9aedd-9cfa-4a4c-9997-df15dddae7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b99a7e-0d3b-4a9c-8cb2-c40e2a549b52",
        "cursor": {
          "ref": "901dde5b-7c8e-4c69-a419-12cb8c4fa5c6",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c2c586d5-3a67-492c-b40e-ba7c88701550"
        },
        "item": {
          "id": "09b99a7e-0d3b-4a9c-8cb2-c40e2a549b52",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a07f6909-9ade-4211-8b9d-0d453d4e7ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739dcfe2-32b2-489b-afc1-b2f4d5318dc0",
        "cursor": {
          "ref": "368326c8-81cc-44d7-8391-de55657d6e02",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1e929d85-eb37-40b2-bd22-8d917059319c"
        },
        "item": {
          "id": "739dcfe2-32b2-489b-afc1-b2f4d5318dc0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "694fa105-23f3-4d07-84ef-ed0cc349a699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff93059-8a53-4669-a5d4-f7fc528912f9",
        "cursor": {
          "ref": "aa897e45-1a2c-48cd-8cf8-a4176599b7ef",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3fab088d-6eb5-4a8e-9cc7-63c3575a375a"
        },
        "item": {
          "id": "2ff93059-8a53-4669-a5d4-f7fc528912f9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9040a4a9-1d11-4c55-83e3-a61331b2018e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083cf4b2-9c9f-406d-8167-d206eb1412fd",
        "cursor": {
          "ref": "2dfd80db-94d8-459b-95c1-f7ee7f4980f5",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d66b5733-b6d9-4f06-8558-6c16d23da6db"
        },
        "item": {
          "id": "083cf4b2-9c9f-406d-8167-d206eb1412fd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b7a52f14-b8db-4765-9eaf-9ce8f4aaa010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80e5d5e-5b54-4f0e-a849-83c2385f3e91",
        "cursor": {
          "ref": "9bd5078d-b65d-47ab-b467-b2feda27c585",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "198fd421-542b-4e61-be36-ee62b9019f2d"
        },
        "item": {
          "id": "e80e5d5e-5b54-4f0e-a849-83c2385f3e91",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ac482a3e-5aae-43f1-9885-e70138117a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d07fcdb-78b9-4135-aacb-2f24d3037bed",
        "cursor": {
          "ref": "dc38cf2e-a45d-4efc-9a42-1a6dc2182f48",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c2c85a45-90d2-4946-97d2-03c2d134d9fd"
        },
        "item": {
          "id": "9d07fcdb-78b9-4135-aacb-2f24d3037bed",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cbb5094f-9884-4852-b0bf-b1a33d310902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fc9c45-4e4a-4b94-b870-7d07452595e6",
        "cursor": {
          "ref": "236cbe2c-5c47-4e23-a742-038d47b465c7",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "57da1047-76e9-4033-a473-f72f92f5d149"
        },
        "item": {
          "id": "f0fc9c45-4e4a-4b94-b870-7d07452595e6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5c8678c2-d79d-4fe9-83f1-7e29d20c6af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e12408-b151-460b-949b-6496864f3843",
        "cursor": {
          "ref": "6b940c09-adb3-4203-a16c-e6e06907a8c2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fd06048a-af72-40d7-874f-c33d0272f1be"
        },
        "item": {
          "id": "92e12408-b151-460b-949b-6496864f3843",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "24f115d9-7a4b-4b6d-bb30-1ff60fc7e56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfa5329-1ccb-4fe7-af0a-77e6168b1cc2",
        "cursor": {
          "ref": "d2435893-9b23-4e5f-8e97-a929a8705554",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8e1c9f6f-80e0-45c5-a56e-0fd2557af3ac"
        },
        "item": {
          "id": "bdfa5329-1ccb-4fe7-af0a-77e6168b1cc2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b96fcede-44a0-4fef-83a1-e0bbc4e83813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a22569-b047-4bd4-abb5-b6a453fbc451",
        "cursor": {
          "ref": "37d5c360-9091-47b3-a62b-5fa3ebe9ad9f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c6488487-6a0a-44b8-94c1-1693eee6a8ff"
        },
        "item": {
          "id": "94a22569-b047-4bd4-abb5-b6a453fbc451",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e73a781e-0345-4996-9b87-2a741c8b1d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1869b2b7-a439-4326-9dc8-6d55eee8b65b",
        "cursor": {
          "ref": "818baebc-555e-4433-b639-64dc4fbe72ab",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f8cf6309-e857-4deb-bcab-5f1d5766d503"
        },
        "item": {
          "id": "1869b2b7-a439-4326-9dc8-6d55eee8b65b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c5fdedee-dce8-45b3-9797-b43330c161b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aa6f65-065c-463d-8444-064b8ce389c2",
        "cursor": {
          "ref": "334647e3-3cc0-4066-8e4d-68687e9fa0ac",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b20976be-521b-412c-bf71-91e980ed6e74"
        },
        "item": {
          "id": "74aa6f65-065c-463d-8444-064b8ce389c2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "634e5440-a5e8-4e5c-8a38-155a5800a572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5236e6-9441-48de-b883-b37038ed2b57",
        "cursor": {
          "ref": "9baba9f6-2fcc-4051-9948-8a7025edd077",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f29379c2-d5c7-4146-bb67-9648af27b7cd"
        },
        "item": {
          "id": "cc5236e6-9441-48de-b883-b37038ed2b57",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "69a92904-0a76-4ebe-aad7-d8a74370f679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b942cc75-acbe-48fc-8614-661e9489c2f5",
        "cursor": {
          "ref": "46780975-3ebf-4179-8a55-4e9c015402d9",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ad537f5a-fb41-4947-a31b-b2160c1f9c19"
        },
        "item": {
          "id": "b942cc75-acbe-48fc-8614-661e9489c2f5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "644032b9-341c-416b-86b1-931d1137f7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13ef59f-485b-4363-a8c6-c22808d34266",
        "cursor": {
          "ref": "a30d3688-3bc7-497f-aa57-a90dae9b904d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6d129820-5591-4860-82c0-a3fa5ef6aa6b"
        },
        "item": {
          "id": "c13ef59f-485b-4363-a8c6-c22808d34266",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2a5d1678-0617-43a9-b982-b9678eb0ea7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19fd8b9-8f94-43c9-90bc-0a586f0b55a3",
        "cursor": {
          "ref": "c2616c57-2fcd-4289-bd9f-5527fa748ebd",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "553cde39-9633-47ba-9084-44473ae513be"
        },
        "item": {
          "id": "e19fd8b9-8f94-43c9-90bc-0a586f0b55a3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e46247e3-d2ea-42de-a02f-fdd15b22f721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f64268-186b-4eb1-9ec6-ba024dc009b8",
        "cursor": {
          "ref": "a44ced31-ee09-4e6f-be3f-c3db92fdc763",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "59001085-08f8-44a2-8899-6d6ac61d996e"
        },
        "item": {
          "id": "a3f64268-186b-4eb1-9ec6-ba024dc009b8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "34c1a402-c4fa-4c24-82a7-16f60c2c46e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776037b1-134f-4f2a-a645-240f5ce04091",
        "cursor": {
          "ref": "ca23c002-f378-46b4-9d9a-c72aa071f211",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e23c1623-eb05-4331-9010-0cec2195dcb1"
        },
        "item": {
          "id": "776037b1-134f-4f2a-a645-240f5ce04091",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1773fb2b-c948-4606-8332-9e4e41a2e97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9042c4-dced-4313-ba57-1880f36539a5",
        "cursor": {
          "ref": "fbecde75-d494-47ab-a36e-67abd60a93e7",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f2e4d61e-14b8-4c74-a5f2-a97f7de2eff8"
        },
        "item": {
          "id": "2b9042c4-dced-4313-ba57-1880f36539a5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7de486e8-4558-4798-8409-159d09197b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb33d78-fb4b-416a-af0d-ec165c372e66",
        "cursor": {
          "ref": "87508a02-3ce8-4a74-a585-84d7f5b5d507",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6dbbda7d-d172-4e01-9fad-94f7c49ac68a"
        },
        "item": {
          "id": "efb33d78-fb4b-416a-af0d-ec165c372e66",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "145c387e-a356-4304-ae2c-f162e1fa9a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71723711-5b35-4e81-b137-f9bdc99e0b68",
        "cursor": {
          "ref": "e1dfeede-5383-4234-ac8d-933686f4e3bd",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d58345bf-4103-4bd5-9c92-eb1a32a8e44e"
        },
        "item": {
          "id": "71723711-5b35-4e81-b137-f9bdc99e0b68",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2ef0ca66-0ab4-4ad1-aa6c-738386210929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f681edfb-f3ac-4310-9d4a-3d4879eee747",
        "cursor": {
          "ref": "bf146c28-c842-4fb7-8413-0ca0f910e619",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f034284c-0e59-4741-bf16-7b6702a6cd4b"
        },
        "item": {
          "id": "f681edfb-f3ac-4310-9d4a-3d4879eee747",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "056df4b8-21d6-4bfe-9149-247b05183be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f7f006-29a4-4f45-b34b-9ec0220516c7",
        "cursor": {
          "ref": "fa678867-6791-462c-916f-80038472b68b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "867d027f-3443-4a20-85b1-9cb42815e877"
        },
        "item": {
          "id": "84f7f006-29a4-4f45-b34b-9ec0220516c7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a3975054-0aa2-482f-a1b4-c5a4b1ad5a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02a0915-48c7-48ac-9733-44fd30a06ac5",
        "cursor": {
          "ref": "5d598983-26f6-4bb5-8169-358327317e35",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bcd3280c-7621-4c9a-a5d0-02c2f5a84121"
        },
        "item": {
          "id": "d02a0915-48c7-48ac-9733-44fd30a06ac5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e3ac7531-e682-431a-8f8f-224e61438912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f5cfaa-cb16-4533-993b-65d15fab8f9d",
        "cursor": {
          "ref": "d1a61f74-c641-49d6-8477-73e8b19f9c74",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "492d9ff7-701b-458c-87b9-1f204866cce2"
        },
        "item": {
          "id": "67f5cfaa-cb16-4533-993b-65d15fab8f9d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2f063b75-776d-4f9e-a033-66bcb1c86880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1f1a98-ec13-4500-94bf-701cba42e20b",
        "cursor": {
          "ref": "8d894565-aa97-4a54-9564-84b0f29182c1",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9d66a45c-8437-46e7-bec9-3b43e811cb62"
        },
        "item": {
          "id": "ef1f1a98-ec13-4500-94bf-701cba42e20b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c1c5e56d-bbfe-4542-8922-54c87cff41e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dacbc7-af28-44d8-820e-ec47c4f1ecd6",
        "cursor": {
          "ref": "400bb792-ae11-45e2-8755-c1eda89138d5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b78dc978-b4c5-43f5-b3dd-f8a67d13ba32"
        },
        "item": {
          "id": "00dacbc7-af28-44d8-820e-ec47c4f1ecd6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7bcd74d3-47bf-4295-b19a-796c83a99d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60a743c-aa13-4dae-b076-ad6455e2d2f3",
        "cursor": {
          "ref": "70085801-b239-433c-bfd4-f011a96a7dc0",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6d560fbd-ce8f-44b8-8672-3bf6ebf67af8"
        },
        "item": {
          "id": "a60a743c-aa13-4dae-b076-ad6455e2d2f3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e82fc517-60ae-4b03-a529-99bc35c016f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1246b7-c574-4e3c-be80-34eb904a4563",
        "cursor": {
          "ref": "17848a45-fd2c-4022-9476-e8306e5cc94a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "36b7bb13-6174-4246-9182-7c95082a12ca"
        },
        "item": {
          "id": "fd1246b7-c574-4e3c-be80-34eb904a4563",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6f681299-b7d0-4551-906d-64fbb1585e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cfb46c-2f2d-45b7-93f8-8be72ea8e5de",
        "cursor": {
          "ref": "f6406311-9fc6-43ad-860a-58e3bcac5fe3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "157f33ad-0902-4679-95ef-f445b1f12443"
        },
        "item": {
          "id": "73cfb46c-2f2d-45b7-93f8-8be72ea8e5de",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "61ee355b-262d-40af-b9c0-d7bda5b9b6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7c6ae5-0e39-4df5-9d02-d30a4a39e63d",
        "cursor": {
          "ref": "bf7169b3-f07a-4125-bf12-40a26f76b209",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f3268bc7-a427-4806-8296-0af2cb555a04"
        },
        "item": {
          "id": "9b7c6ae5-0e39-4df5-9d02-d30a4a39e63d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1a7fa715-59ce-4af7-8781-f106163c687c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfb0966-09c8-48ea-af39-47b5149f6846",
        "cursor": {
          "ref": "17cd16d5-f482-4170-b743-034dc182aca2",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0e75a083-f058-47ba-a119-313294876def"
        },
        "item": {
          "id": "bcfb0966-09c8-48ea-af39-47b5149f6846",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4be438cc-4779-4c46-bf5b-37e931c528a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2149e27c-b2ee-466c-9599-0312392a92ea",
        "cursor": {
          "ref": "4178afd9-09f2-4061-b730-a7565d509674",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "41d4c097-6ee4-40b7-a5a5-e9f7fd822188"
        },
        "item": {
          "id": "2149e27c-b2ee-466c-9599-0312392a92ea",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f0eca279-3751-45fa-88f5-18e63f3d93c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95c3ece-fac7-4279-8586-19dfbf07df3b",
        "cursor": {
          "ref": "4245eb96-4351-4091-b654-caed09408eed",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4214b745-67c6-4c71-bd3c-93aac0956227"
        },
        "item": {
          "id": "d95c3ece-fac7-4279-8586-19dfbf07df3b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "31ae1aa7-0114-4d0d-9d4f-0a6dea12372e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6b5410-db98-4efe-93c1-1d57a13acabd",
        "cursor": {
          "ref": "2839094a-ee1d-4587-9b4a-12a3f674d508",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0d33ced4-73d2-4b51-ad62-1ce69363b008"
        },
        "item": {
          "id": "2e6b5410-db98-4efe-93c1-1d57a13acabd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c7534584-8020-4b83-b004-7f47e8db7471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f7e440-8c8f-4d3f-8b4b-c4457a3e0118",
        "cursor": {
          "ref": "1c760ae9-29c7-4c3f-b261-07ec852fda0b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0106fb11-4a79-4ec8-a064-1048332bc091"
        },
        "item": {
          "id": "c1f7e440-8c8f-4d3f-8b4b-c4457a3e0118",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ca120c38-11d9-474d-8a37-96d9e3bba080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91ccf32-df6a-4a73-8d90-dbe95b50fcb9",
        "cursor": {
          "ref": "1c022c5c-0be7-42ce-aa9b-aa18a9ccdf06",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2cb83e11-1a74-456c-ad78-7de4c4eb9be3"
        },
        "item": {
          "id": "c91ccf32-df6a-4a73-8d90-dbe95b50fcb9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a0c18821-bc76-41aa-a141-3a73c78f4597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98c743a-735e-4369-b93b-9e7efbd1bf8e",
        "cursor": {
          "ref": "cbe959b8-72d8-49c2-9e6d-0b22d8e2e99a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d1c735f6-c736-498b-a0a4-1fc96a266962"
        },
        "item": {
          "id": "e98c743a-735e-4369-b93b-9e7efbd1bf8e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7867243a-e59b-4719-9e81-32706676dfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d451ad-0de7-47fe-a63a-f42ec56795b2",
        "cursor": {
          "ref": "e1e8e992-4713-433b-a38a-d805df07a717",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0541ac80-840c-440a-9515-cd70dad850f7"
        },
        "item": {
          "id": "a7d451ad-0de7-47fe-a63a-f42ec56795b2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b2c77790-1031-4166-a670-a1f06b9c5889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04add650-b92b-47c2-8b5a-08217e65a68d",
        "cursor": {
          "ref": "d52cf8bf-0d5e-4185-b8d1-7716bd833281",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ae314bf6-b168-4e59-aca6-403c12aa76be"
        },
        "item": {
          "id": "04add650-b92b-47c2-8b5a-08217e65a68d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "eb5542bd-15af-465a-95b5-9936c8219b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e4eff2-ba2e-4f59-b0a8-4f1f8316b562",
        "cursor": {
          "ref": "e5b7b0de-a284-4d2d-9213-7887f17df9a1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1759ea7a-665d-4041-b6ad-09c9c6ff606c"
        },
        "item": {
          "id": "b0e4eff2-ba2e-4f59-b0a8-4f1f8316b562",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0a01ffac-d72a-487e-b7b8-3a337602a92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c822d6-84ae-4a58-94d2-3e9687ea661c",
        "cursor": {
          "ref": "8761ddee-3aa3-4528-9ad6-be1bfd17564b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "98df199a-703b-4668-9b0c-65f39bedef4c"
        },
        "item": {
          "id": "c6c822d6-84ae-4a58-94d2-3e9687ea661c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7431417d-8214-429d-814f-c4de8291b097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a808e051-8e25-408b-90ac-9e40a61b56cf",
        "cursor": {
          "ref": "ed09fc46-c844-4c4c-900c-282b748faeca",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0fcdeb21-1d50-4886-92f7-dbb367386673"
        },
        "item": {
          "id": "a808e051-8e25-408b-90ac-9e40a61b56cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d0b6f4f4-5d8a-479d-995a-49f838311192",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f374b1e7-a969-453c-a932-428b67b21dee",
        "cursor": {
          "ref": "c7e2acee-5a75-4195-8147-cf19aea84585",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "19222e6a-4c5d-4351-9ae7-164ca7d29af2"
        },
        "item": {
          "id": "f374b1e7-a969-453c-a932-428b67b21dee",
          "name": "credentials_issue"
        },
        "response": {
          "id": "08e2ab1a-ab3f-4cac-8a06-2574c854e2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "ead26a8c-e07a-4dff-8f8a-a30558d8785f",
        "cursor": {
          "ref": "93c0bffc-d07e-4d4b-b9c4-b62f57f4efae",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ea3aaabd-6266-489f-ab38-a8ca3298bea5"
        },
        "item": {
          "id": "ead26a8c-e07a-4dff-8f8a-a30558d8785f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1da83169-70f0-4b2f-b891-ea8791271d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "c94fb459-8982-4c16-97be-b405e94f0ca7",
        "cursor": {
          "ref": "6ce208cc-c6a8-4e04-8006-467a9c9e412d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "90071192-6350-4dbf-9831-62d2eb353fe3"
        },
        "item": {
          "id": "c94fb459-8982-4c16-97be-b405e94f0ca7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9cd9e54a-1ecf-4a7d-aef7-aa826b987669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a43aa526-0516-416d-a7bc-20a5b12d3c84",
        "cursor": {
          "ref": "e59c3fb3-48ec-413f-8f9c-968d2943f36e",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f6dc50e2-8835-45b8-978c-32b37dec84e9"
        },
        "item": {
          "id": "a43aa526-0516-416d-a7bc-20a5b12d3c84",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "da763169-74ea-434b-978b-7c0acc059dcf",
          "status": "Created",
          "code": 201,
          "responseTime": 8460,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ca5691-88aa-41d1-b581-6495c75b4122",
        "cursor": {
          "ref": "66fe7aab-29ee-4b7a-ada1-882b74a56cfc",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c9e7dc81-20e5-4740-9acd-c13fe15dbdf9"
        },
        "item": {
          "id": "e9ca5691-88aa-41d1-b581-6495c75b4122",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7412a4e3-478c-4ca9-a030-28c2ec469cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "2843b5ac-8331-4275-bcba-607b1d5b6459",
        "cursor": {
          "ref": "c830bc36-4b96-4c29-ba51-ca0e4292679f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ea2c8f80-d966-431c-a18c-537ac01c209f"
        },
        "item": {
          "id": "2843b5ac-8331-4275-bcba-607b1d5b6459",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "76583964-a4ed-4275-a919-e8a5c81a8dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "7d8c6d84-c11b-4448-b30d-428674787498",
        "cursor": {
          "ref": "fa026818-37e0-46ab-be89-ce12cde7885d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6fd26ec6-aad4-4e92-b4d7-118047223e3a"
        },
        "item": {
          "id": "7d8c6d84-c11b-4448-b30d-428674787498",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7c5cf5c9-a258-4a5a-a649-7c219cfc8ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e35942a-dcb2-47af-a84b-98a9a07259c6",
        "cursor": {
          "ref": "e1db14bd-04ef-43b8-a47c-388b91da14f5",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1b0998c4-e49c-4d6c-8348-66d5b1072b20"
        },
        "item": {
          "id": "8e35942a-dcb2-47af-a84b-98a9a07259c6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b235a40d-3292-46e2-9b4d-58eb39194255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550770a7-96bb-4b24-a159-bdc69426f9cd",
        "cursor": {
          "ref": "24d2ea12-1914-42c0-b168-7260e4aef3d9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a3c6e56b-496a-4d46-ad85-d7f2ffe66536"
        },
        "item": {
          "id": "550770a7-96bb-4b24-a159-bdc69426f9cd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "908ff692-3bcb-4fe1-869b-9661d0c77e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2d70f6-596a-4960-8893-b8903c040e25",
        "cursor": {
          "ref": "27d89b9c-e249-4825-9bb3-7d6bf91c802d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7e4d6dc0-0d4a-4b68-b6e8-dc18fcd77ca0"
        },
        "item": {
          "id": "aa2d70f6-596a-4960-8893-b8903c040e25",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ace56d20-3003-4c86-95ba-7c46e9196d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29f5cf8-2ce7-4692-8378-447b3681b307",
        "cursor": {
          "ref": "94c76594-60ab-47eb-b4af-4f26f52c93aa",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "38b1e410-7ef4-46e9-929a-463c1c4184c0"
        },
        "item": {
          "id": "d29f5cf8-2ce7-4692-8378-447b3681b307",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "952156f7-3d73-419a-8a0c-97363835d78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f19b56c-5ad4-4fb6-8906-b56335ce5513",
        "cursor": {
          "ref": "7f08d17d-cc23-4162-9445-bd8fa76a7bf7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "da70226c-c675-467f-8a09-66cfe836b66c"
        },
        "item": {
          "id": "6f19b56c-5ad4-4fb6-8906-b56335ce5513",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7bfa7f0f-90f4-476e-8561-1e2d8775b99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362c87aa-4275-4cc1-b4c5-d83eea2a0eb2",
        "cursor": {
          "ref": "55914cd6-84b6-497c-9f02-60acb5711137",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fa29e4e4-d5da-47bc-be99-45859b957ae4"
        },
        "item": {
          "id": "362c87aa-4275-4cc1-b4c5-d83eea2a0eb2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "de8f5054-c034-4992-97aa-c9e0fa7af9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e354f59e-4e14-43dd-875c-838f706a9bd2",
        "cursor": {
          "ref": "3bd51972-490e-4938-9833-cc41ffa44003",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f37808f2-356d-460d-84bc-bb348bc5fc36"
        },
        "item": {
          "id": "e354f59e-4e14-43dd-875c-838f706a9bd2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5fb97859-d2d7-4971-ae22-8e3e3b6162bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b046f00-b8b9-4c45-8794-ca036d2cdea9",
        "cursor": {
          "ref": "f1758550-8810-48b5-9523-ffb405015ca1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e7e2905f-2853-47bd-b5bb-255fc389e7e1"
        },
        "item": {
          "id": "9b046f00-b8b9-4c45-8794-ca036d2cdea9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6f75ad3e-f813-457b-b13f-c7a333fae4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9ff3e5-9517-41fe-a9b9-cf2a6ec0bf37",
        "cursor": {
          "ref": "ba6686ff-eb48-4ef6-82d2-a9e76d74f538",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e1280d11-222d-4786-8fc8-7052e68ffe5f"
        },
        "item": {
          "id": "ea9ff3e5-9517-41fe-a9b9-cf2a6ec0bf37",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bafe45be-d1fc-47a2-adde-c214267de79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75565a5a-5d1e-4248-972e-dbf3ed49780b",
        "cursor": {
          "ref": "90eb254c-18fb-4257-9f93-5a473effb3c6",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2fafd20f-7830-4366-872d-3d55b642e5b2"
        },
        "item": {
          "id": "75565a5a-5d1e-4248-972e-dbf3ed49780b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "55f5aa4e-51c4-4f7a-966f-1644ddbb2b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c2e933-7f75-4d95-8bde-61a16327491c",
        "cursor": {
          "ref": "0246bc29-e733-4aba-a6e7-175893e1fef8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "280e0cf7-3198-4602-ab27-3bf5bfdf5c36"
        },
        "item": {
          "id": "e0c2e933-7f75-4d95-8bde-61a16327491c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bab3ac44-54d8-4474-bc5d-51e81caba505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18469f96-a8aa-44c7-9750-2ba7c03a5121",
        "cursor": {
          "ref": "01e9b201-9812-433b-a1e4-d49c0dc5c208",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a3718cb3-222f-450a-884d-7bd0e10c281c"
        },
        "item": {
          "id": "18469f96-a8aa-44c7-9750-2ba7c03a5121",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "08e25d25-b697-457c-bda5-d28fe2d4c5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ab70be-c380-4456-8451-3c41df579b9e",
        "cursor": {
          "ref": "ee1eaeab-8bc3-4dc6-89aa-081fdcb817d7",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9583cfea-beaa-40db-811b-b391277535c2"
        },
        "item": {
          "id": "95ab70be-c380-4456-8451-3c41df579b9e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d85a8f63-7e58-464f-9adb-a174ad44b3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edd612a-bc5f-491b-97c7-f2b8dfea7358",
        "cursor": {
          "ref": "76542ed3-924c-4bd3-ba9a-c746802dfbd2",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f7352bcc-2958-4eea-bfa6-757f96ebde71"
        },
        "item": {
          "id": "5edd612a-bc5f-491b-97c7-f2b8dfea7358",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "10dffbc1-b867-42a8-8442-dba198928081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb4f5a6-e8eb-472f-928a-69f74b09134a",
        "cursor": {
          "ref": "902fd089-e653-4706-b209-983683d80730",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9632d35a-2166-4972-abfb-a10abd07c18f"
        },
        "item": {
          "id": "9fb4f5a6-e8eb-472f-928a-69f74b09134a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "16a064fd-62e0-46c4-a4ae-7f0d25acf708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefd54c3-ae7f-4e72-8fa7-1cd547041636",
        "cursor": {
          "ref": "1991929b-d72a-41ef-856a-ca196cba45d2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "24875668-e02d-4d3e-856b-ee94dcb4e50f"
        },
        "item": {
          "id": "eefd54c3-ae7f-4e72-8fa7-1cd547041636",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "36ffb5d0-3f32-4a31-a0fd-c2a531d754dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e8b509-55e7-49b9-b705-9738be094ab3",
        "cursor": {
          "ref": "48635a89-5409-4672-9729-2360787e0ebd",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "545e50c3-d3c0-4b8f-bc0e-8f571b43589d"
        },
        "item": {
          "id": "21e8b509-55e7-49b9-b705-9738be094ab3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cf690e96-a4bf-4171-b199-804a8eee5470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e296a6e-a3ed-40e0-8507-49a01f45af5e",
        "cursor": {
          "ref": "b89d957a-77d1-48f9-b673-6ee451474527",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6783a3d4-61d0-4927-a813-75ea88751d44"
        },
        "item": {
          "id": "3e296a6e-a3ed-40e0-8507-49a01f45af5e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ab033f7c-4092-4371-b127-50cc3fe4de4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2456666-a58f-4521-bd71-72aacf3c49ee",
        "cursor": {
          "ref": "1bd30841-f094-4707-bc75-4db1db51db52",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "14ff1aae-5835-4812-8d77-b27091bd6fa8"
        },
        "item": {
          "id": "c2456666-a58f-4521-bd71-72aacf3c49ee",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "77de9619-e216-4173-a266-969f409fecef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d5b778-e43f-4e0c-aa2a-1aa25078f523",
        "cursor": {
          "ref": "20fe47cb-4366-43d8-ac73-1dd43a3b2b55",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "afa6f9ad-701d-4884-8fd0-6501ac5d34ba"
        },
        "item": {
          "id": "48d5b778-e43f-4e0c-aa2a-1aa25078f523",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1985a162-76bc-49e1-8f01-573a1e68b95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bde8c91-a098-4653-b094-f456595f5204",
        "cursor": {
          "ref": "2317dd79-1b96-47b0-ac00-d25069939956",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7cef5c25-2c3f-4c48-8109-6fd649776b57"
        },
        "item": {
          "id": "0bde8c91-a098-4653-b094-f456595f5204",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "436cd79a-d3d3-4032-85fd-b61e223be0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dde5848-5f5d-4c29-b967-40d8aa4f54d5",
        "cursor": {
          "ref": "00d6aeb4-90e1-4d83-b2cc-ee96b40bed5b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "771b96c6-383e-48af-bae2-c9b6bd2874b0"
        },
        "item": {
          "id": "7dde5848-5f5d-4c29-b967-40d8aa4f54d5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ea3e0cfd-82fe-4aa4-977f-042abf8b6d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99941c7c-05c5-40ba-9a65-f3e01b41fadb",
        "cursor": {
          "ref": "ca6459bf-13e1-4d3e-a247-3addd4db8ed4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2a372087-ca50-4830-8556-61df0c662536"
        },
        "item": {
          "id": "99941c7c-05c5-40ba-9a65-f3e01b41fadb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e37914dd-1e42-41fc-9373-5bd6f07ecb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17393561-381a-4694-a654-0d387719509f",
        "cursor": {
          "ref": "fda9be43-958e-49ea-8b89-78527634bc93",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "03f51717-3a5c-4d8e-9096-279e5ee44052"
        },
        "item": {
          "id": "17393561-381a-4694-a654-0d387719509f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cfc9cfb1-ad31-49e8-9fc8-dc59a4dc2250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba38291-8852-4f15-8c3d-2e16ea11e2f0",
        "cursor": {
          "ref": "5e3376bc-0ec9-499a-bc20-b8bb41299cb9",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5d7c42bf-f973-4f81-b4a1-5d68a1b9676d"
        },
        "item": {
          "id": "8ba38291-8852-4f15-8c3d-2e16ea11e2f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "260002ce-7c22-4e42-a88d-6ab88cb450ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39a63a9-8c9a-4114-9af3-b5cf47a41bd9",
        "cursor": {
          "ref": "9315471a-a61a-4f51-a5bd-f88a05423ad7",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1c9209d4-86a4-4ad7-b365-a3b2b03741ad"
        },
        "item": {
          "id": "d39a63a9-8c9a-4114-9af3-b5cf47a41bd9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5cba02dc-65e9-4e4c-8104-f6c45cfde0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7af0d0-9870-4193-9f8f-8a1983e74f97",
        "cursor": {
          "ref": "68b1cc26-be17-4723-9bb3-5958753b0bf8",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f40c525f-aeff-4baa-aca7-1a3ab94005af"
        },
        "item": {
          "id": "ae7af0d0-9870-4193-9f8f-8a1983e74f97",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ff7a89c4-ee01-46ef-87a1-22a420094764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c818c39-2639-46e2-9f01-b4d187fdfb6d",
        "cursor": {
          "ref": "13159697-b1e6-45f7-8f39-d57da57f1c73",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "77296d93-0205-4c15-81b7-ed25f447efa8"
        },
        "item": {
          "id": "0c818c39-2639-46e2-9f01-b4d187fdfb6d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5ca0f10a-888f-4fed-8a48-fd2c08940fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf3caf2-5589-41ac-b12f-f10502b5e48f",
        "cursor": {
          "ref": "d1cfbcf8-0e7f-4ca0-ae0d-ec89cc112a9a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "08f29c6a-6ad4-4a23-a302-d6f477ad549b"
        },
        "item": {
          "id": "bdf3caf2-5589-41ac-b12f-f10502b5e48f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e6cd4a9c-9003-49e9-a755-7273440159a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21127fbe-6b72-469d-a3bb-8b161a382503",
        "cursor": {
          "ref": "3ce83a16-aec5-461c-8b27-548000077344",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "582b5152-3e09-448e-8e9c-e37562e0aadd"
        },
        "item": {
          "id": "21127fbe-6b72-469d-a3bb-8b161a382503",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0b251a13-458c-4332-bff2-0c422e2bee36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11003826-ba8f-47d8-a0c1-1e2bf9f4d709",
        "cursor": {
          "ref": "8011ec70-b7bf-44c7-81e8-3ac44325a5ce",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bcac71f2-5693-4e0f-a9a1-b8dde5f4d752"
        },
        "item": {
          "id": "11003826-ba8f-47d8-a0c1-1e2bf9f4d709",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b89a9413-21cc-4b42-be67-a90ff0fc5095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd51f5c-8ac7-4be0-9b0f-77c04b66247f",
        "cursor": {
          "ref": "2cb0a8fc-3dcc-442c-975e-5f48be60b00d",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fe850060-33bb-4d81-97e4-5d2dc541a6bf"
        },
        "item": {
          "id": "0dd51f5c-8ac7-4be0-9b0f-77c04b66247f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ad293d05-68b4-4b41-a805-6017850e40e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b61288-e587-46dc-bbbe-9576e9d383f2",
        "cursor": {
          "ref": "5ded166d-1079-44b8-a975-b8be3057cd0b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0c2d4466-509e-4109-afd3-40f0e9dd68be"
        },
        "item": {
          "id": "94b61288-e587-46dc-bbbe-9576e9d383f2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "233c2561-2ebc-44db-adaa-3e5ff3a29be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7c1996-19e2-4def-bf17-a3262aae6d50",
        "cursor": {
          "ref": "254caeb6-76cf-4c61-b105-f0d3b1a97668",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "def5706f-af50-4f94-80ff-cd855a966936"
        },
        "item": {
          "id": "0b7c1996-19e2-4def-bf17-a3262aae6d50",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c19d9c4c-d8a9-4093-b47c-ddff1a8cfd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ea310-12e2-4bdc-8b24-17912830d9b6",
        "cursor": {
          "ref": "43edc6ab-a31b-4f35-958c-53b21925bfe3",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "72815638-cb0a-48f7-a7d2-74b540ef2296"
        },
        "item": {
          "id": "1b8ea310-12e2-4bdc-8b24-17912830d9b6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "df43b54a-2b8f-4fa9-a278-1794caf679e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dce1aa1-85ab-410e-995b-51f173b3996f",
        "cursor": {
          "ref": "91e3226b-b62c-4d70-ad71-5cde1dda5e18",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "249723f6-5614-49fa-93de-4500fdef7bd2"
        },
        "item": {
          "id": "4dce1aa1-85ab-410e-995b-51f173b3996f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "81230700-587d-4e3d-b31b-2bee3025b4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e1394b-e0b0-4b87-aa02-c3b99ad26bb9",
        "cursor": {
          "ref": "dd8ff5ee-0268-4c18-9189-ae5ff1bdd7eb",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0795387b-342a-40e5-ab24-c9520af928d6"
        },
        "item": {
          "id": "53e1394b-e0b0-4b87-aa02-c3b99ad26bb9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "49ab85c0-482a-4e8e-bcaf-db5c0d254f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d817cfa6-1a52-4679-a1f8-e65cc2a931a9",
        "cursor": {
          "ref": "b6f4a19e-563e-4aaf-974f-c9b3f385b302",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b8591870-9a38-4ab2-92ce-a4a2307edc1a"
        },
        "item": {
          "id": "d817cfa6-1a52-4679-a1f8-e65cc2a931a9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fbc72ce1-82c3-411a-8404-00d507809d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956be36c-2c99-486a-b8ac-e8271013cfa5",
        "cursor": {
          "ref": "1d391189-f2af-4f42-861d-c9bf1f84365c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0c8ea44a-0e3f-45bd-8f0f-eaf1dcee1a49"
        },
        "item": {
          "id": "956be36c-2c99-486a-b8ac-e8271013cfa5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ec97a485-65a2-4dc1-91c3-160172657d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb35f39-290e-4b16-9526-72f639163bf2",
        "cursor": {
          "ref": "8f9ef709-1cf2-4411-ade2-a049e210cbb8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "97d9cadc-3fcb-4ce5-9a52-e51673eee0ce"
        },
        "item": {
          "id": "4fb35f39-290e-4b16-9526-72f639163bf2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0084f7e7-1bcb-400c-b683-b0c80fa2be41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4f5415-0012-4331-be53-682bdc745422",
        "cursor": {
          "ref": "b96835db-d7e0-491f-a7f6-5a58cc6b04f1",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fcefde9e-d191-467a-800f-0004467ae088"
        },
        "item": {
          "id": "fd4f5415-0012-4331-be53-682bdc745422",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1999cd6c-ad0c-429f-b3d0-39bcc4d59c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899214e6-5d84-431f-81f3-ffbb6c134a4f",
        "cursor": {
          "ref": "302fb04a-3b5a-4eb1-80e1-51c71c5aec87",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d1e7b510-4543-4088-96c1-2224e18c4297"
        },
        "item": {
          "id": "899214e6-5d84-431f-81f3-ffbb6c134a4f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9186b201-d756-434f-8dab-4451b40a8c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23083bf-9430-4d5a-8d60-97baa2deb004",
        "cursor": {
          "ref": "e609d003-32da-4448-a7d1-bb91ac317671",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2f06b98b-d709-4320-998b-2790f3ad4933"
        },
        "item": {
          "id": "e23083bf-9430-4d5a-8d60-97baa2deb004",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cfc1f348-3d11-4fd8-8dcf-8f499d2684d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a175b1a9-433e-42c7-8189-a2f017754fed",
        "cursor": {
          "ref": "3cd71803-4f55-490b-926a-1fc8576a179c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "57c39269-e073-430a-ac9d-93f405d152f7"
        },
        "item": {
          "id": "a175b1a9-433e-42c7-8189-a2f017754fed",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a9bb5484-ff7e-44be-9cf5-d6fdab415673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6ade71-31a3-463d-b204-6d2576e657a3",
        "cursor": {
          "ref": "5ebc7983-b332-447e-bb8e-5028d41bed3e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b64a4a00-297f-4dac-86a3-22481dcd913f"
        },
        "item": {
          "id": "da6ade71-31a3-463d-b204-6d2576e657a3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f85f3989-9952-493b-817f-27b6c80117b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c7020d-a11b-4d51-8048-07373727d629",
        "cursor": {
          "ref": "c982c153-6222-4533-9b36-8cd64324b977",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "566fd99a-a53c-4d71-9bfd-86e81844255f"
        },
        "item": {
          "id": "d1c7020d-a11b-4d51-8048-07373727d629",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e7660cd6-34a8-48d7-987d-d89176584e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05ccbdc-9352-4d2b-b0df-3144f0f32123",
        "cursor": {
          "ref": "3c66b917-e344-46ad-b6f9-58f96dcaa865",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ff10b013-1d8e-44b8-a03c-cf2819ffded9"
        },
        "item": {
          "id": "e05ccbdc-9352-4d2b-b0df-3144f0f32123",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c7674c74-eb9e-4f6f-bfd3-4966834bb4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3084d9ef-7fd4-421a-8568-854ac34f638b",
        "cursor": {
          "ref": "bdd2d9bb-43e3-496c-a5fa-fa27ecfaeea7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "42e8dceb-e101-4ddd-bef3-7cc1567a4345"
        },
        "item": {
          "id": "3084d9ef-7fd4-421a-8568-854ac34f638b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a4c5b5fa-9d98-4aeb-ba10-3feb5f80acc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9aecfe5-90c0-46d1-85e8-31b075054726",
        "cursor": {
          "ref": "72a33932-def1-4375-8e81-59df99daac68",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "94afc414-2cc8-44e2-9b94-57b28694c60d"
        },
        "item": {
          "id": "f9aecfe5-90c0-46d1-85e8-31b075054726",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4fad7319-5579-4ea1-92db-bf4d68c9381b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8178a1e5-6560-4f2f-8dbb-b53b4809dc71",
        "cursor": {
          "ref": "7f5245f0-7abf-4a22-847e-a2a8d55c4ef0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ff4a2248-0c9c-4c6a-bf60-2db78f8650d2"
        },
        "item": {
          "id": "8178a1e5-6560-4f2f-8dbb-b53b4809dc71",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c82ddbe8-aed1-4c9d-ae01-badba6b6ee42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f12fddd-bc33-49df-982e-6df6ac82e766",
        "cursor": {
          "ref": "39e69e30-6042-4f09-99f4-61ad6cd4856c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "74dd9e4c-c289-4f02-82e9-c690893255ab"
        },
        "item": {
          "id": "1f12fddd-bc33-49df-982e-6df6ac82e766",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c6950655-2f9c-4025-b221-6759b3a3f226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a0e9e5-44b1-4312-86c1-be20174eb5c7",
        "cursor": {
          "ref": "73fb73f3-a7a2-4bcd-aa76-15223fd8ea7e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f17c1439-ac5c-48c8-b4d8-f4064480c8b0"
        },
        "item": {
          "id": "f9a0e9e5-44b1-4312-86c1-be20174eb5c7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "97a5b864-56f6-44f7-b807-416cc12bf56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3337c7bd-ae1c-41b9-a891-905b976ad1e9",
        "cursor": {
          "ref": "d66c5bad-90aa-4bf5-bffb-a5b200e35bf3",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2ece23df-971c-4203-a7ea-05f53295cb84"
        },
        "item": {
          "id": "3337c7bd-ae1c-41b9-a891-905b976ad1e9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b774f444-225c-4d69-a0e5-d1e0ab39a9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f67d7f-8443-4d30-a46c-65f5eaf438e6",
        "cursor": {
          "ref": "50e5ebcb-bb96-49d8-91d4-c1328a491a63",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9410f66f-2551-42f1-9168-d0c2d098bda7"
        },
        "item": {
          "id": "01f67d7f-8443-4d30-a46c-65f5eaf438e6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6d10a9a3-e4e8-4208-8be5-57fd08deea8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64c5ba6-5a11-4a55-81f0-a770753f2efc",
        "cursor": {
          "ref": "dd5afe55-957d-4d4f-9773-6699e0d78558",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ed173d91-fa41-4a72-933e-a7de3f8f1765"
        },
        "item": {
          "id": "e64c5ba6-5a11-4a55-81f0-a770753f2efc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0c17407e-2800-46f0-a3bb-c131101e227d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c24335c-fb23-46bc-acfa-638120ef31dd",
        "cursor": {
          "ref": "24cd2a46-b5a1-4d5d-a1a9-637d12093c89",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "436804c7-d93e-461e-a5b3-1952dc65ee62"
        },
        "item": {
          "id": "1c24335c-fb23-46bc-acfa-638120ef31dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d1232956-987c-4a37-982a-aef5ea8f3f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd36d19-d910-46ef-80de-0ee28cf37132",
        "cursor": {
          "ref": "50576a67-ff4c-4272-bbb1-947688f8c7b7",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2ec16e42-3b8a-4674-a45f-8acd031a990d"
        },
        "item": {
          "id": "bfd36d19-d910-46ef-80de-0ee28cf37132",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9d5f2006-519c-49bc-979b-3ff6577244f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3831d71d-11db-4f00-bee0-7156674e20aa",
        "cursor": {
          "ref": "26e2b12d-1a6f-4a96-8fb9-d41e7c484354",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "93c4c171-6607-4648-becc-2217f0e4b53c"
        },
        "item": {
          "id": "3831d71d-11db-4f00-bee0-7156674e20aa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c8b6176a-c469-4e13-a5f2-83dc00dfcb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581b79b2-9754-4082-a029-a37775f32993",
        "cursor": {
          "ref": "cffb489e-0568-46bb-8922-213bb274d9a6",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7e491186-7c07-445a-8c23-80e4af02356f"
        },
        "item": {
          "id": "581b79b2-9754-4082-a029-a37775f32993",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e92fe3e2-7321-402c-adcf-a38f5c1591a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e79939-6abc-4088-b8c0-5de8c93820f8",
        "cursor": {
          "ref": "62c93bf7-8976-4f7b-80ba-c93216a9074b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3922f15b-514f-4537-b133-7098966bf01e"
        },
        "item": {
          "id": "29e79939-6abc-4088-b8c0-5de8c93820f8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "37198aaa-6ded-4ffc-b8cb-f56013152f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487a7b5b-e0bb-4be8-8378-cc2688f66c19",
        "cursor": {
          "ref": "e4e1d4eb-34dc-4c71-bf33-b191f1ee1621",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0a27b6a7-37b2-429f-844d-954fe12bc494"
        },
        "item": {
          "id": "487a7b5b-e0bb-4be8-8378-cc2688f66c19",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fd372ce0-1be3-464e-97bb-fc4382f9429c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b6ac2b-e9ad-4c61-9809-08a946b7f9db",
        "cursor": {
          "ref": "db61784d-33ee-443e-8b81-0a20e43324e5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8544fb6f-192d-40ad-8083-16b52a1beb8a"
        },
        "item": {
          "id": "e8b6ac2b-e9ad-4c61-9809-08a946b7f9db",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cbb68303-23dc-4b7d-8cfd-9260fe256633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c732ceb-9df0-4f98-8063-f1c6145a800b",
        "cursor": {
          "ref": "beb01c94-018d-4752-8a30-dbd6f9643289",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "595d1fc2-bee0-4e0c-a149-c7e42da22c4d"
        },
        "item": {
          "id": "2c732ceb-9df0-4f98-8063-f1c6145a800b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f7c1b5c7-61b7-48cc-b4e2-7c1b2a85b227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd01e85-4e9b-4741-846d-ab6b4681fd69",
        "cursor": {
          "ref": "82b229c7-2562-4d6e-a404-a37571400484",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "471c4d07-4d26-475b-9b9f-e7b310b50946"
        },
        "item": {
          "id": "9fd01e85-4e9b-4741-846d-ab6b4681fd69",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f53692d8-7af5-484d-b25a-a65d77225e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dffa6e-9b98-4015-bc29-2ffd82c6bf2b",
        "cursor": {
          "ref": "386bb2d9-ee48-4bd6-bf6f-971aa5cee1d0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "986965cf-981a-44cb-8484-243f6d42bc3d"
        },
        "item": {
          "id": "96dffa6e-9b98-4015-bc29-2ffd82c6bf2b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "03c79197-3a7b-4271-96b0-6628d2b7afac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2ac110-5866-4422-8888-33bb65e1bbba",
        "cursor": {
          "ref": "a42ed518-6089-4b94-9e0b-02762543639e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8c65f05d-aa13-4587-9700-e17709e44fbb"
        },
        "item": {
          "id": "2a2ac110-5866-4422-8888-33bb65e1bbba",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ca0af495-fd07-4e95-9392-30909f2b6261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6859338f-a0f3-4847-b779-f85628823544",
        "cursor": {
          "ref": "77e3de13-67d7-47c4-b091-9b8ab1e23ead",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "399b84f5-0f8e-439b-b97b-7c577519e827"
        },
        "item": {
          "id": "6859338f-a0f3-4847-b779-f85628823544",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "446dd4c5-97a3-4cc4-baac-d030b8c6f24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93733cc6-cab2-4fbe-86a3-e96a60a19d79",
        "cursor": {
          "ref": "e597c30b-eb92-426b-ba55-5ccd20c33b6c",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e5ee7b6d-1056-4351-bdec-0c9b297ed5fe"
        },
        "item": {
          "id": "93733cc6-cab2-4fbe-86a3-e96a60a19d79",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b8c1ea72-e40c-484b-85f1-89706b630a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fcdcd2-d334-4538-97cd-46c1748c99d6",
        "cursor": {
          "ref": "16ee3581-251e-4f8a-9c3e-18b34f7a56be",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dc2bd092-d537-4f17-8c4f-d2b0f3586393"
        },
        "item": {
          "id": "51fcdcd2-d334-4538-97cd-46c1748c99d6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "929b3ee9-2d24-4ebe-a0a7-6797798ef391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0555ef8d-a748-45fb-84ca-e8be7cda2daf",
        "cursor": {
          "ref": "8a641255-b8fa-4253-bc76-da1072aafa15",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "723fdf9c-dedb-4471-9150-2241f5776900"
        },
        "item": {
          "id": "0555ef8d-a748-45fb-84ca-e8be7cda2daf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1b13592d-db48-42cf-a270-c2561918b1b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582509c4-144d-44fe-94cb-fa8a45ba8ef6",
        "cursor": {
          "ref": "3a7b0331-e806-45be-b908-8d8b31edaea5",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a7bd72f4-29da-4c3c-bf9a-ac65dedaf064"
        },
        "item": {
          "id": "582509c4-144d-44fe-94cb-fa8a45ba8ef6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "af1b7ddd-b7d5-4beb-8e6e-078d9153f0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06070d46-643c-4024-888c-f16226877155",
        "cursor": {
          "ref": "6039152c-0d5f-40a1-a84e-ffa5124c7c37",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bb6d64b3-00f3-4ba8-ada6-37d56547b341"
        },
        "item": {
          "id": "06070d46-643c-4024-888c-f16226877155",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a416ebcd-be7d-4e13-83e0-da9aaa681e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be54de06-68c2-40cf-8ef5-97d889a1a050",
        "cursor": {
          "ref": "1dfac462-03a5-47a6-ba5c-39172fbdde64",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5b4cb9bd-9b72-4655-85f0-9537827a59c4"
        },
        "item": {
          "id": "be54de06-68c2-40cf-8ef5-97d889a1a050",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f11cb50f-27e1-4fa5-8488-c43d0e23499b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc98c468-0f90-4155-8071-c13b4a4f51fa",
        "cursor": {
          "ref": "7ae585b9-d283-4e03-8903-fcefb34f3d53",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8b943242-710f-48b5-a0f7-98ada2287725"
        },
        "item": {
          "id": "fc98c468-0f90-4155-8071-c13b4a4f51fa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fbe8f0e3-b5dd-42df-a592-ffcad7523921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4264166d-1853-4bbf-b2fd-a3203483042e",
        "cursor": {
          "ref": "96fdb662-5aa9-4fc5-9712-87e596990ea6",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d3d0ec59-a0d6-4c62-8ab1-8f8b8c8224fa"
        },
        "item": {
          "id": "4264166d-1853-4bbf-b2fd-a3203483042e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "891bb19c-8357-48b9-9f89-f964b650f5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbd64a6-3c84-44b6-87be-cb63d69203ce",
        "cursor": {
          "ref": "8d78c3c6-32d1-458b-93c4-ebff68aeca5e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "00a9ff66-37b4-4ee3-8346-81c0f8d5bfa6"
        },
        "item": {
          "id": "5cbd64a6-3c84-44b6-87be-cb63d69203ce",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b639584c-c7b2-4066-87ad-97ffeef50173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0c6a9a-4c6e-450f-8a7f-81ed9d937938",
        "cursor": {
          "ref": "fe12bed7-d9a9-4429-84d7-3451fe099dda",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2646692c-a4ca-42c0-8210-dde4445471b0"
        },
        "item": {
          "id": "cd0c6a9a-4c6e-450f-8a7f-81ed9d937938",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c42dacc0-6276-42f6-89b3-e93828990532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e641e8aa-6cc5-42d8-bf5d-9b8477ad89a3",
        "cursor": {
          "ref": "3a54c92d-27a1-418a-8e85-747a98be5c18",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "168392fb-6715-48f2-944f-162688dae93b"
        },
        "item": {
          "id": "e641e8aa-6cc5-42d8-bf5d-9b8477ad89a3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f67985b8-5b0a-48c7-b029-131ca4a5e4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443a2f11-d4a5-494b-bf74-37f894a7f2cc",
        "cursor": {
          "ref": "7162fffa-6fbb-4b63-acfb-c5cb3e9c5924",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "45994888-2ba5-4e77-b3b3-a907a85cb3ce"
        },
        "item": {
          "id": "443a2f11-d4a5-494b-bf74-37f894a7f2cc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ffa8088e-c2b9-4d1d-a900-5cd52b1eef36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1548f1-7b94-4d2c-9466-22bf1e5d1b42",
        "cursor": {
          "ref": "ba6c577c-0eb2-4018-b295-6ce5dab0ff6b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "498ba5f9-44a5-42e3-bf01-5da414e2741a"
        },
        "item": {
          "id": "1c1548f1-7b94-4d2c-9466-22bf1e5d1b42",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f0052d0f-114b-4d58-bd32-fc253a72376f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7542725a-7d5c-43e8-aa02-896d8fd32226",
        "cursor": {
          "ref": "4fd808ca-6eed-470e-a9d2-fafce1facea4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b22beb85-9e3d-4f00-9a1e-2c0c1d72c7dc"
        },
        "item": {
          "id": "7542725a-7d5c-43e8-aa02-896d8fd32226",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b105d8f5-c4a4-4887-a901-8ecc9db7ae8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48289c09-1171-4be1-b586-9ea79d8240af",
        "cursor": {
          "ref": "c842e933-0d5b-4e24-8b10-d8f6722257a5",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2cc0228a-d0dc-479c-9339-0762bc08c673"
        },
        "item": {
          "id": "48289c09-1171-4be1-b586-9ea79d8240af",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3a0fca3a-5d68-4fe3-b701-dd473df2f778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca437c57-ab09-4158-bba9-f0db3faf8670",
        "cursor": {
          "ref": "ac9ff727-e533-42c4-b999-712bba572d78",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "14d34fd3-f952-4266-bb20-c38175723f40"
        },
        "item": {
          "id": "ca437c57-ab09-4158-bba9-f0db3faf8670",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "941634e3-fabf-42c9-994a-a6c4a4e1053c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31af130d-b37a-4fb2-939a-45db8b49affa",
        "cursor": {
          "ref": "4da1685a-9bbb-4011-adf7-5305a8e39f95",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4e3b35a2-3d32-4eea-8688-4a060a7f64a3"
        },
        "item": {
          "id": "31af130d-b37a-4fb2-939a-45db8b49affa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "280f0ef8-e7e8-4fa0-bbb6-1accde597869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d48861-7955-4a7c-a2bd-cac0f9993a7a",
        "cursor": {
          "ref": "70c6b031-0816-413c-9c89-90d6576842ab",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b899ee5f-d542-44ef-b609-4afab78abef2"
        },
        "item": {
          "id": "e6d48861-7955-4a7c-a2bd-cac0f9993a7a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4264203a-ab86-44f6-b46d-49381ef0a5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf70ef69-99fe-4c89-8007-550b359144bb",
        "cursor": {
          "ref": "51b8a72e-14b1-405a-9798-90bdedb6e3b6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a4d3eaf4-2935-4856-8ecf-7b8a83b857f0"
        },
        "item": {
          "id": "cf70ef69-99fe-4c89-8007-550b359144bb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "072cf689-d1b5-4f65-adf3-cd0a05cb7c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728f10ca-5a00-47b7-bd19-215084f1fa8f",
        "cursor": {
          "ref": "7257c1b7-d99b-4d9f-a2e1-0706ffde9c68",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f011bb68-d191-4d23-95e1-f9e952f8fd91"
        },
        "item": {
          "id": "728f10ca-5a00-47b7-bd19-215084f1fa8f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "368bc7ef-9b2e-4c19-8d7a-baaea8cfa9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866c857c-fe1a-48be-ae23-8ff5fc43ffd2",
        "cursor": {
          "ref": "d5684dfe-5d14-458b-b43c-af31d0c414af",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1634847c-40f8-49e1-8e87-6893c205ada1"
        },
        "item": {
          "id": "866c857c-fe1a-48be-ae23-8ff5fc43ffd2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c242b4cc-dbab-4713-b7bb-89c37ba454a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7cc5f1-b1d2-4ca7-b1a0-37902533402f",
        "cursor": {
          "ref": "034b4ce6-347d-4554-aeff-321b400e13a0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d2f65949-0a5c-4665-a119-92cb62a34a87"
        },
        "item": {
          "id": "7e7cc5f1-b1d2-4ca7-b1a0-37902533402f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2f4fb868-d3ce-4f27-83bc-8c4f357d7b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9719c90-041d-4547-a23c-7f64a1f5be4f",
        "cursor": {
          "ref": "6a93fd19-7063-4cb9-9c1b-7eb07607c72f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ceac8171-c32c-4175-948a-4dd84dfb2aa2"
        },
        "item": {
          "id": "d9719c90-041d-4547-a23c-7f64a1f5be4f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f27847db-7538-48b7-8f45-2557b6f18db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c6ea6c-33b4-4f5f-b6e9-afd179a75210",
        "cursor": {
          "ref": "3c5660e9-ec4c-48cd-8955-0aed61f1d96a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "171618e9-407e-4223-bbb8-793f2bd1549d"
        },
        "item": {
          "id": "37c6ea6c-33b4-4f5f-b6e9-afd179a75210",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3a67e2dc-7791-4e22-ab80-868f6fcc463b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785e0775-24cf-4a52-9314-717cb5e668a8",
        "cursor": {
          "ref": "4bd5657b-57e4-4dfd-a683-35e0073c5ff6",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "62f1cbfb-07e7-471f-8c4e-cfa431d91e66"
        },
        "item": {
          "id": "785e0775-24cf-4a52-9314-717cb5e668a8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "faea8276-4d4e-49aa-9891-8bbed6873fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7f088f-e7fa-4ce0-a2d7-4d841b116130",
        "cursor": {
          "ref": "8ae12160-c05f-4fa3-8d1c-54c280a01378",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "18688720-bb47-4e80-969a-fe80a443315b"
        },
        "item": {
          "id": "6b7f088f-e7fa-4ce0-a2d7-4d841b116130",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "60a557a7-d9a2-4609-8763-ed6e0795bc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25712be-0b70-4eac-86ca-df788451bfb2",
        "cursor": {
          "ref": "38dd1aac-0d30-41dd-9f9c-e768ac3ec747",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "23767fef-0959-47ff-8f38-47093db09478"
        },
        "item": {
          "id": "e25712be-0b70-4eac-86ca-df788451bfb2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a2068ce5-193f-4fb4-98fc-133986c3d7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2311898e-493c-4d5e-8132-c038d01949c3",
        "cursor": {
          "ref": "bf7357bd-d427-4c93-aef7-1cd047a38880",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a0c243b8-5a49-4471-bf65-2c962659ce95"
        },
        "item": {
          "id": "2311898e-493c-4d5e-8132-c038d01949c3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "01503973-33ae-4108-b651-5ab8c0560674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf65bb6-8577-4ac8-8062-bc78e4ae66fa",
        "cursor": {
          "ref": "3eec2d52-c3ae-495d-8c31-0710101d29cc",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c370a106-7a99-41f0-9bc4-ef1f1c2a4305"
        },
        "item": {
          "id": "9bf65bb6-8577-4ac8-8062-bc78e4ae66fa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "514fb00a-e4f5-4b9c-9cd4-4b3ae662e2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425b95f2-1098-4a31-9b0b-a3608d47d2ac",
        "cursor": {
          "ref": "01012e6b-ccac-416b-9a42-697e2a26bdbe",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8fa14a24-e480-4d0a-8b69-e684c5f02871"
        },
        "item": {
          "id": "425b95f2-1098-4a31-9b0b-a3608d47d2ac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "139c73d6-cfe2-44e7-a6ef-0dca93e05dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9083881-712e-4489-84d6-53fefdb5b3fb",
        "cursor": {
          "ref": "c3647d9f-2e3e-43f1-a188-deceb2c044d9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a17a2a23-d8d6-4e8f-9a16-ec08d2b106b7"
        },
        "item": {
          "id": "e9083881-712e-4489-84d6-53fefdb5b3fb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "16f0e99a-a798-4783-8da4-cfa3891c09c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67552efa-5e68-49dd-b64c-83b57c34fa3b",
        "cursor": {
          "ref": "a29b4c30-8717-4360-b2e0-ba39c2a9c364",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e59f88ee-3950-437c-9b73-119d401e75c8"
        },
        "item": {
          "id": "67552efa-5e68-49dd-b64c-83b57c34fa3b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ac077eaf-a3ab-4381-8c00-09287215f027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d63f87-84a8-450b-9c6a-c4b80d7ad2b4",
        "cursor": {
          "ref": "bc31e952-98bc-4a13-8ff1-7c926b822423",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4b04fae1-51a1-4786-9c01-bfc32ff1729a"
        },
        "item": {
          "id": "18d63f87-84a8-450b-9c6a-c4b80d7ad2b4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ac37a5d3-5fcc-4bdf-b9a3-8571c6648ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81b1936-f332-488b-8e7d-891f25d106fa",
        "cursor": {
          "ref": "56808db1-34bd-4dc0-b913-65a153ed1a20",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9d67ec3d-fbbc-4a6b-b06c-a4f589927477"
        },
        "item": {
          "id": "e81b1936-f332-488b-8e7d-891f25d106fa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "008a889b-83a0-4050-a528-de3dfd46716e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4c24d5-1294-4e18-a62c-849b75feface",
        "cursor": {
          "ref": "44af5e48-b749-4a24-8967-b10cd9bedac5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ab9ca692-53d5-4270-95a7-64dd17cc2980"
        },
        "item": {
          "id": "0e4c24d5-1294-4e18-a62c-849b75feface",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "28b23311-a7ba-40bc-a6dd-378e006b4599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5d4195-1ca4-4bb5-af3a-34d7904b7036",
        "cursor": {
          "ref": "04dc33bc-52ae-43a7-8c5d-3922ab9800fe",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f2791f25-5bfa-4efa-9c4c-04bd9acdfe21"
        },
        "item": {
          "id": "4a5d4195-1ca4-4bb5-af3a-34d7904b7036",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0dc07d5a-9aa0-4376-90a5-c79b02c943f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1228ba-b5cc-4877-98f2-aada525368e3",
        "cursor": {
          "ref": "774b2c5f-a05f-4b8e-abcc-e256341129e5",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3dafb4e3-8543-46cc-8eaf-113cba8c75c7"
        },
        "item": {
          "id": "2e1228ba-b5cc-4877-98f2-aada525368e3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2c8f8c0f-4e43-44cd-8a43-b3c7033228d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5154fafe-aaa4-4f25-ad24-ef0c79bc1e58",
        "cursor": {
          "ref": "14019468-895d-4f00-9267-d227e12c4bdf",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "20553b86-f1f2-435c-b18d-d531141a7fb2"
        },
        "item": {
          "id": "5154fafe-aaa4-4f25-ad24-ef0c79bc1e58",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5dc3a1d5-682d-492e-a4a1-8359c0bf17bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0eacf2-8c31-4fdf-a840-26bf0c2e5cf5",
        "cursor": {
          "ref": "4f96c827-fd52-4181-a9ae-c7833d131495",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "63a5888a-cbaa-4c5b-974a-4b87c78d35da"
        },
        "item": {
          "id": "9f0eacf2-8c31-4fdf-a840-26bf0c2e5cf5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c34c1f81-c629-4353-9f1d-34e530d121d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfadc312-47d3-45ad-b8d0-6b2fc1f6a55e",
        "cursor": {
          "ref": "3baac0cb-f326-448e-95c2-677d56a8bd55",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "da1eb969-3052-49f5-a60e-c3fcac716b79"
        },
        "item": {
          "id": "dfadc312-47d3-45ad-b8d0-6b2fc1f6a55e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "023791ba-ae65-4ab2-b321-d2b807d1e401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f53ef92-383e-4cf3-83a0-a3c515e91aaa",
        "cursor": {
          "ref": "2a462069-73a9-429d-a313-4d3cd409bb4d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "059ccecc-9895-45de-a31f-bd3e9f0c41b3"
        },
        "item": {
          "id": "8f53ef92-383e-4cf3-83a0-a3c515e91aaa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "167189dc-e428-4854-8e90-2e95385a15be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d133c1e-c623-41d9-a1e2-801385ba572a",
        "cursor": {
          "ref": "462d5d8b-422c-4ad9-9a07-156fe3557774",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4d81b316-62e0-4ff0-859f-a5d8b3e0afec"
        },
        "item": {
          "id": "4d133c1e-c623-41d9-a1e2-801385ba572a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4cabd035-43af-40d8-8170-062fa7956b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886f60a7-281e-46d0-b2b5-0e4f250e061f",
        "cursor": {
          "ref": "b7a68a4c-eba0-4e54-9161-159cd0085f24",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "45a8917d-e17f-4901-aa91-8fa5dc57fe1f"
        },
        "item": {
          "id": "886f60a7-281e-46d0-b2b5-0e4f250e061f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9b53d739-ff5a-45ee-8942-c3d47c5ddf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6227cdab-92ec-4cb0-9144-e81a08603110",
        "cursor": {
          "ref": "73ce7c2c-f339-47ae-9037-c0865874c637",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "354447c5-c98d-400d-90c8-d991639ffc88"
        },
        "item": {
          "id": "6227cdab-92ec-4cb0-9144-e81a08603110",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e61c7a23-de4e-4864-afe9-cb1a09116ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f62016b-b0f9-43c9-b5b5-f4f5cbc05d7c",
        "cursor": {
          "ref": "c5a589df-53d5-4c52-9fe7-e1fa3ed20669",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1d142524-e38a-4fbb-a8fb-21f22acd3ada"
        },
        "item": {
          "id": "3f62016b-b0f9-43c9-b5b5-f4f5cbc05d7c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "646b3985-2b69-4a85-9797-ee4dc5dc36ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ab4ce6-946b-490d-8070-b7de3a30714b",
        "cursor": {
          "ref": "4b043ac6-4f97-4f54-9031-77da400bcccb",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7f6d0ad5-6bb0-4c17-9793-4ab8bcc59b3b"
        },
        "item": {
          "id": "39ab4ce6-946b-490d-8070-b7de3a30714b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c78ee643-cfba-4347-b8c0-3b9a71a407ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe655e46-4240-41f9-ab2d-a4308c2a88d1",
        "cursor": {
          "ref": "4c4562d7-47a5-4b0f-a9d0-09e54eb54713",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b38f7f5d-bfd1-4ad7-b58b-66e0f7a3e5cb"
        },
        "item": {
          "id": "fe655e46-4240-41f9-ab2d-a4308c2a88d1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f9f4697b-6dd6-4075-b178-6eeb8401cb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e045931f-a644-4e27-a7e2-b40bd7be5d89",
        "cursor": {
          "ref": "645bfe4b-2a7a-403b-aace-b6d58d46c46f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "883fa4da-c32e-4199-aced-ef6e82012900"
        },
        "item": {
          "id": "e045931f-a644-4e27-a7e2-b40bd7be5d89",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c85606ea-751c-4934-80b4-0c9971300db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3bcce4-a050-4b89-8149-706423d3377e",
        "cursor": {
          "ref": "4ef6242d-2de4-44d5-b4e7-ba4458904bb1",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "37cd6484-06f1-42b8-a852-29cb43a7a4fe"
        },
        "item": {
          "id": "2f3bcce4-a050-4b89-8149-706423d3377e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6f6b866d-ce9e-4276-8738-94b233d86bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87aebbd-e4b8-40e2-b194-1fa2bbcc08b8",
        "cursor": {
          "ref": "3824dd37-e340-43ba-9b29-e8e4ab8d16af",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dd6b8f64-bf50-4ee6-bac1-e5c14304aaff"
        },
        "item": {
          "id": "d87aebbd-e4b8-40e2-b194-1fa2bbcc08b8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4145b2ee-7c7a-4e96-8577-6f833b101150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85f9701-b94e-4b46-bf85-5e484215466b",
        "cursor": {
          "ref": "97732060-fd72-4481-9b11-341730f57930",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f65c66d4-7516-4bf8-b3d2-d59a155c426e"
        },
        "item": {
          "id": "b85f9701-b94e-4b46-bf85-5e484215466b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d825f10a-cbf4-467b-aa15-7cbfaf3dbf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be78f83-5a4b-4dcd-ba6b-f9e41cf595d4",
        "cursor": {
          "ref": "37c2a8aa-f990-4909-b99e-9abfa4082dd2",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e0c54159-d0c0-4231-b36d-535f3b3b7165"
        },
        "item": {
          "id": "2be78f83-5a4b-4dcd-ba6b-f9e41cf595d4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d2c19162-d62b-4f86-91f6-f23c7749dd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc33bca-28b0-4266-80c0-29c39c3319d8",
        "cursor": {
          "ref": "c13c26e0-bea4-4a02-92f7-c0ff411f4e92",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "968584cf-33ac-4af9-a98b-b88d0d887ba4"
        },
        "item": {
          "id": "4dc33bca-28b0-4266-80c0-29c39c3319d8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b2142c73-1b73-455e-a1f6-5f02593afbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b038787-51ba-4be6-916b-79992ab378d8",
        "cursor": {
          "ref": "1259c94b-8259-44c9-8248-c39d181f4af9",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a18e9e92-85da-4c7e-9881-8cd58d6e14b5"
        },
        "item": {
          "id": "0b038787-51ba-4be6-916b-79992ab378d8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "60aa9c74-8893-4ea4-84a5-3f304dcc08f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b50f5f4-3ca7-424f-b9f0-fa4d62d773b0",
        "cursor": {
          "ref": "f2220cd6-3d89-456f-ba4f-5bc0a6924586",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "87fb5a37-ed6c-4c6e-b315-0cba31f7f842"
        },
        "item": {
          "id": "4b50f5f4-3ca7-424f-b9f0-fa4d62d773b0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "db1db73e-d40b-4869-a6dd-a8fe39a26c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1715f1-ecf3-4f5d-9b7e-2346776afcad",
        "cursor": {
          "ref": "bca52d1a-9e69-47e7-83d1-7ed60dd1e60f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "44c25899-5919-4ebd-af93-83a38ce14f82"
        },
        "item": {
          "id": "be1715f1-ecf3-4f5d-9b7e-2346776afcad",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1eee0b2b-d290-496d-97a9-e7b69281fb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b0b3c1-062d-4562-a1ef-013f702eda78",
        "cursor": {
          "ref": "b076c60d-fd34-4632-b31e-51329b68723e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6fffbaa4-b93b-4a0e-bdd2-1cfc10b8d192"
        },
        "item": {
          "id": "a6b0b3c1-062d-4562-a1ef-013f702eda78",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "38dbacf0-d352-4e72-8a59-872fd74801f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb551007-8e4e-4384-990e-1207b2523061",
        "cursor": {
          "ref": "ec433b63-8418-4222-8a94-67f2ad638787",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b2813eb7-43b0-4329-af4b-fcf0dad8ab0c"
        },
        "item": {
          "id": "bb551007-8e4e-4384-990e-1207b2523061",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "109ea3d3-2552-4abf-bea3-1140d3f24e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5061ba-57c7-4652-9353-de68354e30ca",
        "cursor": {
          "ref": "d4224b7f-55aa-4fe2-9658-8c8da0138a00",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "26d4f396-ff05-4c00-932b-150ed20161c4"
        },
        "item": {
          "id": "2c5061ba-57c7-4652-9353-de68354e30ca",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e5cfe2a1-ca8c-4bc2-9faf-541620ab98ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1228931-a1cb-4d8c-8b48-fba285a82af0",
        "cursor": {
          "ref": "f3b40a17-a1e9-493a-a7c4-d63202667b7e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "eccc8e44-be1a-421d-b76c-315e07e169d1"
        },
        "item": {
          "id": "b1228931-a1cb-4d8c-8b48-fba285a82af0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7cda5a7f-e035-4a1f-b1c6-e3c85e80ba8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7361e68-4b84-4246-87da-5b3d749e83e0",
        "cursor": {
          "ref": "fc404c06-8398-429a-a7e6-f4838041383d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cf5132e4-1ba5-4533-adef-3fb0a954fe34"
        },
        "item": {
          "id": "d7361e68-4b84-4246-87da-5b3d749e83e0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e0e6b115-8030-4bdf-8f49-ec55bfb3fb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef24ccd7-ae5e-41f7-ab16-f1efb34711b7",
        "cursor": {
          "ref": "deba196c-428c-44e0-82a3-aab25627007a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "adfb8dd6-4545-4d4f-af90-afa4928fbb7c"
        },
        "item": {
          "id": "ef24ccd7-ae5e-41f7-ab16-f1efb34711b7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "991aa47d-bf28-4f1d-b77f-1826a516da28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525e94bf-dec4-41d2-8ad6-2125fd67e98c",
        "cursor": {
          "ref": "e693f6d8-49d1-4a7b-beeb-05bc9b92e3ca",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f7f40211-d4e5-4d32-b1b4-2260963881cc"
        },
        "item": {
          "id": "525e94bf-dec4-41d2-8ad6-2125fd67e98c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4de9dd26-1306-474f-8926-4bd832d0ec6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d2b58f-1d70-40d5-be45-bf4bb2d4b114",
        "cursor": {
          "ref": "1ec3abaf-5a8d-47dd-a7d9-b2e730c9bbbe",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3fbcf52a-94a5-4a27-b2f5-e35088b1f762"
        },
        "item": {
          "id": "65d2b58f-1d70-40d5-be45-bf4bb2d4b114",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e18fbf1e-a531-4ee6-b1d1-28a826ffa314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5062deab-785e-4341-8179-e963f1bcf3c0",
        "cursor": {
          "ref": "a21d9ee1-5f6b-4a01-81f7-c182fd10d5d7",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ed3843bb-ceb0-4d26-8ba3-2395dec8e54a"
        },
        "item": {
          "id": "5062deab-785e-4341-8179-e963f1bcf3c0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b29c4f12-a8ea-4cb6-8107-39791f045fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f8eddc-5d21-4934-aaf5-b5fb968659bc",
        "cursor": {
          "ref": "8971b95a-38c3-4a63-860b-c835100714b6",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fabf8ad9-59c0-4bb0-90c5-a7f895e7f165"
        },
        "item": {
          "id": "05f8eddc-5d21-4934-aaf5-b5fb968659bc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "43224d4c-8d9f-4021-932c-327a4c105f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65797b88-51a0-47f7-bb97-650503d6fd41",
        "cursor": {
          "ref": "0cc11142-df7b-404a-880c-c40a2f35bed7",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "86bc1b70-d4c3-49f1-a8aa-30c0580b5863"
        },
        "item": {
          "id": "65797b88-51a0-47f7-bb97-650503d6fd41",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b407c7d5-00e4-49f0-87e2-4bfb1b7b0d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b24448a-9076-4e3b-a893-6a8adc8a8f8f",
        "cursor": {
          "ref": "0ca3778d-55d1-4e3e-a39f-9c01b0fd1e80",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4e799c2a-f3dc-44db-a72b-009a3bf09705"
        },
        "item": {
          "id": "7b24448a-9076-4e3b-a893-6a8adc8a8f8f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6fab17d0-2fc6-4657-b1f6-7fb89d580b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d999ad-6828-488f-864b-228d258c30a0",
        "cursor": {
          "ref": "e00cd9f0-3ec9-4245-a207-5365b8d9cebd",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "be288dcf-aecf-4818-b5cb-29879174d387"
        },
        "item": {
          "id": "c4d999ad-6828-488f-864b-228d258c30a0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fb2ea562-ed0a-4349-a3d8-1f907b191e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db3a854-0157-49cb-8ef7-cf9e8edf485e",
        "cursor": {
          "ref": "f542ee08-d64a-44f8-ba83-f17f52f8d80b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "080e4d31-0fbd-4f24-8fc7-b415e79ec5d5"
        },
        "item": {
          "id": "0db3a854-0157-49cb-8ef7-cf9e8edf485e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5802dc2c-399c-49dd-9631-11ed4f5c5fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05e556a-49bc-440b-8bd0-bf8cff2b4d56",
        "cursor": {
          "ref": "cee8ee89-7953-4903-84e7-0a3a50d27958",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b2b706ac-84d6-42bf-b3de-fa6cae5e1ee8"
        },
        "item": {
          "id": "b05e556a-49bc-440b-8bd0-bf8cff2b4d56",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5f6644ef-9f1b-4fa4-9988-3a68d4ad5937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9d1cd5-b61f-4b20-a6bf-5171faa954a1",
        "cursor": {
          "ref": "b53475e9-c3f6-4465-a9c2-c19562e6e4e8",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "915c6128-3d38-4fb6-9522-e49c3735b59f"
        },
        "item": {
          "id": "ea9d1cd5-b61f-4b20-a6bf-5171faa954a1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "89e80a50-8afd-42ae-9b51-d5a7cee1886b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c14df1-c41f-4db1-b964-21ed15ab2bf2",
        "cursor": {
          "ref": "f8ebbd37-300e-4f8f-abff-40d3f5337670",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "20cf8530-0dfd-430d-9d1d-1939c122ae97"
        },
        "item": {
          "id": "78c14df1-c41f-4db1-b964-21ed15ab2bf2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "db5f0666-4776-4863-b389-85b7de9ae800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c3a614-077c-423f-a82d-cfe57d4ed78b",
        "cursor": {
          "ref": "1d677f86-380f-475f-9f6f-3bbba96c554a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a36acff2-e5e8-481c-90fe-1b725de9bccd"
        },
        "item": {
          "id": "17c3a614-077c-423f-a82d-cfe57d4ed78b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "edfd1079-2064-409f-a1f2-11fca107a453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51132c8-a40d-428d-9072-02cfdcf694d6",
        "cursor": {
          "ref": "e0b9e978-7fbb-4154-b04e-e954adafcb6e",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "744feac9-8e5e-4044-a195-e84e54e3a5cb"
        },
        "item": {
          "id": "d51132c8-a40d-428d-9072-02cfdcf694d6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a234e33b-cdec-456a-abf8-a6d6ad1d6c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfea051-7213-4517-85f8-88b8e3955c21",
        "cursor": {
          "ref": "922f401a-b6fe-4d8f-bd7c-283460573e44",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "435086cc-db47-4e96-b68d-e6c8c442d72d"
        },
        "item": {
          "id": "abfea051-7213-4517-85f8-88b8e3955c21",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b26c2d3e-3253-49e1-aca9-ecbccce0ee4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073af7fe-b15a-43c6-905e-d0b4a3d67b93",
        "cursor": {
          "ref": "f09a77a0-7ad1-459e-96b8-56f5e8108ac3",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bac22f79-6816-4de1-835b-7f715b533dd8"
        },
        "item": {
          "id": "073af7fe-b15a-43c6-905e-d0b4a3d67b93",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "641a669a-97be-429b-b2ac-580cf423ddf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fd27db-917e-4b12-b6ee-04ecfc94b9c8",
        "cursor": {
          "ref": "87b4ed47-2f7e-49eb-814c-d9ca5d701301",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "feee8526-50dc-4f10-acbc-8623905e7ae4"
        },
        "item": {
          "id": "b1fd27db-917e-4b12-b6ee-04ecfc94b9c8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9ba299c5-5b75-47a8-9871-a8e7f846741f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2749bf-04b3-43af-a6be-86197166a96f",
        "cursor": {
          "ref": "6ee72e89-3aa3-4cda-ac8b-6db0dfd1b151",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "67ff1341-126d-4eb6-9dff-450df85f694c"
        },
        "item": {
          "id": "1f2749bf-04b3-43af-a6be-86197166a96f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1c190468-c25e-430a-93f1-b42a59ffd241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2e4361-9596-4afb-a052-8c3f8505d674",
        "cursor": {
          "ref": "1afd3d20-4243-414c-a138-8a24d5d1af04",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "111cb06d-b055-4433-97d0-41da9a7a5f08"
        },
        "item": {
          "id": "ec2e4361-9596-4afb-a052-8c3f8505d674",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9497a3bd-8da4-4fec-859e-8bb4053cd43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2980938-2519-4e9c-b649-616d4ded61a2",
        "cursor": {
          "ref": "cad66e32-b641-4575-89f7-ace0a20face4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "97e66820-f28b-4332-801e-b1ea08219a51"
        },
        "item": {
          "id": "d2980938-2519-4e9c-b649-616d4ded61a2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2bce80f3-6f15-4afb-ae2c-a2cebf8defc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b72cb5f-b761-4ea8-bf63-3144b7f28457",
        "cursor": {
          "ref": "71803135-b3d4-4a31-94c8-6d1775b89131",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b1013a87-d7c4-4611-9dcd-edf66c21e7dd"
        },
        "item": {
          "id": "2b72cb5f-b761-4ea8-bf63-3144b7f28457",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "947cae58-aa8e-41c8-baa6-431fa0363bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a201d44-fe60-4b97-8faf-4249ecb491fe",
        "cursor": {
          "ref": "b7a25ff1-cedd-46c7-b7e3-c95e303084be",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c7dc9d38-ba57-4394-8711-9e12475a2783"
        },
        "item": {
          "id": "7a201d44-fe60-4b97-8faf-4249ecb491fe",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "efda1f95-127b-4524-93af-f90d4bb7aaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d2875d-466a-4731-ad65-f864abd36161",
        "cursor": {
          "ref": "717698cc-c29c-4910-a2bb-9906117599ea",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "80e35b6b-68bd-435b-911b-2e71bd3ddaa6"
        },
        "item": {
          "id": "01d2875d-466a-4731-ad65-f864abd36161",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4d1a6c71-6188-4262-ab50-4a1cc6cc9237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf2f437-3b90-45a9-b913-f904edef71da",
        "cursor": {
          "ref": "3407e216-d266-46d6-b116-a9a770e0beda",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8cf48461-aa88-43d9-ae11-ad39a2c288b2"
        },
        "item": {
          "id": "bbf2f437-3b90-45a9-b913-f904edef71da",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8de602e8-fe04-4b41-b8bb-93c7a07a9c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bcf756-c15c-466c-a43e-f544e6f6d6de",
        "cursor": {
          "ref": "886f426d-4ce1-4b3b-b425-cf5da441a665",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e5862660-0a25-45ec-ae3b-baf81cf6f896"
        },
        "item": {
          "id": "94bcf756-c15c-466c-a43e-f544e6f6d6de",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "12633c0e-a53f-4136-a469-5b9530e4d9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4ecbee-b395-4d31-b7db-c43582174db3",
        "cursor": {
          "ref": "b3d70461-0cb1-42aa-a6ad-5301c6242b06",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c3d5314c-4f0b-493d-8130-cdd59f141b08"
        },
        "item": {
          "id": "2b4ecbee-b395-4d31-b7db-c43582174db3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b2b78789-add0-4809-9173-22f1fa234bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db17fbe2-faa1-4951-8f44-99bf240277f0",
        "cursor": {
          "ref": "c020fab9-ea18-4c98-93cd-cb154112a6a9",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "18ffcffc-90fe-4f86-95a6-bee84608fcfe"
        },
        "item": {
          "id": "db17fbe2-faa1-4951-8f44-99bf240277f0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a80890ff-e8b3-4a3f-8286-5a2ac741f15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6ceb81-aabf-4882-a8f2-eb634c5aa7b7",
        "cursor": {
          "ref": "7c91f6d7-c8bd-4c42-b890-596c04fa2a71",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1c03bf63-08cf-44c6-a818-e7a33050aff4"
        },
        "item": {
          "id": "2a6ceb81-aabf-4882-a8f2-eb634c5aa7b7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1f0100e7-c33d-4179-935d-e15a9dbfb676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f7ddb2-edd7-4abf-9e0a-5c14c0f9503b",
        "cursor": {
          "ref": "cc4a48d9-c4ac-4082-a001-fa9cf2cf723f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0033687c-c896-4c9b-9116-f65b761107ab"
        },
        "item": {
          "id": "81f7ddb2-edd7-4abf-9e0a-5c14c0f9503b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7127df7d-df8a-41f8-9bdd-1275ef042b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38f3dc4-3e91-463e-bc43-a484bdeb5c11",
        "cursor": {
          "ref": "f6de2e23-6358-4a24-bb9c-d2ecb651700c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "78ff8ad1-fe13-4c80-b08f-b0facbb83d6c"
        },
        "item": {
          "id": "e38f3dc4-3e91-463e-bc43-a484bdeb5c11",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8578bc3c-a73a-4db6-b2eb-bff65f4eb212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e86a76-15bb-4c95-b27d-227409384b5f",
        "cursor": {
          "ref": "0e2b4edc-db04-4a83-abb8-8fde4ec60bd2",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "277f67e0-2dd5-478e-ac01-849e81935818"
        },
        "item": {
          "id": "c5e86a76-15bb-4c95-b27d-227409384b5f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0cf574db-7921-472c-9b47-fecb2a3a84b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bbaae7-998e-4146-9991-eee275b88d19",
        "cursor": {
          "ref": "064704e4-8dad-4cc0-b357-678c95087236",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f2e6fdc4-c55a-4726-9b4e-e0649249f6aa"
        },
        "item": {
          "id": "11bbaae7-998e-4146-9991-eee275b88d19",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "93470949-a590-4b97-a91c-28c5ec00d7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d05c19-b5b2-4420-aec3-de5057ab3102",
        "cursor": {
          "ref": "d44ce0f3-0017-4670-a85b-e8374281a7bd",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c7beb27d-c862-4270-87ba-6997be01db51"
        },
        "item": {
          "id": "20d05c19-b5b2-4420-aec3-de5057ab3102",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2ea00c89-2d3c-4411-bd65-427e3d21cb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6362660b-0286-47c0-a046-3186a0b7f240",
        "cursor": {
          "ref": "b0e31bdd-2f00-46bd-80c5-f22a3b7f1a41",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "74ab5f1a-5e1c-4a75-8d09-cf633fb27ba9"
        },
        "item": {
          "id": "6362660b-0286-47c0-a046-3186a0b7f240",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c17529ab-abd2-46a4-9b0e-2ddef80e33ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de1614c-f34c-49bd-b966-fbb2bf91ac2d",
        "cursor": {
          "ref": "c31a0324-7714-47b4-a40d-41eeeaf2d28a",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ec458a57-f2ad-4d4c-ba4c-d7ae8178ad68"
        },
        "item": {
          "id": "8de1614c-f34c-49bd-b966-fbb2bf91ac2d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f9ea759b-2a9e-43d3-bc17-f6e958e39515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c197980-c30a-4a43-a462-248b2680721e",
        "cursor": {
          "ref": "b65917b9-6abe-4842-9e04-a7f38291901c",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "183c112d-1ad6-4701-a466-b174abdc07d7"
        },
        "item": {
          "id": "8c197980-c30a-4a43-a462-248b2680721e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0f5928eb-c2e7-4c5e-a227-98ad9dc0bc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17e1ff8-6334-4621-9ec3-28e610f6eb1c",
        "cursor": {
          "ref": "afb366f3-0a66-4888-a72f-098c2ebb57df",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6743e14b-5cef-4c75-a35e-dbe353993380"
        },
        "item": {
          "id": "b17e1ff8-6334-4621-9ec3-28e610f6eb1c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "70e20857-b28f-4548-9f21-311558aae91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62999963-58e2-4a87-9667-e18d30f0af3b",
        "cursor": {
          "ref": "d2bf4736-6277-4fca-bc8f-59c81c170cfc",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "60c187e2-c0a3-4bea-9cad-b19d8231f544"
        },
        "item": {
          "id": "62999963-58e2-4a87-9667-e18d30f0af3b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "901c79f1-dbee-4cd0-9e5b-c30e337c8ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ec9003-17bc-4b3a-824f-756454b25231",
        "cursor": {
          "ref": "0811b3d6-8d85-45ef-b43e-605df11c3968",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e9aa73e3-cf08-4078-a809-31fc4f224973"
        },
        "item": {
          "id": "07ec9003-17bc-4b3a-824f-756454b25231",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "aa36eecb-0a69-4a60-83e8-d5a9cca2c922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7dfe78-064d-4572-8981-dc7023dde84c",
        "cursor": {
          "ref": "721b1045-5669-45ad-b270-ffe8d1502f12",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "73f73f52-4edf-4fb3-8d3c-8e232d7df8bd"
        },
        "item": {
          "id": "eb7dfe78-064d-4572-8981-dc7023dde84c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "392e7043-0e43-49e5-ac4e-c858756dc870",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8b9a43-3f7b-409b-9302-b27ac403943a",
        "cursor": {
          "ref": "d70e1799-69ae-4316-ac98-df3f73be3346",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "258917d6-278c-40ef-bd02-83accbf433d5"
        },
        "item": {
          "id": "fc8b9a43-3f7b-409b-9302-b27ac403943a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d546ffa3-81cb-4a8e-900a-2d6f055b5086",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee621c49-8e93-488a-8b67-7aa735d51219",
        "cursor": {
          "ref": "16656c46-1af7-44a6-8398-6072b9828637",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "560e844b-4b98-4e03-a267-412778a62c54"
        },
        "item": {
          "id": "ee621c49-8e93-488a-8b67-7aa735d51219",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0ec1c389-6733-46cc-81ce-e6b5d9cce1f7",
          "status": "OK",
          "code": 200,
          "responseTime": 1930,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8043ce25-5025-4c4d-8b20-b6031a73d58f",
        "cursor": {
          "ref": "99aaf947-43b7-4f05-9209-cb69cb11ad07",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6c0ce8d9-cdf8-4e52-951e-ac343330a414"
        },
        "item": {
          "id": "8043ce25-5025-4c4d-8b20-b6031a73d58f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "467742ae-b420-4773-b0d8-b598bf1b7485",
          "status": "OK",
          "code": 200,
          "responseTime": 1573,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ffd876-305c-4915-820c-d847d5cebaee",
        "cursor": {
          "ref": "15515d86-b448-4020-8fb6-729a783f4cea",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f46422a8-fe53-4864-bda3-32e6db6f68bb"
        },
        "item": {
          "id": "75ffd876-305c-4915-820c-d847d5cebaee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c4919140-a517-4f16-b012-d0b2b712187e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ffd876-305c-4915-820c-d847d5cebaee",
        "cursor": {
          "ref": "15515d86-b448-4020-8fb6-729a783f4cea",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f46422a8-fe53-4864-bda3-32e6db6f68bb"
        },
        "item": {
          "id": "75ffd876-305c-4915-820c-d847d5cebaee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c4919140-a517-4f16-b012-d0b2b712187e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025433df-dee6-40dd-ab9a-31d72cad1961",
        "cursor": {
          "ref": "81dc760b-7948-4f1b-a06e-7f5e4e38f370",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "86e580d2-5ce2-4f3c-8fa0-f6f341252223"
        },
        "item": {
          "id": "025433df-dee6-40dd-ab9a-31d72cad1961",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "80c44ca8-d22b-40c6-b066-1c19e5129f62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79719917-dd70-4857-9a55-bd02ec01b218",
        "cursor": {
          "ref": "334cd24a-6362-4112-a5bb-cf8ead66550e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "808a0946-a5bb-4b0c-869a-680f11d8432b"
        },
        "item": {
          "id": "79719917-dd70-4857-9a55-bd02ec01b218",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d18e74ab-86dc-45c5-8088-e90a6f31edd3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}