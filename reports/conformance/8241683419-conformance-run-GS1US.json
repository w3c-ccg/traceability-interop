{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f90f3089-71af-47a7-96d5-dc5611f65459",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e61ca949-7339-4194-8c43-74bcdd60b5e5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "122eea72-ee99-4386-949f-79d23546edbb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4db00806-50d9-4af6-891c-317b6376e1ae"
                }
              }
            ]
          },
          {
            "id": "d98b5f35-86ed-4f83-9bf0-53ad60c481b4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "156579cb-efa5-4b7e-b12f-e58ca46b5a40",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "88a6e3fe-ad4a-41ef-bb5e-d126fc142aee"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4843b1b7-3699-4376-a9d7-7040d178c8b5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b9742800-48c1-4ed5-ae15-bce2756c15e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d720ba95-b452-4ddf-a315-ef6315ab0c2f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d64a4862-7fd4-48ba-a033-c1de3fd5f6ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "485c837e-71bc-478d-be27-72f9b1f49d46"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de1f36d8-4b4a-4fe3-b3a2-1d7d1d1642f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23e7765d-b34d-4fc8-9cf0-092da583b8c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83266d3e-0562-46b2-81aa-a682f340a800",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f540a179-0d4f-4197-9745-64d123eba04e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c97ffec-d5a3-43b2-88c6-9c6ab35ed313",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7a55b75d-1117-4505-91c2-74249441c5e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "000b21dd-4d29-4b0c-8aa2-ff07c7452337",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6109efa1-bcad-4323-8583-2b001bfba389"
            }
          }
        ]
      },
      {
        "id": "2bb8ade6-2782-4319-b221-0810a727fdc8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4a304c71-2c99-4ff7-9c64-ae3dbe685636",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c30377a9-72b6-4455-a718-4a534ac28189",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a8cb4be1-e50e-473c-8fb0-35585a43b108",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84bea6b-3e93-4edf-bd7f-14294eb90b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09c1dfc9-2293-4192-a36d-62ffd0cb700c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ffed64-e786-447c-b4e6-099ff7a38bbe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c33828d-815b-4029-924d-1407b0d41a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7289af75-d48c-491a-827f-67eb87b3869f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9deed8-ecd5-40ad-b57e-995bd287886c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aafb9eb-65f3-4bc2-92f7-9677066f9cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7e4488f-895b-48c2-9b08-c00dd1b0865c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "222f6fdd-ca05-460a-b166-3aac5bd777a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a36823fa-bf3f-40a8-9475-9d52e5129070",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dd235a-99b8-4627-9924-d7dceff96292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c217f35c-4b26-4dc1-982b-99c10ee6f1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8f1079-a646-4762-88c3-1d3f19084499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b056b6-8ab2-4491-983d-984f77a66c28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "934a9e6b-50c0-42c5-a2b7-06ea229eeeff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cec06b03-3825-4c31-8669-57e3252ab5b6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1158152c-a422-4c5e-935a-f96343a4a1ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "21ab9735-519c-4082-9f40-4b2391edca32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4a62a4b-8c2e-4604-b725-631bc5e5d8a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "175c37a5-857a-43e0-bc6e-6d8373df1be5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44506cea-ae1c-4392-8f8d-da4667cae605",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "962ca6b4-180c-4bee-b09a-2eb1d553b02c"
            }
          }
        ]
      },
      {
        "id": "6ca0a0c3-25c4-4538-984e-4531d8794183",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "222ff86f-ba87-4a14-9ee4-e48953133426",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0fefd45-8a6d-45ec-8d90-455230ec6bdf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b85baf16-2fa0-4871-80e6-fca9cc1f08af",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4113ee-f108-4677-814e-a484a6bb812b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02a2d59-a572-492d-b49a-64776ece99fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df518a1-c3b9-4c6a-bb1b-36fff2c1d92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfc6994c-1efa-485f-81ba-788d6e70686e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79df3241-a236-428b-a8e8-e34f65990946",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2e62b2-ba45-4449-b7e2-da369eaf0024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f860407e-a160-4101-a21c-a7be4da50b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff5a35f-6a99-4186-9596-4e5d1c128713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d11be3cb-6234-4ace-8789-a58a92186d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef1b3ec-539a-457b-b46e-3e12799fdabe",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54691d4d-4088-481c-844a-122350d87fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310683b5-73fc-4709-a76b-9a8b02f8d1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b88177-00f9-465b-abac-2bdf2631dbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "483dac83-5faf-4ff9-9f03-42b451a97195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65247a5c-6077-4c75-8ba2-870848811862",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f5d46c-0e7c-4012-a027-a1f7c11d3989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a3a5f5-8e93-4b07-aecb-dcbfb2dd66ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cc0814-5777-471b-91c5-65ca4762b052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c58172a-b3f5-44e8-908b-454e83dcf008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bd3ece-773d-4fb3-8c4a-66b6a312f485",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ac72d8-1e47-4898-b07e-42181d4b4c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458b606c-a2d3-4b45-8494-b38d5748cc1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf79ce0-6d83-441e-8e05-ad4583d77204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "752e5fed-779f-41bc-90ed-e063ce057f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c6e892-88e5-4a2e-b25c-0594220980b4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c7655c-f7a3-4cdc-9ff2-f814d5576030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146a18f4-c870-485b-9f7a-d93c41dfb689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa5eef3-8498-42bb-a288-21ef91973c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d722fb3a-ebb6-40f5-98c4-1a8ce93013be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbffc5d2-5c87-4707-bbbd-caeedc4b4a2a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095e52c8-934a-48d1-aa05-303e5a093431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1299cf79-6ec1-4acb-bede-54de027ac6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adee5757-7185-48db-b4a8-5b2ae463642c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e315d32-1511-4e32-a81a-f04159da1c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710fdb65-d459-4f22-a46e-d6609d46f7d2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474a010e-9284-440b-b419-304ce762245a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dcfcd5-9464-4200-a259-08cfdb58281f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47412c5b-84d9-4814-bfa1-50978bf036d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45320033-7293-4091-b228-71a7df316509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63ce32f-96fb-47cd-afc5-7b14e97f1550",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326854ee-75fd-47a2-a2d0-ad6d5059804a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdf3a96-35e3-44b7-92df-47c921fd6992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c439e64-fa46-45f1-826b-6ccb83b17527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6070540-9335-464f-bb01-8bb1b878ea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849b20dc-8949-4b67-850f-068b9921e546",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0238927b-8bbf-4c19-a71d-245c3c44a896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422fc030-357a-410e-99ad-24294c584ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b506fc6-be2a-4d34-9aba-f192478314ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29567099-994e-41a6-986d-89913b9fcf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c36ff0-875e-4456-a027-c91a9c2d9fd2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82cd191-20f9-4eea-af79-19efe7563a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071a1a89-254a-48d2-a539-3a8fb3e99133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8b104d-b795-4d04-a7bf-5690df03b793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bd87681-8633-4d91-a558-125649281b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda5b73c-3a8a-4f51-8380-11cae97eb6bf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e184b191-823a-46d7-8979-29393cdb3cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898cda8e-0031-4cd6-a05b-b0bf03bfeb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923ad6cf-5956-46dc-8327-7cb78362d1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bee1386-d017-41d4-852d-c19d5d630965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf51ea4-d213-464d-8864-8c0ab3fec3f3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26ee166-0681-4f68-9f80-2cca5780f5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327585e6-bcf3-495e-93e1-1afa6f16c8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dc042e-1b41-4d80-bbac-917e5c258961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "032140a1-2eab-4375-9d29-24f218e8deb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535de2ed-381d-431d-b873-06256ed7d9fe",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6bcde9-2ebf-43b6-9b02-c0c923962213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286ad642-523c-42d0-9e7e-e452347ea571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cc0ba1-f892-4077-8757-c66ebfa48255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0c560fd-d806-4a5c-8935-a324a2e5a577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074a9775-31b8-4040-8542-81e60415f027",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a471e78-2243-4c3d-b899-ae30c91d02a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e4bd94-6d16-4cf3-8f97-12c3c7930ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d2a820-c8f3-45de-9f84-fbaae0354ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6812b120-e3c1-47c1-bc9d-7b3f9c83f083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c84871-3f36-4e16-8560-1c1156389c00",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f137f923-5756-4d30-9a57-4b89b7f32653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2613f9-428f-4e8b-9f3c-22565c9d725c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15d157e-952e-44bb-81ed-32378797cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6c854e6-4c95-4dc2-b212-b1cda0494cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4a4d20-0828-470d-9fd7-b70030b38563",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d2851d-ed86-4697-b5c9-355a9182ee15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bbd2ad-1403-4fdf-bff9-79cc806fe9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f72d327-4ef8-467f-a534-2713c8320234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eaf2946-a620-4f3e-9627-a9593eb5e2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47625520-4da6-42dc-accf-c27b8e01dc98",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3500d848-e0ae-4421-9b78-b557bb79f17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db939a0-018d-4a28-98e0-4cb9d4fb3f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4c5b9f-20c5-4088-b52c-d0ed022e0c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a11f2d17-4393-451d-b6bb-498d5fe2a598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ede0b6a-01de-4a1c-aaa0-a3a3afdb6b90",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51072b27-809b-46e4-922a-bd48c4b257a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa82abce-3f2a-407f-8e6d-a5512a00b59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d019ed7-4747-41b9-ad90-a0685270776b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc2c30a-42a2-420b-a5fb-f9d7419de344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0fd253-4fe3-4810-b63d-d0e56407b934",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebb8a99-2034-4bb4-8f91-104f56469706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1349eb5f-8bd3-4db4-9f24-10eb78ee9a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70313970-b4ca-4f63-9058-9eb94b130d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "437a04c4-462e-41bf-9b15-35920b259015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84e9c77-fba2-46c1-817a-5f033dd000c9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1ef462-97f9-4157-a9dc-2392d825d43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d396a7-8b5e-40d9-94db-0eaa73909bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1d6afd-bc0a-4023-bbf1-3e26f0049b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3fa66a-d3f0-4eae-925d-7ec087dd9728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f48f163-faf7-4926-a752-77f3d52f5ea8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12da44f-9dbf-4d1d-aa64-c167dd474e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd2d3a2-376d-4e32-989e-d22c2b4b3e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1897de6e-68d3-402f-9177-86dfc8080b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f89e4657-b62e-4bac-8354-373911755e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a96e76e-95e8-4ae5-a288-05977ee79742",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e73d36-93c5-4213-8c91-4377bd268a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d894bec-f1a4-4dbd-bc30-a186af6090ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b5ebe1-c7b9-4927-ad30-628c8ee71ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a49d33e-48cc-4dd9-b124-2610cdbab0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0216ac7f-99ff-48d5-9b4b-9b4eb04a087f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5655f644-b460-40b6-a114-4ab4b68f5cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a742aa-1264-4c35-82a7-2ffa620b76ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d910e3-bc11-4796-b27b-d5c8ef78b07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4195ec-895e-4dce-b54b-be63147e77ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264476fd-f6b4-478a-b731-70c22990da1f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edc51a5-e679-47d8-946e-7cba874ee550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f103cb9-d4f5-46ce-a94a-9960fc814be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf867a7-d8d9-4bb5-8dfe-762f98088ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91bc94f6-a046-44f6-aa47-410971db5ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe63ecf-ba80-4232-90f6-959f6701d274",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c86f2f-4b4a-4b2c-813b-a62da96d5e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fa77fa-22b1-4574-8b0d-b3c845cc8de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a455043-74e6-491a-9d93-77cdf0bdab31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a131dc3c-f630-45c3-b02d-833e2c812036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c880f1-ed2d-4f55-aabd-99ed3d9ae1ed",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce34d3c-0c31-4fab-a23a-befbf1e60a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9d474c-49c0-4778-8c2f-35557c831720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8ef83e-2611-4c11-83fe-d63cd0f0fdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef33c92c-79bd-4f8f-b843-a653b2a61c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f912e8-cfe1-4fc5-84f2-c88e615dd9fd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db0816d-9097-4815-a16d-a006b9ddfe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1160a09f-52bb-47c0-899b-a9f119b246a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caaa1d3a-2fc1-493d-896c-edd544d31d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4566a607-19ac-42a2-910d-f23dfb377ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa66c47-c764-4be4-8b90-aa4e74fe557f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b542e48-09d5-48b2-9076-43ed6b2a3a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8c921c-5455-4e0f-a942-0e80f46e1393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fb0aea-187f-4a6a-9fb3-e658a51c7981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c2f6fd-59d0-437f-aa5d-037a687167f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10435874-c335-4d2d-8868-1f8fbb3a71b3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9857c36-b537-4cbc-a549-9d1c077d16bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7bcb41-c682-44bf-bff5-12f8c2f67d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1d46e3-8f18-45cf-a4c3-eb5976358dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbc695e-58ad-4e65-b654-a5ecab7dc6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7816d9db-e2c4-4168-ba3e-332d7acc17b6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600e2631-caf2-4a3e-b8e9-c7beaf0b7799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb0cff3-6574-41c7-9758-e09b74ef76a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38a8ce4-7cc9-4c54-8b37-ce75bcbff2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ea1af5-1f65-41e9-a93d-52fac3c407d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d19608-a645-456c-9a93-d00110462bf3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a656e28a-4f6e-4c30-aa43-7c7ccac070ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5486cef9-962d-4ff9-a28b-9faecf12920e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf33a49-9635-4bfe-ae0e-e7b89630e5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1edd16-4717-4cc5-861d-9af96c3b24c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33421dd-1e90-4641-ab0d-04021f0d04a9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133e13d1-ca80-466f-8095-601288ab5f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4dbe49-41c4-4040-b89f-4ef05e2e2c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226d6979-822d-4a93-95a2-b332f655ccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbcf4e4f-59cd-4033-9910-0f8136c4df32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2238523-5c7a-4308-bf7b-1055d91dd2a0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca4d1a1-3205-4d27-b66c-2bce7db2ac21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41b22d0-f5e5-4e83-8d6c-88ff1fba61f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d577e9-e032-4a95-88bc-f585cffb72d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2ddb6f-3774-4ce2-a409-f2d6c358d0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0e5517-df1c-43a3-9fd2-d011d292688f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24662854-cc0b-4c7e-95aa-b221fdc8969e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e43f25a-915b-4348-a12e-89876cd696c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16911681-a729-4d47-8871-3bf0a90019ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b992922c-b4f9-4551-a4bf-e0e7320b067b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212bbc79-d6eb-4da0-8991-7256f3062a3e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866b5096-32d3-4f1b-b0f9-52c65174276b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c58e6f5d-016f-4a1f-bc39-025a677ab419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a381244d-8970-441e-8851-6c99de3a3416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c682604-fa0b-4885-8585-8183e98a0af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e648c390-0857-4b8a-a640-7567500b7800",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bf2055-8392-453b-89e9-63f52b2a95de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f37d992-b581-4810-ad57-6f9718b131fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804dbf31-4af1-4f04-ba7a-321a66ee8dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6abe837c-1ec4-4004-a00a-4a2edb370fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20a3a34-bac4-4be6-9eeb-933cb8bfedaf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b385ab52-0a3d-4aed-bcd1-9e7dfb9ebf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82318d54-c26b-4adc-9c71-e1ab1aaee72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd866768-9aa4-4964-a6b9-64f2b6840be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4d0c8e-2b17-4c66-8f65-09b0f9384e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c259c2-1ee4-4bf4-bfe6-34c2c0c8b9f8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbe0512-2aa4-4ebf-9389-994a22120ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5926c0a2-eabe-48da-abd2-db22e6250806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a488a5f9-43d4-4e97-b6eb-17cc11e9830d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "186b0bad-90cb-4e01-b79a-fdb37599fcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39c62bc-faae-4630-b9d1-416cae1fa674",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23006307-c6d5-40f4-9e82-6f0bbbe4b1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c657fe9-8d91-4497-a4ef-ed521ef4c824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897b1051-e2c9-4077-9285-d4ede50392ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "860e2aa0-c075-40f5-a9f1-aaf6132b2875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3107314d-e428-4cb6-9e19-03a45105680d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e179b55b-b6a9-4a89-b4f6-55226b518f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854113d9-3a75-4956-ac6d-b37f0c62e4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ef966e-e701-48ce-a531-6189066ed64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "69f3f316-f398-49b3-9fcb-38795038b864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dee275b-1ada-4aa2-b101-ea7b59d1d653",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980f5446-b0a0-4aa0-ab63-d0017dc14d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e326b60-d9e7-431d-88a9-8f602dbe59d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec20446a-ba22-470b-a4dc-f4640fce88fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec0d3b7-ae35-41b4-90ba-f36a988ce723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61db092-0e45-4a2c-a882-d27186932504",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e2c903-3ecf-44c0-8a2c-b752cd0e8191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165463d9-350f-464b-93f6-c68579efc41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c507ad-48ce-4bfa-9add-2dcc0e40516d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac854be8-48a0-4da4-9adb-dc3e081ea2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e09126b-d675-4635-844c-b408e4f8b123",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074ebc8f-827a-45e8-8d76-d566c1894baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b796708-f24b-46a2-bf57-cb9cf1933973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbd5500-6d17-4680-9f62-88461e253ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5158e81f-0edc-4da2-bb1f-ad0677d7fb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639f13c5-6751-4f06-a658-fb933a71e55d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daba34d1-7e73-4dce-81c6-0cfc5227bdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c5c031-4eb6-48fc-9fb5-40d2fdd05903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1789e30a-0a03-423c-9dd7-32abba414d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25bc16df-64fa-43bf-8c4d-f51eb888eaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fdbcba-8d3c-47ba-8d3c-6d10f1a611c8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac394a6-8e4e-4989-85b0-7f6584a15350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37177a2e-d694-4d85-837b-e5fb7e79f0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee44afe-0602-4d40-898d-cd1eb94610d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c7fe5e-e0fb-4b1b-8c78-bf4d6ff62f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738aaaae-1029-49f6-9312-53eff19f8781",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d8efc6-3e0f-4321-902a-d749f0f6269b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418e39df-4937-4ca8-814a-baecf7f30aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1d4041-814c-4901-8529-014343555638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93bbe0fe-c347-4e0e-8825-685f33a4cfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cbc50a-eb12-4e08-b87a-35b41b1f52c6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40bac35-605c-48b5-bf9b-03ad2dd02c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1195713b-cb07-4bb5-8ca5-0530a45d0f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd334482-e513-4fce-bb8b-82e828a1c499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "416b108f-2ef2-45b2-8022-9147719c19eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ea2cf4-c8c8-4fd0-8cce-05bc5562fe72",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7702d92-ad60-42b1-950b-61835a6e09f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14189cd1-c22a-4245-b9e9-1387b1773da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5665028-da44-4345-b421-f346a2d79f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f5d382-1665-4bc7-ae61-c4bb1531f1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821317a0-1e1f-401a-9e1a-29e5574ab1c3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ece324b-69af-4c02-b9d6-d52cef2a08f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be202d60-ecdf-4633-b02f-68a3740d4278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632148f9-fcfb-4724-be7f-b8579c457fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28c8ec1a-7e06-43f9-86de-13fb3ffd5b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7f8f61-ba20-4feb-bfc5-9f8ee95e8629",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb9f5af-e53b-42a0-909c-9038432101ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e9a66e-3c53-4e1c-9f8b-381c00eef122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29957e3f-37f1-4d00-9f70-98b8dd713269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade92d58-1e7f-4fd1-ba5e-6e2c35cf2ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e3f870-273d-4114-b0e3-7e4b17e83579",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7630cc-d363-4038-a9ee-5fd2e743e9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c1b940-73e5-4b70-bfa9-1f3b7d3dbc36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb03c82b-80bb-4ccd-b9ef-5dfb0634c103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9df68e-1809-417b-9491-0ec790f0d2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072df058-15ec-4ebb-855a-428b6a192c64",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afccd9eb-1952-4043-a07c-45418a78aa60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07d247a-12d7-4024-b905-a11513cc9a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f5ca68-218f-42fa-814b-6355bcb0c71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42e9a649-792a-46de-b811-73637dfd3ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d047a7-a001-43d4-aa20-bb303b9797d1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8398f5da-1d13-41c0-8824-b0558dae9819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e561410c-b686-4f89-a9e3-92fa0a8d1a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba1722e-9dca-4b5e-a04a-2f79cd48d258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16318a74-2cba-41a4-aad3-7f368734f298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bfaeec-b04f-47c5-8732-2af0fab46327",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131407b0-8a11-470e-a1c6-ee01726e23ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebeb7591-c3e5-48ab-8361-dd2626022425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0765a5-6c0d-4185-8bde-dc84510cf1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0e8a38-2c0d-4e07-bab8-74c7293505ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1837f37-ece0-4105-9cd3-19d635d06d85",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff76dc58-956b-4efa-a7a7-a1c3fa0d6f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d234d2-c3da-48e6-a34b-6d100fe68dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aaa830-498d-4e79-9a94-12896919beda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5c302b-7348-4853-bc2a-9d89b09b74e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc8af7d-5caf-46af-9455-cd6175bccc59",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f119b968-d146-4a6a-be00-5fece702128e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c2c59c-8869-4790-986f-a49e40a49b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50457ed7-cf1b-4575-bb63-5bfc2b567782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d010fa21-b184-4a27-883c-557273f4bcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea6c8e7-55f4-4944-a259-5807cc1da19a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663118f2-259a-44a8-8add-f6b4798374f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac461ec-b18f-404e-875c-2b2ab652d766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726433a9-991d-4793-8200-a8b96af461bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c263cdcb-0412-4336-8197-2f3262e823ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83c6d0b-26aa-497e-885a-023090022056",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e11b958-2514-485e-b007-990430fc495a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249327cf-cccc-42ef-bb5e-446386582723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef0d9ca-b7b5-448d-b06f-9a45b7db31b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa3b230-ab9b-41db-9a8f-35f2f406b531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed20a49-cc8a-44e2-afa1-37fc78398d15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3429ebb0-7b1d-4148-99b2-4c36a3fcc5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a121f3f-9155-43df-b4ce-9e631937ef0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a66ae21-7953-42a8-9b61-15646bcc98c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "003a90ac-d01c-401b-8e9a-1bc3d067f53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c530b7e5-04b5-47d9-8584-d6dbe91a5489",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3c6584-6abb-407a-ab6e-86a0779fc129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96217a1-659c-4260-91a6-0ad22710a71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad07ea3-c07d-4eea-adbb-6f5d1e1d540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b82c2a7c-c724-4da6-a961-4a14e9844f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e366e653-8f4e-41e9-a870-2848e5fabc3f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d92663-8469-4728-8db8-e99fd6bed759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93a9bf2-41b6-4fed-9442-f5dff8dd705e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaffae78-0af1-41aa-acd0-1b706c2ce0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0f913e-3825-4af4-b72b-8cf5b12568a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0157c88-2716-4746-b079-a20bc8c01d8d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655362ca-0f58-4f6c-a146-e08575d14ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4270f768-9dbd-4330-9a0b-4213699d40af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7895b85-f830-46ad-b551-d16ea12b0feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c336ad-c5b2-4845-b457-888538142502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cec52f-a04d-4766-9542-4949fdffb8e0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69867c5-7432-4430-aeb6-6e14359820f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0652ce9-4174-4f08-a79c-ea96220b290f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74298c9e-fb2e-49d6-8538-e48486a3f427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "974e832a-e50a-4422-b8d5-9d534aac9c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193e6d00-3ce4-4c43-89ad-871996629594",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f077f9-c58c-4488-8c38-d22d44e479ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ae2084-57a7-4a54-aea9-641d464cbf9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb6dae9-cb3d-41d4-8c6b-8e9e54dc155b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b879dfae-6de0-49ec-916f-d3a3e26a0daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8834e229-982b-4ea8-80d6-da4c4a16d42b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3371e7d-cc08-458f-9615-bdda9502b058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53bdd99-a3bc-4592-a887-9041cfe4f088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f86d1a-d95a-4815-8b91-90ed615b828d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c081c4ff-c360-4a61-b8ee-94ba3522eec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91460dc-7779-492b-abb0-d347af4fc699",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a577a87-e3e4-43c1-a372-00eb9c7acaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2881936f-fe0b-4de5-9c1c-b29e5acfb028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41a9a14-7af4-47b8-a340-6a469d076485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9db52865-fd10-42e4-8ce5-3d53919b74fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645fcdf3-31c5-4f61-92a8-70d4d74ce57d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0900544f-560e-4c2b-a664-9d38b420cae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33637a5b-f35a-49af-a3fd-9959529cab73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca61f334-e8a4-4e1f-aab9-42d5a9ac26fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d71b9a6-e143-4654-a1ca-1913b28ded9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8a13cf-ef9a-4010-b375-b9b434de98ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58c244e-f807-4400-89cd-c563f20e38f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cf0526-051c-4017-9803-a448567e4989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18abcd81-038c-419b-9c64-010ce0887c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc98e1c5-3ca6-4f2c-84c0-889aa27f64e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53070252-a6ff-4bea-b1a5-f52124ab79fd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bf10c2-20b7-4f1c-ad5a-5627ddf3deda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8393b94-cc1b-40fe-8c47-9992d19db17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd78167a-4b72-4b47-ba22-95f70e0d1a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f93d8d7-7315-4249-b8db-ffa86ce4b30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc73e279-d953-42df-a9de-c7aebb3e1e20",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8786405c-acf4-4650-b1f0-5f772214d6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b07187f-fe86-475d-be56-ed1278994c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab322561-e377-4eea-9698-b9fd6615cc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b04ed4f-89dc-440f-b05e-bb8dc50daf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb348ac-b59a-4f8f-9e5b-0adf5d659a5e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42045710-394b-4697-85b3-e5963bd9ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3273c35f-dde0-41c3-8efb-8ec9c0b105ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e746fb39-4ab5-4a53-86fc-5d5200e73f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "102aa587-5ed7-45e6-8e7c-a28b7cb4e6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da00588-29ef-4760-9117-e7ad02e79d37",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7837687b-9ab0-42cd-a5da-47d29a10f709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4eb2e6-60e9-48d7-837d-00b10ec1576b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd491305-ae5a-4ab9-a9ca-0d860a2bc5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "123a0452-e3d4-4572-a63d-cba721e1ffad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3916e06c-704e-4d38-8992-cd765edcaf6f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcc4a41-c193-47fe-a3bf-66ae44b32d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1321cac-d0f4-4b21-bb7f-67bf46a157b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d772b1e7-9610-41b0-8239-04b02e7a17b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7676f5e0-a15b-449f-a52c-5e2fe308f748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61b7de3-03e1-467f-9f8f-c3e86ad3c38e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f8c74e-a0a3-48fd-a541-b82823f92521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803c3755-8c90-495c-b2a3-7db06b1a8740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d977b704-81e0-43f1-a51e-f3b11e128eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5f8ac6-2953-4d02-a982-98de4d57b4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bf9bff-06d8-4557-a97e-3f197f1c253f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a52bd92-0b34-492c-96ea-e787ad07b45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f6d853-7eb1-4d20-9b3b-bf88bc527713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53510086-d004-4702-a325-fa04f570f73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05beb4a3-2e25-4a42-9559-206d54529559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f717a33-3065-43f0-9152-4d1d7244a0ee",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4fa621-978c-44d2-8418-0456885feda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46989082-affa-486d-9e2c-cc3926334d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b6fd88-27ad-4fd3-81f5-552a46fcafbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "835ce085-4dda-46d2-b3f8-1977e9879285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d101bf2f-dbf9-4350-b0f9-6bf068572487",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71ffb10-2bee-4bd9-b167-508ba8229666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc3b0d7-5c69-4a63-b669-c1d1962dd427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7b6cd7-3218-4e72-a8e0-32a2072654a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04083bcc-4ad1-44ef-b018-25ddd86fe233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639d83f1-0a6a-47ef-a65b-645c6c68a4c1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6307db00-635d-4329-85be-54e776c46179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb43fb24-18ac-4a1b-9d0e-d34b30a156b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6f592e-6241-4942-8f29-9026ca2cfaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e40e9a15-2086-49eb-a939-0275c28b0794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f175cb47-af77-4633-8bc8-11f51cf895ac",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997b423f-e598-468d-b354-af058504f743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1923793-7d86-497f-9f7b-aed97892e703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138ffe1f-ac5c-44eb-8e00-b58ded84a00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f77d433-4738-4939-8844-88205084de17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4da43ec-64b2-4b7c-9c7d-70858d783b3d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e294fd5f-df0d-4e3d-b2d5-1558870f3c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96684564-962f-41a5-88f9-56153cbe8948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0454f9dd-2ba9-40f3-876e-bc34cb224683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7e2883-9963-4e8a-a4c0-6496bc8afd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294dfaab-b255-46d6-aa7d-fcceb5e3a4d5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a312691b-7f96-47f9-b959-d4e882747d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eebbb30-de1a-4abd-8ccb-3da10ce02ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88461388-9cbd-4167-be59-d6d116843f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3bf5af-ba9b-4e69-82b1-375ec84ab478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47932c9-327c-499f-b0b0-61c72656b8c0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689f9ce1-ef21-4a46-8ec9-d5352d3dc98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e198a1-8916-432e-927c-1a00db67a64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbd76bd-6dc7-46d2-a6aa-5b3d964dbe16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "067569e1-1302-4cc8-89df-c0db16e0b768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7193254a-1764-4eb6-b729-ce3e690f16e5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344392de-f4f5-4c2e-afea-0e4d4a0ff495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014ac08c-d24b-4eb7-8f54-989f7b5c1258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dc0ca2-71a9-4849-823d-837c815adea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c13a16a-04bf-4ffe-8f1d-1602af0e4a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0b65ba-1057-45e6-94e2-25d3246a87f6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba19e292-df63-4f63-a6e0-57fdc7f02814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785f6b8b-cee9-41da-8883-282c5eeb0de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5371c0ba-0fcd-4ba7-b18f-31aa5c8dd692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efcf492a-7e2f-4b30-a99e-e2c736c5e0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d048e658-c89c-4f66-b004-4fc364291080",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b006bc-b8c8-4c61-985e-d13cd4a8d631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f88a67-8bfa-4e07-bc07-7adc1008e7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff3fa47-2e43-4078-a69c-911235973662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeaf87b8-d83c-41cf-976f-d875c0a7cdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070b8883-ffad-4fd2-a371-613b7b1b5c24",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2a716a-85fe-4430-a63d-0d78a17026a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92317bdb-36dc-4b42-973d-d5a9749a08e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0705fe94-49b2-44d7-b7dc-bbdc19971616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "47cf75a6-de3c-4b33-ab32-cee605fc6447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2274db62-d6e4-4f2f-939c-6f83dd63fb5c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3723e909-18e5-4d46-aa26-f9634e4c3d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc1c53f-2184-46d5-904a-d0017bbb96ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a24d67-ea0b-4975-9250-c75ece9a27a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b96d1cd4-9aff-4077-98f1-1ec978250465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8c8fe1-1016-41da-8d3a-de3edcc5dffb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aeeffaf-7352-40d7-be3e-67ce7e811ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db186ed-c960-4dea-ab98-111379f0a887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e579fa9-e600-4e13-81da-54926581cd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "30bea282-aabf-46c7-be2c-55e952ea264d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c712ef4d-c146-40e8-bb82-41cef80198fc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75627623-ca7d-43d1-a14a-790c03fc6b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf3f0b9-d746-4e85-abfc-90aba6915bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24eb0cd-7b89-438c-ac6e-3eaa6023e4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2de7b7-8fd4-4b7f-b6fc-81abd1f64cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fd880c-9ae1-4914-97dd-3f2e4c719c4c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7e8961-dc0b-47bb-9d12-4101ddde4400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50a67d2-40ea-41ba-9a00-39dee111a002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31d72ac-e1da-4793-8fd9-03d826f545f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "de22b1a8-a9ab-400d-8d21-e90e4bce89f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63e9f96-5f4f-4395-89fc-d88df49e8f47",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37afd2b-178e-4f0d-a380-555e6af8f921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "27b56975-daf0-46d5-82f2-b4234d36cac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfcfbb4-550b-4da9-9d12-1ff910236778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9797cd67-d1de-4384-a339-64be93efea04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d25d53a6-dc1a-4b1f-b976-2350bf2eb404",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26a820c4-69fe-4c75-aeff-6624387ca5f6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0377f2-b071-48c3-b779-60081816b8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "913492b2-db28-42f6-9406-f2ad5af821b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c623fb2-bed9-4ba0-90bc-0b31b91891d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcd1b53f-74a2-4347-95e0-5b22b78198f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "041635b2-b9dc-4a84-b4e2-02165c315c69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3743c576-74bd-4f99-b43d-cd36d857ab78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f518976d-b046-4c77-9c57-45f50424210d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e390bb0c-5766-434b-b265-6e34dfd9524b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9bb1c71-e51b-4765-9cfd-3b37e1696648",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff61e681-25a8-426e-9fff-e6784ba97601"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "285ab791-10c9-4999-92d9-96529fe38539",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2dc5738d-46a4-4450-b7f9-042edc2be317"
                }
              }
            ]
          },
          {
            "id": "c5df7325-aeb5-4ba3-b70b-4884976cc190",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ab0ae87-08ae-4d6e-af98-f331a60e5b3b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f74ee523-acd9-426e-b760-cf6407eeabaa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f36c855-7978-4e69-b38d-e861478a2336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a11c768d-6930-48b6-af2c-a23f5811707b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3feae32-547a-46c5-9aba-4c03e3586fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9677eb5-b968-475b-89ea-11a84f2270aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3759b942-2f6d-4161-b47e-6f8549a76f3d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9341733a-d7e5-431b-8ba9-4acef8d619e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47a87b79-dd16-4f4f-992a-0d70512d3d59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd8cf9de-7f7d-493e-96e0-c8ed1e8fe697",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b76cf524-79ea-4738-80b8-c0b7493a1580"
                    }
                  }
                ]
              },
              {
                "id": "db892b18-b427-4bf7-a5d2-bfe4ad909af4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbe74ea8-eebb-4501-b285-8403b61a9cf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02d4d58c-2760-486e-89b4-49ea8f6ce674"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ac52c72-29fd-4461-a645-aa315c0144ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "64ffbf57-99dd-4db2-a2e2-83a435cca353"
                    }
                  }
                ]
              },
              {
                "id": "25a50084-e9a1-40d7-b51e-522728f93580",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3dcee10-b51c-442b-b6b7-b7f58e916216",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1aba692c-57c0-439c-be90-231838d64f9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ba001c8-4e62-48a6-a574-5b4daac15fd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c39a9a42-dcc0-4abc-8050-0535a70aafcb"
                    }
                  }
                ]
              },
              {
                "id": "9b652470-128b-4cd3-b2ce-0ecb9f5fff16",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4cb58dc-fb24-4d17-80f4-94edf8109fea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0531e63-8709-4c18-a264-9d3b9fb1ba7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1fe2f7f-b1c3-4850-9019-03cfe4b8905f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7e37c7f4-74f8-40be-b281-bd8fdbee1f18"
                    }
                  }
                ]
              },
              {
                "id": "037ac465-e639-4265-a55e-28187c4c1ae8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "721df59c-46ab-41ad-8a80-2bb9e9609433",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a135015-77a1-46f8-9305-94d391dead92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a1ca18a-f79e-49dd-8962-a288ee5d28cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a7b2c3f6-3d44-4f86-8e87-2c720b6337b8"
                    }
                  }
                ]
              },
              {
                "id": "96af140c-adb3-4a3a-b891-f5167399f4f5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "498d232b-c97d-4b8b-9497-6f043913fe43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7da3d663-8a0e-4974-8a06-927e4a1b34ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22a7b520-e625-4de4-94b6-e2cec6ed4aec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf1f5a1b-75b5-44d5-8bf5-42f9a4795fcc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "148962b7-e5cc-4d43-9ba1-0e6992cd4838",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cdd0799-ae00-408b-be31-59a140eebcdc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1738ee7-6c30-4ff4-8515-ad943c65a03f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f291b65-9883-4f41-8315-be8cbe688af8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22cc075f-af59-4c36-b9b4-d5db40c42fbd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ec0c529c-9166-4343-ab67-4add2d6e69b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e83e860-67d5-481f-98e6-d79217355485",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae4ee0b6-908b-4b59-86bd-1e17238b52d7"
            }
          }
        ]
      },
      {
        "id": "035ae1f7-1869-4f70-b407-33e6bcde95ae",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9868b6dc-0c0b-4d36-ab77-8a832227e596",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8434f7d4-9a51-4201-899f-7614aefa8cc4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3cf0f553-cb19-4a7b-b2ff-446d06c0ffb8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff95ea2-fce1-4f9b-a3a1-fb22cd799be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a4bfd9-84f5-4132-bcfd-90830de794bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2d8bff-87a2-40ac-96d0-66d3186f3022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c01d7dc-9e0f-49bc-ae77-8baa1e3e34be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd95573-cd72-4491-b0ad-11c35ae5d984",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a62e2af-ad5c-4816-be93-3546cfb0a355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d4af22-d2ae-47ad-aa83-e68764cc7da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5e75e9-ff02-4a95-8ba4-1cf41c97eab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a244035-5948-4823-989f-f1b09d2f5636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02d1abc-8710-40ab-af26-b1f061600b3e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1109eaf-2450-46e9-9bbb-2495fa631b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e098ad5c-c70f-4197-a59b-9d15f1e0d9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ed21e2-255d-4093-be28-2c863119d383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7e53fc-5a02-4b7e-904e-e36d6356185c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecd2b32-c889-4e53-bfc2-70685e29c6cc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd271ffc-6d48-4434-b780-282a239efef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a28dc90-1fd1-499f-90a7-db7f94d1cf01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c746cf5-47d9-4fdd-80c6-1dec0f2393f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a934f99-73e4-4b72-a0b0-5b9fd25c029b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183eb1f1-5c22-4e91-a5c9-d7b964787fa9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1338f49a-1b1b-4655-a2ea-721e838a4853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd34a0c-99f7-4206-8d02-0f076d402e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29357cb2-6bba-4fc9-9afa-4f4f17933f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9304aadb-c524-49e8-a89e-de6848ae68c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b489e1db-8ec8-467c-bf16-98669767f4f6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005085e8-b34a-4371-858f-4bd37e7476ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889fb828-f0d4-4549-aadc-b598cc885265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767cfd80-3b80-44da-864c-eff4d2993097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acc9884a-3f82-42e3-94d2-71ba53bc5fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7332a7-3f73-44c1-a0d7-00fcce6db4eb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3599516-b2e7-4864-ade9-60aa21f35b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd97eda8-3ea6-4a18-afb9-7f5ff475cd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6417a348-5c54-4012-97bf-7f3989bd19b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcf3f67-f32c-4d61-b631-08306c2cc236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eeae58-c398-4a63-b61c-6a7f8c5f51c8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06758c4e-211b-4fab-bc7e-ffba889e997a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a53c176-9d00-4543-b35e-92f896d0053b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69ffcea-5425-4ea4-893c-795513e8ab15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72ec547-4bbc-4b13-9f4c-73843631d88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cabe356-4bbb-4dc1-aacf-5141567cab1b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a17a2bf-d72d-4615-868e-1a23f9db51f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc38bf0a-0bf2-43b1-92a2-f59c43a894f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83715e5-35b4-4251-b990-0b9e1d424e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab56aae-f2a3-4d2f-bc8f-b3e127126228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2347f88b-826b-43fd-a7b9-3e915e439725",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4b2e48-79e7-4492-8902-ef387d58f757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb30d8a9-6595-4fbb-9800-71f599983fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76b14ec-3d2a-4b1a-8666-b8f7125cfa73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da6015a0-d2e4-42c1-9b91-786c5f2dd81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313bacd9-8fea-4195-9c27-5d579721dd0f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb233dd-9d2b-4940-85e5-770099eda787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d95e6a-fd7f-491a-807c-3b387ec6448c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832c767b-03bf-4e1a-918a-049211ee4858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8b6164-9a08-469b-ae15-cbf9c484fdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445ee9c3-53b7-48fd-bbeb-44cc5c5c9f8f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4800b3c7-09a5-471c-ba76-3adf45571ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b5fe3d-79b3-4649-b218-caf479f4517a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66ebc4e-8879-40de-8213-a914c6f80032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94a41914-b875-490f-a799-72b1417515ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74960251-eaff-4a84-8b31-91d2fb5e6b73",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea4886a-f1be-4178-8aa3-3362d1f64d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ee0cb9-a8c2-4262-a336-9da89f4b9629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f2d270-6aeb-4dba-9c1a-2061491f4af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec42d55-eaa0-4b4b-885a-520ed9775f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9f5511-dc80-46f9-9d82-bb63341fdc64",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008abcc5-d52d-4061-8d34-a23c55667c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d38ea14-d1f0-4e6b-b3c9-6378ad26da7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b37625e-450a-4817-b8c4-72adca4e0fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b00353-9a3c-4c1a-81b5-d0a65b70d223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95c18a7-6cd7-4740-943e-2000246c1bce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63a25ae-e4b8-4abd-bbd0-cbbcd4954a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048b5a36-b938-4367-9c5c-7e5469f588e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dee11a-7825-4d4e-98b6-081f61cc88a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec0ea8a-8c12-4094-9c9a-dc96ed39b302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b34dd1-de89-4bb0-939f-41bd46cbb88d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e52a9c-462c-415a-b7c8-86704398730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7bb1bb-2256-4f0f-a67e-f9b29c059da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42694198-9661-4560-a8ac-305b82abaeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec533b9d-7f08-497d-83fe-6b7acc4192cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9e422a-91f8-448a-945e-3ddb89c16303",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e2630c-0319-4287-a797-59a30a970c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b69503-c0e1-42cb-b205-cb000c857616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f4f561-5eec-460b-83da-bcd2ca4bf6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "767d141b-21e4-46e6-8677-a8ed3a598c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13b20a2-dcc5-4171-ac7c-07b60e2ff5a8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62329dee-d663-475a-b732-37b06516d3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530a026e-17d3-4e06-ab34-80a8a23633ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254ac73f-55f5-41c0-9677-bc5f1b1a318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07853199-971d-4749-b8d0-5b3c158beff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef491b28-f1a0-42c8-8118-0b2e4d5512d2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2438a19-692b-4dfe-a37f-ce2d89849ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a077a8-356e-4ee9-98f7-0a7d5c4dac44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a70ae4-5ec7-4fa0-aeb4-3dd8d0d91ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7acb03-cb32-411f-af24-da7ea8ab2234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54eaa0d-78ba-4047-8d43-66177f174ec3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750c592e-9ab3-4ab3-9f0d-0c124dd24e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423651d5-c0a9-4cca-9f2b-4c39f6aa88b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3ac5b2-1944-4d81-9555-f840d2f2535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ca304d-486a-4aa7-9c89-e4f766280d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9901691-e9d3-498c-8304-7c20d7b08004",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d5c6fe-f31b-404c-b7bd-e0f943c42207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d927c2-1aae-413e-a33c-3f467e78fee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcd7761-93c1-46d4-89e1-f6c6375b85a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9568f400-52c3-4721-9e83-e69305746c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c605ca-5ef7-4dbe-ad60-fabc8200086f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2672b2-ce0f-4f99-b74e-36ac2934510d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfec49f9-0bcf-4017-b720-0603d84ea806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2cc6d1-fe7e-4243-97a2-7dbf3fa956be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb874766-426b-4ee7-81f7-afb27ddb9112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec16390a-57f9-4948-96cb-3e0a5863cbf8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5dce7f-f86e-4017-9c26-4b4660870dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c521a83-dc92-40d6-a814-5133ce176c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6cbd2d-86ab-40af-9269-f05d4ddb1980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a755b2d-5a68-4676-8a59-d6b579a95f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e3e3ce-71be-416a-b550-9e659f8ebe70",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc223066-841b-44b7-a787-7f6e6c675e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b243e159-b3f6-46ce-abff-fa82c61156c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208a29b1-c0b4-4605-939f-55e7c34d8b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a28072-5055-4e27-8187-574c3281587a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7956cb-a159-46c3-8a1f-bdc59de241f0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4bbf69-aceb-410d-bdc3-dbf409920a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c26f59e-e414-459c-a299-5d939ff8f032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16324856-9566-4b10-b804-32459c2a260b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6e1bb7-3beb-443c-9bf5-dee05c4b8312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ef14e2-00a9-4c7b-be76-be700dba0fc4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d123d2-807f-42a6-a889-dc9fab2e9051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decf3ddf-b50e-4d52-99b6-e85766d824c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352cf797-f837-4eaa-8d58-d9073ea3b687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "951d5555-c752-43e3-97b8-5ec3eb4423c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6323b0-1db1-4564-bff0-43fa5451e6d6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68b5a28-3c88-4f82-ada9-4d93f1d8e7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae51e6cd-b4e8-4c84-b9b9-81d71113cfa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a8de93-8879-44e9-a2bd-b3941b43e07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdefe91-b779-4df8-903e-b0a241707ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f4b485-a69c-4fbb-a220-c1ba55298133",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ae3948-7496-42ab-86fb-dad4bec3600b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e3a9f7-03e2-4197-85f2-3ece11a6e582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19572c9-8a63-4cbd-a1b5-dbb08c3b4f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3b21f1-a7af-4633-97c1-ac97f06d6824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b5b068-4ee1-4e14-9789-7aade4d1d51e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bc6ff7-c21a-4e2a-a507-6e52c042d12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216cbafe-9ce4-437b-a89e-052ff60c0cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f04213-6a4b-43f3-ac2a-75bce5fd7105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4037da50-5fd4-4b66-86b7-a2d4c321f271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4ca42d-825e-4b4b-b2e7-13106ac619a8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99369227-a0b2-4194-ae5e-b8546f56f4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884e5dc4-705f-4711-9317-81cb0ef1bcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888b325a-594e-4b43-9b51-08f1bf5d885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77b8774e-329e-4109-be0e-af99a0eaf8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc17fd41-7297-4608-a7cd-bb72407da79a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d35ad21-ce11-41d0-ab6e-490054f2e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02116e2b-db91-472d-b795-fab93ec5d9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9945f9dc-1737-41c5-82e8-20edc614a49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb022856-2c92-489b-b903-ef7967fd645d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef37a1dd-7556-4803-9911-ba4c623b2b65",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4013ee-57cc-49ec-809c-cc457721eadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7d6967-55c2-4f92-a375-8805118fbbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79edb86a-e1d3-4e7c-a4f5-5b05e5ea2151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ecc095-d3ea-482a-93d4-e77eb04cfe50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bcfba2c7-016f-45eb-b3f6-27f0f24d66da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8384c25e-ca4b-4ce2-b095-1f672bddc9c8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3931d8ea-2146-4001-9165-980468ad29b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "49ff1ee9-c543-4420-afee-3e0d17eaad06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e365088-538e-499b-82ef-7ce4d489b148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97b38506-2633-409b-a987-d2669f91aba0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6e586e7-df1f-446a-b5ad-6d74ea683f3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad3bfeae-3725-46ed-b63c-2857c87270c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c892d43e-1bb5-4e1d-98bb-ab23ddb79bd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8923558a-0b05-4cb8-8835-565f16128452"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a372cc0b-c71e-4458-809a-a47f869ac314",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab13acfb-bb95-4631-8153-a6789b9a5959"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1eacccdc-b4e4-4f4f-9b30-a4b02b91a46e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "163ce94f-a917-4850-9d7a-ef7041587eec"
            }
          }
        ]
      },
      {
        "id": "ad6219b7-de15-454f-b754-530d4725f571",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "98b1a929-9220-4f5f-a080-fddae5534bed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a73c4a58-4a54-4b86-9348-3372f151dda9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9513b067-db8e-4268-a5ef-6f8cbbdfbf61",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4f4a27-b90f-4ed2-b443-62da5f051d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b5fc48-e1b4-4a24-830a-d616cf921a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5632b65f-5be8-4119-91f9-b0f701ed32a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "03f66d72-9b66-46f7-a1d3-2ab487228d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a99d7f4-16ab-4f10-8463-99cdc09a2cfb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0e2179-76ec-4fcd-abb4-4fbd6d56b59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b353134-2414-44f9-b0e7-883d5a8cb168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504efb81-d512-48db-966f-da35deffe1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83114e89-5668-41af-bec1-c998f8ee23d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a888b2c-7fcb-4277-be51-a0b2d3322bcb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fb945c-dc87-42dd-a976-52b78d1ca2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5376dd1-4c55-4ddb-8bea-d0ff6f0aaf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84b87bf-3d80-4110-9d29-2d984b6b1afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "527a1ac9-d35a-45fc-80e2-cd6931b07692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ddc392-6a64-41c0-b0c1-58c2a75351c5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efb0853-66d0-4e81-b888-46943ebf7730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4058ae8-b610-48ec-aab6-2b6845e7fe0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26109e97-cf73-479d-a7cf-eed6c35801e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "866560d6-7fcd-4ca5-b5be-b62098faf9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1c79e6-8027-4754-b0fd-5c95ffde71a9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc435f94-bc7b-4884-b377-54367689cd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae4a9cd-44fb-4f84-98e1-fa4fccbe649a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc00720-fb71-4a17-96ed-e0435463df8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd66af14-6503-4596-a86b-fd3e2d5d2942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be6726f-f4c2-47f3-88a4-95fee34098d7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86121172-89f0-4f7c-9d4d-d91a05fd8833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ad2446-dbcb-45d0-830e-136f65c8a397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9979762f-b460-4505-b6ab-03710e8e6d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc559e0-0639-4032-ae62-fb50a657320a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d36e230-8e91-4936-801c-079762d7fa8d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7340979-9ce0-44be-bf54-ac05bd2d23c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf7f2b8-82e4-428f-9d3f-332290062c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43172427-7677-4042-9c42-2dccf92240ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "47323a7a-f542-49e5-8337-3135a4efcdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8c3ff5-1b1c-40b5-8b6b-31d8e5fbdc53",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b965d7-57bb-4761-bf8d-eeaca283c84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc095475-3243-4963-ae7e-febcf5e95c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4e86fc-7213-461a-9c39-29741f2ff0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "027b8206-8949-447e-b9db-46d02637b27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67e156f-8d4c-4d88-b5ff-2a820399c261",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4442db8-91d7-4a7b-8458-02164e489b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac015c2-bbb3-4c27-b38b-6ee907765b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0915679-c5a4-428b-835d-1bd76453d86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5bcc79-a566-4e01-8a2b-01fe17b2d71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f30007-880e-4593-97d1-f96a3668b18a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3af968-f241-433b-ac61-c7ce6a90ea38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac38964-4cfb-4fce-a741-daf39266012d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3572e26-554b-4d97-875e-20031ba25b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32557459-3ae8-4830-9ec7-eacdadb84a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64e44b3-5cb5-4f28-ac2a-583fbc0d652b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf56458-34e7-4719-bd2a-291b0cf145cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4fa77a-5c20-47ef-823a-8adf9330ed15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6b63e2-77b5-4f59-976c-8d5ee9ed3c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f30c200-4924-47a5-8faa-96566072a29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238be195-e37b-4459-9fb2-2b61cc66c0c1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7a2d31-5e02-46d8-b83b-2ebe48a1c4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94259c95-bfa3-405a-ae55-586eadab54c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d54b6c-c683-4a81-bd48-5998d4c99e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59916036-7910-40fb-8e13-0ab097f8a108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acc394e-977a-4bd0-a099-959738f0a23f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f640b5-8377-488f-bce6-2be7aa433ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abdc371-c8a6-4bdf-9207-9711e827f278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9999f7fb-a7bd-4086-9efc-7b254c3a9eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be331bdd-00f0-4424-ab45-51fb8df5ca40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0263dc-796a-479f-b794-531f8a2201c8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d134498-cd60-46b5-ad9b-6b0ec3fa9ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddaf201a-defb-46b9-80ba-91cd306bfe35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a45e9c3-e4ad-452e-96fa-5e484b8b448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0469a564-0172-406c-b23c-4ea7e816f2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88eef0d-505a-41c7-9930-04f1ce717ea3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8b5cf9-118b-44a3-b173-3ae7a6da40e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88611831-7f5a-451d-ba12-a03c841983e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f454a55-2657-4935-9cc3-62dd896e929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fde2c69-509c-4ba3-a92c-67f4321008c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c263c29-4b48-4a17-be3e-11c3aa6475a1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84003c01-5942-4a2c-85f7-03d5223cff63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2f3798-6dc8-4840-8e10-0ec621c55993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034c4be7-f6f5-476d-a363-dbaa04801487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "76bb32ed-2d85-4047-9f25-7603cf11033d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f96c38a-4635-4026-a4be-a26673e44c5f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e33cb9-9c0d-4e21-a195-17b0628152a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775c8d5b-cf94-4508-a397-4fbbaa43a8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12d2f38-1685-4a72-8774-36580631bb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de7affd-6680-44a6-9fd8-a9778d60e921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983d3a95-4d42-4db8-8b87-2c3524d98a00",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4d28d8-15ee-4d61-95aa-ebf34b8423ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a3d85d-a7a1-4ffd-8fb1-3176040f717e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46146c5-e2e4-45e3-8a1e-dc98f2a2f59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd66507d-c014-41d8-9cfe-00dc1dc886aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2de5f70-3354-43d2-aabe-224b9c8e8f79",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99a3aba-6be4-4623-9c89-0d238c4c46d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cea2a47-77df-4d1a-a9f4-f45d744eadf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e898fbfa-e226-43b7-8c4b-f71851857fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a084d9-dc97-4c5e-8ef9-a84da2bfd6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56883490-bdb9-4b64-829a-b652a13f4ac2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47e59d7-cfca-4dc0-a7f5-fddb7859b9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fea7afa-f110-4918-8c14-bed5d943caa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa38927-3fe9-4bad-ab5a-5f3eaa44ff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9096d4-2065-4fd1-9180-85db0d25ea8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c049650e-2541-4a64-9492-8a4712681895",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ffe7e4-55cc-4860-8975-bdf05ae5b04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cfeccc-a18b-4451-93f7-b1711189a1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367badc0-98a8-40ca-acd5-26ec0269400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec99f97-8b84-4424-a9e1-720cafbd89bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd321010-758d-47ae-890c-c58d638d24bf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6888f919-962f-4752-9f7c-fc916dfb479d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cc282d-aaf8-4e36-8ca5-bff3c258f2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3381a0db-00cf-4a59-a53c-3cbc34117708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb70da0-5ca0-4848-9746-ee1d47788696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbfde6b-141d-4515-ba74-e12de5dc18f1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d73edd7-f014-4789-b87c-cdc574d6e603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e43659-31e2-473d-aae7-d7a97bb66cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe42510-a01d-4bd9-8580-d084f87edcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42a85042-0c01-43e0-bd68-a8ebbd6e22bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616f0925-8701-4657-83f8-753b0a54a10c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b5f0ef-ba0c-401d-8c4d-8e8b375bedaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b72603-0310-4f66-b209-c1a45b33125b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f8ceef-b479-4071-8b95-a18b4758c5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dad2ad8-e1b6-4aca-a424-b43a55faf91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0297195e-7c9d-4ba6-931c-62252252ae83",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047c94d4-e55f-4515-920d-e684c214c294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60018e3-1fdc-4b82-b3d0-e3c9b0d1de4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6030c6af-c0ca-4b36-a10a-b4245c7870a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5cfad7-9966-4770-a993-a53bbfe35a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bca793-c4a5-4a14-ab62-a8e99e514fe9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e48b7da-cde3-455e-951e-1648845de84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ef36ff-da1c-4383-b167-85e44cc61810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f48de92-66a3-4126-91e6-8133e6b7fb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e82d0053-46df-49e5-9a1a-9de7bfb938e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4ae863-52f9-4c15-9780-24835e856c92",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a2cbbe-18e4-4f1c-8470-65d2d3640b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facca92e-ed9f-4aeb-9233-caf17402d694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146294b8-0281-4d6d-93b7-2603f741701d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adedbed3-3d1e-487d-9704-cbfad9988694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c841bf1-6ff6-4f2b-a382-55f392d0e77a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe7c2ba-ecfd-4f6f-91b4-e6ff2ca28485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3e0607-97a7-4e57-991e-c329ee5319aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79d0550-b472-49c6-a637-a80a4830c78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98193333-7cb2-4a43-a79f-9e2714185518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebc4ce0-6965-48ce-9e8c-41fa1fc00044",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2424b2e-7907-4de6-8da6-c3b12a5a923a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aea09a7-9b01-4cb4-b435-9c2809d75dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b562c4-d9dd-4982-bd4f-c511399dc674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14c18f92-50eb-41c6-818f-5a5b4d151513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ce0bcf-7589-40cb-8286-cc51e69b0978",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab6aaec-a8d7-48d6-ae57-fb4d8efa53a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c791cab9-2c68-4abd-9cd8-0f3258802705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eaa36f-9206-4b65-a531-695fc7e9bdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "448d1a6d-07d4-4a52-9ab2-213da022cf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f2d5c4-a832-4fe0-a23b-c92a98abac01",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e32d710-8d7f-4687-9582-e4be0290c44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c9ea44-ef26-4e2a-9ca9-e3b74cd87ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fb8dd2-b56c-4a3f-a7c1-2fe06623c886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d73c55-249d-4cf5-9325-dc0a14aafa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b326fc1-2e89-494e-a752-e4440835ddfc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4eb6c1a-ccb4-4d6b-9f8c-31dedf5df85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec16fea6-a7f0-4800-8931-bbced70cceb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2270ac4-212e-47b8-ab06-2d149ed2800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97befaca-0a35-479e-8476-ab3c1e9a7034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006b0815-8a11-4383-8961-f877246ac4e6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30fb020-da0c-4d1d-b85a-4577b7e5d67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2739273f-612e-4421-b6a8-b8e6bbc05c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874b93d1-5f87-410e-968b-5474f4d6ad0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5982c6c7-fe99-4d92-af40-7148f0539147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edaf5891-754c-4adf-9228-94cf1f8e5e98",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cbffd3-fb89-48ca-9409-5b1541134682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a34f0c9-c987-463e-9767-6984db44945f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e5424f-30a7-40c6-a660-92d03ed24f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e13d8399-4015-41e9-b471-872c6ae62915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d1ea64-f96c-4bc1-96e4-b6d3ba3a1a99",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0d7e0d-f0e3-4e30-8026-049493515a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0832663c-e249-4df2-bbd4-b7f09e0f0c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29818ad1-390c-409e-94bf-56075c19bfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac901ed8-cdcc-4105-b5fc-31a3132b487c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc4d422-304c-4e1b-b1d8-7f345452536c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa9017c-bbbf-4659-8d2b-de58e047a681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15c4db3-641e-4822-a540-43473c5e832d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc55a4bb-f672-4080-912e-c3ed3b5bce04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49671391-1367-48a1-908d-09a059023440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31612d20-dc0f-4208-8163-920a0779f3f3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e3c622-6eaf-4c91-a9ea-8cbeecc9449b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68562222-82c9-4c71-82d0-2061723850eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bacf295-aca3-4946-90e4-3ed9516a5ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d494da-c4a0-44c9-8dec-2a38c06e982a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f74548e2-090b-403b-8044-5e30f0843a47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8241d9d1-a8f0-48ef-a3d3-0c38a9440002",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c14bb4-2700-4f89-922d-0db44588ce8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9acf39-35c1-4975-a24e-0c6291e6753b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc4f251-62ad-4b55-8f06-e5b7822a421c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3620dd7-7707-4ce5-ab87-a0d6ee528d86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93af31a0-77f2-4f1b-ae2e-7124486ba681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "005ae806-601a-4c66-af51-12c1189c2ded"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a397e188-0881-455c-94a3-fe510de16635",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57f66c17-02e9-4a51-9a42-9e3857aa7b1f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ec4233e-1504-4e88-9160-c2e82256e577",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45d5b719-5db7-41ba-88e8-06371d3b5e90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df43f975-ce62-4fe3-86c5-70cb01d96f51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53541d97-5e6a-49e9-b000-60e03d8ecdf3"
            }
          }
        ]
      },
      {
        "id": "c38c0605-8542-4e7e-8672-4c83445eb0dc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8aa59fd5-e0a2-4f56-a1a0-ec1c288a17b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "473f3170-94c0-4034-a2c4-e78232af1444",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0f7ab03-b0cf-4b4b-9e46-e0ba40a8f7b9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01342fb9-c209-4ad1-a170-40ac37d0a51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413dfe16-83a0-47a6-8931-49ce3ea4e5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434fb7bb-5352-4275-80a4-545fe9312819",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9e978a-3eb9-4a79-bfbe-4d7060882e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efac554a-2541-49db-b0c1-69cad0858ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eb4714-0231-4bd2-9917-8d11e4b19fbc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de25d9d-21db-444a-9a07-10dde488b1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66354513-a641-4ee7-a6a1-b2178f280590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb395119-dea8-41a1-9494-132d1b58806e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2179e0c-fce6-4b12-b4a5-9a81db503c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b3c52d-4a3a-4b2a-8a6f-433a9460c2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5d852f-1cb1-4592-a4f7-7c849984aaca",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2362a609-952b-49e4-8daf-4238a05f5ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf8b5ae-7dfc-4424-8dbf-d976208f6e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee992c8-f822-4f4c-a8dc-f5ee07ebe123",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d929a813-62ac-4e48-8096-49b67dbb1091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510a4c87-c2d5-47fb-9c3e-0a4d9656b776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41100b97-d14f-45bb-b074-d1ace73496b8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2592fb73-3660-42ec-afae-8966bab83638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dbba12-9f7e-4a8f-8428-1271d4e0861b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2cd53f-58c4-484a-b7d6-df61c34b16fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ef1f39-c0a1-42a7-b088-524b1b5e8e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09272b8a-b95f-4bda-8d7a-28d4dc953d56",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaa2b14-53eb-491b-8aa0-bb885d613c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b2b0991-23b0-4091-b78c-d35f6c34c330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b83424-8350-4569-8979-c0da3c6460e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320f436a-1715-4d6d-bee7-3e7502e45b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1c2118-d4db-419e-bf27-eb553b17a8ac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c231cf-a252-4d83-8983-0c9f4f5cf905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58101d55-03df-4d4a-8a5b-22b376c214f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a342bc11-9b02-49f2-8ae2-3702e9d2b6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d13609-4058-4e26-9a18-b2b727f269f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d583f6a-c222-46db-9e66-cb353b7b8a6c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664c06c5-18dc-49cc-b3a6-0b96e11ba445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043e70b8-6dd5-430e-9282-6d0157b95fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7794ae-d2e7-44b5-ad80-3024cfb3daf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a616bb-0689-4085-be10-7246a8f1c6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fdac88-e649-487f-a56b-11b0e28f1c79",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04565a2-5d58-4050-bbea-5648599e9c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05485916-1a24-4f4f-bc83-0bd83e0c6dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "023ce737-c539-492c-9e33-a5951694a95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e38b2fa-bcb6-4f86-84dc-2fff74141d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b2a55a-24cc-4ca6-89e5-fea5b9a8c3a4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5e2428-e243-488a-89fb-873ddca85c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535362d0-e1e1-4c85-9a7c-ea76490ffd29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2dccef-831a-4a22-b67e-44451987b875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a91a12-46b0-4a56-a9ef-d885bb30322a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28dcd31-cf9a-4ddd-b56a-37660a3338c5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb0b80e-df95-44da-bf9d-544c3ddc2dbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7b7dd12-7b31-4a4b-89c3-e84e25455e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb765fbf-d9a1-406a-8196-98484d618d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f71d8eb-80b6-4952-ae9e-2120ca26d906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4df0f73-7f45-430d-a0ee-c75daa3dc388",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024e8f8a-6c44-4a64-8e9b-aebfde8b934b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c9a7b99-151f-46c1-8005-82bcb7ca225c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7446b2-3251-438a-8094-6b8338554c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb6d1f5-5d68-461f-a975-3625ecd48f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9113fc24-c536-4fa3-a33e-b1db7db4d3e3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f3e721-7229-49b9-b285-a63edc440b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e68cd2c5-307b-46a4-8e03-492719dd1d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d9b5a6-06f5-484a-8a53-5f6add2c5621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a7b9c5-8a7b-4ea3-b282-f742f549f482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbdc427-2367-4147-ab61-33daa3bcec87",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9399a7-078b-490a-b32b-edb34db25d82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb58a9f4-1b1c-49bb-b595-e6ac19cfaa4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e0340f-cee3-4ab6-9a2a-db3d654e3c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9bc9a7-873f-4b1f-be7c-c46df264a6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa391b0-a610-4752-92c3-74a72d7de637",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea4419d-b5b6-4ed7-b21e-7dac735e0bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52551742-e8cc-4ea3-a39d-92da91166f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e1fa6f-e195-4576-80ff-fce096866fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2c55fb-822b-4ea5-83d6-64f6ddf8fd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4bd3fc-ad63-47b7-adcf-74a26b5f319f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8012aba9-01be-4a6e-a773-e7b2c6de1b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ead119-4653-46af-93ee-442e81a112b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51723cb5-b121-4361-b79f-d95b8fc714b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f42bcd-dea3-415d-9a7a-fb0fcfd8c781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e208ccf-3555-4383-95bb-2fc979d975fd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a29249-158e-497b-a482-04e39f76e260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dec1a4c-62f6-4d54-9689-2a2e5d472b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49732ea1-fa1e-4e29-ba78-76137f34e4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5968bc3-7e37-43ae-8897-78ec4b0cbc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182a4cad-65d6-4060-8a0f-391f9e484664",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91dec77-36b8-477d-a1aa-0e2fb1626339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435c3ba6-203e-4d2d-ac27-c50ffd691b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8a76db-d375-4f4a-a7fa-000b489bdfb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa85890-945c-4bb6-b131-ac01ccfbcf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74b03e7-77cb-459d-a045-4c16bdf833ec",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6408e2f8-0cc1-4185-b0d0-66ede6dd2e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4536a52-6c9b-46a8-b29a-15bdfae9e41b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c07ab8-d617-4605-bf4b-f76ea3b68460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cf855c-4fbb-492c-8338-e62eae25773f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc5d063-3b45-4e5c-b22c-41638b6b8dc0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed895e5c-9ce4-4bc4-b5d0-b35c79f9c5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d477dd5b-96e0-4fa4-9d47-0c25bce45aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d752138-9e7e-4bb5-8dad-5c895da6f1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fc1f50-dba7-4de0-8783-93f5aacb4f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137119b5-fb4b-4fe6-af97-292bbe544515",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054c2c42-4fa4-430d-aa48-c70acee65882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add5df6b-140d-43e6-a2c3-7c601123209e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c784a08c-fcc0-4d4a-baa8-624c2df2919c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4eb91a-0167-4df9-9d00-444856e9ce64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a439cee3-3f21-4fcc-8345-26903965ec88",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c04f53d-bf1a-432b-973c-371f07bf7066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31994a9d-5eda-41cc-972b-78833c3e5a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f3419f-50a0-4367-becb-2f0fae186214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2634feaa-7386-4d4e-b1bb-437a79e48777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5776eb-ca31-4483-87b2-79f3a79410df",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219009aa-3593-4c5e-9f6c-71550379b921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18f4a270-270c-4cf0-a7e0-55609252d512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15e0b8a-658c-40ce-8c42-1689c71774b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8568858f-5956-4df0-b602-f763ca774b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9fe189-5021-4689-a917-3963b8655621",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d5325c-f81f-4074-a4bc-67c8166486eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a83b722-cd43-400b-8db9-9b7c9ecf8307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9558bd-af4a-43a4-8762-e2be98420fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285006bd-c9a6-4b20-9b12-f75ce3fc9163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b137f9c2-b72d-4a54-aba0-e2782aade07e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13d76c8-55fe-4cba-a838-62cecf8558d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d43504af-035e-4b74-b23f-6bacd2673d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef469b11-c651-4811-bdf2-6634893b4185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbf9d19-ec70-43c4-bee2-23b40902bf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2cc5ad-37c8-4024-9e92-9f289f1c1410",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abab9d6-5642-4beb-be80-76d588dd9e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85279bc6-ef03-4071-9c92-6b23c9993207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82f8d25-5128-44a5-9c10-8063667d8cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3eabbb1-092d-4e32-86fd-8abf49a878ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae289ce6-bd5e-4eb0-98e5-abfe538f0c4e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002af3e0-9fef-4eb0-b571-cb6ba462d510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99fe88c0-dee5-4572-918f-158ed0212940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2da3e0-3f94-487f-9d69-b5fed5e5d0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557e4711-ef53-4aae-bf75-6273494b1194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a987b7-0317-4b77-9057-052ed71b0fcf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0674e57-91fe-4c6f-b45c-48e5c8754cbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "957dcf17-fef8-4db2-8b11-ebb88ec8f2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f0f99d-c67c-403a-b9d0-b2de3ef454c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c30ca3a-4332-492d-86ba-15d32aad4b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f860b0ad-3e5d-4232-a1a6-1311f4d5deab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7929bc7-c6c6-4386-b0a1-5a5242648004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bee69ba4-75ca-4540-9770-99ef1ff6f3e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22972bdd-3a5a-4773-a42a-ea65f0cbdc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768d959d-1221-4690-9457-afa1a79432bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb05f923-5647-4659-bec2-9a8d417e1bb0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a26675-92ec-41bc-a392-42ff8cc865a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f1632e3-cf86-401e-a452-77605915140f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd6fac4-751f-4263-a3c9-8cfec2c88931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a087e6d-d65a-4eaf-ac5e-94aa918dcf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d338ab-0fd7-4f96-8725-a768b6d378ad",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954b095a-8085-4c64-b4af-176a2c9f4c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e004441-68e3-4a49-b065-04e5912e1a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2041ac0-858b-41aa-ba10-af1a0f495673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139cdfe5-1b81-4b0d-872e-9674e7154559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9478f4-6b2e-4acf-8f16-f28b4e39d81c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642eb271-05fe-4209-9be0-7f2d1b971f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9f329ca-7659-4498-8bfe-e6458f3e86e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1986e86b-8010-4036-998c-9760a970ae9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35dba24-fd12-433a-bff7-f8ecb6f4761b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ef6295-56de-4995-82b1-edd8f109a3fb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67274992-beaf-4784-9523-223bd47473e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6acd31c-1107-469b-a1d2-ab4a481599fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97c9f64-b11d-4149-bce4-516748bd1815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88b2bbe-7c0f-41e2-9add-c41064f204f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbe3fd8-4b9d-480c-9b02-23b64951f4ef",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc11e18-4a10-4dbe-9dc7-ff4ba375eea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beba3039-41c2-432f-9df6-e750e53a5ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f9ac4e-7a34-4ef9-b206-b415b6cbe8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc3c830-e46d-403e-b237-e9b9b6fda989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fac14e-7423-4c68-92de-90f8bff03fd5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19915f83-12b0-436e-b15d-77c7b8e93060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873c47ce-b914-4ee8-a78d-d98f89c3a8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938ae8a0-5409-455a-8793-9e387f2e5c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54cdba2-0a5d-402b-9790-fda2d762a124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc447e10-14c3-402c-952b-fb39ff33bb59",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cee6129-4cad-42ed-b9ff-bce2f7f0c554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcbf598-a4a1-406f-b902-d4382cd6af70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ecbdb5-cdc0-40bf-80d5-56dbe668e015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c9d7ba-668b-401c-96e2-3320d94fc40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19029a5-c724-4412-afa5-ecabf0154832",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c7ea05-7f60-4618-872d-a8b17090c7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc195b3-062c-4127-ae1c-3c6bef58ee81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9a4504-bf58-409e-a6b4-259f5d5620aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effe66f3-e6ae-4808-9971-c61e85f6ab83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cfc63f-f284-4204-84e5-d77b3a154607",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f0deeb-94be-48d8-ae2b-b3b1e87b472a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4688a244-f866-444d-b16e-646e106ff547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9917116-195b-4c3f-afda-4ce268e46ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72588fca-26e5-4752-88c6-764ba7c77baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420799b5-1b15-4828-8cd1-958d7562aaa9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54bc6a8-0bd3-44fa-8da5-5e501720abbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816d7f9e-fba8-4cdc-a95e-c1a5d9ca7602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa9b9d4-7e2f-49b6-bf1b-dc986416d450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810122be-8e84-4aa3-ab55-2825d3d8b0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39372bd-1eeb-4fff-afdf-2fe139cd1d68",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79719fa9-3107-4c08-8ea3-9995afefeba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fa5171-9bb6-4fef-a8ee-f54ed9a13f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f86a8ae-40a0-4dcd-9bf4-f0f82e909c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1309fee9-b2aa-45dc-ae0e-b5767752a3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57959c4-b731-49b5-850f-c606c9b8531a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a26f897-ef0b-41fd-9325-49624f9765c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb090b4-9867-4ca8-9c4a-e1947ba6a7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7920e6-9a6f-4e1b-b199-e6c9c609b47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8009f75-5da9-4906-b7db-4d618091abe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce9f2b5-19fc-4c2b-88df-107e795f22b6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb41f792-9a28-467d-870d-8f68a0490360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c90ea65-8526-49ee-8fbe-18df9ee5d3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07465fa-81c4-4b71-9a63-4e7aac16321e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ef2909-7f5b-4881-88cf-d93364934ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410b8c5e-fcc6-4dff-9a76-89f532079ff5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa971137-b67f-4a5d-b26c-9266f85e9f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfc0979-a7c1-4752-a66c-c1ab6bda4915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b964852e-fc50-4ec5-aa07-c225a0986a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c444a0-4ca8-495b-9fa5-debdcdc9201d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83233e41-cdb5-4c3d-ad9f-cbbfb55d1196",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10121a66-5563-45bf-9e8d-a4c20d0ee841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53180cd0-158b-4630-87d6-be0aa71d4112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec90ac5-6d48-4fcd-ab02-477d65e1496c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbe99a6-a5e2-4689-84e7-37c6027a78f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad1e630-1999-4096-a981-725a9f887066",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6b51ed-7c83-4426-b4aa-ff6afed03a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f97413-7b39-407f-bff7-cef1e4bda93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4012268b-6b42-450a-b5c5-0d95d6527085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df197534-b220-4298-90ee-26c8b3ff4939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32256302-8272-4de1-a883-67de6722c9ad",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf31e00-9cab-4425-9218-14be313664b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb521133-1c50-47e2-b754-a1fb661468f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69e7a52-4a28-451c-8f7d-40d08f2e7d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2bf85a-bd3f-4f5c-8b12-d06a07e7244b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aafdb41-b591-47e9-a876-14e6cc59f8ce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac5af21-5e5b-4d95-abcf-3cbbc9c3020f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadd923f-6a0e-4730-a8b1-1aee05e33729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d951ef-7436-474e-a58e-c8fa137dc669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4ac7e6-d061-4e34-820e-d4118037184f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdb7cf1-0591-48f3-99d7-8d2ecf53138e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93ddc4b-33da-4ace-93ff-0c37f591ab24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f15c5b5-2730-4606-982e-7873e7cc55d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9783df-8db0-43ab-b8cb-e9b767071c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb58842-7d1e-48c9-9652-f4315feb91f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e588ba78-07b6-436e-93a5-23fe1044a683",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f081658-d37a-4e17-8aca-b37f9c0ebcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d21570-c68a-4272-b11d-36345f4aa1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c148e5c7-9b33-471f-bba1-35a7c6633739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c2c64b-3c3d-4e6f-b1d4-ba8e16ffd0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782c092d-7bd3-458e-a47f-09d9728c4ffd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4c2285-feea-4205-bccd-881b1d98873e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d13551-a6c8-4460-a635-e89a7a4e46d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d71683-d79a-46c5-9742-fa2425ef6a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74f461b-2ed7-4271-8688-b8fa2a5eaca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ed3b87-50b0-4596-b6a0-2c6eb5660bc8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4761e602-a3a6-41bd-b97a-0c2c1bef68b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d57e029-571e-48d5-8ae4-1df8d23e1d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff0264d-41e6-441f-903e-d610729dd47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919333f9-73b9-476b-8a03-b47c7eda4dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbd41b1-df2d-4ba8-9677-2921cdfda398",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3823700-dbf5-460e-897f-1913e7cb552c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cc21f7-250d-4225-b1e1-75346088af48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4a5ebf-dac8-4923-96e4-a3561728e5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ace3902-f364-4e5b-8557-9b84cb86f8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b60557-9257-4eb5-ad4d-ddacd06a7642",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04ed406-d53e-4ef3-94d8-e665206dfd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802415c2-5b00-4984-b684-656a976aceb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3d82a9-1954-47b7-982f-8da59afeb396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8480d1ee-9f73-4e1d-aef7-d0ecd5c2c66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0434a5a-7427-4a15-9857-699dacc6e149",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501992b9-49d8-46b3-8229-f0866a0fe36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b250bc9a-4992-4213-842e-ad5943116f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf9a9de-9f3b-47c5-beb4-ff87ab03c7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b114c79-1601-4108-b01f-9f4447f93642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5dde92-c1b8-4945-a23b-a72c7c069221",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba05e819-07bd-4432-a87d-556668f79999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f32d6d-7063-45bf-8ed1-d96d449db7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7662e856-3827-4f30-b1c5-ec7a05cc7acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061e52e3-50d4-4eb0-9ada-5c77c64909b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b963cba8-4d82-43df-b204-3044c704e5e9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb34b5e-ef00-4a30-9a52-a45965ec2268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52a474c-5efb-490a-a592-e22b7ddad2cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576fd17b-4662-4ef2-a15a-83babe08ee67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95705ed-15fe-499d-9151-5c9868f1ef3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b84b9a1-c54a-4258-b7ec-7ec72bdc02f4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6956212c-3b39-4bfe-a49b-7654f011f1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6caee524-5a8b-459e-8632-b51980230e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059a96ff-f481-447f-8313-9e8c58218431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c52286-bc9c-4e90-b2af-d5acd300604b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0b7487-9e50-491c-9e6a-d108751d6b9f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f572c670-9c0d-41ec-bfd3-398f2057bbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa62a1c7-81b8-4e1c-97ff-446f2d19de1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c51b14-4fe9-4b64-b090-01b52c89fa77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2df4a6a-e226-4d77-8e0c-4cb68ed4c291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f526d36d-4638-425c-a519-da1190859b07",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6719d613-e1cf-42ea-9d85-9c0a45991167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73883e74-337b-44a7-93a2-25b2ba822211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd36493-e3c8-42d9-afd1-78ff2faa28d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a49613-cb1a-48b0-840d-a315e166d0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31966922-ad59-4f83-a888-ddf81b4ffb66",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186c8dc0-2f66-40df-bf96-2e8f2a080bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7077aab3-f81d-4021-939f-a6e383dd79d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15451a99-a577-45a6-9742-4acf58ae096f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1a9105-0a9a-4028-8e03-f78d29b8bfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddab0749-a756-4e83-924c-bda86dfd020b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c908c56e-e625-4196-b1c0-080e960c9f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b80fa27-75e8-486a-b784-400b55a859cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44d155e-0904-496b-87bb-753afc22fc64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a960ec-c383-4711-8558-b8aa043cb756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b71fb6-bb77-41ca-9a80-a3d62c2296e9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f3bc91-2805-46b2-8b8c-f98144308c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9426d603-b930-4054-abd8-825a98816bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afeac02-44c0-4422-8a0f-a0fa90d0dc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0a9322-44fd-4c17-8cae-d935e75721a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ce190b-36fa-4a48-94a1-4f2640c4e85d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad19acd-6c01-4240-9348-d7ca764337fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b1fc9d-b70a-4fe6-9b02-986916878868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a3d180-76d7-498b-a483-4747469da80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2df3ee-019e-4185-bcaa-be8664f548c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69da1997-220b-4218-9b8c-a31335a786a9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0fcfb3-87bb-4f73-8099-fc7d62420d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2664b0a3-d4b9-4786-aceb-c676c8d50332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996e1977-6450-4977-95b0-7f169696247b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f41aeeb-c4de-487c-b585-83722d47036d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dcadac-99de-454c-84f3-cea195eddb13",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47766bb-2cc0-4860-b738-bbf7d1317ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "538b5e69-35e2-4b93-a19f-b1a7999f4e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505a5c14-8645-4240-972e-afb2899eb74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d40dd47-db8b-4996-adbe-f36a18d65bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b381c5-ea88-4dd4-9d1f-2ac0528885db",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cdec94-b7bd-40ba-adcc-eb25e786abff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d639631-b65f-451d-ad48-7ee2442b664b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81516811-7962-48e5-91dd-8eb81ef51565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b04ec51-4141-4e57-bb3e-8bd4e362eafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae61ad6c-1904-4df2-a19f-df1c5e67c48d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999b1b54-feda-45e8-abd1-e3866a2bb2fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e2cf03a-c8b0-4001-9371-e42bb6082414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd1042a-6d9d-46eb-b60c-75f1c051feb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b860ac-bdfd-494b-8dbe-9db0bd3c161e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083ed11c-c1f7-4888-b2be-015bccf1ef97",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306761be-e033-49e4-8bb9-8963c447d877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451ff6cf-04bf-46ed-8798-10c9c53edd8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754af7f3-ae6f-49b0-8a4b-5b737dbfd0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ea531b-cca3-4b99-a2e0-94230820b7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfad10e2-f33f-414e-b200-488ece882479",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66dd39c-bbd6-4127-a3e3-e1e63aa3dfbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d0c1d9-fb58-44b0-a631-5fc44f4bb77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114baf77-6025-4e9f-a011-5d7a895a5d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4af9f9e-5495-40e1-8a15-1d61db3ee62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572464e4-e2f8-4847-be5a-b58ef623c3df",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bddb201-dde0-43c5-909d-6363b09763dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5308a8cc-91c5-48f8-bda7-87bd2e252141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e022c2ed-2e39-4962-87b3-22bda09d385e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6bde37-1c3e-42e6-a17b-68415d63fc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877678e9-1241-42e9-934f-c8adcca42bcb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f7a99f-7b9f-4010-8125-ef8f4603f997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca88772-545d-4909-8243-4186547d0900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d93350-fe24-4447-902a-1edb5aabdac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b7a70f-0b5a-42d7-9075-d6608623375d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75a319b-7f8d-4e22-b208-0c9616f30c39",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798016dd-299b-4fad-ab77-4ce9b7e60b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcef7d74-557d-46ea-a41f-203850485168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cb7ac7-3143-4238-9f78-ddf691e67777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139219cb-7986-4256-ad2e-eec1da23fdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599f0234-a93b-4d27-a316-ac513df5fe87",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb142f8-37ef-47cb-9d1a-b9b57a6dcfda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e5f1d4-d56c-4806-835e-5195276a585e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cf01e0-8494-4225-b63c-4cf7a3ce39d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f4b154-b98c-4d65-b97b-afa1c1ead383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e005736d-ced7-4802-b2ae-3cb54cc55f9f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a033d5e-0a1e-4780-a93a-0ca39d6be3c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e45d488-18c2-4813-93e9-75f20084cd25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c036d05-d566-45af-80c8-2fa3065b2942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d68cf82-db69-4499-b8e4-2b6f14d35f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d71c57-9e0f-4ff3-81a0-0b43a449bd56",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f21aa32-4a0e-4b03-b267-bc814955d71d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db291de8-a2a3-4ffd-85f3-1ebe95f8b845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85654dc4-8c07-4510-b225-f319f6acde64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e6704a-4d24-43a6-9ab4-2fbe2899cdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9d9e07-b6d0-4fd7-bbd8-b21181fc3c37",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11baf8f8-15b6-4aa2-a9b9-37c7f91f1481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5b433f-277a-4154-a800-ba4b5cc2220f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ec1eff-2d82-4b81-b909-4f86f32607de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428cf43d-9fce-47fb-9935-b9afcb98386c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f6ef24-0c5c-4e1f-9557-6fbdbf0865dd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dc434a-7849-4cfb-9c60-d74562523f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8968525e-c777-45b0-907b-1e4201c42666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0bb62e-2f87-40b1-925f-4bdd93935513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6b8831-3e40-46f1-8fd9-fa092960cc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fac48e-8c37-4faa-ab04-b641f0d7c625",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7919c5a7-8928-46c7-bbe9-955b8fec64b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed453b93-80cc-4a0d-b91e-6aa06b973c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a887b7e5-5ce5-4958-b70f-d8432029f163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2579b1df-27fe-4af3-a44a-ed9c352021d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211f09ab-bee1-4fa8-8fc7-7f0386a9d260",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3b8a05-9231-43b9-8985-43a10933c528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12c5cd0-253c-4683-a236-b816699705d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f82b399-f58a-4e68-ab83-4b35bc368768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6729357b-8184-4dbf-b3a4-1819a172ab71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8467ed2c-eb81-44a7-baed-b7aaa92f5ca2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5289dd-84b9-4ad2-9259-3df9e56323b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5465574d-1141-4af0-8167-bdad14a034d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1a2a84-bb95-4747-867c-737d00072988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f5cf9c-6693-4682-928c-20381b81d4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa884802-f810-44ed-a2fc-d932faffb8e8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76718de6-34f8-4b10-aadd-ef2ebb396aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0033cb52-d78f-4dc5-af16-f07c60c731a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2932b5-b1d7-4fac-b524-bd9f5b551342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63bb09e-848a-473d-aeb7-a9a1dd4ba50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02757a42-f44a-4f9b-9a2a-265ce7fc39bb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd35e0e6-3dbd-42e2-b307-fa3c654c5d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e99bbfe8-c0b6-4e99-9b4a-728dc9a24c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fe6a75-2a3e-4961-947d-828d7976e6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075a2b6f-551f-47d2-9ada-257429c086d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c996c2-83da-4bd5-be1a-51df025baff5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688c2ebc-3bf2-43e6-b60e-28e314d6f7f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e85f86f-96ae-4d5c-8a6b-d8f320e2e4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99163f95-9cdd-40ca-958e-e98a3ff68b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb1fff0-7af9-4975-864a-54e70a9bc6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a998e191-2736-49a6-9fc7-c094bcccec6c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c903ce45-6485-4f17-9fa7-1e3af75202e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fbde540-3052-4ca8-99ec-c7d673af8d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aff926-d0d3-4530-a435-25002627f709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be70cb95-17d0-4f1e-953e-33a0334502f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbccb447-9a7c-44c5-9c4b-acde63f8e831",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e678aa2-a696-455a-8e56-8273f9e9cafc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c56fc41-145e-4f9f-9c2e-0aafa027f1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde8760d-fae9-427d-b8a0-f138a934fd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873af159-7e45-4528-9a46-b22d3cb49fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e7cddb-a8b7-41c8-8887-6bc9848c4a0a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c21e2a-884e-41ac-a410-6dd8c857767e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ba11c5-f0b4-4f3d-bce6-a228c2b492bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4151e36a-db15-40bc-9eac-1138b4750e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1696aaa-dea4-46bb-8940-8394c1223f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc9c14b-26d3-4975-8de2-56317d3ddef7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2215c14-5a20-46d2-bc5b-aba20d3d6da6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e71e5a1f-0dd4-4bbc-baf3-a7076b156c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eef74af-5618-4027-a55c-1498643d95af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d23e28-336f-41f7-8593-d7bfc4265cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38afb381-e41e-4981-a018-ab3739983d22",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f904bf2f-ddad-4d78-937b-711b33dfce5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2caad99b-2a1b-4404-8fc1-e1a4b21a6c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475d028d-eed1-438b-ae47-a1a0337959ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3428e5c3-3000-4ae3-b386-902789081589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6046d629-7890-4b88-ae26-f90cd5b101f9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7109a773-8cf2-4208-8558-dade2c15f172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acfc324b-614a-4cb3-b2e8-f521675218b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefb2395-cdb8-4c89-b9b4-7f85669dae72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b62745d-390c-4fc6-a8f2-1c64d1153ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f20b87-5b4e-4b82-bebd-3516a5853065",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7764494-e59a-4b74-9b09-fb862fc407da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df9e420-63eb-47e2-b88e-9ccb86583042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81061fef-2358-4ee8-885f-cf9200c4a72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05ec676-d46a-4300-881e-ae815bad93d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5a387d-1c5a-4e90-ab89-af19c602194b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101ff6b1-1a91-4182-949f-32f458c9910f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20583467-0f84-414f-9579-868c22c801a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99becafd-b174-461a-92c5-b2f7b40f3d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ec81bc-1518-4914-8de0-a9cd419c494a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d73412-8236-40cd-b634-a92f8bd78fea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880fb5f2-0ff2-42fe-9655-f328d074e390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2497b060-4a04-41a5-bb4e-39ea1927f6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649c5379-e239-4087-a652-eb256b64e1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc34d374-c7d0-46c5-a1b9-2e2657c84eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8a6f56-3003-4826-803c-2a2375876c45",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313d3b56-f4f6-4251-aa48-e81f9ddaba98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee0328f-490d-481b-95d6-0198be01879c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61061f7a-45c8-4281-b403-63cb249f6129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b27652-bad9-435c-96e4-820551bfabca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d203e083-b15e-4124-bb93-4dfa4b3f0ef4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3641cf71-428b-4cb8-a870-f31fd7878121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ee74a1-b991-4301-93a1-c02708232971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e38902b-a310-43b6-8fe3-32551cecfadc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c35d8a-9d97-47b1-8d69-43fe4cb81969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adffc73e-6a24-441b-a252-b78530613dd8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5678ef-140f-4ad7-b1e8-d9f34c35308c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc82e3d-95ee-45ec-8fab-765b5b3d24bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e8ea36-c526-49cd-ad49-9d58a116753d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8471aaa-0662-4af7-8900-3dbc469860ac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba2fdf2d-1b2c-4c00-90fc-e512c4fa4ce6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20d22c3d-89c6-4dbd-9831-781587421a4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcab58c1-dade-434d-9410-37923daf19a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b94e4b4d-4221-4f7f-9241-2ea2076ca0f5"
                    }
                  }
                ]
              },
              {
                "id": "32e0eadc-8eee-4ab5-8a94-fbd2c79e3d3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a0feacb-fe52-4261-a49c-86c587644826",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00581d49-c7e2-4ac3-8bd4-b9e014768ce7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1ff9fcf8-14ac-40cd-b6a5-f2ccd7aedfb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c23e636-6722-43e7-8667-df429bb2b3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9811a20-5f20-4ea3-8ba8-6c15d4871963"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "709bb308-78b1-4264-b9b8-95044b566e57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70935e78-9e01-4d6e-98e3-75ac49af0319"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0560a2f3-275f-4c77-9e01-1d0b1ebbbde5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eb4b441-cfce-46b5-92d0-8bdec8a62287"
                    }
                  }
                ]
              },
              {
                "id": "31ed4f9b-93d1-4668-a0ea-9346271ec9d7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3f312390-42d0-4a34-895d-00e972adf0fa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003c439d-c12c-4e63-98f7-0af6c734ca52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f6d38929-d596-4ba5-ae48-5b672bca3dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57855ab-583f-4c73-8612-e31beff1a430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0dd495-c871-4447-8d0a-7fcd599b54a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "58e170df-3c66-4ddf-939e-7d0b517a3a65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02fb02f3-a0be-47e2-8816-f8a73ddd7a9a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d879a6e-192a-44c0-bebe-754b577b8de0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a3c6015-f6ea-471b-af31-e38735ed7adc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a20d3be2-8737-4dd6-a56f-7a83fd4217a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d148cbe5-df86-400c-a7e1-f66b791e1975"
                    }
                  }
                ]
              },
              {
                "id": "5aedc5ad-6ac1-4344-9f2c-0d06a274d0b2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fbb7065-a334-42b0-9f99-a41411483eab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9479113b-30ff-4324-8a5e-f5682de3c77e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1d17d33-86e6-414d-b543-f983b8afe76b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dee04f69-f393-4a84-9f08-d9613c1ceec4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed6c782f-f741-4cb0-b431-65d50c63d72a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "56c6df21-edd5-4f61-80f5-8f4c24947915"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "467cf49c-883f-4c2f-a57c-96a73b65fe16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "141ad17a-d944-47d5-906b-1761f0a71845"
            }
          }
        ]
      },
      {
        "id": "6d22db92-059b-4a27-978e-2e919f285518",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "67044652-e8c6-4e61-b941-2fb01f527ec3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad28b5cc-9fa9-4251-976d-5b50252425e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5aaec4ee-0554-44ba-b24d-a84b2c154922",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73adbe9-f6be-478d-b3fd-74777566051d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8013f22a-b247-4eae-97cd-706ae0a507d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89b312e-64bf-4e43-ae33-244520f73eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b12e3092-35cc-4a3a-828e-5181f913136a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4906bd28-bb93-4a69-92f6-2daaf40b978e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7457c3eb-18b9-426c-be42-4f8d2d570111"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd75f6fa-e5e9-4f03-b80a-cddde13c3458",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c2fbbed-41b8-4bdd-8087-3929d2db126f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15a2ba66-0bc4-4d7a-a1ef-cd3db5772854",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "21df254c-c592-40f7-87e1-a0780549cea4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88cff254-e520-404d-a19e-493c56fc3008",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b68314f-c413-4997-92e0-d0c6a003e690"
            }
          }
        ]
      },
      {
        "id": "6ff0a5fb-0d53-4ecb-9f31-1775edeafc8d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a8d38531-5d16-4f13-835e-6520aea53d7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a72a1e1-a22a-46b7-a755-93d0bec663de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9ead910-0eff-4316-b486-a552efd1f97f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0f74e0-c94e-4356-ac4d-d600ee6fb4aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af0b4918-c1a2-41d6-9588-3d275a5b85cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa304444-6c61-49c9-87d0-4846be78235e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9735a0a9-6b6b-48f4-a6a5-e6fec2b64122"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8840cb3-0fd0-482c-afa3-951df64516bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daa9f233-f5c7-4073-bb74-792035165e6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c3fd61a-cc0f-409d-8245-4384fd6f6464",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2417f281-a259-49b8-a446-2a49b8b2d25a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d9a9da0-3c85-4104-b01a-cd3f0231126e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a666bc40-fa4e-450e-aaff-1ee825103990"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2397e398-5bcb-44c3-a312-c2911d57ad29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6e0b1e3-e875-4297-9562-8e220f06132a"
            }
          }
        ]
      },
      {
        "id": "1a24c91d-3def-4f85-b62c-6335de3890b5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8f32ea4f-d349-4398-a0a7-ce22abf698e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2149b242-6236-4aa2-b185-8f856fa78559",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10d46ccb-09a6-4714-ab1d-26300a2d5b1b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb072a4-bf02-44f2-8d5c-73e93dfef5b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "474c45db-3175-4ea8-9909-1b3b82a31937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294c3ca4-07ab-40ff-ae1c-fd8def1450f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd4fca86-d5d2-4bb4-8667-a14c90bee5db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4646024-3f47-41c9-8376-214208042262",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "878f1d37-d6a2-43ff-af44-04cc85f830ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be67735b-f6b7-47b0-95ff-2d9cff9f2841",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "739dabd0-052c-427f-bbec-ebf83504d97f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "494a470e-618d-4b95-bb56-b515c5bd7901",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0628cbf7-e718-4bf3-b2fe-b6145bf0a424"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de84ecd3-c23b-4fa4-9cca-33e36881ce7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "868f838d-37a2-4fb2-a710-c098bb6d928b"
            }
          }
        ]
      },
      {
        "id": "2dea2142-a821-4985-8cf8-9b34af0820eb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aef2966f-11d5-4b36-a38b-eeff1bd24802",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d97a127c-fb83-4f91-861f-8b05e51c2bb8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e368bee8-bc17-4c3e-9dcc-4ee227717690",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab6a9cfd-9498-4172-9531-07d12ba609cb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6480e62-0b31-4d09-bb1f-defdbe0fe6e3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 91.12982456140352,
      "responseMin": 4,
      "responseMax": 9033,
      "responseSd": 602.8733485348747,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710203617972,
      "completed": 1710203653337
    },
    "executions": [
      {
        "id": "e61ca949-7339-4194-8c43-74bcdd60b5e5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bac21f64-82e3-4fd8-8045-dc91f62aac1f",
          "httpRequestId": "950259df-9eb5-4e02-aac1-66fc6a95e25b"
        },
        "item": {
          "id": "e61ca949-7339-4194-8c43-74bcdd60b5e5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cdbe41cb-c534-4214-85aa-d2a17cfbeb55",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "d98b5f35-86ed-4f83-9bf0-53ad60c481b4",
        "cursor": {
          "ref": "f52832e6-5ae0-4eda-a902-cd1c71a7687e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cc477f25-56bb-4257-998e-c691453e38da"
        },
        "item": {
          "id": "d98b5f35-86ed-4f83-9bf0-53ad60c481b4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b7126e2e-dfce-43f4-8db3-8e551eddd122",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "d720ba95-b452-4ddf-a315-ef6315ab0c2f",
        "cursor": {
          "ref": "bfd53350-7e6c-4e95-90af-b096a7bde7a5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b8591ecb-835f-4a8e-b1e7-4ca7a1f9e594"
        },
        "item": {
          "id": "d720ba95-b452-4ddf-a315-ef6315ab0c2f",
          "name": "did_json"
        },
        "response": {
          "id": "ea8eed83-0065-4d49-95f0-04af34b4c311",
          "status": "OK",
          "code": 200,
          "responseTime": 197,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cb4be1-e50e-473c-8fb0-35585a43b108",
        "cursor": {
          "ref": "adaea17e-61d7-4f16-a37d-90133d4a1b77",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4092cc37-5e62-4eb1-b477-d325eae3a767"
        },
        "item": {
          "id": "a8cb4be1-e50e-473c-8fb0-35585a43b108",
          "name": "did:invalid"
        },
        "response": {
          "id": "10d0243c-1aef-4a9e-a7d8-bdf5f3cce963",
          "status": "Not Found",
          "code": 404,
          "responseTime": 930,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cb4be1-e50e-473c-8fb0-35585a43b108",
        "cursor": {
          "ref": "adaea17e-61d7-4f16-a37d-90133d4a1b77",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4092cc37-5e62-4eb1-b477-d325eae3a767"
        },
        "item": {
          "id": "a8cb4be1-e50e-473c-8fb0-35585a43b108",
          "name": "did:invalid"
        },
        "response": {
          "id": "10d0243c-1aef-4a9e-a7d8-bdf5f3cce963",
          "status": "Not Found",
          "code": 404,
          "responseTime": 930,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ffed64-e786-447c-b4e6-099ff7a38bbe",
        "cursor": {
          "ref": "11d1c0ee-93cd-4c67-a0f0-17d004764f12",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "311ba711-b0df-4a6f-9df9-76237d7ba82c"
        },
        "item": {
          "id": "86ffed64-e786-447c-b4e6-099ff7a38bbe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8a05c9ba-8571-4edc-bcad-a322d6267263",
          "status": "Not Found",
          "code": 404,
          "responseTime": 17,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9deed8-ecd5-40ad-b57e-995bd287886c",
        "cursor": {
          "ref": "608b82a2-65ac-4d35-99d4-f0ffd6bb37b0",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7955b6de-aeca-4a8e-a6de-b7d24168d3e9"
        },
        "item": {
          "id": "af9deed8-ecd5-40ad-b57e-995bd287886c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c81b45f9-cc12-472f-9266-e0283c09a144",
          "status": "Not Found",
          "code": 404,
          "responseTime": 19,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36823fa-bf3f-40a8-9475-9d52e5129070",
        "cursor": {
          "ref": "ec7de630-41e1-4224-9245-5eb572ec5d95",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a4a0ea5c-c27a-44cb-83c8-099057febb8a"
        },
        "item": {
          "id": "a36823fa-bf3f-40a8-9475-9d52e5129070",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b5fa767b-305e-4b02-bd85-a9dda2046b18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec06b03-3825-4c31-8669-57e3252ab5b6",
        "cursor": {
          "ref": "954c0d09-44b1-4c64-887a-e1740c5a22f4",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4e77dc3a-7190-4afb-a349-cb9b6d040670"
        },
        "item": {
          "id": "cec06b03-3825-4c31-8669-57e3252ab5b6",
          "name": "identifiers"
        },
        "response": {
          "id": "5a226b42-7dc7-42af-a5f9-c3ae274c2e9a",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85baf16-2fa0-4871-80e6-fca9cc1f08af",
        "cursor": {
          "ref": "29ef1b9a-0110-4e00-9760-b8cdc9b2c2ec",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8bfbdad9-74b1-47e9-ae2d-01fb2254cb3e"
        },
        "item": {
          "id": "b85baf16-2fa0-4871-80e6-fca9cc1f08af",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d47bfb25-ec42-4c95-b65d-abd8515d914d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79df3241-a236-428b-a8e8-e34f65990946",
        "cursor": {
          "ref": "f2260a10-94bd-4c88-b3b3-47d0e6e5bd67",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "20db3740-8990-4b41-8c70-6736a71471d5"
        },
        "item": {
          "id": "79df3241-a236-428b-a8e8-e34f65990946",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ccd943ed-7b55-45aa-a1de-bd1cd9ee80f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef1b3ec-539a-457b-b46e-3e12799fdabe",
        "cursor": {
          "ref": "670349de-3e55-4544-8117-30e3e6c644b5",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "13073bd3-94b4-4bab-b811-ce5305d6fa39"
        },
        "item": {
          "id": "eef1b3ec-539a-457b-b46e-3e12799fdabe",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3a4f0fd7-2b27-4973-8b2c-e2c48cb28321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65247a5c-6077-4c75-8ba2-870848811862",
        "cursor": {
          "ref": "accf3807-6ab5-4d93-be4e-32967f932dfd",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6c39368b-2c1c-4aa9-8667-5349c70ad304"
        },
        "item": {
          "id": "65247a5c-6077-4c75-8ba2-870848811862",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6995533b-925c-415c-8f04-cb2a96917233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bd3ece-773d-4fb3-8c4a-66b6a312f485",
        "cursor": {
          "ref": "9a975705-d724-44c8-ac70-2906bc105a8b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "22c2d9b9-4c67-46ab-98ad-6c7a6318870e"
        },
        "item": {
          "id": "66bd3ece-773d-4fb3-8c4a-66b6a312f485",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b1a67f30-1742-45f8-a9bb-7d9501da7959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c6e892-88e5-4a2e-b25c-0594220980b4",
        "cursor": {
          "ref": "6e09f4c7-4207-4204-a7ff-3cb2ceb629ae",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c66ac2dc-8625-4c1f-9ca6-0361e67a8a15"
        },
        "item": {
          "id": "a2c6e892-88e5-4a2e-b25c-0594220980b4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cb7ceb7a-4e04-42c5-9a3a-2e1438338012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbffc5d2-5c87-4707-bbbd-caeedc4b4a2a",
        "cursor": {
          "ref": "2e132581-462e-4555-b1e3-426a84e2f438",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b6555cde-72fa-408a-8f6e-7e2f80776433"
        },
        "item": {
          "id": "cbffc5d2-5c87-4707-bbbd-caeedc4b4a2a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bf50c733-570e-4c53-868d-45ef664f9620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710fdb65-d459-4f22-a46e-d6609d46f7d2",
        "cursor": {
          "ref": "7adeadef-1141-4042-9237-36d59da43324",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3a37c574-7ea6-4257-b6c8-6a71b2db7310"
        },
        "item": {
          "id": "710fdb65-d459-4f22-a46e-d6609d46f7d2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5f0db6c9-a81c-478d-8950-273ace9f28ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63ce32f-96fb-47cd-afc5-7b14e97f1550",
        "cursor": {
          "ref": "e8e9ec67-2548-4180-a64e-515d30c9d63f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "32514574-8853-4e32-abe0-7647e67bc6f1"
        },
        "item": {
          "id": "f63ce32f-96fb-47cd-afc5-7b14e97f1550",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5a91c07a-c3b0-4a99-9da0-c528b877c7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849b20dc-8949-4b67-850f-068b9921e546",
        "cursor": {
          "ref": "0989f813-9078-4143-8eca-b71ebde637dc",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "94adec01-773c-4dfd-b667-298ff5aaaf9c"
        },
        "item": {
          "id": "849b20dc-8949-4b67-850f-068b9921e546",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e3a12bd4-8dc5-4086-8c57-84b8ceea1eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c36ff0-875e-4456-a027-c91a9c2d9fd2",
        "cursor": {
          "ref": "fa0226b9-4d0a-474a-8ddb-8e055193affe",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b349a87e-b444-4ef0-af0a-b3a118d05776"
        },
        "item": {
          "id": "b9c36ff0-875e-4456-a027-c91a9c2d9fd2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "99ae0980-8b64-45e1-a26c-e4c4d1430c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda5b73c-3a8a-4f51-8380-11cae97eb6bf",
        "cursor": {
          "ref": "87703e08-ba17-4198-b370-b9d9c8961f62",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e5abeb7c-c6da-463f-85af-a77aa64f4435"
        },
        "item": {
          "id": "fda5b73c-3a8a-4f51-8380-11cae97eb6bf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1ed81bdd-73f7-469d-aef9-b8f6c7a5d7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf51ea4-d213-464d-8864-8c0ab3fec3f3",
        "cursor": {
          "ref": "c9ec8f57-9452-4076-97aa-d20c3f4f52c9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6c3a5501-93fb-4cf0-bdca-5a5fc8c64004"
        },
        "item": {
          "id": "4cf51ea4-d213-464d-8864-8c0ab3fec3f3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e9c24b16-98ca-470b-8222-21dbe1c447d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535de2ed-381d-431d-b873-06256ed7d9fe",
        "cursor": {
          "ref": "33f6f1a4-d442-483c-9223-0468927ca8ff",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "90ea325f-4867-434d-9276-e099199ba971"
        },
        "item": {
          "id": "535de2ed-381d-431d-b873-06256ed7d9fe",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c4b809da-e0af-49f2-b93c-890a5fd2cb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074a9775-31b8-4040-8542-81e60415f027",
        "cursor": {
          "ref": "61f41c4b-55cb-4046-b32d-98abb95fdb69",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5a416d6e-4545-4c58-9245-98f0a479f707"
        },
        "item": {
          "id": "074a9775-31b8-4040-8542-81e60415f027",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "839688fb-e04f-4fee-a4ad-8f2514cf22f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c84871-3f36-4e16-8560-1c1156389c00",
        "cursor": {
          "ref": "0e493523-a606-4856-9674-d05870877be5",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6f63b4b2-e742-47de-83b0-bae7e9c1df20"
        },
        "item": {
          "id": "b2c84871-3f36-4e16-8560-1c1156389c00",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "debff767-779f-46f7-ac0a-f330618337d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4a4d20-0828-470d-9fd7-b70030b38563",
        "cursor": {
          "ref": "c89a26fb-3dff-4a18-9f99-d6e37aa19f44",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "35959b82-06a8-4572-978c-f0f36263203e"
        },
        "item": {
          "id": "5b4a4d20-0828-470d-9fd7-b70030b38563",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8c92e6c7-ea99-4f55-abeb-c75e1b7aefa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47625520-4da6-42dc-accf-c27b8e01dc98",
        "cursor": {
          "ref": "881e836b-669a-4eeb-b507-9f50b4b52a8d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0a1277da-e6d4-40f3-8dfb-a0c31be9abd4"
        },
        "item": {
          "id": "47625520-4da6-42dc-accf-c27b8e01dc98",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "983ddeb4-aeb2-492f-bed0-37d708aabc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ede0b6a-01de-4a1c-aaa0-a3a3afdb6b90",
        "cursor": {
          "ref": "9f0d860d-c041-4dbd-be16-dce8ef7ecf5b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fbcdf9d5-b2d6-4de7-8ce5-3280a0024bcf"
        },
        "item": {
          "id": "0ede0b6a-01de-4a1c-aaa0-a3a3afdb6b90",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "906b682a-d4ea-41d7-ac74-58eafb89456b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0fd253-4fe3-4810-b63d-d0e56407b934",
        "cursor": {
          "ref": "ea19a476-8b01-4da5-9d44-986ed0a0b77d",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b8de82c5-f5c4-4578-9de2-f72458d00d36"
        },
        "item": {
          "id": "be0fd253-4fe3-4810-b63d-d0e56407b934",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "96fc1a68-d5c1-408f-9c2b-583088c4ec99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84e9c77-fba2-46c1-817a-5f033dd000c9",
        "cursor": {
          "ref": "6a0771e3-e082-4445-a79d-196d703ccc24",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fa260aef-4b14-4b2e-9ea0-6ca192ca7659"
        },
        "item": {
          "id": "a84e9c77-fba2-46c1-817a-5f033dd000c9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4661c627-1789-41d1-abed-1a785ddc1327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f48f163-faf7-4926-a752-77f3d52f5ea8",
        "cursor": {
          "ref": "1d03bbd2-f3ce-438f-84e6-96b337c3481a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "08e79e98-3bf4-461d-a986-0a62eef9da01"
        },
        "item": {
          "id": "6f48f163-faf7-4926-a752-77f3d52f5ea8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d82f11f2-daf8-4a96-976a-4b7ce51019b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a96e76e-95e8-4ae5-a288-05977ee79742",
        "cursor": {
          "ref": "8909eae7-4ae8-4014-ba24-890a3e312e31",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bef260dc-ec3a-4f50-9024-20450db830f8"
        },
        "item": {
          "id": "6a96e76e-95e8-4ae5-a288-05977ee79742",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "eeb6d378-5f2d-4d77-ba05-c738edda77d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0216ac7f-99ff-48d5-9b4b-9b4eb04a087f",
        "cursor": {
          "ref": "a20479c9-375d-4a28-8542-40f78ed9b358",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8d947548-0fd0-468a-b9aa-e89b1a431ef6"
        },
        "item": {
          "id": "0216ac7f-99ff-48d5-9b4b-9b4eb04a087f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "698bf767-0e5f-4ce2-955f-7c1838b2420a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264476fd-f6b4-478a-b731-70c22990da1f",
        "cursor": {
          "ref": "29bfb35b-2238-4b47-9b5a-21d44a2e3746",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a7465b97-faa5-490f-847f-db051ab58601"
        },
        "item": {
          "id": "264476fd-f6b4-478a-b731-70c22990da1f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "17234c3a-8d24-4b19-aa3a-d8858aac1350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe63ecf-ba80-4232-90f6-959f6701d274",
        "cursor": {
          "ref": "d0301b61-99c5-499d-a12b-b3b4eb78d552",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "766768a9-713a-4c54-bb3a-78aeae0cb0b5"
        },
        "item": {
          "id": "cfe63ecf-ba80-4232-90f6-959f6701d274",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "34c7a480-e624-40b2-9b02-12ae1a3ce41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c880f1-ed2d-4f55-aabd-99ed3d9ae1ed",
        "cursor": {
          "ref": "b27eb615-ab1f-45c4-a53c-e3c44ed12804",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5329a174-a31d-4588-aa85-35e5f17512e4"
        },
        "item": {
          "id": "68c880f1-ed2d-4f55-aabd-99ed3d9ae1ed",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "76e3cc9c-d484-4200-aa27-69130de3c6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f912e8-cfe1-4fc5-84f2-c88e615dd9fd",
        "cursor": {
          "ref": "1916fc7e-965d-4490-be84-41748a610820",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ca0f40d1-0b43-468d-beee-93b4fa7009ca"
        },
        "item": {
          "id": "89f912e8-cfe1-4fc5-84f2-c88e615dd9fd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "82252e05-ce5b-488b-bf13-472a1b9bcdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa66c47-c764-4be4-8b90-aa4e74fe557f",
        "cursor": {
          "ref": "cf4df76c-7606-41f0-8291-9b1cc76aaa35",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c90d0e3c-abfd-4667-bd32-b10b6bacd5ab"
        },
        "item": {
          "id": "faa66c47-c764-4be4-8b90-aa4e74fe557f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "52a9b920-2cfd-41f2-8b86-6edccb0ff0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10435874-c335-4d2d-8868-1f8fbb3a71b3",
        "cursor": {
          "ref": "324dc2a2-5b5c-4bac-ba20-75c00881b9ca",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "51550486-9b88-4914-9e9e-cc8e44f73bc7"
        },
        "item": {
          "id": "10435874-c335-4d2d-8868-1f8fbb3a71b3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7f423477-980e-4fb1-93e1-874a9eba11a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7816d9db-e2c4-4168-ba3e-332d7acc17b6",
        "cursor": {
          "ref": "9a060723-d843-4335-8df8-a69d10b1c464",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cc009d2b-6a9d-4c07-8a54-e93f84b6a267"
        },
        "item": {
          "id": "7816d9db-e2c4-4168-ba3e-332d7acc17b6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ef59ce09-56d8-446d-aa9c-a97598fbeb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d19608-a645-456c-9a93-d00110462bf3",
        "cursor": {
          "ref": "5f63cb46-ccf7-4e96-92cf-3b507e0c84d1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "16070670-cc9c-4f73-8671-58f49469f2e6"
        },
        "item": {
          "id": "01d19608-a645-456c-9a93-d00110462bf3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9b43f4b9-e19a-49c1-91cb-6fb2704aba7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33421dd-1e90-4641-ab0d-04021f0d04a9",
        "cursor": {
          "ref": "6cb6cb84-e762-4b5d-9610-1e9f40676f26",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d728d9f8-e9ce-44d5-b935-229f3ac3283e"
        },
        "item": {
          "id": "e33421dd-1e90-4641-ab0d-04021f0d04a9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "654d7610-b3c2-4630-b12e-4dc69c658826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2238523-5c7a-4308-bf7b-1055d91dd2a0",
        "cursor": {
          "ref": "9b04f819-8923-4b6d-a174-56e21e6b3c4d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a48a97b0-d5ca-400f-8cc3-a0a86f6d5beb"
        },
        "item": {
          "id": "c2238523-5c7a-4308-bf7b-1055d91dd2a0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6b3d9796-4dc0-4e78-8933-b60df6e428a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0e5517-df1c-43a3-9fd2-d011d292688f",
        "cursor": {
          "ref": "ec3f7393-77e8-41df-9b9c-6e5859d97409",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5cd4a4c7-fd50-4c45-b285-cd89272eb553"
        },
        "item": {
          "id": "ed0e5517-df1c-43a3-9fd2-d011d292688f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "54f53088-30a6-4a75-a9d4-3cb4f1429b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212bbc79-d6eb-4da0-8991-7256f3062a3e",
        "cursor": {
          "ref": "a6435205-c23e-445b-9426-ad5a0a676a05",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6bb36eeb-24f2-46ef-8fef-2498e99fadba"
        },
        "item": {
          "id": "212bbc79-d6eb-4da0-8991-7256f3062a3e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bfa34d66-d675-4023-b4e6-3c3edbf04aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e648c390-0857-4b8a-a640-7567500b7800",
        "cursor": {
          "ref": "37ecd4c4-14d4-4b66-a10d-ad0fa8713d5c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6237c071-0227-48dc-a477-e3283f2b3503"
        },
        "item": {
          "id": "e648c390-0857-4b8a-a640-7567500b7800",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "59aabcca-7b30-42f8-8715-6e0643fcae56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20a3a34-bac4-4be6-9eeb-933cb8bfedaf",
        "cursor": {
          "ref": "5d1ec7a1-e285-4dda-828d-67ee27f094b0",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f8b23cd9-adbf-4e58-bbb5-3ab1d7a6c68d"
        },
        "item": {
          "id": "c20a3a34-bac4-4be6-9eeb-933cb8bfedaf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cfae650b-3cda-4a57-ad55-de2941b9d3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c259c2-1ee4-4bf4-bfe6-34c2c0c8b9f8",
        "cursor": {
          "ref": "3e5224de-4a03-47c8-ab09-47b77d685811",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6520ff86-a9a0-4116-bf75-fdcf502c3758"
        },
        "item": {
          "id": "39c259c2-1ee4-4bf4-bfe6-34c2c0c8b9f8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e71a7d69-8ec4-4b7b-b74f-2839a220822d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39c62bc-faae-4630-b9d1-416cae1fa674",
        "cursor": {
          "ref": "e0fe746f-9790-43e1-a9b3-fdde15fadf39",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "77a9b081-7ed8-414f-a966-ea76117300b8"
        },
        "item": {
          "id": "c39c62bc-faae-4630-b9d1-416cae1fa674",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "941f3572-23a2-4435-8522-72fc1781bb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3107314d-e428-4cb6-9e19-03a45105680d",
        "cursor": {
          "ref": "6198cf2f-5db1-4bd8-92b7-ec7aa2314f8c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1a4b0803-c554-454b-b9d3-3897a8c649b9"
        },
        "item": {
          "id": "3107314d-e428-4cb6-9e19-03a45105680d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6025b923-b06a-4b1f-8b23-9b73009866a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dee275b-1ada-4aa2-b101-ea7b59d1d653",
        "cursor": {
          "ref": "f2c2503f-b6db-4fa6-b210-a4c0ba2d9e77",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a4576237-9dae-43a8-a099-73439321fc50"
        },
        "item": {
          "id": "3dee275b-1ada-4aa2-b101-ea7b59d1d653",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "724fbc72-be23-4e51-9da8-65d34f5674ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61db092-0e45-4a2c-a882-d27186932504",
        "cursor": {
          "ref": "ab321d0d-3be9-4b91-9bf5-81e2e42d7f1f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "de7d5872-f648-47d2-a913-1be77b652256"
        },
        "item": {
          "id": "c61db092-0e45-4a2c-a882-d27186932504",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9a0d7ab4-a652-4c4a-974a-bc8795eff226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e09126b-d675-4635-844c-b408e4f8b123",
        "cursor": {
          "ref": "750fac1a-557c-4003-a964-e78f6cc1c680",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6f429aa4-a2d0-4f36-87bb-d0a3353cb163"
        },
        "item": {
          "id": "1e09126b-d675-4635-844c-b408e4f8b123",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "34082ec7-f1e1-45b5-a1f7-1cad0aa24661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639f13c5-6751-4f06-a658-fb933a71e55d",
        "cursor": {
          "ref": "d5219368-00da-4548-94c5-e5a64770fed1",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c93c8174-7ac2-42b5-9511-2e8b3c22a563"
        },
        "item": {
          "id": "639f13c5-6751-4f06-a658-fb933a71e55d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f0d0b481-9f47-4e1e-ab8a-2a22e9a43846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fdbcba-8d3c-47ba-8d3c-6d10f1a611c8",
        "cursor": {
          "ref": "a8a44751-2906-49e2-a080-5dc20a17b681",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "180fd3ad-69e4-4aca-bbdb-4d4f17e24290"
        },
        "item": {
          "id": "d1fdbcba-8d3c-47ba-8d3c-6d10f1a611c8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9548aab3-259c-43be-9108-2b47107a12a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738aaaae-1029-49f6-9312-53eff19f8781",
        "cursor": {
          "ref": "0a366e92-f7fd-4c82-b274-ebef97cd1c79",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "aebfd768-18c4-4dc5-bfa8-2347b9fbbd08"
        },
        "item": {
          "id": "738aaaae-1029-49f6-9312-53eff19f8781",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e23e7786-f9a3-4fbf-a247-8104dc96fc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cbc50a-eb12-4e08-b87a-35b41b1f52c6",
        "cursor": {
          "ref": "a53c0592-21fe-4254-b591-c1085fb0f941",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f9a880d8-c04a-4859-8e6d-577cdeac9ef2"
        },
        "item": {
          "id": "b4cbc50a-eb12-4e08-b87a-35b41b1f52c6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3c2a33b1-3063-4732-8b46-ab7a78dc8d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ea2cf4-c8c8-4fd0-8cce-05bc5562fe72",
        "cursor": {
          "ref": "f254c875-6f0c-4df8-a060-c360b0a0ef37",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "488560d4-c7f7-4074-b001-59b26c4614e1"
        },
        "item": {
          "id": "90ea2cf4-c8c8-4fd0-8cce-05bc5562fe72",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "800dd3b3-0abf-4a54-b089-2b7cf701d708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821317a0-1e1f-401a-9e1a-29e5574ab1c3",
        "cursor": {
          "ref": "f9c0ef46-2a17-4b0e-ba27-6dfd1ccd3aad",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "feb40ad6-5c47-4aab-a251-9fa5d305ce35"
        },
        "item": {
          "id": "821317a0-1e1f-401a-9e1a-29e5574ab1c3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1fad2932-dd85-4103-a023-ab383f530710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7f8f61-ba20-4feb-bfc5-9f8ee95e8629",
        "cursor": {
          "ref": "cf35f1a4-9ff6-4c80-838d-cdd56e2d732a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7ec7a6cc-1ac5-41b0-bc67-2834fe551fea"
        },
        "item": {
          "id": "be7f8f61-ba20-4feb-bfc5-9f8ee95e8629",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8c4d063d-d312-4cd1-aa93-c7486a547142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e3f870-273d-4114-b0e3-7e4b17e83579",
        "cursor": {
          "ref": "901277f2-c013-4951-a955-b3c5e8585af4",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "44af087e-cc33-42c8-a5bf-5ebeff602c10"
        },
        "item": {
          "id": "29e3f870-273d-4114-b0e3-7e4b17e83579",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f5738f4c-b462-4c5a-8d40-a995ebd5a42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072df058-15ec-4ebb-855a-428b6a192c64",
        "cursor": {
          "ref": "abc6faaa-749e-4592-b76b-0a2e418a0079",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f2a44030-36bc-411b-beca-d435d5ac1879"
        },
        "item": {
          "id": "072df058-15ec-4ebb-855a-428b6a192c64",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "87c732c9-00b1-4524-81e4-48c1020b49ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d047a7-a001-43d4-aa20-bb303b9797d1",
        "cursor": {
          "ref": "ff0d30eb-bf8b-4103-85b7-1991f92de138",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ee7a8a15-ecf7-401e-a937-30d2f374a844"
        },
        "item": {
          "id": "22d047a7-a001-43d4-aa20-bb303b9797d1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "296f1eed-4a00-4a3a-af86-289a1943061d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bfaeec-b04f-47c5-8732-2af0fab46327",
        "cursor": {
          "ref": "f2636daa-9889-4cd0-9f49-84b9de0ac849",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6fd829bc-fe4b-4837-bed9-1d9ac1854254"
        },
        "item": {
          "id": "52bfaeec-b04f-47c5-8732-2af0fab46327",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0d5a9521-5d0d-4b23-a387-8e0354aee990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1837f37-ece0-4105-9cd3-19d635d06d85",
        "cursor": {
          "ref": "c3d38bc5-f320-4030-85d2-9ba44e122a51",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3eacfb94-13fb-4c58-9617-f058884534bb"
        },
        "item": {
          "id": "e1837f37-ece0-4105-9cd3-19d635d06d85",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "34c9bdbb-0e0b-4e6c-ae61-61fb16648cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc8af7d-5caf-46af-9455-cd6175bccc59",
        "cursor": {
          "ref": "86530d57-58ad-40bc-9aaa-d13b69d4dea8",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3f596ccd-3d35-407e-8c28-a907fe9edb73"
        },
        "item": {
          "id": "1fc8af7d-5caf-46af-9455-cd6175bccc59",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c713f91d-65a7-44bd-8f02-ee3ad98f3b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea6c8e7-55f4-4944-a259-5807cc1da19a",
        "cursor": {
          "ref": "2c077cdc-db58-4afc-859f-9114d3d434ff",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f8b8125b-c2d6-4b03-b2cb-418a6dcbe61a"
        },
        "item": {
          "id": "1ea6c8e7-55f4-4944-a259-5807cc1da19a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "88fdc79e-22e2-4806-8c41-b47f3aaac059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83c6d0b-26aa-497e-885a-023090022056",
        "cursor": {
          "ref": "076ce549-e657-42bc-9706-777775c5f372",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0f102695-153d-4cd5-a5f8-51eb2315d831"
        },
        "item": {
          "id": "b83c6d0b-26aa-497e-885a-023090022056",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "23f48d77-7b98-45b1-8b48-6c6d45dd7e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed20a49-cc8a-44e2-afa1-37fc78398d15",
        "cursor": {
          "ref": "d38d024a-bbd5-436e-8563-6de935ca7760",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "193db77b-d752-49a2-85d7-3d5a46edc05b"
        },
        "item": {
          "id": "7ed20a49-cc8a-44e2-afa1-37fc78398d15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "145eacee-ba80-4e80-beb8-0038d2971a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c530b7e5-04b5-47d9-8584-d6dbe91a5489",
        "cursor": {
          "ref": "13332e32-f02d-4889-8289-551c84bfac18",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "641552da-8487-4684-98b6-352301a48ea4"
        },
        "item": {
          "id": "c530b7e5-04b5-47d9-8584-d6dbe91a5489",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "36506ebe-1ad8-4f5c-a326-d4398d477366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e366e653-8f4e-41e9-a870-2848e5fabc3f",
        "cursor": {
          "ref": "834c5676-b782-453d-85ea-f48628a02bf9",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "203e7df2-db7a-4e1e-b999-11c8001cace0"
        },
        "item": {
          "id": "e366e653-8f4e-41e9-a870-2848e5fabc3f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2b1dbda7-99b9-46ff-8644-023f8b218e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0157c88-2716-4746-b079-a20bc8c01d8d",
        "cursor": {
          "ref": "6077ead9-19cb-4109-8c72-57ffa1888389",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1105a344-7f20-4eba-8bb4-ada49ae4bab9"
        },
        "item": {
          "id": "a0157c88-2716-4746-b079-a20bc8c01d8d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0f5f9667-af9a-45c6-b6c0-5558f992f35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cec52f-a04d-4766-9542-4949fdffb8e0",
        "cursor": {
          "ref": "20d048e0-c11e-401a-8ccc-01a8c11de3db",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "064ea82d-625c-4810-8ad7-1fd673ec98fd"
        },
        "item": {
          "id": "45cec52f-a04d-4766-9542-4949fdffb8e0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7fb746ea-0908-4033-be24-790e0d301f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193e6d00-3ce4-4c43-89ad-871996629594",
        "cursor": {
          "ref": "c73cf1f3-92d8-4689-8bb5-38800cfd5278",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7b03ab66-6f04-4a96-bbb2-85a8f3c9a691"
        },
        "item": {
          "id": "193e6d00-3ce4-4c43-89ad-871996629594",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3f116262-a840-433a-b79d-0ee0e4c9e7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8834e229-982b-4ea8-80d6-da4c4a16d42b",
        "cursor": {
          "ref": "d83aaf2a-971f-4c5d-a444-a1e42de7c209",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cb49c127-2ea4-48f3-857c-6ea68177dc02"
        },
        "item": {
          "id": "8834e229-982b-4ea8-80d6-da4c4a16d42b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4c02947e-f1b4-4aaa-b5f4-f873f3a7036c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91460dc-7779-492b-abb0-d347af4fc699",
        "cursor": {
          "ref": "52e481c8-00e8-4de3-a82e-ca6db0b86cf8",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c668cfae-6bae-4e71-9a6c-188cdc6f3c8b"
        },
        "item": {
          "id": "c91460dc-7779-492b-abb0-d347af4fc699",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2db433a7-b7c9-426a-9b52-b3d7df84e4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645fcdf3-31c5-4f61-92a8-70d4d74ce57d",
        "cursor": {
          "ref": "e34a42f4-4583-493c-a9dd-ee747bffea6e",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "eb7ea906-3f09-4725-9ecd-fa621d04dbd1"
        },
        "item": {
          "id": "645fcdf3-31c5-4f61-92a8-70d4d74ce57d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "35ff2e73-5c96-4555-827f-2e735b8ab46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8a13cf-ef9a-4010-b375-b9b434de98ef",
        "cursor": {
          "ref": "b891f7ea-3bd8-404b-80ee-35b1469925ac",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a98cda3c-c52f-4e7a-b642-a901514b08d1"
        },
        "item": {
          "id": "cb8a13cf-ef9a-4010-b375-b9b434de98ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3f654957-ef89-4fbc-bd6d-d0ce912a48a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53070252-a6ff-4bea-b1a5-f52124ab79fd",
        "cursor": {
          "ref": "0c005059-7c55-418f-bb35-cdb561985d52",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b0a0c38c-1be1-4700-94fb-49172e64821f"
        },
        "item": {
          "id": "53070252-a6ff-4bea-b1a5-f52124ab79fd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ca04e58c-5e54-47bc-88f6-b087605d4e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc73e279-d953-42df-a9de-c7aebb3e1e20",
        "cursor": {
          "ref": "495625f6-3673-48fc-9024-7eff65efc732",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b5575221-daf9-402c-9229-4efc804a92af"
        },
        "item": {
          "id": "fc73e279-d953-42df-a9de-c7aebb3e1e20",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2d76f8e7-b0ab-4f29-b233-b8996bc814b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb348ac-b59a-4f8f-9e5b-0adf5d659a5e",
        "cursor": {
          "ref": "043cdaae-469c-4850-b27a-42b428fce6d7",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "36151d87-b913-4aeb-877f-fe88dea176cb"
        },
        "item": {
          "id": "4cb348ac-b59a-4f8f-9e5b-0adf5d659a5e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "414b151c-6011-46ae-aec0-28e8d1d0c7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da00588-29ef-4760-9117-e7ad02e79d37",
        "cursor": {
          "ref": "fd35968a-0867-430e-854c-b669fa67fe88",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "69d6ac84-e2cf-4d69-af7b-db10d17ca5fb"
        },
        "item": {
          "id": "3da00588-29ef-4760-9117-e7ad02e79d37",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "84d4d35a-1279-4903-9cfe-5e3fff7073b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3916e06c-704e-4d38-8992-cd765edcaf6f",
        "cursor": {
          "ref": "e8909aba-4473-4fb6-b391-e974585ee92b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f7b61172-6443-49e8-b05b-fae69e36714c"
        },
        "item": {
          "id": "3916e06c-704e-4d38-8992-cd765edcaf6f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c7caa6b7-d112-4908-a72f-00e0a21b7851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61b7de3-03e1-467f-9f8f-c3e86ad3c38e",
        "cursor": {
          "ref": "f4447491-ef39-4737-96d9-d3ad788f0577",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a1f7ed64-b132-446a-acce-ef420b79694c"
        },
        "item": {
          "id": "b61b7de3-03e1-467f-9f8f-c3e86ad3c38e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c79acfaa-4834-4f35-b44a-2b25fc0ca7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bf9bff-06d8-4557-a97e-3f197f1c253f",
        "cursor": {
          "ref": "538ae87e-d9df-4d29-b7ca-7f048d863d99",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3f4c55c8-7648-4551-a950-7ace21b4abe4"
        },
        "item": {
          "id": "a0bf9bff-06d8-4557-a97e-3f197f1c253f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4b23b6de-388f-4f1a-8fe3-ee363fc8845a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f717a33-3065-43f0-9152-4d1d7244a0ee",
        "cursor": {
          "ref": "583cdb51-146f-4e34-b62e-055bcb2a0cf4",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0cbf5122-b0d8-42cd-adb4-d284eae851a3"
        },
        "item": {
          "id": "1f717a33-3065-43f0-9152-4d1d7244a0ee",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f54f671e-8ccf-454c-9934-3888e8e7fcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d101bf2f-dbf9-4350-b0f9-6bf068572487",
        "cursor": {
          "ref": "db4a0ae5-54b2-46ac-b4f0-2a0c7b21e266",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c28e1ed0-46f1-494c-ad7f-09bbf5a24054"
        },
        "item": {
          "id": "d101bf2f-dbf9-4350-b0f9-6bf068572487",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "618920bd-eac4-41b9-b97d-6fbbfdfd92e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639d83f1-0a6a-47ef-a65b-645c6c68a4c1",
        "cursor": {
          "ref": "17d89d5f-9df2-473a-85a1-610e9f546f41",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "af24cf3f-8fe1-44f8-9aaf-1bec12fb9365"
        },
        "item": {
          "id": "639d83f1-0a6a-47ef-a65b-645c6c68a4c1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c49b8490-4aa6-47b4-b228-49c04f3a801b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f175cb47-af77-4633-8bc8-11f51cf895ac",
        "cursor": {
          "ref": "a9bbd84b-9148-4325-8fe1-c7eed648ce9e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f9f5c79e-1469-402a-af66-a2bbed18f516"
        },
        "item": {
          "id": "f175cb47-af77-4633-8bc8-11f51cf895ac",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "53bc3745-d18b-4e60-9c72-1a13b941a972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4da43ec-64b2-4b7c-9c7d-70858d783b3d",
        "cursor": {
          "ref": "d809b0ca-bca9-4c78-af59-d51aa886d7b0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "87a8fcdd-3125-41a9-bbda-7f3f92fe3896"
        },
        "item": {
          "id": "e4da43ec-64b2-4b7c-9c7d-70858d783b3d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e13fab59-0778-461b-95ef-6e76c8f6119d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294dfaab-b255-46d6-aa7d-fcceb5e3a4d5",
        "cursor": {
          "ref": "6da83ccf-6626-42a6-b8a2-0bbd305e280d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ac060c1c-591e-4a9c-864b-ab5309ef2d52"
        },
        "item": {
          "id": "294dfaab-b255-46d6-aa7d-fcceb5e3a4d5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c08690fa-cb07-42fa-be5c-b14d48dbf62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47932c9-327c-499f-b0b0-61c72656b8c0",
        "cursor": {
          "ref": "6fd8d3fe-8200-404b-a8be-b9329f1c987f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a5aad458-83f1-4fca-998c-323d281aaada"
        },
        "item": {
          "id": "c47932c9-327c-499f-b0b0-61c72656b8c0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dff6d2fa-a7fe-493f-98a9-84c539a1b39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7193254a-1764-4eb6-b729-ce3e690f16e5",
        "cursor": {
          "ref": "46d7a6dc-cba9-4e35-a75e-26615ffaba4f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "11d3a0c2-46e9-403d-8311-b756020e514a"
        },
        "item": {
          "id": "7193254a-1764-4eb6-b729-ce3e690f16e5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0d4cc528-0f01-4a84-9732-0f24d2c5594c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0b65ba-1057-45e6-94e2-25d3246a87f6",
        "cursor": {
          "ref": "8d5b78dc-3d52-46ad-9445-f07dd57ccd3d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0ca46e21-a7d7-4b63-9605-9b62eed24dde"
        },
        "item": {
          "id": "4c0b65ba-1057-45e6-94e2-25d3246a87f6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "932e387d-2541-4b04-951b-6fafbe318ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d048e658-c89c-4f66-b004-4fc364291080",
        "cursor": {
          "ref": "8dd4db2a-c620-475a-ba2e-de11a6f9ebff",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4183b642-201d-43d2-86f7-4ae2328c0184"
        },
        "item": {
          "id": "d048e658-c89c-4f66-b004-4fc364291080",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2fd50306-9350-480b-9d2f-8bec3acfe13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070b8883-ffad-4fd2-a371-613b7b1b5c24",
        "cursor": {
          "ref": "af70d20d-e994-459d-b13b-935929389f02",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "16b35545-d56a-44c7-a357-5ba43ce18a7e"
        },
        "item": {
          "id": "070b8883-ffad-4fd2-a371-613b7b1b5c24",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c8fc72b9-ee59-40ef-b129-d7dfc9c7e6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2274db62-d6e4-4f2f-939c-6f83dd63fb5c",
        "cursor": {
          "ref": "5846bec6-4791-43e0-8f90-3619af6a4cd6",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d370fe47-4f47-405e-b95f-150964eefd7d"
        },
        "item": {
          "id": "2274db62-d6e4-4f2f-939c-6f83dd63fb5c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e2022fb8-ff32-4069-9c0f-752b7758f1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8c8fe1-1016-41da-8d3a-de3edcc5dffb",
        "cursor": {
          "ref": "a26a231e-6697-49d4-9ff8-14d0f8075e6a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9fe648c0-a18c-43df-afcb-c5825af2364c"
        },
        "item": {
          "id": "dc8c8fe1-1016-41da-8d3a-de3edcc5dffb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9608bb4a-075f-4993-8af5-5ef700254eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c712ef4d-c146-40e8-bb82-41cef80198fc",
        "cursor": {
          "ref": "79b8fffc-5f00-4f91-8148-e8a12a730a65",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e42d64ec-b20d-4c87-a00d-8496e8a493a6"
        },
        "item": {
          "id": "c712ef4d-c146-40e8-bb82-41cef80198fc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c77cd198-3e60-4b9f-8882-011bff1575b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fd880c-9ae1-4914-97dd-3f2e4c719c4c",
        "cursor": {
          "ref": "173eb4a6-cfd0-44be-b6f6-14112f4b39cd",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e4200867-11f4-41d1-bf08-9e690000dfa5"
        },
        "item": {
          "id": "53fd880c-9ae1-4914-97dd-3f2e4c719c4c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fe71d63a-f5e4-4a1a-9bf8-57421ee8b8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63e9f96-5f4f-4395-89fc-d88df49e8f47",
        "cursor": {
          "ref": "0ef4e337-9905-40d5-bce0-130e778d2a8d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "92fe7fcf-12fe-4bb5-a8ed-6e9bc87aebba"
        },
        "item": {
          "id": "f63e9f96-5f4f-4395-89fc-d88df49e8f47",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d83928c9-80f2-46b5-a997-d5131c3304f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a820c4-69fe-4c75-aeff-6624387ca5f6",
        "cursor": {
          "ref": "e067f129-e98a-422e-a0d7-0fd60896f369",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3057dcba-0782-4e35-bbd8-dcfe4a930225"
        },
        "item": {
          "id": "26a820c4-69fe-4c75-aeff-6624387ca5f6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "720e59cf-1955-46dd-b706-fd4009fafe87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74ee523-acd9-426e-b760-cf6407eeabaa",
        "cursor": {
          "ref": "65883447-0137-44ad-8505-d22180f3e16f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "332ddecc-ccc7-4f07-be1f-e27b71a1ad0e"
        },
        "item": {
          "id": "f74ee523-acd9-426e-b760-cf6407eeabaa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "71dc1869-e9b4-414c-8dc9-fbbfde40dccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3759b942-2f6d-4161-b47e-6f8549a76f3d",
        "cursor": {
          "ref": "b47d5f00-9424-4542-bc58-c5a3a7ef5224",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3a171dd9-3a7e-4c52-8c2b-79e60bf5f47e"
        },
        "item": {
          "id": "3759b942-2f6d-4161-b47e-6f8549a76f3d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "abf346eb-971e-40e9-ace1-f9af2b7deb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "db892b18-b427-4bf7-a5d2-bfe4ad909af4",
        "cursor": {
          "ref": "374e7b20-4fae-4437-9ec1-3c9b21248a7b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ed386541-9d3b-4ab6-8647-20a8abfd274b"
        },
        "item": {
          "id": "db892b18-b427-4bf7-a5d2-bfe4ad909af4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "482b1109-b55f-4721-95e7-81987cc658fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "25a50084-e9a1-40d7-b51e-522728f93580",
        "cursor": {
          "ref": "86e11ae7-710b-4a5e-bbdf-847f76dbb90e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9a106bb4-9a79-4905-8e75-c1d1141b4a6c"
        },
        "item": {
          "id": "25a50084-e9a1-40d7-b51e-522728f93580",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7e24724f-929b-441c-b62b-5f38d9551829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9b652470-128b-4cd3-b2ce-0ecb9f5fff16",
        "cursor": {
          "ref": "1354a723-bd50-42d2-ae3a-5a7c0761f384",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0fcae920-f1eb-42a5-98a9-b65b7cbfcf02"
        },
        "item": {
          "id": "9b652470-128b-4cd3-b2ce-0ecb9f5fff16",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "18d2b357-4858-4db9-b843-55a24778d26b",
          "status": "Created",
          "code": 201,
          "responseTime": 9033,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "037ac465-e639-4265-a55e-28187c4c1ae8",
        "cursor": {
          "ref": "1960d243-60c4-4dd4-b8bf-615fa91ebdca",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6bd70b3c-0964-4b2f-8ea4-7201dec8bd61"
        },
        "item": {
          "id": "037ac465-e639-4265-a55e-28187c4c1ae8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "35f1ccc2-4039-494b-9ea6-0a2316e96f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "96af140c-adb3-4a3a-b891-f5167399f4f5",
        "cursor": {
          "ref": "7503a89d-513f-49ef-be5b-7db59faa9d31",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0a9181a8-1a7b-4b0f-ba62-a113ae4d1b45"
        },
        "item": {
          "id": "96af140c-adb3-4a3a-b891-f5167399f4f5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "193216fc-db5a-494a-a1ed-931bed563232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3cf0f553-cb19-4a7b-b2ff-446d06c0ffb8",
        "cursor": {
          "ref": "92f45b1f-5a7a-4082-a862-4eb93214d212",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e5fa027e-9bc0-471f-aa18-c4c0060708de"
        },
        "item": {
          "id": "3cf0f553-cb19-4a7b-b2ff-446d06c0ffb8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4d602556-16c3-46ac-837d-55866fd19f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd95573-cd72-4491-b0ad-11c35ae5d984",
        "cursor": {
          "ref": "3e5a2b09-d547-4106-a715-ab589858eb37",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e44ed7e8-5fb4-4a80-ad62-d7786aee97b1"
        },
        "item": {
          "id": "2dd95573-cd72-4491-b0ad-11c35ae5d984",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8ce14e06-1c73-41bd-b9cc-862591cfac2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02d1abc-8710-40ab-af26-b1f061600b3e",
        "cursor": {
          "ref": "99e627d6-e2a4-44fc-9276-6f0e0a4af05a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ed14b18d-9684-453d-854c-a0d3424e8435"
        },
        "item": {
          "id": "b02d1abc-8710-40ab-af26-b1f061600b3e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5b889d97-bb43-4f4e-b8e6-c68d840ad835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecd2b32-c889-4e53-bfc2-70685e29c6cc",
        "cursor": {
          "ref": "f8b5df54-c4ce-411f-98fc-0cc4d964c72b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9ad7024b-671f-4ac2-b14d-4a2de67c4f9c"
        },
        "item": {
          "id": "cecd2b32-c889-4e53-bfc2-70685e29c6cc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e30fc50c-4ff6-4e02-a158-aedf046ee568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183eb1f1-5c22-4e91-a5c9-d7b964787fa9",
        "cursor": {
          "ref": "216e0483-e7cb-46b0-af0d-4114c6190542",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6eb62bc7-7488-4e36-99dc-c295c8db8573"
        },
        "item": {
          "id": "183eb1f1-5c22-4e91-a5c9-d7b964787fa9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a1d72092-6340-469b-bbb4-aa946ecdc88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b489e1db-8ec8-467c-bf16-98669767f4f6",
        "cursor": {
          "ref": "52121628-172c-4854-8a87-7ae79fd92ac8",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "02f82675-c811-4861-9231-53098c735bdb"
        },
        "item": {
          "id": "b489e1db-8ec8-467c-bf16-98669767f4f6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "74c6f1c0-2e84-4e08-a645-90926c40ffc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7332a7-3f73-44c1-a0d7-00fcce6db4eb",
        "cursor": {
          "ref": "bd80b53d-5112-4e9d-9b58-89e192af436e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cbdaf264-449b-4165-9475-5e1290a55f1d"
        },
        "item": {
          "id": "0b7332a7-3f73-44c1-a0d7-00fcce6db4eb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "99903b9f-8810-4fb9-be8a-5ba91312ccf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eeae58-c398-4a63-b61c-6a7f8c5f51c8",
        "cursor": {
          "ref": "01404c23-da71-4d67-b553-57a31c87ff71",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "887c032c-5a0c-400c-b8b8-42dc11b5e445"
        },
        "item": {
          "id": "25eeae58-c398-4a63-b61c-6a7f8c5f51c8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a51f96de-920c-484a-8cce-c834d3bd855b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cabe356-4bbb-4dc1-aacf-5141567cab1b",
        "cursor": {
          "ref": "bb9f1113-04af-49b0-b86f-7bdaab95a1c1",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3f40bf77-c69b-4314-805e-b8cff99e9f2b"
        },
        "item": {
          "id": "3cabe356-4bbb-4dc1-aacf-5141567cab1b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "29af731b-cb1e-404e-8765-93daa44b62b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2347f88b-826b-43fd-a7b9-3e915e439725",
        "cursor": {
          "ref": "cea06596-c86b-4b6c-a1b7-10e5e4c26c1b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "548a57cc-e461-442c-9baf-b9a422f0b9c5"
        },
        "item": {
          "id": "2347f88b-826b-43fd-a7b9-3e915e439725",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41699944-b8c7-4494-b451-5a5aa4f5dd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313bacd9-8fea-4195-9c27-5d579721dd0f",
        "cursor": {
          "ref": "98c7541c-ff29-4095-8208-92061aa95904",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0f45c598-41ce-4e09-b1e8-564ac703c085"
        },
        "item": {
          "id": "313bacd9-8fea-4195-9c27-5d579721dd0f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b06cc76f-0914-422c-aef4-6febf0508a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445ee9c3-53b7-48fd-bbeb-44cc5c5c9f8f",
        "cursor": {
          "ref": "3cf4acce-1a35-4eb7-8df9-3a7f941f96fa",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a6138794-e636-4072-b09b-48053671991d"
        },
        "item": {
          "id": "445ee9c3-53b7-48fd-bbeb-44cc5c5c9f8f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f0303e70-abdd-4585-b058-a0d38ad804ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74960251-eaff-4a84-8b31-91d2fb5e6b73",
        "cursor": {
          "ref": "ac35952d-eca0-451d-b90c-d53b798fda69",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "76cfa43c-1210-46f4-b536-d9ae4799910b"
        },
        "item": {
          "id": "74960251-eaff-4a84-8b31-91d2fb5e6b73",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "376b831f-e80b-4482-909a-39a02ff01809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9f5511-dc80-46f9-9d82-bb63341fdc64",
        "cursor": {
          "ref": "b46052cc-d5b6-44bd-9e7d-27ea5613ad45",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bc7b179b-fd6c-4c82-b619-05815226be8f"
        },
        "item": {
          "id": "7c9f5511-dc80-46f9-9d82-bb63341fdc64",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7d469b2b-c4fb-406a-aa42-762ce088a222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95c18a7-6cd7-4740-943e-2000246c1bce",
        "cursor": {
          "ref": "8e463593-b068-4d91-bf5f-e7220fd07ab5",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a8a0c17f-8494-4a1c-83d0-920731068284"
        },
        "item": {
          "id": "a95c18a7-6cd7-4740-943e-2000246c1bce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7e6b42d3-7de8-4051-863e-113b721639ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b34dd1-de89-4bb0-939f-41bd46cbb88d",
        "cursor": {
          "ref": "40dc02ba-404b-454f-b45f-7c81e9e8731a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5b13a4fb-b069-4d6b-ae5e-b5246170c811"
        },
        "item": {
          "id": "b1b34dd1-de89-4bb0-939f-41bd46cbb88d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f1a0da3d-16a5-4d77-aef4-75a6a80b296c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9e422a-91f8-448a-945e-3ddb89c16303",
        "cursor": {
          "ref": "5fcaffd7-89c3-4dd2-8d38-ab871efc1d9c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5e28e762-f838-45e6-9589-4889266a8e97"
        },
        "item": {
          "id": "ca9e422a-91f8-448a-945e-3ddb89c16303",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "85b291b9-e3f7-461f-8d22-cda080829655",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f13b20a2-dcc5-4171-ac7c-07b60e2ff5a8",
        "cursor": {
          "ref": "4deda56b-5e1e-4c2d-867a-c48e482b0ad5",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "94744175-595a-456a-bc4d-f4df2d7e92be"
        },
        "item": {
          "id": "f13b20a2-dcc5-4171-ac7c-07b60e2ff5a8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1cc275e2-b309-4e50-ade2-640bcfce713e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef491b28-f1a0-42c8-8118-0b2e4d5512d2",
        "cursor": {
          "ref": "240246fa-e162-4942-b979-f090d7bdc801",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d49d84bf-0c03-4dce-a3ea-5f36e43d9165"
        },
        "item": {
          "id": "ef491b28-f1a0-42c8-8118-0b2e4d5512d2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1e8ba834-6c3d-4b9b-a97e-ff14f9dee0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54eaa0d-78ba-4047-8d43-66177f174ec3",
        "cursor": {
          "ref": "392880e2-a476-4348-baa5-f4fa73c4d5d6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "95a88dd8-e67d-42b1-9893-be038ac02267"
        },
        "item": {
          "id": "c54eaa0d-78ba-4047-8d43-66177f174ec3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f24f2a16-538d-4b01-b5bf-dc8b97874e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9901691-e9d3-498c-8304-7c20d7b08004",
        "cursor": {
          "ref": "7985abc4-2706-4e1b-89ff-1e876a3708ae",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "719cea37-2c7c-4b2d-bc75-9c86b751a2e9"
        },
        "item": {
          "id": "b9901691-e9d3-498c-8304-7c20d7b08004",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "326bb9f0-ccea-4628-a23e-9e089ba85590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c605ca-5ef7-4dbe-ad60-fabc8200086f",
        "cursor": {
          "ref": "bf40dd2e-7098-4ff8-87c2-3b1fc1f038f5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9a76a5c0-871a-47bd-91c0-a70a5397917e"
        },
        "item": {
          "id": "04c605ca-5ef7-4dbe-ad60-fabc8200086f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1e2a42e9-6e8e-4d3b-9f0e-db330c143031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec16390a-57f9-4948-96cb-3e0a5863cbf8",
        "cursor": {
          "ref": "dbd58ada-45c3-4555-9301-3164069e3085",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bab2f44b-7dab-4fff-a9f1-3d2f0ec097d8"
        },
        "item": {
          "id": "ec16390a-57f9-4948-96cb-3e0a5863cbf8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2eac8047-f392-4a60-8721-9b65e556e67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e3e3ce-71be-416a-b550-9e659f8ebe70",
        "cursor": {
          "ref": "35d1b978-ae39-4df2-9597-9ad9f7b3bd6e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "807d84f2-8e53-4ba0-ae73-bfb024d0107d"
        },
        "item": {
          "id": "94e3e3ce-71be-416a-b550-9e659f8ebe70",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f43d1262-205d-4ef6-8f8b-9a1e66e12e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7956cb-a159-46c3-8a1f-bdc59de241f0",
        "cursor": {
          "ref": "135231db-481f-4f91-9068-0f1f821ab6b2",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3a0cc5b6-6e3b-45e1-8010-7da3394543bc"
        },
        "item": {
          "id": "0d7956cb-a159-46c3-8a1f-bdc59de241f0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7d7d5962-2fb7-4cdb-ac8c-53b41e171f8e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 117,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a9ef14e2-00a9-4c7b-be76-be700dba0fc4",
        "cursor": {
          "ref": "4404becc-edf3-4432-bcc1-396913feb3eb",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3b87da57-21f0-4930-9f30-eb4ec55e0f64"
        },
        "item": {
          "id": "a9ef14e2-00a9-4c7b-be76-be700dba0fc4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "14d01cb3-b02f-432e-94ee-9576aaaf2929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6323b0-1db1-4564-bff0-43fa5451e6d6",
        "cursor": {
          "ref": "2ba08284-f38a-4190-bbb5-4d563e5f8790",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a5d2cb15-d7f7-43bc-bc6a-34e0ce99ea96"
        },
        "item": {
          "id": "1a6323b0-1db1-4564-bff0-43fa5451e6d6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "194d221d-759d-475a-ae2c-f9af3826c3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f4b485-a69c-4fbb-a220-c1ba55298133",
        "cursor": {
          "ref": "839dacce-03cc-46d6-9379-01626544c988",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7fbaa1d1-065c-4ba9-a13e-9f589634fe7e"
        },
        "item": {
          "id": "b3f4b485-a69c-4fbb-a220-c1ba55298133",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f37f1411-8338-465c-acfc-bef9bdce5195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b5b068-4ee1-4e14-9789-7aade4d1d51e",
        "cursor": {
          "ref": "77f001af-5be5-4ffe-8197-7a8f5e357b40",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "426ee111-767d-4358-a2cf-bdf1a63178ea"
        },
        "item": {
          "id": "70b5b068-4ee1-4e14-9789-7aade4d1d51e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6e6d5efd-1599-4cfc-920b-300f75c7b5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4ca42d-825e-4b4b-b2e7-13106ac619a8",
        "cursor": {
          "ref": "5cccfe58-baf5-403a-ae88-3dfa64166714",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ccb50dd1-b4a8-4b54-a35b-4ac2fb4b9eac"
        },
        "item": {
          "id": "af4ca42d-825e-4b4b-b2e7-13106ac619a8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0be387d8-cbee-4679-a00d-261c3391a25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc17fd41-7297-4608-a7cd-bb72407da79a",
        "cursor": {
          "ref": "34614b77-5422-4108-9194-2c8454c3c8a5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "29e06004-e0c7-495e-9e35-8b1cfe6e56df"
        },
        "item": {
          "id": "fc17fd41-7297-4608-a7cd-bb72407da79a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a302124c-db47-4983-8edb-ca2d476cbc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef37a1dd-7556-4803-9911-ba4c623b2b65",
        "cursor": {
          "ref": "02025f40-cdbc-478d-81b4-12251daaec18",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "22cc04bb-cb21-4044-b329-755c9bffd80a"
        },
        "item": {
          "id": "ef37a1dd-7556-4803-9911-ba4c623b2b65",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b11cd68a-df4f-443c-9047-5bb4559e23b9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "8384c25e-ca4b-4ce2-b095-1f672bddc9c8",
        "cursor": {
          "ref": "66b59047-1152-4226-a136-b2acb3a9ea35",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "58a07260-b43b-495c-b7dd-88e733a97ecc"
        },
        "item": {
          "id": "8384c25e-ca4b-4ce2-b095-1f672bddc9c8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "29e7c672-bc45-4b3f-b3dc-597f11460b0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9513b067-db8e-4268-a5ef-6f8cbbdfbf61",
        "cursor": {
          "ref": "fad1d6ba-4e97-4949-bf5d-892f78c10a27",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dcae2771-3933-48aa-8ce6-4033d9c392b3"
        },
        "item": {
          "id": "9513b067-db8e-4268-a5ef-6f8cbbdfbf61",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ac420b5e-df0f-4f7b-b4b0-f60ac30b8b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a99d7f4-16ab-4f10-8463-99cdc09a2cfb",
        "cursor": {
          "ref": "a896d34f-5312-4d99-a049-7f36a76fe822",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fbe3e8d9-e0f1-41d5-b6d4-90b81880e4aa"
        },
        "item": {
          "id": "3a99d7f4-16ab-4f10-8463-99cdc09a2cfb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "08dde67e-2d86-4aa2-a5ef-6f80f8b7f8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a888b2c-7fcb-4277-be51-a0b2d3322bcb",
        "cursor": {
          "ref": "6b26695b-1423-411c-b6f8-907ebaf6742b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6fdedeeb-6d6b-4d1a-be36-30facfe62d6e"
        },
        "item": {
          "id": "9a888b2c-7fcb-4277-be51-a0b2d3322bcb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "93f1e779-58aa-44bd-bfe9-fbbf47c09a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ddc392-6a64-41c0-b0c1-58c2a75351c5",
        "cursor": {
          "ref": "0f4397b9-1478-4304-8c99-80f3df4b3f7d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "16ce0a12-2f7d-4502-a002-52be6f03201b"
        },
        "item": {
          "id": "51ddc392-6a64-41c0-b0c1-58c2a75351c5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7a4eea2e-e83b-4ab5-992d-ca784d09e1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1c79e6-8027-4754-b0fd-5c95ffde71a9",
        "cursor": {
          "ref": "b9e89b44-f978-4898-a8b1-22df870863e5",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b478f9c3-ff0b-4b41-8c93-76b849ff790a"
        },
        "item": {
          "id": "1d1c79e6-8027-4754-b0fd-5c95ffde71a9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8fee469d-3c13-45b7-91f0-e103a95c3eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be6726f-f4c2-47f3-88a4-95fee34098d7",
        "cursor": {
          "ref": "263dba2c-e75d-4dc4-81d3-70668925e143",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "22a6d448-e3f8-4e67-acb8-24e1bcbf9f7e"
        },
        "item": {
          "id": "8be6726f-f4c2-47f3-88a4-95fee34098d7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ccdd1cde-f2fe-4b7f-904f-fb432f0a4873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d36e230-8e91-4936-801c-079762d7fa8d",
        "cursor": {
          "ref": "4ed4db0b-8880-41e8-ab67-441c4d7e4b99",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1c3fdf8f-3f5f-4e2b-aa76-189bb6bfa5e3"
        },
        "item": {
          "id": "1d36e230-8e91-4936-801c-079762d7fa8d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a0e58d7a-c99c-41b8-a1d7-8bc33574a2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8c3ff5-1b1c-40b5-8b6b-31d8e5fbdc53",
        "cursor": {
          "ref": "1cc4671c-1795-4726-9477-2f6f5cd7435b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5bc1eced-c396-45d8-9348-a1dabe0c1964"
        },
        "item": {
          "id": "5d8c3ff5-1b1c-40b5-8b6b-31d8e5fbdc53",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5159dc08-e547-485e-a7f9-b5f0a3d2902f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67e156f-8d4c-4d88-b5ff-2a820399c261",
        "cursor": {
          "ref": "c72f0a9f-4572-4bb4-9c30-3b477baab46d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8f17e1e0-2c27-4d93-ac29-da05825b24b4"
        },
        "item": {
          "id": "a67e156f-8d4c-4d88-b5ff-2a820399c261",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d498f921-e395-4877-90b4-7cc2027f6709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f30007-880e-4593-97d1-f96a3668b18a",
        "cursor": {
          "ref": "bea30316-45d4-4741-a8f9-94d71a1efb23",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6ccb73e5-1fd0-4ce2-954d-c22f23faa3da"
        },
        "item": {
          "id": "e2f30007-880e-4593-97d1-f96a3668b18a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6c0c74b2-2358-464a-8ea6-e3f1946406fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64e44b3-5cb5-4f28-ac2a-583fbc0d652b",
        "cursor": {
          "ref": "d5196392-d5a2-4343-ac6c-f57df5837ebd",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3f219edb-dabe-4409-bb9e-645dcbe2d761"
        },
        "item": {
          "id": "f64e44b3-5cb5-4f28-ac2a-583fbc0d652b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "110573a6-9d6d-401d-9b0c-86aaa43a7c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238be195-e37b-4459-9fb2-2b61cc66c0c1",
        "cursor": {
          "ref": "84a8afb5-5ae7-411f-a6f7-3dfd84465395",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f1a27b07-f516-40a4-b447-0eb868f5ef61"
        },
        "item": {
          "id": "238be195-e37b-4459-9fb2-2b61cc66c0c1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "48784b39-a0bd-4d60-bc90-40e370b073f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acc394e-977a-4bd0-a099-959738f0a23f",
        "cursor": {
          "ref": "db2b1ea0-2cd6-4f1e-b9dd-fa7ec8269d01",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c089aecd-5155-46b1-9990-2e57a58bdbae"
        },
        "item": {
          "id": "6acc394e-977a-4bd0-a099-959738f0a23f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7239c2f5-ed3b-4f69-8d27-bd47fff099c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0263dc-796a-479f-b794-531f8a2201c8",
        "cursor": {
          "ref": "475040ea-6bd5-417b-ab08-b6af3977f0af",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6dedfea1-3717-4cf3-993b-157b5c9cd19a"
        },
        "item": {
          "id": "6c0263dc-796a-479f-b794-531f8a2201c8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "205c1255-4bef-418e-8c3c-eba1721d6456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88eef0d-505a-41c7-9930-04f1ce717ea3",
        "cursor": {
          "ref": "e07255ba-4197-41b5-adad-845475867a74",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "93aa1d78-8251-49e6-ad80-0dafe91a09f3"
        },
        "item": {
          "id": "d88eef0d-505a-41c7-9930-04f1ce717ea3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "96449ef2-bf79-4dd8-8750-a6e7fccf3c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c263c29-4b48-4a17-be3e-11c3aa6475a1",
        "cursor": {
          "ref": "ce0a9df2-005c-488e-acf4-8c6835b92e26",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "53df1105-db5e-4052-ad7b-d4551ed15402"
        },
        "item": {
          "id": "2c263c29-4b48-4a17-be3e-11c3aa6475a1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "19d693eb-82a3-4793-a0b7-472fd9a9b95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f96c38a-4635-4026-a4be-a26673e44c5f",
        "cursor": {
          "ref": "c66a6a58-e037-42cb-833a-57daffd6c1ac",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d7037bef-8795-468f-ba7a-c07d8c36de97"
        },
        "item": {
          "id": "3f96c38a-4635-4026-a4be-a26673e44c5f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e0e05ed3-443b-4455-a418-ddde4ee3396d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "983d3a95-4d42-4db8-8b87-2c3524d98a00",
        "cursor": {
          "ref": "6fab9576-2e1e-42cd-861d-71f62a41c78f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "84a18e16-ba4d-40c7-968f-bae0b092e37a"
        },
        "item": {
          "id": "983d3a95-4d42-4db8-8b87-2c3524d98a00",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4e7d215d-51eb-42ee-8df7-fc7f36f21aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2de5f70-3354-43d2-aabe-224b9c8e8f79",
        "cursor": {
          "ref": "8279ded2-3960-495e-887b-c11853306345",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "97aeb2d3-9642-4366-bfec-022c7ff8ebf1"
        },
        "item": {
          "id": "f2de5f70-3354-43d2-aabe-224b9c8e8f79",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0fec190e-5bf7-439b-bed4-56f43208646c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56883490-bdb9-4b64-829a-b652a13f4ac2",
        "cursor": {
          "ref": "f32b9c12-947e-424c-b42f-b5902b4f4364",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b76d08b8-3919-400c-a936-c75d72d8d8c3"
        },
        "item": {
          "id": "56883490-bdb9-4b64-829a-b652a13f4ac2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a8c05461-7d95-4477-8acf-8dcc69978e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c049650e-2541-4a64-9492-8a4712681895",
        "cursor": {
          "ref": "8324a761-cdb8-463f-8bb3-aa08c253c47a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cad9c05f-2fee-4562-9214-9cef31ddc5a9"
        },
        "item": {
          "id": "c049650e-2541-4a64-9492-8a4712681895",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c5e0cdca-b047-46ab-8b63-65ed3f36fa68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd321010-758d-47ae-890c-c58d638d24bf",
        "cursor": {
          "ref": "7f78f58e-c8cd-4590-b976-3de45dbb9fa1",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5a52aedd-d7fa-4e1b-845e-93fb30d5d626"
        },
        "item": {
          "id": "fd321010-758d-47ae-890c-c58d638d24bf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "20e3a5c3-912b-4cc8-b662-b453d6127299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbfde6b-141d-4515-ba74-e12de5dc18f1",
        "cursor": {
          "ref": "f0860abe-6a50-4487-a2e0-cdcabc2a48c7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "155f56d7-c170-4560-b883-f181630574fd"
        },
        "item": {
          "id": "2bbfde6b-141d-4515-ba74-e12de5dc18f1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "997d14d2-0383-44da-a779-f899ecb9b5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616f0925-8701-4657-83f8-753b0a54a10c",
        "cursor": {
          "ref": "7566b5e2-161b-41a6-a34b-a674b648e73c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "39dcf0aa-3601-4f8d-9311-53292e136c46"
        },
        "item": {
          "id": "616f0925-8701-4657-83f8-753b0a54a10c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3c36f246-337b-4513-bfc4-ad3fbbc546f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0297195e-7c9d-4ba6-931c-62252252ae83",
        "cursor": {
          "ref": "80fa511d-226b-47dc-bdb0-7fe5a1ee1e32",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "43c0ae93-a3f3-403e-9449-ea5b58a68332"
        },
        "item": {
          "id": "0297195e-7c9d-4ba6-931c-62252252ae83",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8231cc91-307b-4348-830f-a0b585d7d66f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "d2bca793-c4a5-4a14-ab62-a8e99e514fe9",
        "cursor": {
          "ref": "57c97806-8a76-4bfb-90ff-551af9dff792",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7dcc9e23-4b76-4bc3-ac25-8292f50978c2"
        },
        "item": {
          "id": "d2bca793-c4a5-4a14-ab62-a8e99e514fe9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e4c40b5e-23d3-4c5a-b968-dcd940c29042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4ae863-52f9-4c15-9780-24835e856c92",
        "cursor": {
          "ref": "98edd894-bfc4-4f6f-8f13-85917baa330f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "311981e7-fc3f-4823-ade5-404812f19cdc"
        },
        "item": {
          "id": "df4ae863-52f9-4c15-9780-24835e856c92",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a1c4bd1b-b977-4257-908c-317409a15532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c841bf1-6ff6-4f2b-a382-55f392d0e77a",
        "cursor": {
          "ref": "016163e6-c5b8-4ac1-8967-13785bb54e05",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "15a1a561-9f14-4a2e-9f91-522f51b1ed29"
        },
        "item": {
          "id": "2c841bf1-6ff6-4f2b-a382-55f392d0e77a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "896e433c-7bed-4068-8998-f953c8276163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebc4ce0-6965-48ce-9e8c-41fa1fc00044",
        "cursor": {
          "ref": "d39d9656-5bfb-4b8e-bc40-6eae61c9a9a8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a3ccc9bd-3468-48b4-9c51-95ff55f5be6a"
        },
        "item": {
          "id": "eebc4ce0-6965-48ce-9e8c-41fa1fc00044",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f02848fd-c0d6-4385-82d1-ced544005a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ce0bcf-7589-40cb-8286-cc51e69b0978",
        "cursor": {
          "ref": "51ea3e26-b8f3-4d0e-828e-4a97d3f41616",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "86df6c36-8d82-4353-af8e-76659c5d8f57"
        },
        "item": {
          "id": "96ce0bcf-7589-40cb-8286-cc51e69b0978",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a80e5ac9-0524-45a1-90b0-ca0e4e6811b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f2d5c4-a832-4fe0-a23b-c92a98abac01",
        "cursor": {
          "ref": "5a9d36e6-351c-4ce6-9857-8e49584421b7",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5a7cd59c-b43e-4417-a8da-ff97ad1ea0e2"
        },
        "item": {
          "id": "06f2d5c4-a832-4fe0-a23b-c92a98abac01",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "24441bc5-666e-4568-adfb-6bc48e2a33e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b326fc1-2e89-494e-a752-e4440835ddfc",
        "cursor": {
          "ref": "7f64de8b-d178-492f-9049-3c70e980e49a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e0a4b07e-9102-4a2d-a933-66253b299a61"
        },
        "item": {
          "id": "6b326fc1-2e89-494e-a752-e4440835ddfc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "850424c2-f060-4edb-8311-1fecb6a64e70",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "006b0815-8a11-4383-8961-f877246ac4e6",
        "cursor": {
          "ref": "edd3d664-64f1-45f1-9736-59a3e92590a5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cc8156f3-2b29-4f54-988f-90c1722d52ce"
        },
        "item": {
          "id": "006b0815-8a11-4383-8961-f877246ac4e6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d6fdb1ab-181e-4bc5-8970-deb03b5f51b4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 86,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "edaf5891-754c-4adf-9228-94cf1f8e5e98",
        "cursor": {
          "ref": "d6174cdd-1a72-4b21-a570-8d2046a146e8",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c1c239bd-9788-43dc-9924-59b58de92c80"
        },
        "item": {
          "id": "edaf5891-754c-4adf-9228-94cf1f8e5e98",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "70cb8f7b-e0e7-4e27-ae03-9779fa2d709f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 125,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "87d1ea64-f96c-4bc1-96e4-b6d3ba3a1a99",
        "cursor": {
          "ref": "372f515d-ee65-48f5-bf32-fbcaf14bac0f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a6c4988f-2a4f-4ddf-a4d9-07f0771a941b"
        },
        "item": {
          "id": "87d1ea64-f96c-4bc1-96e4-b6d3ba3a1a99",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "be7ce99a-c9c6-4ae7-876d-ff367ec0393b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "9bc4d422-304c-4e1b-b1d8-7f345452536c",
        "cursor": {
          "ref": "db804e75-3331-4b7b-914a-f9638926fbec",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "827a3c1a-f4f7-4663-bdb4-69da9569d2fb"
        },
        "item": {
          "id": "9bc4d422-304c-4e1b-b1d8-7f345452536c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bde8554e-c637-4561-9701-c060c7afe9b1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "31612d20-dc0f-4208-8163-920a0779f3f3",
        "cursor": {
          "ref": "b9e77d97-ea2e-4684-b49b-06d58f736782",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ea17a156-26fb-4d02-84a8-47e8df62e233"
        },
        "item": {
          "id": "31612d20-dc0f-4208-8163-920a0779f3f3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9c806739-5680-404b-a850-4a24db6fd627",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "8241d9d1-a8f0-48ef-a3d3-0c38a9440002",
        "cursor": {
          "ref": "a11f788d-b871-4a7c-b3a1-0daed643b47d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5c9df7b7-360f-48f3-91dc-d32d89ccf945"
        },
        "item": {
          "id": "8241d9d1-a8f0-48ef-a3d3-0c38a9440002",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f11f3de3-d3cb-46cb-a562-0eaab966d397",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f7ab03-b0cf-4b4b-9e46-e0ba40a8f7b9",
        "cursor": {
          "ref": "a2f1dcc2-bd84-4301-ada7-48bb38f5d51a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9d3dc9a9-ddf4-45ed-ab2e-81c7a172d24d"
        },
        "item": {
          "id": "c0f7ab03-b0cf-4b4b-9e46-e0ba40a8f7b9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "edc133a6-5bcc-4c55-aacb-1ad4478a71a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434fb7bb-5352-4275-80a4-545fe9312819",
        "cursor": {
          "ref": "bf97090f-d2e1-4771-82df-3c20349e7151",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "281bcca0-5b76-4adc-9f3d-0c48eca915c1"
        },
        "item": {
          "id": "434fb7bb-5352-4275-80a4-545fe9312819",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d2ed6b92-86e0-4897-854d-953df8913923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eb4714-0231-4bd2-9917-8d11e4b19fbc",
        "cursor": {
          "ref": "5e381a0c-e291-4ca1-979e-90f0b916447e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b910bb12-4cb6-42de-b7f3-2eca720132a3"
        },
        "item": {
          "id": "e9eb4714-0231-4bd2-9917-8d11e4b19fbc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7446602d-1110-4743-8356-80c57c41cf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb395119-dea8-41a1-9494-132d1b58806e",
        "cursor": {
          "ref": "d37d0ef6-3d9e-407c-8e8c-7f65d11d6ef7",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "13ca19e6-87a7-4299-aad4-d59453573ce2"
        },
        "item": {
          "id": "bb395119-dea8-41a1-9494-132d1b58806e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "87ff7466-c85a-48ba-857a-c098a8539654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5d852f-1cb1-4592-a4f7-7c849984aaca",
        "cursor": {
          "ref": "557e3264-d603-421b-83eb-4c700a940d5c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8e198257-746e-4a41-a503-0f5d27f1df89"
        },
        "item": {
          "id": "af5d852f-1cb1-4592-a4f7-7c849984aaca",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3069ecbb-55f7-4d9a-8d90-682400012df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee992c8-f822-4f4c-a8dc-f5ee07ebe123",
        "cursor": {
          "ref": "8eeb31a7-99fc-4c60-96f2-4d3a563e1cd5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "68300b01-cde6-4d8b-9575-5eb17ffc0be1"
        },
        "item": {
          "id": "5ee992c8-f822-4f4c-a8dc-f5ee07ebe123",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8af5d5a5-7a57-4169-ab64-71f2f9993435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41100b97-d14f-45bb-b074-d1ace73496b8",
        "cursor": {
          "ref": "d85f7e5b-49e0-4f37-b66f-87faedcc9ee7",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3b2ddf75-490e-4fbf-a2e6-22ca0b2bec05"
        },
        "item": {
          "id": "41100b97-d14f-45bb-b074-d1ace73496b8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cb74d757-e031-4da0-bcf7-978947605c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09272b8a-b95f-4bda-8d7a-28d4dc953d56",
        "cursor": {
          "ref": "d387f83f-8f5b-4dc7-8343-d65474ce1068",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c0e82399-26fc-496d-b18a-61ba30087f94"
        },
        "item": {
          "id": "09272b8a-b95f-4bda-8d7a-28d4dc953d56",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0140cc08-96aa-46aa-8d5d-f436ed64d977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1c2118-d4db-419e-bf27-eb553b17a8ac",
        "cursor": {
          "ref": "efa907bd-b026-47f3-90be-26a948135641",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a1d00415-dee0-4f1f-b3e7-3c33a4d2e071"
        },
        "item": {
          "id": "bd1c2118-d4db-419e-bf27-eb553b17a8ac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "47a94866-3322-4977-92a7-336b832d0cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d583f6a-c222-46db-9e66-cb353b7b8a6c",
        "cursor": {
          "ref": "aabc5f99-4510-4e62-be80-c934a30a348d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9dca5694-6ff7-4d93-b236-29f176874823"
        },
        "item": {
          "id": "9d583f6a-c222-46db-9e66-cb353b7b8a6c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dcb796fa-4704-42af-a3c6-ac2365d7a0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fdac88-e649-487f-a56b-11b0e28f1c79",
        "cursor": {
          "ref": "49a4714d-e588-45d9-9a97-99e7c5efc91d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2f619236-9d4b-4f32-9ca9-d9a0dc46a2b1"
        },
        "item": {
          "id": "09fdac88-e649-487f-a56b-11b0e28f1c79",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d87b73a8-b02f-4c8c-a8c3-e83bc9efb880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b2a55a-24cc-4ca6-89e5-fea5b9a8c3a4",
        "cursor": {
          "ref": "391c9e5b-46f1-4ed6-9e6b-4dd668e48232",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a9700d8f-24a0-45c0-a8d9-7cb46c0f4bd5"
        },
        "item": {
          "id": "11b2a55a-24cc-4ca6-89e5-fea5b9a8c3a4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f2b3785f-26a4-475b-bee3-50abfd7a6303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28dcd31-cf9a-4ddd-b56a-37660a3338c5",
        "cursor": {
          "ref": "6792bcd9-b6fc-4ab5-bb03-58e8499cb4ae",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8347e975-18a9-4d7e-86f3-dd08c33c6f45"
        },
        "item": {
          "id": "f28dcd31-cf9a-4ddd-b56a-37660a3338c5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3e76de83-7aa0-41f7-9bca-f60b78eb23c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4df0f73-7f45-430d-a0ee-c75daa3dc388",
        "cursor": {
          "ref": "48e6c804-050b-484b-9cca-2896b082c871",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b98445ab-141e-48a3-8999-ea812a1f3f7b"
        },
        "item": {
          "id": "b4df0f73-7f45-430d-a0ee-c75daa3dc388",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "49658889-c1df-49fd-b578-cbbac8c0263e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9113fc24-c536-4fa3-a33e-b1db7db4d3e3",
        "cursor": {
          "ref": "d8ed79c2-f64a-4cea-a2af-c9defa42a1b9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "748259c0-81a6-402d-ab5d-612c53265673"
        },
        "item": {
          "id": "9113fc24-c536-4fa3-a33e-b1db7db4d3e3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f4b020e1-9420-4d48-99de-e43121c5b20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbdc427-2367-4147-ab61-33daa3bcec87",
        "cursor": {
          "ref": "4402f062-fce2-4228-bbba-7f73cf0008d6",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8fb8e032-bd3b-41d0-946e-5fe3875d6299"
        },
        "item": {
          "id": "6cbdc427-2367-4147-ab61-33daa3bcec87",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "934a702e-0e19-474a-914a-52cdd5b75e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa391b0-a610-4752-92c3-74a72d7de637",
        "cursor": {
          "ref": "50d3064d-6b90-48a6-bf4a-e9391df95470",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1a9fccb8-c952-4bdb-ac7d-3bb8a2b2318d"
        },
        "item": {
          "id": "0aa391b0-a610-4752-92c3-74a72d7de637",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "259bd61f-3ae4-4b75-875a-7d2e48e76299",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "2d4bd3fc-ad63-47b7-adcf-74a26b5f319f",
        "cursor": {
          "ref": "694e22a3-d648-4c91-9303-40a6cdd8e799",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "53481340-fe28-42d4-93a4-2219ca4a4eb2"
        },
        "item": {
          "id": "2d4bd3fc-ad63-47b7-adcf-74a26b5f319f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7061f042-f1d1-43b8-8a5f-ee0c27cca111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e208ccf-3555-4383-95bb-2fc979d975fd",
        "cursor": {
          "ref": "84a8bb66-fe21-407c-bc53-aec2cf776e08",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8b94b659-cf53-4f05-9057-0599e49aa9bc"
        },
        "item": {
          "id": "4e208ccf-3555-4383-95bb-2fc979d975fd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f92dde7b-918f-4ea2-a14f-a3b1e014ee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182a4cad-65d6-4060-8a0f-391f9e484664",
        "cursor": {
          "ref": "fc93f2a9-941f-4d6e-b335-d8dcb3160e0b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9790dddb-8ab5-4126-9455-5b6da9be1029"
        },
        "item": {
          "id": "182a4cad-65d6-4060-8a0f-391f9e484664",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a6351b0e-054f-44e6-9e3d-1d6b40d5febb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74b03e7-77cb-459d-a045-4c16bdf833ec",
        "cursor": {
          "ref": "be5e6d30-6cc0-4cfb-a330-eb90eb8d7a51",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cd540fb5-42cf-49b9-99bc-4590a8baec5b"
        },
        "item": {
          "id": "d74b03e7-77cb-459d-a045-4c16bdf833ec",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8615f2f3-964d-4302-9c84-d25c083604b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc5d063-3b45-4e5c-b22c-41638b6b8dc0",
        "cursor": {
          "ref": "48a00db9-961d-4874-ae9f-0b3c186d673a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "11e21448-fe3a-4f8e-a271-422f5c97f49c"
        },
        "item": {
          "id": "1bc5d063-3b45-4e5c-b22c-41638b6b8dc0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "35833864-c377-446c-86fc-b3c66bf5011a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137119b5-fb4b-4fe6-af97-292bbe544515",
        "cursor": {
          "ref": "0b7cd605-8d1a-4fab-bde0-b75f5f32bc19",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "196ce442-4a79-4eaf-983e-b76c6334bf35"
        },
        "item": {
          "id": "137119b5-fb4b-4fe6-af97-292bbe544515",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e66c8cb8-41c6-43ee-b793-5d58afe12e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a439cee3-3f21-4fcc-8345-26903965ec88",
        "cursor": {
          "ref": "72916198-1748-4238-b444-59fc6dafcb78",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "388c98ad-a308-419e-96b3-6fb24ffc6204"
        },
        "item": {
          "id": "a439cee3-3f21-4fcc-8345-26903965ec88",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "03c4b4f6-5da8-40fd-a8bc-97f032a22fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5776eb-ca31-4483-87b2-79f3a79410df",
        "cursor": {
          "ref": "0a95deb9-3ad9-4b0a-9cca-2bf4c49ff3ee",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d4b674cd-d527-4147-a8aa-1a15282ce8dd"
        },
        "item": {
          "id": "ba5776eb-ca31-4483-87b2-79f3a79410df",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "54d8e762-1df4-4ee5-8267-68d13fb67e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9fe189-5021-4689-a917-3963b8655621",
        "cursor": {
          "ref": "6c905c33-03a0-4e82-8435-22fd322614f9",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3a7d41bc-bfb0-4982-8941-2c5a3bb0383e"
        },
        "item": {
          "id": "1a9fe189-5021-4689-a917-3963b8655621",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4539dd26-38d0-4c4c-aa99-974f687d4c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b137f9c2-b72d-4a54-aba0-e2782aade07e",
        "cursor": {
          "ref": "8c99438e-f02a-45f8-8f73-58bd84bad357",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3c0b8762-65c7-4ca3-ab38-4d1564275937"
        },
        "item": {
          "id": "b137f9c2-b72d-4a54-aba0-e2782aade07e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d9ac482b-f1a0-48b0-b550-4a1a10475b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2cc5ad-37c8-4024-9e92-9f289f1c1410",
        "cursor": {
          "ref": "5de08c4e-bdfe-464f-b854-cac112cdc802",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0cd82562-700a-4423-b4da-e3fc77b8d0ee"
        },
        "item": {
          "id": "eb2cc5ad-37c8-4024-9e92-9f289f1c1410",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9b5e8b8d-1c77-44c8-b137-7e509a8a1f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae289ce6-bd5e-4eb0-98e5-abfe538f0c4e",
        "cursor": {
          "ref": "47b34744-9d5c-4301-b9cf-96b0332e51a9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eead92d9-81c2-422d-aee7-c17da648bc59"
        },
        "item": {
          "id": "ae289ce6-bd5e-4eb0-98e5-abfe538f0c4e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ea159690-00ed-46ce-a02d-a016f8698fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a987b7-0317-4b77-9057-052ed71b0fcf",
        "cursor": {
          "ref": "86819687-2188-4409-b72d-3ec489a3dfac",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c222a9bf-f695-4398-8cdb-18e7b7cb05b1"
        },
        "item": {
          "id": "f1a987b7-0317-4b77-9057-052ed71b0fcf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9976513c-4120-4b5c-8d47-32672746dafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f860b0ad-3e5d-4232-a1a6-1311f4d5deab",
        "cursor": {
          "ref": "8d49feeb-f766-4cb6-9ca4-78964ea80a9b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ed56ba97-2e63-4dc7-a05d-2466f23fae65"
        },
        "item": {
          "id": "f860b0ad-3e5d-4232-a1a6-1311f4d5deab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "81f0dca4-a888-41f9-a999-208ae496a25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb05f923-5647-4659-bec2-9a8d417e1bb0",
        "cursor": {
          "ref": "f72d3052-c2bc-461a-aede-b5d893ef5a8a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5af0cb16-ff60-441f-9e5a-b61ba5dc0995"
        },
        "item": {
          "id": "cb05f923-5647-4659-bec2-9a8d417e1bb0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "512f2c40-38cf-4299-816f-a4107fd9369f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d338ab-0fd7-4f96-8725-a768b6d378ad",
        "cursor": {
          "ref": "3fe56a8a-9bda-40c9-bbd7-280c53ecf9c7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7be66e02-9ae9-47cc-a7e2-0adb67ab8ec5"
        },
        "item": {
          "id": "23d338ab-0fd7-4f96-8725-a768b6d378ad",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "11ab221c-6d78-4732-bb57-10552ee18b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9478f4-6b2e-4acf-8f16-f28b4e39d81c",
        "cursor": {
          "ref": "67be6368-a810-43d9-909c-5c384ac82248",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "050c6db5-3b79-4bcc-89f6-68defd1a6679"
        },
        "item": {
          "id": "cd9478f4-6b2e-4acf-8f16-f28b4e39d81c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c2e9ab1f-54ba-48fc-9eb4-e4903eb0d23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ef6295-56de-4995-82b1-edd8f109a3fb",
        "cursor": {
          "ref": "2a2114e0-4ead-4e7e-9ad5-74f7f7d5f666",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bef560d0-eec7-4354-bb39-feca122f3278"
        },
        "item": {
          "id": "f5ef6295-56de-4995-82b1-edd8f109a3fb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "18db560d-96e6-4c65-9bcc-b0241cdea12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbe3fd8-4b9d-480c-9b02-23b64951f4ef",
        "cursor": {
          "ref": "628913ca-61be-41fa-a48b-245a682b49f7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fa2bb399-327c-4f7d-bf01-1c64c2c5014f"
        },
        "item": {
          "id": "cdbe3fd8-4b9d-480c-9b02-23b64951f4ef",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "83ae92e3-4c8f-4219-b2b1-295c24ea0f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fac14e-7423-4c68-92de-90f8bff03fd5",
        "cursor": {
          "ref": "5695297a-5a19-437e-bba3-ffa548b01b8a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9c3b7c26-aa0f-481a-9e4c-ad906f723d30"
        },
        "item": {
          "id": "23fac14e-7423-4c68-92de-90f8bff03fd5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "611f8789-207e-455f-8e49-5ec92bcf2eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc447e10-14c3-402c-952b-fb39ff33bb59",
        "cursor": {
          "ref": "48739f3c-2b38-4e14-b79b-801307148848",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "84f612dd-1be0-443c-ad64-e7c67ae46211"
        },
        "item": {
          "id": "cc447e10-14c3-402c-952b-fb39ff33bb59",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4d2022e4-cb9b-4fef-bc9b-107940dfd0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19029a5-c724-4412-afa5-ecabf0154832",
        "cursor": {
          "ref": "8846c96f-b5cf-460f-9924-dcde45c023a7",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5786d55e-783e-467d-a653-9a6734c6d2cc"
        },
        "item": {
          "id": "f19029a5-c724-4412-afa5-ecabf0154832",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6c55c139-7060-4a76-9d99-5de939e03196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cfc63f-f284-4204-84e5-d77b3a154607",
        "cursor": {
          "ref": "e326c23a-84d3-483c-8e3c-cef1a8c788a3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7a992f1b-2a0e-4428-9de3-dc5a4cb64e24"
        },
        "item": {
          "id": "d5cfc63f-f284-4204-84e5-d77b3a154607",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d3ef379-0c81-4a61-8660-4db7d1e26d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420799b5-1b15-4828-8cd1-958d7562aaa9",
        "cursor": {
          "ref": "fb4cc1ea-a9d8-4034-b3e5-500c64bd3028",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "db879de1-bb6c-4e94-94a9-4e10738dce88"
        },
        "item": {
          "id": "420799b5-1b15-4828-8cd1-958d7562aaa9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f1db8bc2-34f2-409d-876f-e2f3bff14756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39372bd-1eeb-4fff-afdf-2fe139cd1d68",
        "cursor": {
          "ref": "4b9e6bee-e73d-45be-83e5-8539ead2ed66",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a438fa28-d981-4129-9615-82ad2d23dca4"
        },
        "item": {
          "id": "f39372bd-1eeb-4fff-afdf-2fe139cd1d68",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ff569d73-b071-4bd8-8ed0-4aa5db49b86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57959c4-b731-49b5-850f-c606c9b8531a",
        "cursor": {
          "ref": "a25fa3f6-531c-4b70-8b1e-c8f73ff9eaf4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "70dedcbf-067a-465f-83fb-00949ea03b31"
        },
        "item": {
          "id": "d57959c4-b731-49b5-850f-c606c9b8531a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "79e63842-3128-4c2a-9740-58783e741c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce9f2b5-19fc-4c2b-88df-107e795f22b6",
        "cursor": {
          "ref": "5a6a4015-a6fa-44dd-9f28-ff84f8b634a9",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "69e4e0f2-6a80-41f0-a79c-5cc4a10139d9"
        },
        "item": {
          "id": "7ce9f2b5-19fc-4c2b-88df-107e795f22b6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "02ad744d-8b71-47be-a5ce-3d9281813393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410b8c5e-fcc6-4dff-9a76-89f532079ff5",
        "cursor": {
          "ref": "cf6aeb71-667b-4b34-befd-2a6233dafaa1",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2d10519b-1c69-4fb5-aa7b-03fd61e9b467"
        },
        "item": {
          "id": "410b8c5e-fcc6-4dff-9a76-89f532079ff5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6f326406-11d7-456e-a315-9f3098db98d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83233e41-cdb5-4c3d-ad9f-cbbfb55d1196",
        "cursor": {
          "ref": "bcbcc25b-d62d-4ee9-b8ce-a997b38dde64",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2bd4cbd3-ebec-4bfa-b8fc-2b2d08e2e305"
        },
        "item": {
          "id": "83233e41-cdb5-4c3d-ad9f-cbbfb55d1196",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "94fb7b59-898d-42ef-83cf-5284c10b3979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad1e630-1999-4096-a981-725a9f887066",
        "cursor": {
          "ref": "ba339585-d15d-4329-bc7f-4e6ec94c7d2d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ae6cbf0b-3c3b-4c58-b827-20961e7e6f37"
        },
        "item": {
          "id": "0ad1e630-1999-4096-a981-725a9f887066",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bf76211d-ce47-4b79-b3ea-b7061ab5e288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32256302-8272-4de1-a883-67de6722c9ad",
        "cursor": {
          "ref": "1d12af77-a1d3-435c-a495-d053f6b5ddf1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c75bd1e5-81d2-4ee7-bd13-31f78f8dbd97"
        },
        "item": {
          "id": "32256302-8272-4de1-a883-67de6722c9ad",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f8f92837-a079-42f6-804a-ea9b89fb6de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aafdb41-b591-47e9-a876-14e6cc59f8ce",
        "cursor": {
          "ref": "85b3b2e9-4470-41ea-bb52-dbf82e7fe302",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9d0aa504-2cb3-4b39-ab63-460cbd8d0ca8"
        },
        "item": {
          "id": "7aafdb41-b591-47e9-a876-14e6cc59f8ce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1187326e-fb79-4d11-9262-5c35c05d6b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdb7cf1-0591-48f3-99d7-8d2ecf53138e",
        "cursor": {
          "ref": "48c7117a-91da-4337-b858-6f951c3cab46",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "962cd148-c990-4fab-916e-31e5e656f9c4"
        },
        "item": {
          "id": "5fdb7cf1-0591-48f3-99d7-8d2ecf53138e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6fd45d58-6b90-46fe-9dc9-4a7b7e9fe936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e588ba78-07b6-436e-93a5-23fe1044a683",
        "cursor": {
          "ref": "6d896f4a-0fae-4dae-967a-74bdff4dfcfa",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "069cd257-4a57-4f66-9bf6-ef52478a0640"
        },
        "item": {
          "id": "e588ba78-07b6-436e-93a5-23fe1044a683",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5cc4914f-dda0-42f5-ba45-59e49d4dfd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782c092d-7bd3-458e-a47f-09d9728c4ffd",
        "cursor": {
          "ref": "ba5bf746-a26d-4b8c-8520-b44a65d4df45",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "706fb0d6-cc62-4284-a83e-17014b99934a"
        },
        "item": {
          "id": "782c092d-7bd3-458e-a47f-09d9728c4ffd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "38caaf28-558f-4e3f-8ae2-ab2cd259b255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ed3b87-50b0-4596-b6a0-2c6eb5660bc8",
        "cursor": {
          "ref": "9998c11b-79e6-4cda-a227-370ef2bb0e0e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bffbe2bf-cf1f-4b38-a38e-694b9ddcefda"
        },
        "item": {
          "id": "57ed3b87-50b0-4596-b6a0-2c6eb5660bc8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "82081bf6-ceac-4cf8-b14f-c7753599387d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbd41b1-df2d-4ba8-9677-2921cdfda398",
        "cursor": {
          "ref": "bcee6e2b-2cdf-44e2-a496-a7c887585c67",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f1a1f8aa-b409-4dcb-adee-44e6264aa5a7"
        },
        "item": {
          "id": "bfbd41b1-df2d-4ba8-9677-2921cdfda398",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cbf2d7f6-a036-4edb-a5dc-6650b1729131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b60557-9257-4eb5-ad4d-ddacd06a7642",
        "cursor": {
          "ref": "9753aae2-d9f3-4157-8c87-d4521a50720e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "433d4b32-ecac-4cba-af78-bc149ed55fad"
        },
        "item": {
          "id": "76b60557-9257-4eb5-ad4d-ddacd06a7642",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "02af934f-6d07-4afe-9247-e62911e08acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0434a5a-7427-4a15-9857-699dacc6e149",
        "cursor": {
          "ref": "80712134-a13e-45bf-84bd-e5766f4ebdb4",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3bbfb684-03b4-43be-a84f-bdf59545dddc"
        },
        "item": {
          "id": "c0434a5a-7427-4a15-9857-699dacc6e149",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d1ed00e9-c507-4674-be09-f07b71dafb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5dde92-c1b8-4945-a23b-a72c7c069221",
        "cursor": {
          "ref": "fde8628c-650b-4171-ad39-840dd2556652",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7c2e58ee-9c92-4a4a-8dfd-6e7113778094"
        },
        "item": {
          "id": "ea5dde92-c1b8-4945-a23b-a72c7c069221",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d020f74b-c071-4282-b835-df582619c5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b963cba8-4d82-43df-b204-3044c704e5e9",
        "cursor": {
          "ref": "7436d772-fb67-4bb7-8aa4-47c68070a001",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6f61209f-b752-4b6c-babf-17fa836a01d9"
        },
        "item": {
          "id": "b963cba8-4d82-43df-b204-3044c704e5e9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "94b47b8e-e72a-4da8-aac4-5c424095da1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b84b9a1-c54a-4258-b7ec-7ec72bdc02f4",
        "cursor": {
          "ref": "00b8dd77-f339-44cf-8b33-b430085d526f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "44eb087a-3040-4cfd-9670-cfe3068e8715"
        },
        "item": {
          "id": "5b84b9a1-c54a-4258-b7ec-7ec72bdc02f4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4d09f76a-9811-481e-8262-64cbe3f0c457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0b7487-9e50-491c-9e6a-d108751d6b9f",
        "cursor": {
          "ref": "5c2f9843-de32-4458-8247-bcc8ed1b5964",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ee485a17-8d1a-4915-871f-2f2f1cd27484"
        },
        "item": {
          "id": "9d0b7487-9e50-491c-9e6a-d108751d6b9f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1b1b6c3c-bbfa-4109-9e9f-801f4191140f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f526d36d-4638-425c-a519-da1190859b07",
        "cursor": {
          "ref": "a823bbf4-eea6-4f26-95c4-f16b294ec5e8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fab790f1-389b-43f2-95ec-4a4118bd6598"
        },
        "item": {
          "id": "f526d36d-4638-425c-a519-da1190859b07",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "254fb81e-2217-466d-ac32-c967dbc3a8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31966922-ad59-4f83-a888-ddf81b4ffb66",
        "cursor": {
          "ref": "9ff9ccfb-9ffb-4672-9361-107bf059d631",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "28120eb4-c79f-4052-9925-964d8c9bd243"
        },
        "item": {
          "id": "31966922-ad59-4f83-a888-ddf81b4ffb66",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "81b89337-36c9-496f-9cf7-46a3ad47cdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddab0749-a756-4e83-924c-bda86dfd020b",
        "cursor": {
          "ref": "1dbc440a-3d7f-4948-97c0-abe167aaf383",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c53d7b9e-994f-4264-a440-3efcd452962c"
        },
        "item": {
          "id": "ddab0749-a756-4e83-924c-bda86dfd020b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9ffd847f-ae1b-40c3-a070-000aeb979b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b71fb6-bb77-41ca-9a80-a3d62c2296e9",
        "cursor": {
          "ref": "e04c89a7-1fb8-48e6-ad69-622a35d60594",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "46f4660f-50fa-42da-8e18-8fba820f3298"
        },
        "item": {
          "id": "61b71fb6-bb77-41ca-9a80-a3d62c2296e9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2f4009c6-624f-4cac-a3e2-0f997d8af5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ce190b-36fa-4a48-94a1-4f2640c4e85d",
        "cursor": {
          "ref": "df0628fd-1100-4fbc-a0f6-cab7544649b5",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "56036b6d-6d1c-41d8-8a86-a03eca57bc12"
        },
        "item": {
          "id": "c4ce190b-36fa-4a48-94a1-4f2640c4e85d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "391730af-7d81-472b-a1a9-6f2cb51238ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69da1997-220b-4218-9b8c-a31335a786a9",
        "cursor": {
          "ref": "18950a26-14cd-4f42-aa7d-75e7f8d60380",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "93d86179-1d2e-43cb-b464-ad3cd270af9e"
        },
        "item": {
          "id": "69da1997-220b-4218-9b8c-a31335a786a9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "650a7bbf-497e-4367-a53e-69de4dd2a71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dcadac-99de-454c-84f3-cea195eddb13",
        "cursor": {
          "ref": "f83ea6b9-f7a7-463a-89c2-7d7cbda8a495",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1ccb4292-de71-4532-bba7-e6926b2331d8"
        },
        "item": {
          "id": "e1dcadac-99de-454c-84f3-cea195eddb13",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1e54c23a-93c5-4862-bfb0-6dc2d38016b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b381c5-ea88-4dd4-9d1f-2ac0528885db",
        "cursor": {
          "ref": "0eebe59d-1e46-4a4d-b242-01418f070d89",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "52d235e6-28f2-4f1d-b344-972b7a9f8bff"
        },
        "item": {
          "id": "88b381c5-ea88-4dd4-9d1f-2ac0528885db",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d6dbda08-edaf-46e6-85c1-c95e4b1420ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae61ad6c-1904-4df2-a19f-df1c5e67c48d",
        "cursor": {
          "ref": "1c938230-e2c0-4269-af15-799313ffb3ba",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dc41e7bf-c288-4dcb-8e78-f5cc58ed22c3"
        },
        "item": {
          "id": "ae61ad6c-1904-4df2-a19f-df1c5e67c48d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "99000754-72c9-46ae-bdb9-47b489feb0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083ed11c-c1f7-4888-b2be-015bccf1ef97",
        "cursor": {
          "ref": "8a2f6dae-9a14-4da5-9399-336e8dcad8b0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "381b4d93-60b2-4c6f-8f31-8d2430b38339"
        },
        "item": {
          "id": "083ed11c-c1f7-4888-b2be-015bccf1ef97",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "53ef4d23-8047-4b6b-b931-7431c33899af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfad10e2-f33f-414e-b200-488ece882479",
        "cursor": {
          "ref": "6c713c7d-9587-49a2-88f7-52376fe5d71f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a42322cb-8bcb-4270-847b-bd488df2966d"
        },
        "item": {
          "id": "bfad10e2-f33f-414e-b200-488ece882479",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5e28c415-d3eb-4273-b7b3-f8ca2e17f622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572464e4-e2f8-4847-be5a-b58ef623c3df",
        "cursor": {
          "ref": "8746c088-9fa2-4617-a623-dfbcf04ea030",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3fa3d2a5-737c-43f6-8706-0b8ff3a50c60"
        },
        "item": {
          "id": "572464e4-e2f8-4847-be5a-b58ef623c3df",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "eb2f02c7-7b9d-4e0c-b742-e605a94c328c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877678e9-1241-42e9-934f-c8adcca42bcb",
        "cursor": {
          "ref": "06104c99-b91b-4259-bad9-698ab13e914b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0299f4ef-0cd2-4783-976b-73952f824101"
        },
        "item": {
          "id": "877678e9-1241-42e9-934f-c8adcca42bcb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a676198d-eaac-4483-9710-0f8f0a9c1a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75a319b-7f8d-4e22-b208-0c9616f30c39",
        "cursor": {
          "ref": "b1a4e8a6-19b4-42fa-a8e8-33e426eca8b5",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e4e34074-32ee-455f-ba45-a1813a80a7af"
        },
        "item": {
          "id": "c75a319b-7f8d-4e22-b208-0c9616f30c39",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5c5e9628-8b9a-483e-a325-3b9818bd97d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599f0234-a93b-4d27-a316-ac513df5fe87",
        "cursor": {
          "ref": "2303596d-e538-4978-97e0-2dc17cfeb80b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "821852a7-2189-45f4-97eb-72c3f932dc55"
        },
        "item": {
          "id": "599f0234-a93b-4d27-a316-ac513df5fe87",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7c4b20f9-6453-4e89-b85a-aabd39a91f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e005736d-ced7-4802-b2ae-3cb54cc55f9f",
        "cursor": {
          "ref": "1399ec96-4a62-4c37-a700-3bd436f77fc0",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cc252f36-fc30-48c4-8cf0-ea3eceacbe83"
        },
        "item": {
          "id": "e005736d-ced7-4802-b2ae-3cb54cc55f9f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b06adac3-81c3-41c4-9a60-30c91e87ef6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d71c57-9e0f-4ff3-81a0-0b43a449bd56",
        "cursor": {
          "ref": "d7634d7a-0ac8-4054-8512-8505e1f39ce6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0c4db778-6cc7-4d9b-8595-7f87c102e265"
        },
        "item": {
          "id": "f0d71c57-9e0f-4ff3-81a0-0b43a449bd56",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "362dee9f-6ef1-4677-864c-9bd4f6051673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9d9e07-b6d0-4fd7-bbd8-b21181fc3c37",
        "cursor": {
          "ref": "08ab9f13-24b8-4b30-a4ce-77b7cfeb2507",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "097007cf-714f-4167-979c-362babdb08d9"
        },
        "item": {
          "id": "fe9d9e07-b6d0-4fd7-bbd8-b21181fc3c37",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4eb6b8f9-ad81-4628-bbbd-0556d1fe2cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f6ef24-0c5c-4e1f-9557-6fbdbf0865dd",
        "cursor": {
          "ref": "cd418caf-ccc0-4f97-be00-261f43a5714e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9e92c8ea-1fcd-4b7c-aaf0-b8508f9ee787"
        },
        "item": {
          "id": "44f6ef24-0c5c-4e1f-9557-6fbdbf0865dd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cdccaee8-7680-445a-881d-583e8ce69eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fac48e-8c37-4faa-ab04-b641f0d7c625",
        "cursor": {
          "ref": "30835657-3838-436d-8b6b-9af46cfbaed1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "74fa82be-cc80-486d-837c-b7dd9faed1ed"
        },
        "item": {
          "id": "c5fac48e-8c37-4faa-ab04-b641f0d7c625",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b4402d68-10e9-4061-84a7-2933887b0435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211f09ab-bee1-4fa8-8fc7-7f0386a9d260",
        "cursor": {
          "ref": "93e8bbe4-1aa8-422b-bc10-9290909c4faa",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4e145053-1e2e-4a40-9da4-1d33c6933a9a"
        },
        "item": {
          "id": "211f09ab-bee1-4fa8-8fc7-7f0386a9d260",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "033c2d7d-2eb4-4011-870a-20d4872d9c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8467ed2c-eb81-44a7-baed-b7aaa92f5ca2",
        "cursor": {
          "ref": "5a7cecb5-5cec-4d8e-8256-72f0ed432f48",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fc495ece-515a-439b-8622-78cdee53a5a4"
        },
        "item": {
          "id": "8467ed2c-eb81-44a7-baed-b7aaa92f5ca2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fe1ef9c5-f4eb-4309-9bf6-006c7787f2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa884802-f810-44ed-a2fc-d932faffb8e8",
        "cursor": {
          "ref": "17ac2940-885f-4cb3-a246-59fe0281d030",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6cf6af2a-a256-405d-b1c0-162164414a45"
        },
        "item": {
          "id": "aa884802-f810-44ed-a2fc-d932faffb8e8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dbf4c43d-06f8-49f8-952c-6c16dcde5025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02757a42-f44a-4f9b-9a2a-265ce7fc39bb",
        "cursor": {
          "ref": "78167194-e2c7-4661-a537-fab335a34b61",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ae12f17c-fa32-4731-9742-90fbe0872bc6"
        },
        "item": {
          "id": "02757a42-f44a-4f9b-9a2a-265ce7fc39bb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "41da0811-0bac-4173-bca5-ea2b15218566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c996c2-83da-4bd5-be1a-51df025baff5",
        "cursor": {
          "ref": "0ddf96af-384d-4fcf-aa45-63ae16438f27",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c7a05c07-19f8-4578-ac71-f05f89a03233"
        },
        "item": {
          "id": "51c996c2-83da-4bd5-be1a-51df025baff5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7095adc9-5eaa-4172-afeb-8dc35bcf7612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a998e191-2736-49a6-9fc7-c094bcccec6c",
        "cursor": {
          "ref": "ec9040d3-cfd8-40af-ba35-40e69b86fb4b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0d53b0e0-3f9b-4537-a405-189f4042de7c"
        },
        "item": {
          "id": "a998e191-2736-49a6-9fc7-c094bcccec6c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b0359d5d-47cb-4aad-8019-30da3271cdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbccb447-9a7c-44c5-9c4b-acde63f8e831",
        "cursor": {
          "ref": "b9504354-1a32-4a32-8b90-5228b42b126b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "435a1271-4345-42d2-af89-0ce689a45588"
        },
        "item": {
          "id": "fbccb447-9a7c-44c5-9c4b-acde63f8e831",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3b3be8bd-5a10-4683-a38e-ac42e6c0aec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e7cddb-a8b7-41c8-8887-6bc9848c4a0a",
        "cursor": {
          "ref": "58a76ab9-4760-490d-9fd1-32ab0e155caa",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "17ff9e6a-05fe-46b7-9d9a-6c138fd1a188"
        },
        "item": {
          "id": "75e7cddb-a8b7-41c8-8887-6bc9848c4a0a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "78b75103-2c01-4caa-bc20-acd2eb6b9932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc9c14b-26d3-4975-8de2-56317d3ddef7",
        "cursor": {
          "ref": "e7bec8a7-62be-4e13-a757-90d07dbcfbcf",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6f7b2c31-d0cc-41a4-976d-efeaeaca6ddf"
        },
        "item": {
          "id": "0dc9c14b-26d3-4975-8de2-56317d3ddef7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "92a61a13-72f8-45fa-b550-54d82842a41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38afb381-e41e-4981-a018-ab3739983d22",
        "cursor": {
          "ref": "b8968acb-2705-48eb-a846-17929b87db33",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1ae6ee94-d89f-4937-aed0-408c0fc2a8f5"
        },
        "item": {
          "id": "38afb381-e41e-4981-a018-ab3739983d22",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ca97c76e-1bc5-4afa-a211-aadb1918cd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6046d629-7890-4b88-ae26-f90cd5b101f9",
        "cursor": {
          "ref": "1ab294c4-659e-4cdc-b9fd-5b478846ad6a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4c59c3c1-d7fb-4304-a8bc-2fd2d95cdc27"
        },
        "item": {
          "id": "6046d629-7890-4b88-ae26-f90cd5b101f9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "778832c3-35c7-403e-9781-db328d6c987e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f20b87-5b4e-4b82-bebd-3516a5853065",
        "cursor": {
          "ref": "4b7b381a-a98f-4777-bff7-d444d5ba694a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "88604832-4791-426e-89ef-9647f76d50fe"
        },
        "item": {
          "id": "18f20b87-5b4e-4b82-bebd-3516a5853065",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "11a36eec-7cd6-419b-b45e-ade8ac49ce78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5a387d-1c5a-4e90-ab89-af19c602194b",
        "cursor": {
          "ref": "5b26f26d-81df-4993-92f2-4e778f90f03a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f978022d-5318-4115-81ff-84f8d0e26298"
        },
        "item": {
          "id": "9f5a387d-1c5a-4e90-ab89-af19c602194b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6fbe58b2-bd85-4b7c-9d44-09fb70c7bde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d73412-8236-40cd-b634-a92f8bd78fea",
        "cursor": {
          "ref": "edb58b5c-bc92-4ada-b6d1-78010b364c9c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9b0e8fd4-f976-4337-9216-555693a5d49e"
        },
        "item": {
          "id": "f8d73412-8236-40cd-b634-a92f8bd78fea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "da24d659-20e5-418f-9248-fc7465829705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8a6f56-3003-4826-803c-2a2375876c45",
        "cursor": {
          "ref": "f6cebde5-e84b-4d87-a999-0a1ba00923d4",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d1b7739e-a379-43c2-9fe6-4a27b183c278"
        },
        "item": {
          "id": "bb8a6f56-3003-4826-803c-2a2375876c45",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "213e46d8-1615-48da-8f1a-3f33d21d0e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d203e083-b15e-4124-bb93-4dfa4b3f0ef4",
        "cursor": {
          "ref": "603f0d84-e6fa-49ef-998f-1e6e28f65c63",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3d53c674-8854-4342-9def-42e0a36acfc4"
        },
        "item": {
          "id": "d203e083-b15e-4124-bb93-4dfa4b3f0ef4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b21388d0-21be-4f6a-b977-ec30e3aaff24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adffc73e-6a24-441b-a252-b78530613dd8",
        "cursor": {
          "ref": "89db3f95-8483-4fbc-bdb4-f04a65d095a8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "eac5a222-f7c9-48ba-b508-338f1f5037c9"
        },
        "item": {
          "id": "adffc73e-6a24-441b-a252-b78530613dd8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3f867cda-79ed-45a4-9e7c-f505ca8ec766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0feacb-fe52-4261-a49c-86c587644826",
        "cursor": {
          "ref": "ac6baf47-3c9f-411d-8f4e-15744f3b16ae",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3fab89e9-c0b6-483b-8a3b-8f9864ffa183"
        },
        "item": {
          "id": "9a0feacb-fe52-4261-a49c-86c587644826",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "96114bb8-f7fd-4567-868e-e78af7a31cc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f312390-42d0-4a34-895d-00e972adf0fa",
        "cursor": {
          "ref": "13c0c648-ccd4-4249-8dee-6f480ab59d80",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d5598be0-3de4-4ad9-b919-842a5a3706e1"
        },
        "item": {
          "id": "3f312390-42d0-4a34-895d-00e972adf0fa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e10d9d9d-8928-4979-9a3a-6e090511fe53",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fb02f3-a0be-47e2-8816-f8a73ddd7a9a",
        "cursor": {
          "ref": "687f5a4f-8c36-48ab-b9cc-56c0e80ecb59",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "00ec5e77-e01c-4a24-94b0-910d42aa7c9a"
        },
        "item": {
          "id": "02fb02f3-a0be-47e2-8816-f8a73ddd7a9a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9ef4b3f4-70e5-41f0-a563-85df15c23a79",
          "status": "OK",
          "code": 200,
          "responseTime": 2782,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aedc5ad-6ac1-4344-9f2c-0d06a274d0b2",
        "cursor": {
          "ref": "70e90e94-ed9f-4620-94ea-011436745164",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1605d504-aaa5-42e2-97f4-073f8510b73a"
        },
        "item": {
          "id": "5aedc5ad-6ac1-4344-9f2c-0d06a274d0b2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "92255b86-9299-43dd-9b20-83cb810291a1",
          "status": "OK",
          "code": 200,
          "responseTime": 2952,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaec4ee-0554-44ba-b24d-a84b2c154922",
        "cursor": {
          "ref": "c6a7f655-00a3-46bd-93f0-06526bd2a4a5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "09aa807d-99ff-4285-963a-5fc893a74ba0"
        },
        "item": {
          "id": "5aaec4ee-0554-44ba-b24d-a84b2c154922",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "239166cc-c4a0-4afb-a074-ea08b802bd6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaec4ee-0554-44ba-b24d-a84b2c154922",
        "cursor": {
          "ref": "c6a7f655-00a3-46bd-93f0-06526bd2a4a5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "09aa807d-99ff-4285-963a-5fc893a74ba0"
        },
        "item": {
          "id": "5aaec4ee-0554-44ba-b24d-a84b2c154922",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "239166cc-c4a0-4afb-a074-ea08b802bd6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ead910-0eff-4316-b486-a552efd1f97f",
        "cursor": {
          "ref": "57b58dbd-646e-42f8-8409-318c5507398f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "142e2117-64bb-4111-a8f1-ef5a61c0a057"
        },
        "item": {
          "id": "a9ead910-0eff-4316-b486-a552efd1f97f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c1b0404c-2195-4d70-b451-5d35b40db0cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d46ccb-09a6-4714-ab1d-26300a2d5b1b",
        "cursor": {
          "ref": "042375cf-fab7-48c0-ac60-d9fc704cba52",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ff491784-40c2-45fc-ab6e-586378cb7d4a"
        },
        "item": {
          "id": "10d46ccb-09a6-4714-ab1d-26300a2d5b1b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "32f57e6c-0f59-4291-a9b9-0d8470b09242",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}